{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2","program":"/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","arc_swap","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=2f45f57ebe388a0f","-C","extra-filename=-2f45f57ebe388a0f","--out-dir","/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libarc_swap-2f45f57ebe388a0f.rmeta"},"prelude":{"crate_id":{"name":"arc_swap","disambiguator":[3351498055899195351,7917580380068427152]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}}],"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":0,"byte_end":59753,"line_start":1,"line_end":1553,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":8},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":8009,"byte_end":8014,"line_start":168,"line_end":168,"column_start":17,"column_end":22},"alias_span":null,"name":"AsRaw","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":87},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":8050,"byte_end":8057,"line_start":170,"line_end":170,"column_start":19,"column_end":26},"alias_span":null,"name":"NonNull","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":8059,"byte_end":8065,"line_start":170,"line_end":170,"column_start":28,"column_end":34},"alias_span":null,"name":"RefCnt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":0,"byte_end":59753,"line_start":1,"line_end":1553,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":32},{"krate":0,"index":76},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":140},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":259},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":263},{"krate":0,"index":270},{"krate":0,"index":268},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":252}],"decl_id":null,"docs":" Making [`Arc`] itself atomic","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":106,"byte_end":138,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"allow(renamed_and_removed_lints)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":139,"byte_end":175,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"! Making [`Arc`] itself atomic","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":177,"byte_end":209,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":210,"byte_end":213,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! The [`Arc`] uses atomic reference counters, so the object behind it can be safely pointed to by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":214,"byte_end":313,"line_start":10,"line_end":10,"column_start":1,"column_end":100}},{"value":"! several threads at once. However, the [`Arc`] itself is quite ordinary â€’ to change its value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":314,"byte_end":412,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"! (make it point somewhere else), one has to be the sole owner of it (or store it behind a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":413,"byte_end":505,"line_start":12,"line_end":12,"column_start":1,"column_end":93}},{"value":"! [`Mutex`]).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":506,"byte_end":521,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":522,"byte_end":525,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! On the other hand, there's [`AtomicPtr`]. It can be modified and read from multiple threads,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":526,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"! allowing to pass the value from one thread to another without the use of a [`Mutex`]. The","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":623,"byte_end":716,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"! downside is, tracking when the data can be safely deleted is hard.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":717,"byte_end":787,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":788,"byte_end":791,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! This library provides [`ArcSwap`](type.ArcSwap.html) that allows both at once. It can be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":792,"byte_end":884,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"! constructed from ordinary [`Arc`], but its value can be loaded and stored atomically, by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":885,"byte_end":977,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"! multiple concurrent threads.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":978,"byte_end":1010,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1011,"byte_end":1014,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! # Motivation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1015,"byte_end":1031,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! For one, the C++ [`shared_ptr`] has this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1036,"byte_end":1080,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"! [ability](http://en.cppreference.com/w/cpp/memory/shared_ptr/atomic), so it is only fair to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1081,"byte_end":1176,"line_start":26,"line_end":26,"column_start":1,"column_end":96}},{"value":"! have it too.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1177,"byte_end":1193,"line_start":27,"line_end":27,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1194,"byte_end":1197,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! For another, it seemed like a really good exercise.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1198,"byte_end":1253,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1254,"byte_end":1257,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! And finally, there are some real use cases for this functionality. For example, when one thread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1258,"byte_end":1357,"line_start":31,"line_end":31,"column_start":1,"column_end":100}},{"value":"! publishes something (for example configuration) and other threads want to have a peek to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1358,"byte_end":1454,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"! current one from time to time. There's a global [`ArcSwap`](type.ArcSwap.html), holding the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1455,"byte_end":1550,"line_start":33,"line_end":33,"column_start":1,"column_end":96}},{"value":"! current snapshot and everyone is free to make a copy and hold onto it for a while. The","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1551,"byte_end":1641,"line_start":34,"line_end":34,"column_start":1,"column_end":91}},{"value":"! publisher thread simply stores a new snapshot every time and the old configuration gets dropped","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1642,"byte_end":1741,"line_start":35,"line_end":35,"column_start":1,"column_end":100}},{"value":"! once all the other threads give up their copies of the pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1742,"byte_end":1809,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! # Performance characteristics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1814,"byte_end":1847,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1848,"byte_end":1851,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! The data structure is optimised for read-heavy situations with only occasional writes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1852,"byte_end":1942,"line_start":40,"line_end":40,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1943,"byte_end":1946,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! Only very basic benchmarks were done so far (you can find them in the git repository). These","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":1947,"byte_end":2043,"line_start":42,"line_end":42,"column_start":1,"column_end":97}},{"value":"! suggest reading operations are faster than using a mutex, in a contended situation by a large","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2044,"byte_end":2141,"line_start":43,"line_end":43,"column_start":1,"column_end":98}},{"value":"! margin, but about 2-3 times slower on writes than mutex (it is still faster than `RwLock` on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2142,"byte_end":2238,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"! writes and mutex gets much slower on contended writes).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2239,"byte_end":2298,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2299,"byte_end":2302,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! Furthermore, this implementation doesn't suffer from contention. Specifically, arbitrary number","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2303,"byte_end":2402,"line_start":47,"line_end":47,"column_start":1,"column_end":100}},{"value":"! of readers can access the shared value and won't block each other, and are not blocked by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2403,"byte_end":2496,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"! writers. The writers will be somewhat slower when there are active readers at the same time,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2497,"byte_end":2593,"line_start":49,"line_end":49,"column_start":1,"column_end":97}},{"value":"! but won't be stopped indefinitely. Readers always perform the same number of instructions,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2594,"byte_end":2688,"line_start":50,"line_end":50,"column_start":1,"column_end":95}},{"value":"! without any locking or waiting, with the exception of the first","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2689,"byte_end":2756,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"! [`lease`](struct.ArcSwapAny.html#method.lease) in each thread (though they can slow each other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2757,"byte_end":2855,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"! down by accessing the same memory locations under circumstances).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2856,"byte_end":2925,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2926,"byte_end":2929,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"! ## What reading operation to choose","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2930,"byte_end":2969,"line_start":55,"line_end":55,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2970,"byte_end":2973,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"! There are actually three different ways to read the data, with different characteristics.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":2974,"byte_end":3067,"line_start":57,"line_end":57,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3068,"byte_end":3071,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! * [`load`](struct.ArcSwapAny.html#method.load) creates a full-blown `Arc`. You can hold onto it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3072,"byte_end":3171,"line_start":59,"line_end":59,"column_start":1,"column_end":100}},{"value":"!   as long as desired without any restrictions, but in case there are multiple readers of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3172,"byte_end":3268,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"!   same [`ArcSwapAny`](struct.ArcSwapAny.html), they slow each other down by fighting over the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3269,"byte_end":3366,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"!   cache line with reference counts. Therefore, this is suitable for long-term storage of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3367,"byte_end":3463,"line_start":62,"line_end":62,"column_start":1,"column_end":97}},{"value":"!   result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3464,"byte_end":3477,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"! * [`lease`](struct.ArcSwapAny.html#method.lease) is suitable for short-term storage or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3478,"byte_end":3568,"line_start":64,"line_end":64,"column_start":1,"column_end":91}},{"value":"!   manipulation during some algorithm, for example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3569,"byte_end":3622,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"!   during some lookup. The creation is relatively fast and doesn't suffer from contention, but","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3623,"byte_end":3720,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"!   there's only limited number of fast active leases possible per thread (currently 6). When the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3721,"byte_end":3820,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"!   number is exceeded, it falls back to the equivalent of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3821,"byte_end":3881,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"!   [`load`](struct.ArcSwapAny.html#method.load) internally.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3882,"byte_end":3944,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"! * [`peek`](struct.ArcSwapAny.html#method.peek) is the fastest. However, existing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":3945,"byte_end":4029,"line_start":70,"line_end":70,"column_start":1,"column_end":85}},{"value":"!   [`Guard`](struct.Guard.html), as returned by the method, prevents all writer methods from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4030,"byte_end":4125,"line_start":71,"line_end":71,"column_start":1,"column_end":96}},{"value":"!   completing (globally, even on unrelated `ArcSwap`s). Therefore, it is possible to create a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4126,"byte_end":4222,"line_start":72,"line_end":72,"column_start":1,"column_end":97}},{"value":"!   deadlock with careless usage and hurt the performance by holding onto it for too long. It is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4223,"byte_end":4321,"line_start":73,"line_end":73,"column_start":1,"column_end":99}},{"value":"!   suitable for very quick operations only, like reading a single value from configuration. Do","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4322,"byte_end":4419,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"!   not store it and do not call non-trivial methods on the returned value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4420,"byte_end":4497,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4498,"byte_end":4501,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! The faster but shorter-term proxy objects allow upgrading to the longer-term ones, so it is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4502,"byte_end":4597,"line_start":77,"line_end":77,"column_start":1,"column_end":96}},{"value":"! possible to first do some checks for an optimistic case and obtain the longer-term object in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4598,"byte_end":4694,"line_start":78,"line_end":78,"column_start":1,"column_end":97}},{"value":"! the pesimistic case.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4695,"byte_end":4719,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4720,"byte_end":4723,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! # RCU","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4724,"byte_end":4733,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4734,"byte_end":4737,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! This also offers an [RCU implementation](struct.ArcSwapAny.html#method.rcu), for read-heavy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4738,"byte_end":4833,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"! situations. Note that the RCU update is considered relatively slow operation. In case there's","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4834,"byte_end":4931,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"! only one update thread, using [`store`](struct.ArcSwapAny.html#method.store) is enough.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":4932,"byte_end":5023,"line_start":85,"line_end":85,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5024,"byte_end":5027,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! # Atomic orderings","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5028,"byte_end":5050,"line_start":87,"line_end":87,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5051,"byte_end":5054,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"! It is guaranteed each operation performs at least one `SeqCst` atomic read-write operation,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5055,"byte_end":5150,"line_start":89,"line_end":89,"column_start":1,"column_end":96}},{"value":"! therefore even operations on different instances have a defined global order of operations.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5151,"byte_end":5246,"line_start":90,"line_end":90,"column_start":1,"column_end":96}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5247,"byte_end":5250,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! # Unix signal handlers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5251,"byte_end":5277,"line_start":92,"line_end":92,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5278,"byte_end":5281,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! Unix signals are hard to use correctly, partly because there is a very restricted set of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5282,"byte_end":5374,"line_start":94,"line_end":94,"column_start":1,"column_end":93}},{"value":"! functions one might use inside them. Specifically, it is *not* allowed to use mutexes inside","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5375,"byte_end":5471,"line_start":95,"line_end":95,"column_start":1,"column_end":97}},{"value":"! them (because that could cause a deadlock).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5472,"byte_end":5519,"line_start":96,"line_end":96,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5520,"byte_end":5523,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! On the other hand, it is possible to use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5524,"byte_end":5568,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"! [`ArcSwap::peek_signal_safe`](struct.ArcSwapAny.html#method.peek_signal_safe) (but not the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5569,"byte_end":5663,"line_start":99,"line_end":99,"column_start":1,"column_end":95}},{"value":"! others). Note that the signal handler is not allowed to allocate or deallocate","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5664,"byte_end":5746,"line_start":100,"line_end":100,"column_start":1,"column_end":83}},{"value":"! memory, therefore it is not recommended to [`upgrade`](struct.Guard.html#method.upgrade) the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5747,"byte_end":5843,"line_start":101,"line_end":101,"column_start":1,"column_end":97}},{"value":"! returned guard (it is strictly speaking possible to use that safely, but it is hard and brings","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5844,"byte_end":5942,"line_start":102,"line_end":102,"column_start":1,"column_end":99}},{"value":"! no benefit).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5943,"byte_end":5959,"line_start":103,"line_end":103,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5960,"byte_end":5963,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! # Support for `NULL`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5964,"byte_end":5988,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5989,"byte_end":5992,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! Similar to `Arc`, [`ArcSwap`](type.ArcSwap.html) always contains a value. There is, however,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":5993,"byte_end":6089,"line_start":107,"line_end":107,"column_start":1,"column_end":97}},{"value":"! [`ArcSwapOption`](type.ArcSwapOption.html), which works on `Option<Arc<_>>` instead of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6090,"byte_end":6180,"line_start":108,"line_end":108,"column_start":1,"column_end":91}},{"value":"! `Arc<_>` and supports mostly the same operations. In fact, both are just type aliases of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6181,"byte_end":6273,"line_start":109,"line_end":109,"column_start":1,"column_end":93}},{"value":"! [`ArcSwapAny`](struct.ArcSwapAny.html). Therefore, most documentation and methods can be found","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6274,"byte_end":6372,"line_start":110,"line_end":110,"column_start":1,"column_end":99}},{"value":"! there instead on the type aliases.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6373,"byte_end":6411,"line_start":111,"line_end":111,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6412,"byte_end":6415,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! It is also possible to support other types similar to `Arc` by implementing the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6416,"byte_end":6499,"line_start":113,"line_end":113,"column_start":1,"column_end":84}},{"value":"! [`RefCnt`](trait.RefCnt.html) trait.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6500,"byte_end":6540,"line_start":114,"line_end":114,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6541,"byte_end":6544,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6545,"byte_end":6559,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6560,"byte_end":6563,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6564,"byte_end":6575,"line_start":118,"line_end":118,"column_start":1,"column_end":12}},{"value":"! extern crate arc_swap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6576,"byte_end":6602,"line_start":119,"line_end":119,"column_start":1,"column_end":27}},{"value":"! extern crate crossbeam_utils;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6603,"byte_end":6636,"line_start":120,"line_end":120,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6637,"byte_end":6640,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6641,"byte_end":6664,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6665,"byte_end":6668,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! use arc_swap::ArcSwap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6669,"byte_end":6695,"line_start":124,"line_end":124,"column_start":1,"column_end":27}},{"value":"! use crossbeam_utils::thread;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6696,"byte_end":6728,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6729,"byte_end":6732,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6733,"byte_end":6748,"line_start":127,"line_end":127,"column_start":1,"column_end":16}},{"value":"!     let config = ArcSwap::from(Arc::new(String::default()));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6749,"byte_end":6813,"line_start":128,"line_end":128,"column_start":1,"column_end":65}},{"value":"!     thread::scope(|scope| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6814,"byte_end":6845,"line_start":129,"line_end":129,"column_start":1,"column_end":32}},{"value":"!         scope.spawn(|| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6846,"byte_end":6874,"line_start":130,"line_end":130,"column_start":1,"column_end":29}},{"value":"!             let new_conf = Arc::new(\"New configuration\".to_owned());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6875,"byte_end":6947,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"!             config.store(new_conf);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6948,"byte_end":6987,"line_start":132,"line_end":132,"column_start":1,"column_end":40}},{"value":"!         });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":6988,"byte_end":7003,"line_start":133,"line_end":133,"column_start":1,"column_end":16}},{"value":"!         for _ in 0..10 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7004,"byte_end":7032,"line_start":134,"line_end":134,"column_start":1,"column_end":29}},{"value":"!             scope.spawn(|| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7033,"byte_end":7065,"line_start":135,"line_end":135,"column_start":1,"column_end":33}},{"value":"!                 loop {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7066,"byte_end":7092,"line_start":136,"line_end":136,"column_start":1,"column_end":27}},{"value":"!                     let cfg = config.lease();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7093,"byte_end":7142,"line_start":137,"line_end":137,"column_start":1,"column_end":50}},{"value":"!                     if !cfg.is_empty() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7143,"byte_end":7187,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"!                         assert_eq!(*cfg, \"New configuration\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7188,"byte_end":7254,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"!                         return;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7255,"byte_end":7290,"line_start":140,"line_end":140,"column_start":1,"column_end":36}},{"value":"!                     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7291,"byte_end":7316,"line_start":141,"line_end":141,"column_start":1,"column_end":26}},{"value":"!                 }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7317,"byte_end":7338,"line_start":142,"line_end":142,"column_start":1,"column_end":22}},{"value":"!             });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7339,"byte_end":7358,"line_start":143,"line_end":143,"column_start":1,"column_end":20}},{"value":"!         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7359,"byte_end":7372,"line_start":144,"line_end":144,"column_start":1,"column_end":14}},{"value":"!     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7373,"byte_end":7384,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7385,"byte_end":7390,"line_start":146,"line_end":146,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7391,"byte_end":7398,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7399,"byte_end":7402,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"! [`Arc`]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7403,"byte_end":7466,"line_start":149,"line_end":149,"column_start":1,"column_end":64}},{"value":"! [`AtomicPtr`]: https://doc.rust-lang.org/std/sync/atomic/struct.AtomicPtr.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7467,"byte_end":7549,"line_start":150,"line_end":150,"column_start":1,"column_end":83}},{"value":"! [`Mutex`]: https://doc.rust-lang.org/std/sync/struct.Mutex.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7550,"byte_end":7617,"line_start":151,"line_end":151,"column_start":1,"column_end":68}},{"value":"! [`shared_ptr`]: http://en.cppreference.com/w/cpp/memory/shared_ptr","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":7618,"byte_end":7688,"line_start":152,"line_end":152,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60616,"byte_end":60621,"line_start":26,"line_end":26,"column_start":11,"column_end":16},"name":"AsRaw","qualname":"::as_raw::AsRaw","value":"AsRaw<T>","parent":null,"children":[{"krate":0,"index":10}],"decl_id":null,"docs":" A trait describing things that can be turned into a raw pointer.","sig":null,"attributes":[{"value":"/ A trait describing things that can be turned into a raw pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":59791,"byte_end":59859,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":59860,"byte_end":59863,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This is just an abstraction of things that can be passed to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":59864,"byte_end":59931,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ [`compare_and_swap`](struct.ArcSwapAny.html#method.compare_and_swap).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":59932,"byte_end":60005,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60006,"byte_end":60009,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60010,"byte_end":60024,"line_start":8,"line_end":8,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60025,"byte_end":60028,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60029,"byte_end":60036,"line_start":10,"line_end":10,"column_start":1,"column_end":8}},{"value":"/ use std::ptr;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60037,"byte_end":60054,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60055,"byte_end":60078,"line_start":12,"line_end":12,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60079,"byte_end":60082,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ use arc_swap::ArcSwapOption;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60083,"byte_end":60115,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60116,"byte_end":60119,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let a = Arc::new(42);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60120,"byte_end":60145,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"/ let shared = ArcSwapOption::from(Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60146,"byte_end":60205,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60206,"byte_end":60209,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ shared.compare_and_swap(&a, Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60210,"byte_end":60264,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/ shared.compare_and_swap(&None::<Arc<_>>, Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60265,"byte_end":60332,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ shared.compare_and_swap(shared.peek(), Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60333,"byte_end":60398,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ shared.compare_and_swap(shared.lease(), Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60399,"byte_end":60465,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ shared.compare_and_swap(&shared.lease(), Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60466,"byte_end":60533,"line_start":23,"line_end":23,"column_start":1,"column_end":68}},{"value":"/ shared.compare_and_swap(ptr::null(), Some(Arc::clone(&a)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60534,"byte_end":60597,"line_start":24,"line_end":24,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60598,"byte_end":60605,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60809,"byte_end":60815,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"as_raw","qualname":"::as_raw::AsRaw::as_raw","value":"fn (&self) -> *mut T","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":" Converts the value into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts the value into a raw pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60631,"byte_end":60673,"line_start":27,"line_end":27,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60678,"byte_end":60681,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The value is consumed, because the trait is usually implemented on references and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60686,"byte_end":60771,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ reference-like types.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60776,"byte_end":60801,"line_start":30,"line_end":30,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69349,"byte_end":69355,"line_start":27,"line_end":27,"column_start":18,"column_end":24},"name":"RefCnt","qualname":"::ref_cnt::RefCnt","value":"RefCnt: Clone","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" A trait describing smart reference counted pointers.","sig":null,"attributes":[{"value":"/ A trait describing smart reference counted pointers.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":67900,"byte_end":67956,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":67957,"byte_end":67960,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Note that in a form `Option<Arc<T>>` is also a smart reference counted pointer, just one that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":67961,"byte_end":68058,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ can hold NULL.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68059,"byte_end":68077,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68078,"byte_end":68081,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The trait is unsafe, because a wrong implementation will break the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68082,"byte_end":68152,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ [`ArcSwapAny`](struct.ArcSwapAny.html) implementation and lead to UB.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68153,"byte_end":68226,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68227,"byte_end":68230,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is not actually expected for downstream crate to implement, this is just means to reuse","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68231,"byte_end":68327,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ code for `Arc` and `Option<Arc>` variants. However, it is theoretically possible (if you have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68328,"byte_end":68425,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ your own `Arc` implementation).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68426,"byte_end":68461,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68462,"byte_end":68465,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Implementing it for `Rc` is possible, but not useful (because the `ArcSwap` then would not be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68466,"byte_end":68563,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ `Send` nor `Sync`, so there's very little advantage of using it if it can't be shared between","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68564,"byte_end":68661,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ threads).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68662,"byte_end":68675,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68676,"byte_end":68679,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Aside from the obvious properties (like that incrementing and decrementing a reference count","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68680,"byte_end":68776,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ cancel each out and that having less references tracked than how many things actually point to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68777,"byte_end":68875,"line_start":21,"line_end":21,"column_start":1,"column_end":99}},{"value":"/ the value is fine as long as the count doesn't drop to 0), it also must satisfy that if two","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68876,"byte_end":68971,"line_start":22,"line_end":22,"column_start":1,"column_end":96}},{"value":"/ pointers have the same value, they point to the same object. This is specifically not true for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":68972,"byte_end":69070,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"/ ZSTs, but it is true for `Arc`s of ZSTs, because they have the reference counts just after the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69071,"byte_end":69169,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ value. It would be fine to point to a type-erased version of the same object, though (if one","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69170,"byte_end":69266,"line_start":25,"line_end":25,"column_start":1,"column_end":97}},{"value":"/ could use this trait with unsized types in the first place).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69267,"byte_end":69331,"line_start":26,"line_end":26,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69419,"byte_end":69423,"line_start":29,"line_end":29,"column_start":10,"column_end":14},"name":"Base","qualname":"::ref_cnt::RefCnt::Base","value":"type Base;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" The base type the pointer points to.\n","sig":null,"attributes":[{"value":"/ The base type the pointer points to.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69369,"byte_end":69409,"line_start":28,"line_end":28,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69818,"byte_end":69826,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"into_ptr","qualname":"::ref_cnt::RefCnt::into_ptr","value":"fn (me: Self) -> *mut Self::Base","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Converts the smart pointer into a raw pointer, without affecting the reference count.","sig":null,"attributes":[{"value":"/ Converts the smart pointer into a raw pointer, without affecting the reference count.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69430,"byte_end":69519,"line_start":31,"line_end":31,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69524,"byte_end":69527,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This can be seen as kind of freezing the pointer â€’ it'll be later converted back using","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69532,"byte_end":69624,"line_start":33,"line_end":33,"column_start":5,"column_end":95}},{"value":"/ [`from_ptr`](#method.from_ptr).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69629,"byte_end":69664,"line_start":34,"line_end":34,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69669,"byte_end":69672,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The pointer must point to the value stored (and the value must be the same as one returned","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69677,"byte_end":69771,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/ by [`as_ptr`](#method.as_ptr).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69776,"byte_end":69810,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70021,"byte_end":70027,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"as_ptr","qualname":"::ref_cnt::RefCnt::as_ptr","value":"fn (me: &Self) -> *mut Self::Base","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Provides a view into the smart pointer as a raw pointer.","sig":null,"attributes":[{"value":"/ Provides a view into the smart pointer as a raw pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69862,"byte_end":69922,"line_start":40,"line_end":40,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69927,"byte_end":69930,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This must not affect the reference count â€’ the pointer is only borrowed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69935,"byte_end":70013,"line_start":42,"line_end":42,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70530,"byte_end":70538,"line_start":51,"line_end":51,"column_start":15,"column_end":23},"name":"from_ptr","qualname":"::ref_cnt::RefCnt::from_ptr","value":"fn (ptr: *const Self::Base) -> Self","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Converts a raw pointer back into the smart pointer, without affecting the reference count.","sig":null,"attributes":[{"value":"/ Converts a raw pointer back into the smart pointer, without affecting the reference count.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70064,"byte_end":70158,"line_start":45,"line_end":45,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70163,"byte_end":70166,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ This is only called on values previously returned by [`into_ptr`](#method.into_ptr).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70171,"byte_end":70259,"line_start":47,"line_end":47,"column_start":5,"column_end":93}},{"value":"/ However, it is not guaranteed to be 1:1 relation â€’ `from_ptr` may be called more times than","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70264,"byte_end":70361,"line_start":48,"line_end":48,"column_start":5,"column_end":100}},{"value":"/ `into_ptr` temporarily provided the reference count never drops under 1 during that time","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70366,"byte_end":70458,"line_start":49,"line_end":49,"column_start":5,"column_end":97}},{"value":"/ (the implementation sometimes owes a reference).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70463,"byte_end":70515,"line_start":50,"line_end":50,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70627,"byte_end":70630,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"inc","qualname":"::ref_cnt::RefCnt::inc","value":"fn (me: &Self) -> ()","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Increments the reference count by one.\n","sig":null,"attributes":[{"value":"/ Increments the reference count by one.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70577,"byte_end":70619,"line_start":53,"line_end":53,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70977,"byte_end":70980,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"dec","qualname":"::ref_cnt::RefCnt::dec","value":"fn (ptr: *const Self::Base) -> ()","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Decrements the reference count by one.","sig":null,"attributes":[{"value":"/ Decrements the reference count by one.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70696,"byte_end":70738,"line_start":58,"line_end":58,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70743,"byte_end":70746,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note this is called on a raw pointer (one previously returned by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70751,"byte_end":70819,"line_start":60,"line_end":60,"column_start":5,"column_end":73}},{"value":"/ [`into_ptr`](#method.into_ptr). This may lead to dropping of the reference count to 0 and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70824,"byte_end":70917,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ destruction of the internal pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":70922,"byte_end":70962,"line_start":62,"line_end":62,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71352,"byte_end":71360,"line_start":72,"line_end":72,"column_start":8,"column_end":16},"name":"can_null","qualname":"::ref_cnt::RefCnt::can_null","value":"fn () -> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Describes if the raw pointer can ever be null.","sig":null,"attributes":[{"value":"/ Describes if the raw pointer can ever be null.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71053,"byte_end":71103,"line_start":67,"line_end":67,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71108,"byte_end":71111,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ Things like `Arc` are never null and can safely return false here. This is used only for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71116,"byte_end":71208,"line_start":69,"line_end":69,"column_start":5,"column_end":97}},{"value":"/ better formatting â€’ lying here won't cause an UB, but can cause uglier debug output or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71213,"byte_end":71305,"line_start":70,"line_end":70,"column_start":5,"column_end":95}},{"value":"/ panic inside debug formatting.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71310,"byte_end":71344,"line_start":71,"line_end":71,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71452,"byte_end":71459,"line_start":76,"line_end":76,"column_start":18,"column_end":25},"name":"NonNull","qualname":"::ref_cnt::NonNull","value":"NonNull: RefCnt","parent":null,"children":[],"decl_id":null,"docs":" A trait describing smart pointers that can't hold NULL.\n","sig":null,"attributes":[{"value":"/ A trait describing smart pointers that can't hold NULL.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71375,"byte_end":71434,"line_start":75,"line_end":75,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16839,"byte_end":16844,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"Guard","qualname":"::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" A short-term proxy object from [`peek`](struct.ArcSwapAny.html#method.peek).","sig":null,"attributes":[{"value":"/ A short-term proxy object from [`peek`](struct.ArcSwapAny.html#method.peek).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16301,"byte_end":16381,"line_start":326,"line_end":326,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16382,"byte_end":16385,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"/ This allows for upgrading to a full smart pointer and borrowing of the value inside. It also","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16386,"byte_end":16482,"line_start":328,"line_end":328,"column_start":1,"column_end":97}},{"value":"/ dereferences to the actual pointed to type if the smart pointer guarantees not to contain NULL","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16483,"byte_end":16581,"line_start":329,"line_end":329,"column_start":1,"column_end":99}},{"value":"/ values (eg. on `Arc`, but not on `Option<Arc>`).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16582,"byte_end":16634,"line_start":330,"line_end":330,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16635,"byte_end":16638,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ # Warning","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16639,"byte_end":16652,"line_start":332,"line_end":332,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16653,"byte_end":16656,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ Do not store or keep around for a long time, as this prevents all the writer methods from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16657,"byte_end":16750,"line_start":334,"line_end":334,"column_start":1,"column_end":94}},{"value":"/ completing on all the swap objects in the whole program from completing.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16751,"byte_end":16827,"line_start":335,"line_end":335,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17865,"byte_end":17872,"line_start":370,"line_end":370,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<Guard>::upgrade","value":"fn (guard: &Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Upgrades the guard to a real `Arc`.","sig":null,"attributes":[{"value":"/ Upgrades the guard to a real `Arc`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17031,"byte_end":17070,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17075,"byte_end":17078,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ This shares the reference count with all the `Arc` inside the corresponding `ArcSwap`. Use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17083,"byte_end":17177,"line_start":348,"line_end":348,"column_start":5,"column_end":99}},{"value":"/ this if you need to hold the object for longer periods of time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17182,"byte_end":17249,"line_start":349,"line_end":349,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17254,"byte_end":17257,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ See [`peek`](struct.ArcSwapAny.html#method.peek) for details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17262,"byte_end":17327,"line_start":351,"line_end":351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17332,"byte_end":17335,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Note that this is associated function (so it doesn't collide with the thing pointed to):","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17340,"byte_end":17432,"line_start":353,"line_end":353,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17437,"byte_end":17440,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17445,"byte_end":17459,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17464,"byte_end":17467,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17472,"byte_end":17483,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17488,"byte_end":17513,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/ # use arc_swap::{ArcSwap, Guard};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17518,"byte_end":17555,"line_start":359,"line_end":359,"column_start":5,"column_end":42}},{"value":"/ let a = ArcSwap::from(Arc::new(42));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17560,"byte_end":17600,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/ let mut ptr = None;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17605,"byte_end":17628,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/ { // limit the scope where the guard lives","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17633,"byte_end":17679,"line_start":362,"line_end":362,"column_start":5,"column_end":51}},{"value":"/     let guard = a.peek();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17684,"byte_end":17713,"line_start":363,"line_end":363,"column_start":5,"column_end":34}},{"value":"/     if *guard > 40 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17718,"byte_end":17742,"line_start":364,"line_end":364,"column_start":5,"column_end":29}},{"value":"/         ptr = Some(Guard::upgrade(&guard));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17747,"byte_end":17794,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17799,"byte_end":17808,"line_start":366,"line_end":366,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17813,"byte_end":17818,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/ # let _ = ptr;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17823,"byte_end":17841,"line_start":368,"line_end":368,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17846,"byte_end":17853,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18212,"byte_end":18217,"line_start":380,"line_end":380,"column_start":12,"column_end":17},"name":"lease","qualname":"<Guard>::lease","value":"fn (guard: &Self) -> Lease<T>","parent":null,"children":[],"decl_id":null,"docs":" Upgrades the guard to a [`Lease`](struct.Lease.html).","sig":null,"attributes":[{"value":"/ Upgrades the guard to a [`Lease`](struct.Lease.html).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17992,"byte_end":18049,"line_start":376,"line_end":376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18054,"byte_end":18057,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ This is useful for cases when the value needs to be held for intermediate time spans, like","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18062,"byte_end":18156,"line_start":378,"line_end":378,"column_start":5,"column_end":99}},{"value":"/ when manipulating a data structure.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18161,"byte_end":18200,"line_start":379,"line_end":379,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":19428,"byte_end":19435,"line_start":407,"line_end":407,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Guard>::get_ref","value":"fn <'g> (guard: &'g Self) -> Option<&'g T::Base>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value inside.","sig":null,"attributes":[{"value":"/ Gets a reference to the value inside.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18562,"byte_end":18603,"line_start":394,"line_end":394,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18608,"byte_end":18611,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This is returned as `Option` even for pointers that can't return Null, to have a common","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18616,"byte_end":18707,"line_start":396,"line_end":396,"column_start":5,"column_end":96}},{"value":"/ interface. The non-null ones also implement the `Deref` trait, so they can more easily be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18712,"byte_end":18805,"line_start":397,"line_end":397,"column_start":5,"column_end":98}},{"value":"/ used as that.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":18810,"byte_end":18827,"line_start":398,"line_end":398,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":157},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20577,"byte_end":20582,"line_start":443,"line_end":443,"column_start":12,"column_end":17},"name":"Lease","qualname":"::Lease","value":"Lease {  }","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"decl_id":null,"docs":" A temporary storage of the pointer.","sig":null,"attributes":[{"value":"/ A temporary storage of the pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20194,"byte_end":20233,"line_start":437,"line_end":437,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20234,"byte_end":20237,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ This, unlike [`Guard`](struct.Guard.html), does not block any write operations and is usually","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20238,"byte_end":20335,"line_start":439,"line_end":439,"column_start":1,"column_end":98}},{"value":"/ faster than loading the full `Arc`. However, this holds only if each thread keeps only small","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20336,"byte_end":20432,"line_start":440,"line_end":440,"column_start":1,"column_end":97}},{"value":"/ number of `Lease`s around and if too many are held, the following ones will just fall back to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20433,"byte_end":20530,"line_start":441,"line_end":441,"column_start":1,"column_end":98}},{"value":"/ creating the `Arc` internally.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20531,"byte_end":20565,"line_start":442,"line_end":442,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20765,"byte_end":20772,"line_start":451,"line_end":451,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<Lease<T>>::upgrade","value":"fn (guard: &Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a full `Arc` from the lease.\n","sig":null,"attributes":[{"value":"/ Loads a full `Arc` from the lease.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20715,"byte_end":20753,"line_start":450,"line_end":450,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21172,"byte_end":21184,"line_start":462,"line_end":462,"column_start":12,"column_end":24},"name":"into_upgrade","qualname":"<Lease<T>>::into_upgrade","value":"fn (lease: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" A consuming version of [`upgrade`](#method.upgrade).","sig":null,"attributes":[{"value":"/ A consuming version of [`upgrade`](#method.upgrade).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20892,"byte_end":20948,"line_start":457,"line_end":457,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20953,"byte_end":20956,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ This is a bit faster in certain situations, but consumes the lease.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20961,"byte_end":21032,"line_start":459,"line_end":459,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21762,"byte_end":21769,"line_start":479,"line_end":479,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lease<T>>::get_ref","value":"fn (lease: &Self) -> Option<&T::Base>","parent":null,"children":[],"decl_id":null,"docs":" Returns access to the data held.","sig":null,"attributes":[{"value":"/ Returns access to the data held.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21489,"byte_end":21525,"line_start":474,"line_end":474,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21530,"byte_end":21533,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This returns `Option` even when it can't hold `NULL` internally, to keep the interface the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21538,"byte_end":21632,"line_start":476,"line_end":476,"column_start":5,"column_end":99}},{"value":"/ same. But there's also the `Deref` trait for the non-`NULL` cases, which is usually more","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21637,"byte_end":21729,"line_start":477,"line_end":477,"column_start":5,"column_end":97}},{"value":"/ comfortable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21734,"byte_end":21750,"line_start":478,"line_end":478,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21983,"byte_end":21990,"line_start":486,"line_end":486,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Lease<T>>::is_null","value":"fn (lease: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if it contains a null pointer.","sig":null,"attributes":[{"value":"/ Checks if it contains a null pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21855,"byte_end":21896,"line_start":483,"line_end":483,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21901,"byte_end":21904,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ Note that for non-`NULL` `T`, this always returns `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":21909,"byte_end":21971,"line_start":485,"line_end":485,"column_start":5,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22298,"byte_end":22304,"line_start":495,"line_end":495,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"::ptr_eq","value":"fn <Base, A, B> (a: A, b: B) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Comparison of two pointer-like things.\n","sig":null,"attributes":[{"value":"/ Comparison of two pointer-like things.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22052,"byte_end":22094,"line_start":491,"line_end":491,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26862,"byte_end":26872,"line_start":661,"line_end":661,"column_start":12,"column_end":22},"name":"ArcSwapAny","qualname":"::ArcSwapAny","value":"ArcSwapAny {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"decl_id":null,"docs":" An atomic storage for a smart pointer like [`Arc`] or `Option<Arc>`.","sig":null,"attributes":[{"value":"/ An atomic storage for a smart pointer like [`Arc`] or `Option<Arc>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25348,"byte_end":25420,"line_start":623,"line_end":623,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25421,"byte_end":25424,"line_start":624,"line_end":624,"column_start":1,"column_end":4}},{"value":"/ This is a storage where a smart pointer may live. It can be read and written atomically from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25425,"byte_end":25521,"line_start":625,"line_end":625,"column_start":1,"column_end":97}},{"value":"/ several threads, but doesn't act like a pointer itself.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25522,"byte_end":25581,"line_start":626,"line_end":626,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25582,"byte_end":25585,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ One can be created [`from`] an [`Arc`]. To get the pointer back, use the [`load`](#method.load)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25586,"byte_end":25685,"line_start":628,"line_end":628,"column_start":1,"column_end":100}},{"value":"/ method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25686,"byte_end":25697,"line_start":629,"line_end":629,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25698,"byte_end":25701,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25702,"byte_end":25712,"line_start":631,"line_end":631,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25713,"byte_end":25716,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ This is the generic low-level implementation. This allows sharing the same code for storing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25717,"byte_end":25812,"line_start":633,"line_end":633,"column_start":1,"column_end":96}},{"value":"/ both `Arc` and `Option<Arc>` (and possibly other similar types).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25813,"byte_end":25881,"line_start":634,"line_end":634,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25882,"byte_end":25885,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ In your code, you most probably want to interact with it through the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25886,"byte_end":25958,"line_start":636,"line_end":636,"column_start":1,"column_end":73}},{"value":"/ [`ArcSwap`](type.ArcSwap.html) and [`ArcSwapOption`](type.ArcSwapOption.html) aliases. However,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":25959,"byte_end":26058,"line_start":637,"line_end":637,"column_start":1,"column_end":100}},{"value":"/ the methods they share are described here and are applicable to both of them. That's why the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26059,"byte_end":26155,"line_start":638,"line_end":638,"column_start":1,"column_end":97}},{"value":"/ examples here use `ArcSwap` â€’ but they could as well be written with `ArcSwapOption` or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26156,"byte_end":26249,"line_start":639,"line_end":639,"column_start":1,"column_end":92}},{"value":"/ `ArcSwapAny`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26250,"byte_end":26267,"line_start":640,"line_end":640,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26268,"byte_end":26271,"line_start":641,"line_end":641,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26272,"byte_end":26286,"line_start":642,"line_end":642,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26287,"byte_end":26290,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26291,"byte_end":26302,"line_start":644,"line_end":644,"column_start":1,"column_end":12}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26303,"byte_end":26328,"line_start":645,"line_end":645,"column_start":1,"column_end":26}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26329,"byte_end":26357,"line_start":646,"line_end":646,"column_start":1,"column_end":29}},{"value":"/ let arc = Arc::new(42);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26358,"byte_end":26385,"line_start":647,"line_end":647,"column_start":1,"column_end":28}},{"value":"/ let arc_swap = ArcSwap::from(arc);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26386,"byte_end":26424,"line_start":648,"line_end":648,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(42, *arc_swap.load());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26425,"byte_end":26462,"line_start":649,"line_end":649,"column_start":1,"column_end":38}},{"value":"/ // It can be read multiple times","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26463,"byte_end":26499,"line_start":650,"line_end":650,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(42, *arc_swap.load());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26500,"byte_end":26537,"line_start":651,"line_end":651,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26538,"byte_end":26541,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ // Put a new one in there","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26542,"byte_end":26571,"line_start":653,"line_end":653,"column_start":1,"column_end":30}},{"value":"/ let new_arc = Arc::new(0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26572,"byte_end":26602,"line_start":654,"line_end":654,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(42, *arc_swap.swap(new_arc));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26603,"byte_end":26647,"line_start":655,"line_end":655,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(0, *arc_swap.load());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26648,"byte_end":26684,"line_start":656,"line_end":656,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26685,"byte_end":26692,"line_start":657,"line_end":657,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26693,"byte_end":26696,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26697,"byte_end":26760,"line_start":659,"line_end":659,"column_start":1,"column_end":64}},{"value":"/ [`from`]: https://doc.rust-lang.org/nightly/std/convert/trait.From.html#tymethod.from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":26761,"byte_end":26850,"line_start":660,"line_end":660,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28599,"byte_end":28602,"line_start":728,"line_end":728,"column_start":12,"column_end":15},"name":"new","qualname":"<ArcSwapAny<T>>::new","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new value.\n","sig":null,"attributes":[{"value":"/ Constructs a new value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28560,"byte_end":28587,"line_start":727,"line_end":727,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28698,"byte_end":28708,"line_start":733,"line_end":733,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ArcSwapAny<T>>::into_inner","value":"fn (mut self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extracts the value inside.\n","sig":null,"attributes":[{"value":"/ Extracts the value inside.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28656,"byte_end":28686,"line_start":732,"line_end":732,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29321,"byte_end":29325,"line_start":752,"line_end":752,"column_start":12,"column_end":16},"name":"load","qualname":"<ArcSwapAny<T>>::load","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads the value.","sig":null,"attributes":[{"value":"/ Loads the value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28907,"byte_end":28927,"line_start":741,"line_end":741,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28932,"byte_end":28935,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This makes another copy (reference) and returns it, atomically (it is safe even when other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28940,"byte_end":29034,"line_start":743,"line_end":743,"column_start":5,"column_end":99}},{"value":"/ thread stores into the same instance at the same time).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29039,"byte_end":29098,"line_start":744,"line_end":744,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29103,"byte_end":29106,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ The method is lock-free and wait-free.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29111,"byte_end":29153,"line_start":746,"line_end":746,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29158,"byte_end":29161,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Signal safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29166,"byte_end":29185,"line_start":748,"line_end":748,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29190,"byte_end":29193,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ The method is *not* async-signal-safe. Use [`peek_signal_safe`](#method.peek_signal_safe)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29198,"byte_end":29291,"line_start":750,"line_end":750,"column_start":5,"column_end":98}},{"value":"/ for that.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29296,"byte_end":29309,"line_start":751,"line_end":751,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30860,"byte_end":30864,"line_start":791,"line_end":791,"column_start":12,"column_end":16},"name":"peek","qualname":"<ArcSwapAny<T>>::peek","value":"fn (&self) -> Guard<T>","parent":null,"children":[],"decl_id":null,"docs":" Provides a peek inside the held value.","sig":null,"attributes":[{"value":"/ Provides a peek inside the held value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29667,"byte_end":29709,"line_start":767,"line_end":767,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29714,"byte_end":29717,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This returns a temporary borrow of the object currently held inside. This is slightly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29722,"byte_end":29811,"line_start":769,"line_end":769,"column_start":5,"column_end":94}},{"value":"/ faster than [`load`](#method.load), but it is not suitable for holding onto for longer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29816,"byte_end":29906,"line_start":770,"line_end":770,"column_start":5,"column_end":95}},{"value":"/ periods of time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29911,"byte_end":29931,"line_start":771,"line_end":771,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29936,"byte_end":29939,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ If you discover later on that you need to hold onto it for longer, you can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":29944,"byte_end":30022,"line_start":773,"line_end":773,"column_start":5,"column_end":83}},{"value":"/ [`Guard::upgrade`](struct.Guard.html#method.upgrade) it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30027,"byte_end":30087,"line_start":774,"line_end":774,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30092,"byte_end":30095,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30100,"byte_end":30113,"line_start":776,"line_end":776,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30118,"byte_end":30121,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ This currently prevents the pointer inside from being replaced. Any [`swap`](#method.swap),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30126,"byte_end":30221,"line_start":778,"line_end":778,"column_start":5,"column_end":100}},{"value":"/ [`store`](#method.store) or [`rcu`](#method.rcu) will busy-loop while waiting for the proxy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30226,"byte_end":30321,"line_start":779,"line_end":779,"column_start":5,"column_end":100}},{"value":"/ object to be destroyed, even on unrelated objects. Therefore, this is suitable only for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30326,"byte_end":30417,"line_start":780,"line_end":780,"column_start":5,"column_end":96}},{"value":"/ things like reading a (reasonably small) configuration value, but not for eg. computations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30422,"byte_end":30516,"line_start":781,"line_end":781,"column_start":5,"column_end":99}},{"value":"/ on the held values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30521,"byte_end":30544,"line_start":782,"line_end":782,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30549,"byte_end":30552,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ If you want to do anything non-trivial, prefer [`lease`](#method.lease).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30557,"byte_end":30633,"line_start":784,"line_end":784,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30638,"byte_end":30641,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ If you are not sure what is better, benchmarking is recommended.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30646,"byte_end":30714,"line_start":786,"line_end":786,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30719,"byte_end":30722,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ # Signal safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30727,"byte_end":30746,"line_start":788,"line_end":788,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30751,"byte_end":30754,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ For an async-signal-safe version, use [`peek_signal_safe`](#method.peek_signal_safe).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30759,"byte_end":30848,"line_start":790,"line_end":790,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31722,"byte_end":31738,"line_start":807,"line_end":807,"column_start":12,"column_end":28},"name":"peek_signal_safe","qualname":"<ArcSwapAny<T>>::peek_signal_safe","value":"fn (&self) -> Guard<T>","parent":null,"children":[],"decl_id":null,"docs":" An async-signal-safe version of [`peek`](#method.peek)","sig":null,"attributes":[{"value":"/ An async-signal-safe version of [`peek`](#method.peek)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":30943,"byte_end":31001,"line_start":795,"line_end":795,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31006,"byte_end":31009,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ This method uses only restricted set of primitives to be async-signal-safe, at a slight","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31014,"byte_end":31105,"line_start":797,"line_end":797,"column_start":5,"column_end":96}},{"value":"/ performance hit in a contended scenario (signals should be rare, so it shouldn't be a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31110,"byte_end":31199,"line_start":798,"line_end":798,"column_start":5,"column_end":94}},{"value":"/ problem in practice).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31204,"byte_end":31229,"line_start":799,"line_end":799,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31234,"byte_end":31237,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ As the returned guard prevents the value inside to be dropped, the value can be used during","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31242,"byte_end":31337,"line_start":801,"line_end":801,"column_start":5,"column_end":100}},{"value":"/ the signal handler. Unless it is upgraded (which is *not* recommended in a signal handler),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31342,"byte_end":31437,"line_start":802,"line_end":802,"column_start":5,"column_end":100}},{"value":"/ there's also no way the signal handler would have to drop the pointed to value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31442,"byte_end":31525,"line_start":803,"line_end":803,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31530,"byte_end":31533,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ The same performance warning about writer methods of [`peek`](#method.peek) applies, so it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31538,"byte_end":31632,"line_start":805,"line_end":805,"column_start":5,"column_end":99}},{"value":"/ is recommended not to spend too much time holding the returned guard.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31637,"byte_end":31710,"line_start":806,"line_end":806,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32719,"byte_end":32724,"line_start":823,"line_end":823,"column_start":12,"column_end":17},"name":"lease","qualname":"<ArcSwapAny<T>>::lease","value":"fn (&self) -> Lease<T>","parent":null,"children":[],"decl_id":null,"docs":" Provides a temporary borrow of the object inside.","sig":null,"attributes":[{"value":"/ Provides a temporary borrow of the object inside.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31815,"byte_end":31868,"line_start":811,"line_end":811,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31873,"byte_end":31876,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This returns a proxy object allowing access to the thing held inside and it is *usually*","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31881,"byte_end":31973,"line_start":813,"line_end":813,"column_start":5,"column_end":97}},{"value":"/ as fast as an uncontented [`load`](#method.load) (loads gets slower when multiple threads","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":31978,"byte_end":32071,"line_start":814,"line_end":814,"column_start":5,"column_end":98}},{"value":"/ access the same value at the same time). Unlike the [`peek`](#method.peek), there's no","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32076,"byte_end":32166,"line_start":815,"line_end":815,"column_start":5,"column_end":95}},{"value":"/ performance penalty to holding onto the object for arbitrary time span.  On the other hand,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32171,"byte_end":32266,"line_start":816,"line_end":816,"column_start":5,"column_end":100}},{"value":"/ this gets slower with the number of existing leases in the current thread and at some point","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32271,"byte_end":32366,"line_start":817,"line_end":817,"column_start":5,"column_end":100}},{"value":"/ it falls back to doing full loads under the hood.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32371,"byte_end":32424,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32429,"byte_end":32432,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ This is therefore a good choice to use for eg. searching a data structure or juggling the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32437,"byte_end":32530,"line_start":820,"line_end":820,"column_start":5,"column_end":98}},{"value":"/ pointers around a bit, but not as something to store in larger amounts. The rule of thumb","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32535,"byte_end":32628,"line_start":821,"line_end":821,"column_start":5,"column_end":98}},{"value":"/ is this is suited for local variables on stack, but not in structures.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32633,"byte_end":32707,"line_start":822,"line_end":822,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32944,"byte_end":32949,"line_start":830,"line_end":830,"column_start":12,"column_end":17},"name":"store","qualname":"<ArcSwapAny<T>>::store","value":"fn (&self, val: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the value inside this instance.","sig":null,"attributes":[{"value":"/ Replaces the value inside this instance.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32792,"byte_end":32836,"line_start":827,"line_end":827,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32841,"byte_end":32844,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Further loads will yield the new value. Uses [`swap`](#method.swap) internally.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":32849,"byte_end":32932,"line_start":829,"line_end":829,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34104,"byte_end":34108,"line_start":855,"line_end":855,"column_start":12,"column_end":16},"name":"swap","qualname":"<ArcSwapAny<T>>::swap","value":"fn (&self, new: T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Exchanges the value inside this instance.","sig":null,"attributes":[{"value":"/ Exchanges the value inside this instance.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33008,"byte_end":33053,"line_start":834,"line_end":834,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33058,"byte_end":33061,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ While multiple `swap`s can run concurrently and won't block each other, each one needs to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33066,"byte_end":33159,"line_start":836,"line_end":836,"column_start":5,"column_end":98}},{"value":"/ wait for all the [`load`s](#method.load) and [`peek` Guards](#method.peek) that have seen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33164,"byte_end":33257,"line_start":837,"line_end":837,"column_start":5,"column_end":98}},{"value":"/ the old value to finish before returning. This is in a way similar to locking â€’ a living","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33262,"byte_end":33356,"line_start":838,"line_end":838,"column_start":5,"column_end":97}},{"value":"/ [`Guard`](struct.Guard.html) can prevent this from finishing. However, unlike `RwLock`, a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33361,"byte_end":33454,"line_start":839,"line_end":839,"column_start":5,"column_end":98}},{"value":"/ steady stream of readers will not block writers and if each guard is held only for a short","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33459,"byte_end":33553,"line_start":840,"line_end":840,"column_start":5,"column_end":99}},{"value":"/ period of time, writers will progress too.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33558,"byte_end":33604,"line_start":841,"line_end":841,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33609,"byte_end":33612,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ However, it is also possible to cause a deadlock (eg. this is an example of *broken* code):","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33617,"byte_end":33712,"line_start":843,"line_end":843,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33717,"byte_end":33720,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33725,"byte_end":33743,"line_start":845,"line_end":845,"column_start":5,"column_end":23}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33748,"byte_end":33773,"line_start":846,"line_end":846,"column_start":5,"column_end":30}},{"value":"/ # use arc_swap::ArcSwap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33778,"byte_end":33806,"line_start":847,"line_end":847,"column_start":5,"column_end":33}},{"value":"/ let shared = ArcSwap::from(Arc::new(42));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33811,"byte_end":33856,"line_start":848,"line_end":848,"column_start":5,"column_end":50}},{"value":"/ let guard = shared.peek();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33861,"byte_end":33891,"line_start":849,"line_end":849,"column_start":5,"column_end":35}},{"value":"/ // This will deadlock, because the guard is still active here and swap","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33896,"byte_end":33970,"line_start":850,"line_end":850,"column_start":5,"column_end":79}},{"value":"/ // can't pull the value from under its feet.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":33975,"byte_end":34023,"line_start":851,"line_end":851,"column_start":5,"column_end":53}},{"value":"/ shared.swap(Arc::new(0));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34028,"byte_end":34057,"line_start":852,"line_end":852,"column_start":5,"column_end":34}},{"value":"/ # drop(guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34062,"byte_end":34080,"line_start":853,"line_end":853,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34085,"byte_end":34092,"line_start":854,"line_end":854,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":35334,"byte_end":35350,"line_start":881,"line_end":881,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<ArcSwapAny<T>>::compare_and_swap","value":"fn <C> (&self, current: C, new: T) -> Lease<T>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the stored Arc if it is equal to `current`.","sig":null,"attributes":[{"value":"/ Swaps the stored Arc if it is equal to `current`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34502,"byte_end":34555,"line_start":866,"line_end":866,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34560,"byte_end":34563,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ If the current value of the `ArcSwapAny` is equal to `current`, the `new` is stored inside.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34568,"byte_end":34663,"line_start":868,"line_end":868,"column_start":5,"column_end":100}},{"value":"/ If not, nothing happens.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34668,"byte_end":34696,"line_start":869,"line_end":869,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34701,"byte_end":34704,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The previous value (no matter if the swap happened or not) is returned. Therefore, if the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34709,"byte_end":34802,"line_start":871,"line_end":871,"column_start":5,"column_end":98}},{"value":"/ returned value is equal to `current`, the swap happened. You want to do a pointer-based","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34807,"byte_end":34898,"line_start":872,"line_end":872,"column_start":5,"column_end":96}},{"value":"/ comparison to determine it (like `Arc::ptr_eq`).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34903,"byte_end":34955,"line_start":873,"line_end":873,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34960,"byte_end":34963,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ In other words, if the caller â€žguessesâ€œ the value of current correctly, it acts like","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":34968,"byte_end":35060,"line_start":875,"line_end":875,"column_start":5,"column_end":93}},{"value":"/ [`swap`](#method.swap), otherwise it acts like [`load`](#method.load) (including the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":35065,"byte_end":35153,"line_start":876,"line_end":876,"column_start":5,"column_end":93}},{"value":"/ limitations).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":35158,"byte_end":35175,"line_start":877,"line_end":877,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":35180,"byte_end":35183,"line_start":878,"line_end":878,"column_start":5,"column_end":8}},{"value":"/ The `current` can be specified as `&Arc`, [`Guard`](struct.Guard.html),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":35188,"byte_end":35263,"line_start":879,"line_end":879,"column_start":5,"column_end":80}},{"value":"/ [`&Lease`](struct.Lease.html) or as a raw pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":35268,"byte_end":35322,"line_start":880,"line_end":880,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43403,"byte_end":43406,"line_start":1089,"line_end":1089,"column_start":12,"column_end":15},"name":"rcu","qualname":"<ArcSwapAny<T>>::rcu","value":"fn <R, F> (&self, mut f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" Read-Copy-Update of the pointer inside.","sig":null,"attributes":[{"value":"/ Read-Copy-Update of the pointer inside.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":38961,"byte_end":39004,"line_start":969,"line_end":969,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39009,"byte_end":39012,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ This is useful in read-heavy situations with several threads that sometimes update the data","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39017,"byte_end":39112,"line_start":971,"line_end":971,"column_start":5,"column_end":100}},{"value":"/ pointed to. The readers can just repeatedly use [`load`](#method.load) without any locking.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39117,"byte_end":39212,"line_start":972,"line_end":972,"column_start":5,"column_end":100}},{"value":"/ The writer uses this method to perform the update.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39217,"byte_end":39271,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39276,"byte_end":39279,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ In case there's only one thread that does updates or in case the next version is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39284,"byte_end":39368,"line_start":975,"line_end":975,"column_start":5,"column_end":89}},{"value":"/ independent of the previous one, simple [`swap`](#method.swap) or [`store`](#method.store)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39373,"byte_end":39467,"line_start":976,"line_end":976,"column_start":5,"column_end":99}},{"value":"/ is enough. Otherwise, it may be needed to retry the update operation if some other thread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39472,"byte_end":39565,"line_start":977,"line_end":977,"column_start":5,"column_end":98}},{"value":"/ made an update in between. This is what this method does.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39570,"byte_end":39631,"line_start":978,"line_end":978,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39636,"byte_end":39639,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39644,"byte_end":39658,"line_start":980,"line_end":980,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39663,"byte_end":39666,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ This will *not* work as expected, because between loading and storing, some other thread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39671,"byte_end":39763,"line_start":982,"line_end":982,"column_start":5,"column_end":97}},{"value":"/ might have updated the value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39768,"byte_end":39801,"line_start":983,"line_end":983,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39806,"byte_end":39809,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39814,"byte_end":39825,"line_start":985,"line_end":985,"column_start":5,"column_end":16}},{"value":"/ extern crate arc_swap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39830,"byte_end":39856,"line_start":986,"line_end":986,"column_start":5,"column_end":31}},{"value":"/ extern crate crossbeam_utils;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39861,"byte_end":39894,"line_start":987,"line_end":987,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39899,"byte_end":39902,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39907,"byte_end":39930,"line_start":989,"line_end":989,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39935,"byte_end":39938,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ use arc_swap::ArcSwap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39943,"byte_end":39969,"line_start":991,"line_end":991,"column_start":5,"column_end":31}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":39974,"byte_end":40006,"line_start":992,"line_end":992,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40011,"byte_end":40014,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40019,"byte_end":40034,"line_start":994,"line_end":994,"column_start":5,"column_end":20}},{"value":"/     let cnt = ArcSwap::from(Arc::new(0));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40039,"byte_end":40084,"line_start":995,"line_end":995,"column_start":5,"column_end":50}},{"value":"/     thread::scope(|scope| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40089,"byte_end":40120,"line_start":996,"line_end":996,"column_start":5,"column_end":36}},{"value":"/         for _ in 0..10 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40125,"byte_end":40153,"line_start":997,"line_end":997,"column_start":5,"column_end":33}},{"value":"/             scope.spawn(|| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40158,"byte_end":40190,"line_start":998,"line_end":998,"column_start":5,"column_end":37}},{"value":"/                 let inner = cnt.load();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40195,"byte_end":40238,"line_start":999,"line_end":999,"column_start":5,"column_end":48}},{"value":"/                 // Another thread might have stored some other number than what we have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40243,"byte_end":40334,"line_start":1000,"line_end":1000,"column_start":5,"column_end":96}},{"value":"/                 // between the load and store.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40339,"byte_end":40389,"line_start":1001,"line_end":1001,"column_start":5,"column_end":55}},{"value":"/                 cnt.store(Arc::new(*inner + 1));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40394,"byte_end":40446,"line_start":1002,"line_end":1002,"column_start":5,"column_end":57}},{"value":"/             });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40451,"byte_end":40470,"line_start":1003,"line_end":1003,"column_start":5,"column_end":24}},{"value":"/         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40475,"byte_end":40488,"line_start":1004,"line_end":1004,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40493,"byte_end":40504,"line_start":1005,"line_end":1005,"column_start":5,"column_end":16}},{"value":"/     // This will likely fail:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40509,"byte_end":40542,"line_start":1006,"line_end":1006,"column_start":5,"column_end":38}},{"value":"/     // assert_eq!(10, *cnt.load());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40547,"byte_end":40586,"line_start":1007,"line_end":1007,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40591,"byte_end":40596,"line_start":1008,"line_end":1008,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40601,"byte_end":40608,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40613,"byte_end":40616,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ This will, but it can call the closure multiple times to do retries:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40621,"byte_end":40693,"line_start":1011,"line_end":1011,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40698,"byte_end":40701,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40706,"byte_end":40717,"line_start":1013,"line_end":1013,"column_start":5,"column_end":16}},{"value":"/ extern crate arc_swap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40722,"byte_end":40748,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ extern crate crossbeam_utils;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40753,"byte_end":40786,"line_start":1015,"line_end":1015,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40791,"byte_end":40794,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40799,"byte_end":40822,"line_start":1017,"line_end":1017,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40827,"byte_end":40830,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ use arc_swap::ArcSwap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40835,"byte_end":40861,"line_start":1019,"line_end":1019,"column_start":5,"column_end":31}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40866,"byte_end":40898,"line_start":1020,"line_end":1020,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40903,"byte_end":40906,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40911,"byte_end":40926,"line_start":1022,"line_end":1022,"column_start":5,"column_end":20}},{"value":"/     let cnt = ArcSwap::from(Arc::new(0));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40931,"byte_end":40976,"line_start":1023,"line_end":1023,"column_start":5,"column_end":50}},{"value":"/     thread::scope(|scope| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":40981,"byte_end":41012,"line_start":1024,"line_end":1024,"column_start":5,"column_end":36}},{"value":"/         for _ in 0..10 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41017,"byte_end":41045,"line_start":1025,"line_end":1025,"column_start":5,"column_end":33}},{"value":"/             scope.spawn(|| cnt.rcu(|inner| **inner + 1));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41050,"byte_end":41111,"line_start":1026,"line_end":1026,"column_start":5,"column_end":66}},{"value":"/         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41116,"byte_end":41129,"line_start":1027,"line_end":1027,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41134,"byte_end":41145,"line_start":1028,"line_end":1028,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(10, *cnt.load());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41150,"byte_end":41186,"line_start":1029,"line_end":1029,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41191,"byte_end":41196,"line_start":1030,"line_end":1030,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41201,"byte_end":41208,"line_start":1031,"line_end":1031,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41213,"byte_end":41216,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Due to the retries, you might want to perform all the expensive operations *before* the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41221,"byte_end":41312,"line_start":1033,"line_end":1033,"column_start":5,"column_end":96}},{"value":"/ rcu. As an example, if there's a cache of some computations as a map, and the map is cheap","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41317,"byte_end":41411,"line_start":1034,"line_end":1034,"column_start":5,"column_end":99}},{"value":"/ to clone but the computations are not, you could do something like this:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41416,"byte_end":41492,"line_start":1035,"line_end":1035,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41497,"byte_end":41500,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41505,"byte_end":41516,"line_start":1037,"line_end":1037,"column_start":5,"column_end":16}},{"value":"/ extern crate arc_swap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41521,"byte_end":41547,"line_start":1038,"line_end":1038,"column_start":5,"column_end":31}},{"value":"/ extern crate crossbeam_utils;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41552,"byte_end":41585,"line_start":1039,"line_end":1039,"column_start":5,"column_end":38}},{"value":"/ #[macro_use]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41590,"byte_end":41606,"line_start":1040,"line_end":1040,"column_start":5,"column_end":21}},{"value":"/ extern crate lazy_static;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41611,"byte_end":41640,"line_start":1041,"line_end":1041,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41645,"byte_end":41648,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41653,"byte_end":41687,"line_start":1043,"line_end":1043,"column_start":5,"column_end":39}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41692,"byte_end":41715,"line_start":1044,"line_end":1044,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41720,"byte_end":41723,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ use arc_swap::ArcSwap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41728,"byte_end":41754,"line_start":1046,"line_end":1046,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41759,"byte_end":41762,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ fn expensive_computation(x: usize) -> usize {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41767,"byte_end":41816,"line_start":1048,"line_end":1048,"column_start":5,"column_end":54}},{"value":"/     x * 2 // Let's pretend multiplication is really expensive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41821,"byte_end":41886,"line_start":1049,"line_end":1049,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41891,"byte_end":41896,"line_start":1050,"line_end":1050,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41901,"byte_end":41904,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ type Cache = HashMap<usize, usize>;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41909,"byte_end":41948,"line_start":1052,"line_end":1052,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41953,"byte_end":41956,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ lazy_static! {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41961,"byte_end":41979,"line_start":1054,"line_end":1054,"column_start":5,"column_end":23}},{"value":"/     static ref CACHE: ArcSwap<Cache> = ArcSwap::from(Arc::new(HashMap::new()));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":41984,"byte_end":42067,"line_start":1055,"line_end":1055,"column_start":5,"column_end":88}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42072,"byte_end":42077,"line_start":1056,"line_end":1056,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42082,"byte_end":42085,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ fn cached_computation(x: usize) -> usize {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42090,"byte_end":42136,"line_start":1058,"line_end":1058,"column_start":5,"column_end":51}},{"value":"/     let cache = CACHE.load();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42141,"byte_end":42174,"line_start":1059,"line_end":1059,"column_start":5,"column_end":38}},{"value":"/     if let Some(result) = cache.get(&x) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42179,"byte_end":42224,"line_start":1060,"line_end":1060,"column_start":5,"column_end":50}},{"value":"/         return *result;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42229,"byte_end":42256,"line_start":1061,"line_end":1061,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42261,"byte_end":42270,"line_start":1062,"line_end":1062,"column_start":5,"column_end":14}},{"value":"/     // Not in cache. Compute and store.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42275,"byte_end":42318,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/     // The expensive computation goes outside, so it is not retried.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42323,"byte_end":42395,"line_start":1064,"line_end":1064,"column_start":5,"column_end":77}},{"value":"/     let result = expensive_computation(x);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42400,"byte_end":42446,"line_start":1065,"line_end":1065,"column_start":5,"column_end":51}},{"value":"/     CACHE.rcu(|cache| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42451,"byte_end":42478,"line_start":1066,"line_end":1066,"column_start":5,"column_end":32}},{"value":"/         // The cheaper clone of the cache can be retried if need be.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42483,"byte_end":42555,"line_start":1067,"line_end":1067,"column_start":5,"column_end":77}},{"value":"/         let mut cache = HashMap::clone(&cache);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42560,"byte_end":42611,"line_start":1068,"line_end":1068,"column_start":5,"column_end":56}},{"value":"/         cache.insert(x, result);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42616,"byte_end":42652,"line_start":1069,"line_end":1069,"column_start":5,"column_end":41}},{"value":"/         cache","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42657,"byte_end":42674,"line_start":1070,"line_end":1070,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42679,"byte_end":42690,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     result","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42695,"byte_end":42709,"line_start":1072,"line_end":1072,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42714,"byte_end":42719,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42724,"byte_end":42727,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42732,"byte_end":42747,"line_start":1075,"line_end":1075,"column_start":5,"column_end":20}},{"value":"/     assert_eq!(42, cached_computation(21));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42752,"byte_end":42799,"line_start":1076,"line_end":1076,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(42, cached_computation(21));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42804,"byte_end":42851,"line_start":1077,"line_end":1077,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42856,"byte_end":42861,"line_start":1078,"line_end":1078,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42866,"byte_end":42873,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42878,"byte_end":42881,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ # The cost of cloning","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42886,"byte_end":42911,"line_start":1081,"line_end":1081,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42916,"byte_end":42919,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ Depending on the size of cache above, the cloning might not be as cheap. You can however","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":42924,"byte_end":43016,"line_start":1083,"line_end":1083,"column_start":5,"column_end":97}},{"value":"/ use persistent data structures â€’ each modification creates a new data structure, but it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43021,"byte_end":43114,"line_start":1084,"line_end":1084,"column_start":5,"column_end":96}},{"value":"/ shares most of the data with the old one (which is usually accomplished by using `Arc`s","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43119,"byte_end":43210,"line_start":1085,"line_end":1085,"column_start":5,"column_end":96}},{"value":"/ inside to share the unchanged values). Something like","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43215,"byte_end":43272,"line_start":1086,"line_end":1086,"column_start":5,"column_end":62}},{"value":"/ [`rpds`](https://crates.io/crates/rpds) or [`im`](https://crates.io/crates/im) might do","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43277,"byte_end":43368,"line_start":1087,"line_end":1087,"column_start":5,"column_end":96}},{"value":"/ what you need.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43373,"byte_end":43391,"line_start":1088,"line_end":1088,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":236},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44013,"byte_end":44020,"line_start":1112,"line_end":1112,"column_start":10,"column_end":17},"name":"ArcSwap","qualname":"::ArcSwap","value":"ArcSwapAny<Arc<T>>","parent":null,"children":[],"decl_id":null,"docs":" An atomic storage for `Arc`.","sig":null,"attributes":[{"value":"/ An atomic storage for `Arc`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43855,"byte_end":43887,"line_start":1108,"line_end":1108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43888,"byte_end":43891,"line_start":1109,"line_end":1109,"column_start":1,"column_end":4}},{"value":"/ This is a type alias only. Most of its methods are described on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43892,"byte_end":43959,"line_start":1110,"line_end":1110,"column_start":1,"column_end":68}},{"value":"/ [`ArcSwapAny`](struct.ArcSwapAny.html).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":43960,"byte_end":44003,"line_start":1111,"line_end":1111,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44218,"byte_end":44230,"line_start":1118,"line_end":1118,"column_start":12,"column_end":24},"name":"from_pointee","qualname":"<ArcSwap<T>>::from_pointee","value":"fn (val: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor directly from the pointed-to value.","sig":null,"attributes":[{"value":"/ A convenience constructor directly from the pointed-to value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44072,"byte_end":44137,"line_start":1115,"line_end":1115,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44142,"byte_end":44145,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ Direct equivalent for `ArcSwap::new(Arc::new(val))`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44150,"byte_end":44206,"line_start":1117,"line_end":1117,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45329,"byte_end":45339,"line_start":1139,"line_end":1139,"column_start":12,"column_end":22},"name":"rcu_unwrap","qualname":"<ArcSwap<T>>::rcu_unwrap","value":"fn <R, F> (&self, mut f: F) -> T","parent":null,"children":[],"decl_id":null,"docs":" An [`rcu`](struct.ArcSwapAny.html#method.rcu) which waits to be the sole owner of the\n original value and unwraps it.","sig":null,"attributes":[{"value":"/ An [`rcu`](struct.ArcSwapAny.html#method.rcu) which waits to be the sole owner of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44294,"byte_end":44383,"line_start":1122,"line_end":1122,"column_start":5,"column_end":94}},{"value":"/ original value and unwraps it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44388,"byte_end":44422,"line_start":1123,"line_end":1123,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44427,"byte_end":44430,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ This one works the same way as the [`rcu`](struct.ArcSwapAny.html#method.rcu) method, but","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44435,"byte_end":44528,"line_start":1125,"line_end":1125,"column_start":5,"column_end":98}},{"value":"/ works on the inner type instead of `Arc`. After replacing the original, it waits until","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44533,"byte_end":44623,"line_start":1126,"line_end":1126,"column_start":5,"column_end":95}},{"value":"/ there are no other owners of the arc and unwraps it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44628,"byte_end":44684,"line_start":1127,"line_end":1127,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44689,"byte_end":44692,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ Possible use case might be an RCU with a structure that is rather slow to drop â€’ if it was","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44697,"byte_end":44793,"line_start":1129,"line_end":1129,"column_start":5,"column_end":99}},{"value":"/ left to random reader (the last one to hold the old value), it could cause a timeout or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44798,"byte_end":44889,"line_start":1130,"line_end":1130,"column_start":5,"column_end":96}},{"value":"/ jitter in a query time. With this, the deallocation is done in the updater thread,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44894,"byte_end":44980,"line_start":1131,"line_end":1131,"column_start":5,"column_end":91}},{"value":"/ therefore outside of the hot path.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44985,"byte_end":45023,"line_start":1132,"line_end":1132,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45028,"byte_end":45031,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45036,"byte_end":45049,"line_start":1134,"line_end":1134,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45054,"byte_end":45057,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ Note that if you store a copy of the `Arc` somewhere except the `ArcSwap` itself for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45062,"byte_end":45150,"line_start":1136,"line_end":1136,"column_start":5,"column_end":93}},{"value":"/ extended period of time, this'll busy-wait the whole time. Unless you need the assurance","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45155,"byte_end":45247,"line_start":1137,"line_end":1137,"column_start":5,"column_end":97}},{"value":"/ the `Arc` is deconstructed here, prefer [`rcu`](#method.rcu).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45252,"byte_end":45317,"line_start":1138,"line_end":1138,"column_start":5,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46448,"byte_end":46461,"line_start":1177,"line_end":1177,"column_start":10,"column_end":23},"name":"ArcSwapOption","qualname":"::ArcSwapOption","value":"ArcSwapAny<Option<Arc<T>>>","parent":null,"children":[],"decl_id":null,"docs":" An atomic storage for `Option<Arc>`.","sig":null,"attributes":[{"value":"/ An atomic storage for `Option<Arc>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45742,"byte_end":45782,"line_start":1157,"line_end":1157,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45783,"byte_end":45786,"line_start":1158,"line_end":1158,"column_start":1,"column_end":4}},{"value":"/ This is very similar to [`ArcSwap`](type.ArcSwap.html), but allows storing NULL values, which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45787,"byte_end":45884,"line_start":1159,"line_end":1159,"column_start":1,"column_end":98}},{"value":"/ is useful in some situations.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45885,"byte_end":45918,"line_start":1160,"line_end":1160,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45919,"byte_end":45922,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ This is a type alias only. Most of the methods are described on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45923,"byte_end":45990,"line_start":1162,"line_end":1162,"column_start":1,"column_end":68}},{"value":"/ [`ArcSwapAny`](struct.ArcSwapAny.html). Even though the examples there often use `ArcSwap`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":45991,"byte_end":46086,"line_start":1163,"line_end":1163,"column_start":1,"column_end":96}},{"value":"/ they are applicable to `ArcSwapOption` with appropriate changes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46087,"byte_end":46155,"line_start":1164,"line_end":1164,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46156,"byte_end":46159,"line_start":1165,"line_end":1165,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46160,"byte_end":46174,"line_start":1166,"line_end":1166,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46175,"byte_end":46178,"line_start":1167,"line_end":1167,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46179,"byte_end":46186,"line_start":1168,"line_end":1168,"column_start":1,"column_end":8}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46187,"byte_end":46210,"line_start":1169,"line_end":1169,"column_start":1,"column_end":24}},{"value":"/ use arc_swap::ArcSwapOption;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46211,"byte_end":46243,"line_start":1170,"line_end":1170,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46244,"byte_end":46247,"line_start":1171,"line_end":1171,"column_start":1,"column_end":4}},{"value":"/ let shared = ArcSwapOption::from(None);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46248,"byte_end":46291,"line_start":1172,"line_end":1172,"column_start":1,"column_end":44}},{"value":"/ assert!(shared.load().is_none());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46292,"byte_end":46329,"line_start":1173,"line_end":1173,"column_start":1,"column_end":38}},{"value":"/ assert!(shared.swap(Some(Arc::new(42))).is_none());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46330,"byte_end":46385,"line_start":1174,"line_end":1174,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(42, *shared.load().unwrap());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46386,"byte_end":46430,"line_start":1175,"line_end":1175,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46431,"byte_end":46438,"line_start":1176,"line_end":1176,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47021,"byte_end":47033,"line_start":1194,"line_end":1194,"column_start":12,"column_end":24},"name":"from_pointee","qualname":"<ArcSwapOption<T>>::from_pointee","value":"fn <V> (val: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor directly from a pointed-to value.","sig":null,"attributes":[{"value":"/ A convenience constructor directly from a pointed-to value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46527,"byte_end":46590,"line_start":1180,"line_end":1180,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46595,"byte_end":46598,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ This just allocates the `Arc` under the hood.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46603,"byte_end":46652,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46657,"byte_end":46660,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46665,"byte_end":46679,"line_start":1184,"line_end":1184,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46684,"byte_end":46687,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46692,"byte_end":46703,"line_start":1186,"line_end":1186,"column_start":5,"column_end":16}},{"value":"/ use arc_swap::ArcSwapOption;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46708,"byte_end":46740,"line_start":1187,"line_end":1187,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46745,"byte_end":46748,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ let empty: ArcSwapOption<usize> = ArcSwapOption::from_pointee(None);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46753,"byte_end":46825,"line_start":1189,"line_end":1189,"column_start":5,"column_end":77}},{"value":"/ assert!(empty.load().is_none());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46830,"byte_end":46866,"line_start":1190,"line_end":1190,"column_start":5,"column_end":41}},{"value":"/ let non_empty: ArcSwapOption<usize> = ArcSwapOption::from_pointee(42);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46871,"byte_end":46945,"line_start":1191,"line_end":1191,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(42, *non_empty.load().unwrap());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46950,"byte_end":46997,"line_start":1192,"line_end":1192,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47002,"byte_end":47009,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47263,"byte_end":47268,"line_start":1201,"line_end":1201,"column_start":12,"column_end":17},"name":"empty","qualname":"<ArcSwapOption<T>>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" A convenience constructor for an empty value.","sig":null,"attributes":[{"value":"/ A convenience constructor for an empty value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47136,"byte_end":47185,"line_start":1198,"line_end":1198,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47190,"byte_end":47193,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `ArcSwapOption::new(none)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47198,"byte_end":47251,"line_start":1200,"line_end":1200,"column_start":5,"column_end":58}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60995,"byte_end":61000,"line_start":40,"line_end":40,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":61249,"byte_end":61254,"line_start":52,"line_end":52,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":61753,"byte_end":61757,"line_start":12,"line_end":12,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":62017,"byte_end":62021,"line_start":26,"line_end":26,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":62777,"byte_end":62785,"line_start":49,"line_end":49,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":63622,"byte_end":63626,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":71},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71498,"byte_end":71501,"line_start":78,"line_end":78,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71861,"byte_end":71867,"line_start":94,"line_end":94,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":72378,"byte_end":72381,"line_start":114,"line_end":114,"column_start":28,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":15112,"byte_end":15119,"line_start":292,"line_end":292,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16204,"byte_end":16211,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17012,"byte_end":17017,"line_start":345,"line_end":345,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":19560,"byte_end":19565,"line_start":412,"line_end":412,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":19720,"byte_end":19725,"line_start":419,"line_end":419,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20700,"byte_end":20705,"line_start":449,"line_end":449,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22481,"byte_end":22486,"line_start":505,"line_end":505,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22626,"byte_end":22631,"line_start":512,"line_end":512,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22927,"byte_end":22932,"line_start":527,"line_end":527,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":23112,"byte_end":23117,"line_start":537,"line_end":537,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":24277,"byte_end":24282,"line_start":591,"line_end":591,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":27179,"byte_end":27189,"line_start":671,"line_end":671,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":27629,"byte_end":27639,"line_start":684,"line_end":684,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":27907,"byte_end":27917,"line_start":694,"line_end":694,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28012,"byte_end":28022,"line_start":700,"line_end":700,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28352,"byte_end":28362,"line_start":716,"line_end":716,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28540,"byte_end":28550,"line_start":726,"line_end":726,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44055,"byte_end":44062,"line_start":1114,"line_end":1114,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46504,"byte_end":46517,"line_start":1179,"line_end":1179,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47343,"byte_end":47356,"line_start":1206,"line_end":1206,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":60995,"byte_end":61000,"line_start":40,"line_end":40,"column_start":40,"column_end":45},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":134},"to":{"krate":0,"index":8}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/as_raw.rs","byte_start":61249,"byte_end":61254,"line_start":52,"line_end":52,"column_start":36,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":157},"to":{"krate":0,"index":8}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":61753,"byte_end":61757,"line_start":12,"line_end":12,"column_start":18,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":42},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":62017,"byte_end":62021,"line_start":26,"line_end":26,"column_start":18,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":47},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":62777,"byte_end":62785,"line_start":49,"line_end":49,"column_start":15,"column_end":23},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":56},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/debt.rs","byte_start":63622,"byte_end":63626,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":42},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":69357,"byte_end":69362,"line_start":27,"line_end":27,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71461,"byte_end":71467,"line_start":76,"line_end":76,"column_start":27,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":79},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71498,"byte_end":71501,"line_start":78,"line_end":78,"column_start":27,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":71861,"byte_end":71867,"line_start":94,"line_end":94,"column_start":36,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":2,"index":29905},"to":{"krate":0,"index":79}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/ref_cnt.rs","byte_start":72378,"byte_end":72381,"line_start":114,"line_end":114,"column_start":28,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":3880},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":15112,"byte_end":15119,"line_start":292,"line_end":292,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":16204,"byte_end":16211,"line_start":320,"line_end":320,"column_start":15,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":17012,"byte_end":17017,"line_start":345,"line_end":345,"column_start":21,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":19560,"byte_end":19565,"line_start":412,"line_end":412,"column_start":32,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":134},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":19720,"byte_end":19725,"line_start":419,"line_end":419,"column_start":30,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":134},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":20700,"byte_end":20705,"line_start":449,"line_end":449,"column_start":17,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22481,"byte_end":22486,"line_start":505,"line_end":505,"column_start":28,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22626,"byte_end":22631,"line_start":512,"line_end":512,"column_start":19,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":22927,"byte_end":22932,"line_start":527,"line_end":527,"column_start":21,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":23112,"byte_end":23117,"line_start":537,"line_end":537,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":157},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":24277,"byte_end":24282,"line_start":591,"line_end":591,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":27179,"byte_end":27189,"line_start":671,"line_end":671,"column_start":29,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":27629,"byte_end":27639,"line_start":684,"line_end":684,"column_start":26,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":27907,"byte_end":27917,"line_start":694,"line_end":694,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28012,"byte_end":28022,"line_start":700,"line_end":700,"column_start":19,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28352,"byte_end":28362,"line_start":716,"line_end":716,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":197},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":28540,"byte_end":28550,"line_start":726,"line_end":726,"column_start":17,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":44055,"byte_end":44062,"line_start":1114,"line_end":1114,"column_start":9,"column_end":16},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":46504,"byte_end":46517,"line_start":1179,"line_end":1179,"column_start":9,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/arc-swap-0.3.2/src/lib.rs","byte_start":47343,"byte_end":47356,"line_start":1206,"line_end":1206,"column_start":21,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":1893}}]}