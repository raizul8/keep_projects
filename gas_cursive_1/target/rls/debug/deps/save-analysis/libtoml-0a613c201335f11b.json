{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8","program":"/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","toml","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=0a613c201335f11b","-C","extra-filename=-0a613c201335f11b","--out-dir","/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","--extern","serde=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libserde-44527a4719003024.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libtoml-0a613c201335f11b.rmeta"},"prelude":{"crate_id":{"name":"toml","disambiguator":[16556068264732568292,7015741641914176394]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","num":15,"id":{"name":"serde","disambiguator":[11094036867885156780,8787967179329837002]}}],"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":0,"byte_end":4370,"line_start":1,"line_end":175,"column_start":1,"column_end":26}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4618,"byte_end":4626,"line_start":14,"line_end":14,"column_start":20,"column_end":28},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4628,"byte_end":4646,"line_start":14,"line_end":14,"column_start":30,"column_end":48},"alias_span":null,"name":"DatetimeParseError","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":1110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4072,"byte_end":4077,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":371},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4139,"byte_end":4148,"line_start":164,"line_end":164,"column_start":15,"column_end":24},"alias_span":null,"name":"to_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4150,"byte_end":4166,"line_start":164,"line_end":164,"column_start":26,"column_end":42},"alias_span":null,"name":"to_string_pretty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":368},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4168,"byte_end":4174,"line_start":164,"line_end":164,"column_start":44,"column_end":50},"alias_span":null,"name":"to_vec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4176,"byte_end":4186,"line_start":164,"line_end":164,"column_start":52,"column_end":62},"alias_span":null,"name":"Serializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4232,"byte_end":4242,"line_start":167,"line_end":167,"column_start":14,"column_end":24},"alias_span":null,"name":"from_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4244,"byte_end":4252,"line_start":167,"line_end":167,"column_start":26,"column_end":34},"alias_span":null,"name":"from_str","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4254,"byte_end":4266,"line_start":167,"line_end":167,"column_start":36,"column_end":48},"alias_span":null,"name":"Deserializer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":1074},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/macros.rs","byte_start":175246,"byte_end":175257,"line_start":1,"line_end":1,"column_start":21,"column_end":32},"alias_span":null,"name":"Deserialize","value":"","parent":{"krate":0,"index":1056}},{"kind":"Use","ref_id":{"krate":15,"index":1290},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/macros.rs","byte_start":175259,"byte_end":175275,"line_start":1,"line_end":1,"column_start":34,"column_end":50},"alias_span":null,"name":"IntoDeserializer","value":"","parent":{"krate":0,"index":1056}},{"kind":"Use","ref_id":{"krate":0,"index":1856},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4362,"byte_end":4369,"line_start":175,"line_end":175,"column_start":18,"column_end":25},"alias_span":null,"name":"Spanned","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":0,"byte_end":4370,"line_start":1,"line_end":175,"column_start":1,"column_end":26},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":358},{"krate":0,"index":732},{"krate":0,"index":737},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":1056},{"krate":0,"index":1070},{"krate":0,"index":1109}],"decl_id":null,"docs":" A [TOML]-parsing library","sig":null,"attributes":[{"value":"! A [TOML]-parsing library","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This library implements a [TOML] v0.4.0 compatible parser,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":33,"byte_end":95,"line_start":3,"line_end":3,"column_start":1,"column_end":63}},{"value":"! primarily supporting the [`serde`] library for encoding/decoding","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":96,"byte_end":164,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"! various types in Rust.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":165,"byte_end":191,"line_start":5,"line_end":5,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":192,"byte_end":195,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! TOML itself is a simple, ergonomic, and readable configuration format:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":196,"byte_end":270,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":271,"byte_end":274,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":275,"byte_end":286,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"! [package]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":287,"byte_end":300,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"! name = \"toml\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":301,"byte_end":318,"line_start":11,"line_end":11,"column_start":1,"column_end":18}},{"value":"! version = \"0.4.2\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":319,"byte_end":340,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"! authors = [\"Alex Crichton <alex@alexcrichton.com>\"]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":341,"byte_end":396,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":397,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! [dependencies]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":401,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"! serde = \"1.0\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":420,"byte_end":437,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":438,"byte_end":445,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":446,"byte_end":449,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! The TOML format tends to be relatively common throughout the Rust community","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":450,"byte_end":529,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"! for configuration, notably being used by [Cargo], Rust's package manager.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":530,"byte_end":607,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":608,"byte_end":611,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! ## TOML values","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":612,"byte_end":630,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":631,"byte_end":634,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! A value in TOML is represented with the `Value` enum in this crate:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":635,"byte_end":706,"line_start":24,"line_end":24,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":707,"byte_end":710,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! ```rust,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":711,"byte_end":729,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! pub enum Value {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":730,"byte_end":750,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"!     String(String),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":751,"byte_end":774,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"!     Integer(i64),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":775,"byte_end":796,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"!     Float(f64),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":797,"byte_end":816,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"!     Boolean(bool),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":817,"byte_end":839,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"!     Datetime(Datetime),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":840,"byte_end":867,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"!     Array(Array),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":868,"byte_end":889,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"!     Table(Table),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":890,"byte_end":911,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":912,"byte_end":917,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":918,"byte_end":925,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":926,"byte_end":929,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! TOML is similar to JSON with the notable addition of a `Datetime`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":930,"byte_end":999,"line_start":38,"line_end":38,"column_start":1,"column_end":70}},{"value":"! type. In general, TOML and JSON are interchangeable in terms of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1000,"byte_end":1067,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"! formats.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1068,"byte_end":1080,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1081,"byte_end":1084,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! ## Parsing TOML","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1085,"byte_end":1104,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! The easiest way to parse a TOML document is via the `Value` type:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1109,"byte_end":1178,"line_start":44,"line_end":44,"column_start":1,"column_end":70}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1179,"byte_end":1182,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1183,"byte_end":1194,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"! use toml::Value;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1195,"byte_end":1215,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1216,"byte_end":1219,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! let value = \"foo = 'bar'\".parse::<Value>().unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1220,"byte_end":1276,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1277,"byte_end":1280,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! assert_eq!(value[\"foo\"].as_str(), Some(\"bar\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1281,"byte_end":1332,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1333,"byte_end":1340,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1341,"byte_end":1344,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! The `Value` type implements a number of convenience methods and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1345,"byte_end":1412,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"! traits; the example above uses `FromStr` to parse a `str` into a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1413,"byte_end":1481,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"! `Value`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1482,"byte_end":1494,"line_start":56,"line_end":56,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1495,"byte_end":1498,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ## Deserialization and Serialization","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1499,"byte_end":1539,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! This crate supports [`serde`] 1.0 with a number of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1544,"byte_end":1598,"line_start":60,"line_end":60,"column_start":1,"column_end":55}},{"value":"! implementations of the `Deserialize`, `Serialize`, `Deserializer`, and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1599,"byte_end":1673,"line_start":61,"line_end":61,"column_start":1,"column_end":75}},{"value":"! `Serializer` traits. Namely, you'll find:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1674,"byte_end":1719,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1720,"byte_end":1723,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! * `Deserialize for Value`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1724,"byte_end":1753,"line_start":64,"line_end":64,"column_start":1,"column_end":30}},{"value":"! * `Serialize for Value`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1754,"byte_end":1781,"line_start":65,"line_end":65,"column_start":1,"column_end":28}},{"value":"! * `Deserialize for Datetime`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1782,"byte_end":1814,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"! * `Serialize for Datetime`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1815,"byte_end":1845,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"! * `Deserializer for de::Deserializer`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1846,"byte_end":1887,"line_start":68,"line_end":68,"column_start":1,"column_end":42}},{"value":"! * `Serializer for ser::Serializer`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1888,"byte_end":1926,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"! * `Deserializer for Value`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1927,"byte_end":1957,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1958,"byte_end":1961,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! This means that you can use Serde to deserialize/serialize the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":1962,"byte_end":2028,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! `Value` type as well as the `Datetime` type in this crate. You can also","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2029,"byte_end":2104,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"! use the `Deserializer`, `Serializer`, or `Value` type itself to act as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2105,"byte_end":2179,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"! a deserializer/serializer for arbitrary types.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2180,"byte_end":2230,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2231,"byte_end":2234,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! An example of deserializing with TOML is:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2235,"byte_end":2280,"line_start":77,"line_end":77,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2281,"byte_end":2284,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2285,"byte_end":2296,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"! #[macro_use]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2297,"byte_end":2313,"line_start":80,"line_end":80,"column_start":1,"column_end":17}},{"value":"! extern crate serde_derive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2314,"byte_end":2344,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"! extern crate toml;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2345,"byte_end":2367,"line_start":82,"line_end":82,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2368,"byte_end":2371,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"! #[derive(Deserialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2372,"byte_end":2398,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"! struct Config {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2399,"byte_end":2418,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"!     ip: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2419,"byte_end":2438,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"!     port: Option<u16>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2439,"byte_end":2465,"line_start":87,"line_end":87,"column_start":1,"column_end":27}},{"value":"!     keys: Keys,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2466,"byte_end":2485,"line_start":88,"line_end":88,"column_start":1,"column_end":20}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2486,"byte_end":2491,"line_start":89,"line_end":89,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2492,"byte_end":2495,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"! #[derive(Deserialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2496,"byte_end":2522,"line_start":91,"line_end":91,"column_start":1,"column_end":27}},{"value":"! struct Keys {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2523,"byte_end":2540,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"!     github: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2541,"byte_end":2564,"line_start":93,"line_end":93,"column_start":1,"column_end":24}},{"value":"!     travis: Option<String>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2565,"byte_end":2596,"line_start":94,"line_end":94,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2597,"byte_end":2602,"line_start":95,"line_end":95,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2603,"byte_end":2606,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2607,"byte_end":2622,"line_start":97,"line_end":97,"column_start":1,"column_end":16}},{"value":"!     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2623,"byte_end":2670,"line_start":98,"line_end":98,"column_start":1,"column_end":48}},{"value":"!         ip = '127.0.0.1'","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2671,"byte_end":2699,"line_start":99,"line_end":99,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2700,"byte_end":2703,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"!         [keys]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2704,"byte_end":2722,"line_start":101,"line_end":101,"column_start":1,"column_end":19}},{"value":"!         github = 'xxxxxxxxxxxxxxxxx'","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2723,"byte_end":2763,"line_start":102,"line_end":102,"column_start":1,"column_end":41}},{"value":"!         travis = 'yyyyyyyyyyyyyyyyy'","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2764,"byte_end":2804,"line_start":103,"line_end":103,"column_start":1,"column_end":41}},{"value":"!     \"#).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2805,"byte_end":2826,"line_start":104,"line_end":104,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2827,"byte_end":2830,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"!     assert_eq!(config.ip, \"127.0.0.1\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2831,"byte_end":2874,"line_start":106,"line_end":106,"column_start":1,"column_end":44}},{"value":"!     assert_eq!(config.port, None);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2875,"byte_end":2913,"line_start":107,"line_end":107,"column_start":1,"column_end":39}},{"value":"!     assert_eq!(config.keys.github, \"xxxxxxxxxxxxxxxxx\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2914,"byte_end":2974,"line_start":108,"line_end":108,"column_start":1,"column_end":61}},{"value":"!     assert_eq!(config.keys.travis.as_ref().unwrap(), \"yyyyyyyyyyyyyyyyy\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":2975,"byte_end":3053,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3054,"byte_end":3059,"line_start":110,"line_end":110,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3060,"byte_end":3067,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3068,"byte_end":3071,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! You can serialize types in a similar fashion:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3072,"byte_end":3121,"line_start":113,"line_end":113,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3126,"byte_end":3137,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"! #[macro_use]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3138,"byte_end":3154,"line_start":116,"line_end":116,"column_start":1,"column_end":17}},{"value":"! extern crate serde_derive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3155,"byte_end":3185,"line_start":117,"line_end":117,"column_start":1,"column_end":31}},{"value":"! extern crate toml;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3186,"byte_end":3208,"line_start":118,"line_end":118,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3209,"byte_end":3212,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! #[derive(Serialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3213,"byte_end":3237,"line_start":120,"line_end":120,"column_start":1,"column_end":25}},{"value":"! struct Config {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3238,"byte_end":3257,"line_start":121,"line_end":121,"column_start":1,"column_end":20}},{"value":"!     ip: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3258,"byte_end":3277,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"!     port: Option<u16>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3278,"byte_end":3304,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"!     keys: Keys,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3305,"byte_end":3324,"line_start":124,"line_end":124,"column_start":1,"column_end":20}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3325,"byte_end":3330,"line_start":125,"line_end":125,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3331,"byte_end":3334,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! #[derive(Serialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3335,"byte_end":3359,"line_start":127,"line_end":127,"column_start":1,"column_end":25}},{"value":"! struct Keys {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3360,"byte_end":3377,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"!     github: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3378,"byte_end":3401,"line_start":129,"line_end":129,"column_start":1,"column_end":24}},{"value":"!     travis: Option<String>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3402,"byte_end":3433,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3434,"byte_end":3439,"line_start":131,"line_end":131,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3440,"byte_end":3443,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3444,"byte_end":3459,"line_start":133,"line_end":133,"column_start":1,"column_end":16}},{"value":"!     let config = Config {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3460,"byte_end":3489,"line_start":134,"line_end":134,"column_start":1,"column_end":30}},{"value":"!         ip: \"127.0.0.1\".to_string(),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3490,"byte_end":3530,"line_start":135,"line_end":135,"column_start":1,"column_end":41}},{"value":"!         port: None,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3531,"byte_end":3554,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"!         keys: Keys {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3555,"byte_end":3579,"line_start":137,"line_end":137,"column_start":1,"column_end":25}},{"value":"!             github: \"xxxxxxxxxxxxxxxxx\".to_string(),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3580,"byte_end":3636,"line_start":138,"line_end":138,"column_start":1,"column_end":57}},{"value":"!             travis: Some(\"yyyyyyyyyyyyyyyyy\".to_string()),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3637,"byte_end":3699,"line_start":139,"line_end":139,"column_start":1,"column_end":63}},{"value":"!         },","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3700,"byte_end":3714,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"!     };","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3715,"byte_end":3725,"line_start":141,"line_end":141,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"!     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3730,"byte_end":3783,"line_start":143,"line_end":143,"column_start":1,"column_end":54}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3784,"byte_end":3789,"line_start":144,"line_end":144,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3790,"byte_end":3797,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! [TOML]: https://github.com/toml-lang/toml","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3802,"byte_end":3847,"line_start":147,"line_end":147,"column_start":1,"column_end":46}},{"value":"! [Cargo]: https://crates.io/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3848,"byte_end":3879,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! [`serde`]: https://serde.rs/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3880,"byte_end":3912,"line_start":149,"line_end":149,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":3966,"byte_end":3988,"line_start":152,"line_end":152,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"value","qualname":"::value","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":1110},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1134},{"krate":0,"index":1132},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":1140},{"krate":0,"index":1142},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":77},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":104},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":124},{"krate":0,"index":156},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":244},{"krate":0,"index":250},{"krate":0,"index":258},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":273}],"decl_id":null,"docs":" Definition of a TOML value\n","sig":null,"attributes":[{"value":"! Definition of a TOML value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4372,"byte_end":4402,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1111},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4817,"byte_end":4823,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"String","qualname":"::value::Value::String","value":"Value::String(String)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML string\n","sig":null,"attributes":[{"value":"/ Represents a TOML string","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4784,"byte_end":4812,"line_start":20,"line_end":20,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1114},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4871,"byte_end":4878,"line_start":23,"line_end":23,"column_start":5,"column_end":12},"name":"Integer","qualname":"::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML integer\n","sig":null,"attributes":[{"value":"/ Represents a TOML integer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4837,"byte_end":4866,"line_start":22,"line_end":22,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1117},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4921,"byte_end":4926,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Float","qualname":"::value::Value::Float","value":"Value::Float(f64)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML float\n","sig":null,"attributes":[{"value":"/ Represents a TOML float","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4889,"byte_end":4916,"line_start":24,"line_end":24,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1120},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4971,"byte_end":4978,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::value::Value::Boolean","value":"Value::Boolean(bool)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML boolean\n","sig":null,"attributes":[{"value":"/ Represents a TOML boolean","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4937,"byte_end":4966,"line_start":26,"line_end":26,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1123},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5025,"byte_end":5033,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::value::Value::Datetime","value":"Value::Datetime(Datetime)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML datetime\n","sig":null,"attributes":[{"value":"/ Represents a TOML datetime","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4990,"byte_end":5020,"line_start":28,"line_end":28,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1126},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5081,"byte_end":5086,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Array","qualname":"::value::Value::Array","value":"Value::Array(Array)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML array\n","sig":null,"attributes":[{"value":"/ Represents a TOML array","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5049,"byte_end":5076,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1129},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5131,"byte_end":5136,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Table","qualname":"::value::Value::Table","value":"Value::Table(Table)","parent":{"krate":0,"index":1110},"children":[],"decl_id":null,"docs":" Represents a TOML table\n","sig":null,"attributes":[{"value":"/ Represents a TOML table","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5099,"byte_end":5126,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4772,"byte_end":4777,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Value","qualname":"::value::Value","value":"Value::{String, Integer, Float, Boolean, Datetime, Array, Table}","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1114},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1123},{"krate":0,"index":1126},{"krate":0,"index":1129}],"decl_id":null,"docs":" Representation of a TOML value.\n","sig":null,"attributes":[{"value":"/ Representation of a TOML value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":4692,"byte_end":4727,"line_start":17,"line_end":17,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":22},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5231,"byte_end":5236,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"name":"Array","qualname":"::value::Array","value":"Vec<Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML array, payload of the `Value::Array` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML array, payload of the `Value::Array` variant","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5148,"byte_end":5221,"line_start":36,"line_end":36,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":23},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5335,"byte_end":5340,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Table","qualname":"::value::Table","value":"BTreeMap<String, Value>","parent":null,"children":[],"decl_id":null,"docs":" Type representing a TOML table, payload of the `Value::Table` variant\n","sig":null,"attributes":[{"value":"/ Type representing a TOML table, payload of the `Value::Table` variant","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5252,"byte_end":5325,"line_start":39,"line_end":39,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5651,"byte_end":5659,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"try_from","qualname":"<Value>::try_from","value":"fn <T> (value: T) -> Result<Value, ::ser::Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert a `T` into `toml::Value` which is an enum that can represent\n any valid TOML data.","sig":null,"attributes":[{"value":"/ Convert a `T` into `toml::Value` which is an enum that can represent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5386,"byte_end":5458,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ any valid TOML data.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5463,"byte_end":5487,"line_start":44,"line_end":44,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5492,"byte_end":5495,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5500,"byte_end":5578,"line_start":46,"line_end":46,"column_start":5,"column_end":83}},{"value":"/ fail, or if `T` contains a map with non-string keys.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5583,"byte_end":5639,"line_start":47,"line_end":47,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6386,"byte_end":6394,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"try_into","qualname":"<Value>::try_into","value":"fn <'de, T> (self) -> Result<T, ::de::Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret a `toml::Value` as an instance of type `T`.","sig":null,"attributes":[{"value":"/ Interpret a `toml::Value` as an instance of type `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5790,"byte_end":5847,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5852,"byte_end":5855,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This conversion can fail if the structure of the `Value` does not match the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5860,"byte_end":5939,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/ structure expected by `T`, for example if `T` is a struct type but the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5944,"byte_end":6018,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ `Value` contains something other than a TOML table. It can also fail if the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6023,"byte_end":6102,"line_start":58,"line_end":58,"column_start":5,"column_end":84}},{"value":"/ structure is correct but `T`'s implementation of `Deserialize` decides that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6107,"byte_end":6186,"line_start":59,"line_end":59,"column_start":5,"column_end":84}},{"value":"/ something is wrong with the data, for example required struct fields are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6191,"byte_end":6267,"line_start":60,"line_end":60,"column_start":5,"column_end":81}},{"value":"/ missing from the TOML map or some number is too big to fit in the expected","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6272,"byte_end":6350,"line_start":61,"line_end":61,"column_start":5,"column_end":83}},{"value":"/ primitive type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6355,"byte_end":6374,"line_start":62,"line_end":62,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7025,"byte_end":7028,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"get","qualname":"<Value>::get","value":"fn <I> (&self, index: I) -> Option<&Value>","parent":null,"children":[],"decl_id":null,"docs":" Index into a TOML array or map. A string index can be used to access a\n value in a map, and a usize index can be used to access an element of an\n array.","sig":null,"attributes":[{"value":"/ Index into a TOML array or map. A string index can be used to access a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6534,"byte_end":6608,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ value in a map, and a usize index can be used to access an element of an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6613,"byte_end":6689,"line_start":70,"line_end":70,"column_start":5,"column_end":81}},{"value":"/ array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6694,"byte_end":6704,"line_start":71,"line_end":71,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6709,"byte_end":6712,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6717,"byte_end":6788,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6793,"byte_end":6868,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6873,"byte_end":6947,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":6952,"byte_end":7013,"line_start":76,"line_end":76,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7612,"byte_end":7619,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Value>::get_mut","value":"fn <I> (&mut self, index: I) -> Option<&mut Value>","parent":null,"children":[],"decl_id":null,"docs":" Mutably index into a TOML array or map. A string index can be used to\n access a value in a map, and a usize index can be used to access an\n element of an array.","sig":null,"attributes":[{"value":"/ Mutably index into a TOML array or map. A string index can be used to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7113,"byte_end":7186,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/ access a value in a map, and a usize index can be used to access an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7191,"byte_end":7262,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ element of an array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7267,"byte_end":7291,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7296,"byte_end":7299,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the type of `self` does not match the type of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7304,"byte_end":7375,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ index, for example if the index is a string and `self` is an array or a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7380,"byte_end":7455,"line_start":86,"line_end":86,"column_start":5,"column_end":80}},{"value":"/ number. Also returns `None` if the given key does not exist in the map","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7460,"byte_end":7534,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ or the given index is not within the bounds of the array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7539,"byte_end":7600,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7779,"byte_end":7789,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"as_integer","qualname":"<Value>::as_integer","value":"fn (&self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the integer value if it is an integer.\n","sig":null,"attributes":[{"value":"/ Extracts the integer value if it is an integer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7716,"byte_end":7767,"line_start":93,"line_end":93,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7944,"byte_end":7954,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"is_integer","qualname":"<Value>::is_integer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an integer.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an integer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":7889,"byte_end":7932,"line_start":98,"line_end":98,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8077,"byte_end":8085,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"as_float","qualname":"<Value>::as_float","value":"fn (&self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the float value if it is a float.\n","sig":null,"attributes":[{"value":"/ Extracts the float value if it is a float.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8019,"byte_end":8065,"line_start":103,"line_end":103,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8235,"byte_end":8243,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"is_float","qualname":"<Value>::is_float","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a float.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a float.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8183,"byte_end":8223,"line_start":108,"line_end":108,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8368,"byte_end":8375,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"as_bool","qualname":"<Value>::as_bool","value":"fn (&self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the boolean value if it is a boolean.\n","sig":null,"attributes":[{"value":"/ Extracts the boolean value if it is a boolean.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8306,"byte_end":8356,"line_start":113,"line_end":113,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8530,"byte_end":8537,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"is_bool","qualname":"<Value>::is_bool","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a boolean.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a boolean.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8476,"byte_end":8518,"line_start":118,"line_end":118,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8667,"byte_end":8673,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the string of this value if it is a string.\n","sig":null,"attributes":[{"value":"/ Extracts the string of this value if it is a string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8599,"byte_end":8655,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8828,"byte_end":8834,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"is_str","qualname":"<Value>::is_str","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if this value is a string.\n","sig":null,"attributes":[{"value":"/ Tests if this value is a string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8780,"byte_end":8816,"line_start":128,"line_end":128,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9135,"byte_end":9146,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"as_datetime","qualname":"<Value>::as_datetime","value":"fn (&self) -> Option<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the datetime value if it is a datetime.","sig":null,"attributes":[{"value":"/ Extracts the datetime value if it is a datetime.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8895,"byte_end":8947,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8952,"byte_end":8955,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that a parsed TOML value will only contain ISO 8601 dates. An","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":8960,"byte_end":9030,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ example date is:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9035,"byte_end":9055,"line_start":136,"line_end":136,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9060,"byte_end":9063,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ ```notrust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9068,"byte_end":9082,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/ 1979-05-27T07:32:00Z","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9087,"byte_end":9111,"line_start":139,"line_end":139,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9116,"byte_end":9123,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9312,"byte_end":9323,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"is_datetime","qualname":"<Value>::is_datetime","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a datetime.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a datetime.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9257,"byte_end":9300,"line_start":145,"line_end":145,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9448,"byte_end":9456,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Value>::as_array","value":"fn (&self) -> Option<&Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9389,"byte_end":9436,"line_start":150,"line_end":150,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9625,"byte_end":9637,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"as_array_mut","qualname":"<Value>::as_array_mut","value":"fn (&mut self) -> Option<&mut Vec<Value>>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the array value if it is an array.\n","sig":null,"attributes":[{"value":"/ Extracts the array value if it is an array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9566,"byte_end":9613,"line_start":155,"line_end":155,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9812,"byte_end":9820,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"is_array","qualname":"<Value>::is_array","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is an array.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is an array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9759,"byte_end":9800,"line_start":160,"line_end":160,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9941,"byte_end":9949,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"as_table","qualname":"<Value>::as_table","value":"fn (&self) -> Option<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":9883,"byte_end":9929,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10112,"byte_end":10124,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"as_table_mut","qualname":"<Value>::as_table_mut","value":"fn (&mut self) -> Option<&mut Table>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the table value if it is a table.\n","sig":null,"attributes":[{"value":"/ Extracts the table value if it is a table.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10054,"byte_end":10100,"line_start":170,"line_end":170,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10293,"byte_end":10301,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"is_table","qualname":"<Value>::is_table","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this value is a table.\n","sig":null,"attributes":[{"value":"/ Tests whether this value is a table.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10241,"byte_end":10281,"line_start":175,"line_end":175,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10436,"byte_end":10445,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"same_type","qualname":"<Value>::same_type","value":"fn (&self, other: &Value) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether this and another value have the same type.\n","sig":null,"attributes":[{"value":"/ Tests whether this and another value have the same type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10364,"byte_end":10424,"line_start":180,"line_end":180,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11030,"byte_end":11038,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"type_str","qualname":"<Value>::type_str","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns a human-readable representation of the type of this value.\n","sig":null,"attributes":[{"value":"/ Returns a human-readable representation of the type of this value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":10948,"byte_end":11018,"line_start":195,"line_end":195,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13395,"byte_end":13400,"line_start":285,"line_end":285,"column_start":11,"column_end":16},"name":"Index","qualname":"::value::Index","value":"Index: Sealed","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80}],"decl_id":null,"docs":" Types that can be used to index a `toml::Value`","sig":null,"attributes":[{"value":"/ Types that can be used to index a `toml::Value`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13138,"byte_end":13189,"line_start":278,"line_end":278,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13190,"byte_end":13193,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ Currently this is implemented for `usize` to index arrays and `str` to index","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13194,"byte_end":13274,"line_start":280,"line_end":280,"column_start":1,"column_end":81}},{"value":"/ tables.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13275,"byte_end":13286,"line_start":281,"line_end":281,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13287,"byte_end":13290,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and not intended for implementation outside of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13291,"byte_end":13366,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ `toml` crate.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13367,"byte_end":13384,"line_start":284,"line_end":284,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13437,"byte_end":13442,"line_start":287,"line_end":287,"column_start":8,"column_end":13},"name":"index","qualname":"::value::Index::index","value":"fn <'a> (&self, val: &'a Value) -> Option<&'a Value>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13518,"byte_end":13527,"line_start":289,"line_end":289,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::value::Index::index_mut","value":"fn <'a> (&self, val: &'a mut Value) -> Option<&'a mut Value>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13735,"byte_end":13741,"line_start":295,"line_end":295,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::value::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" An implementation detail that should not be implemented, this will change in\n the future and break code otherwise.\n","sig":null,"attributes":[{"value":"/ An implementation detail that should not be implemented, this will change in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13588,"byte_end":13668,"line_start":292,"line_end":292,"column_start":1,"column_end":81}},{"value":"/ the future and break code otherwise.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13669,"byte_end":13709,"line_start":293,"line_end":293,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":35013,"byte_end":35021,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"Datetime","qualname":"::datetime::Datetime","value":"Datetime {  }","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213}],"decl_id":null,"docs":" A parsed TOML datetime value","sig":null,"attributes":[{"value":"/ A parsed TOML datetime value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34180,"byte_end":34212,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34213,"byte_end":34216,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This structure is intended to represent the datetime primitive type that can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34217,"byte_end":34297,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ be encoded into TOML documents. This type is a parsed version that contains","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34298,"byte_end":34377,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ all metadata internally.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34378,"byte_end":34406,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34407,"byte_end":34410,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Currently this type is intentionally conservative and only supports","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34411,"byte_end":34482,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ `to_string` as an accessor. Over time though it's intended that it'll grow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34483,"byte_end":34561,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ more support!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34562,"byte_end":34579,"line_start":15,"line_end":15,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34580,"byte_end":34583,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note that if you're using `Deserialize` to deserialize a TOML document, you","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34584,"byte_end":34663,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ can use this as a placeholder for where you're expecting a datetime to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34664,"byte_end":34741,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ specified.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34742,"byte_end":34756,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34757,"byte_end":34760,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Also note though that while this type implements `Serialize` and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34761,"byte_end":34829,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ `Deserialize` it's only recommended to use this type with the TOML format,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34830,"byte_end":34908,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ otherwise encoded in other formats it may look a little odd.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":34909,"byte_end":34973,"line_start":23,"line_end":23,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1220},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":35216,"byte_end":35234,"line_start":33,"line_end":33,"column_start":12,"column_end":30},"name":"DatetimeParseError","qualname":"::datetime::DatetimeParseError","value":"DatetimeParseError {  }","parent":null,"children":[{"krate":0,"index":1221}],"decl_id":null,"docs":" Error returned from parsing a `Datetime` in the `FromStr` implementation.\n","sig":null,"attributes":[{"value":"/ Error returned from parsing a `Datetime` in the `FromStr` implementation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":35103,"byte_end":35180,"line_start":31,"line_end":31,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":358},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":1259},{"krate":0,"index":1290},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1281},{"krate":0,"index":1292},{"krate":0,"index":1299},{"krate":0,"index":1297},{"krate":0,"index":1295},{"krate":0,"index":375},{"krate":0,"index":1301},{"krate":0,"index":1307},{"krate":0,"index":1305},{"krate":0,"index":1303},{"krate":0,"index":377},{"krate":0,"index":1309},{"krate":0,"index":1316},{"krate":0,"index":1314},{"krate":0,"index":1312},{"krate":0,"index":379},{"krate":0,"index":1318},{"krate":0,"index":1335},{"krate":0,"index":1332},{"krate":0,"index":384},{"krate":0,"index":391},{"krate":0,"index":402},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":477},{"krate":0,"index":485},{"krate":0,"index":493},{"krate":0,"index":501},{"krate":0,"index":509},{"krate":0,"index":519},{"krate":0,"index":527},{"krate":0,"index":532},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":632},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":688},{"krate":0,"index":695},{"krate":0,"index":702},{"krate":0,"index":709},{"krate":0,"index":716},{"krate":0,"index":725}],"decl_id":null,"docs":" Serializing Rust structures into TOML.","sig":null,"attributes":[{"value":"! Serializing Rust structures into TOML.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":46857,"byte_end":46899,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":46900,"byte_end":46903,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains all the Serde support for serializing Rust structures","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":46904,"byte_end":46982,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"! into TOML documents (as strings). Note that some top-level functions here","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":46983,"byte_end":47060,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"! are also provided at the top of the crate.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47061,"byte_end":47107,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47108,"byte_end":47111,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Note that the TOML format has a restriction that if a table itself contains","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47112,"byte_end":47191,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! tables, all keys with non-table values must be emitted first. This is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47192,"byte_end":47265,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"! typically easy to ensure happens when you're defining a `struct` as you can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47266,"byte_end":47345,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! reorder the fields manually, but when working with maps (such as `BTreeMap`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47346,"byte_end":47425,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"! or `HashMap`) this can lead to serialization errors. In those situations you","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47426,"byte_end":47506,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"! may use the `tables_last` function in this module like so:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47507,"byte_end":47569,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47570,"byte_end":47573,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47574,"byte_end":47585,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"! # #[macro_use] extern crate serde_derive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47586,"byte_end":47631,"line_start":15,"line_end":15,"column_start":1,"column_end":46}},{"value":"! # extern crate toml;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47632,"byte_end":47656,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"! # use std::collections::HashMap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47657,"byte_end":47693,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"! #[derive(Serialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47694,"byte_end":47718,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"! struct Manifest {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47719,"byte_end":47740,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"!     package: Package,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47741,"byte_end":47766,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"!     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47767,"byte_end":47826,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"!     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47827,"byte_end":47877,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47878,"byte_end":47883,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"! # type Package = String;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47884,"byte_end":47912,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"! # type Dependency = String;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47913,"byte_end":47944,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"! # fn main() {}","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47945,"byte_end":47963,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":47964,"byte_end":47971,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":368},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48410,"byte_end":48416,"line_start":43,"line_end":43,"column_start":8,"column_end":14},"name":"to_vec","qualname":"::ser::to_vec","value":"fn <T> (value: &T) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a TOML byte vector.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a TOML byte vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48105,"byte_end":48166,"line_start":38,"line_end":38,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48167,"byte_end":48170,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48171,"byte_end":48247,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48248,"byte_end":48323,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48324,"byte_end":48402,"line_start":42,"line_end":42,"column_start":1,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":371},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49558,"byte_end":49567,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"to_string","qualname":"::ser::to_string","value":"fn <T> (value: &T) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a String of TOML.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48544,"byte_end":48603,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48604,"byte_end":48607,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Serialization can fail if `T`'s implementation of `Serialize` decides to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48608,"byte_end":48684,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ fail, if `T` contains a map with non-string keys, or if `T` attempts to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48685,"byte_end":48760,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/ serialize an unsupported datatype such as an enum, tuple, or tuple struct.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48761,"byte_end":48839,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48840,"byte_end":48843,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48844,"byte_end":48858,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48859,"byte_end":48862,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48863,"byte_end":48870,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48871,"byte_end":48887,"line_start":58,"line_end":58,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48888,"byte_end":48918,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48919,"byte_end":48941,"line_start":60,"line_end":60,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48942,"byte_end":48945,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48946,"byte_end":48970,"line_start":62,"line_end":62,"column_start":1,"column_end":25}},{"value":"/ struct Config {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48971,"byte_end":48990,"line_start":63,"line_end":63,"column_start":1,"column_end":20}},{"value":"/     database: Database,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":48991,"byte_end":49018,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49019,"byte_end":49024,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49025,"byte_end":49028,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49029,"byte_end":49053,"line_start":67,"line_end":67,"column_start":1,"column_end":25}},{"value":"/ struct Database {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49054,"byte_end":49075,"line_start":68,"line_end":68,"column_start":1,"column_end":22}},{"value":"/     ip: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49076,"byte_end":49095,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/     port: Vec<u16>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49096,"byte_end":49119,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/     connection_max: u32,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49120,"byte_end":49148,"line_start":71,"line_end":71,"column_start":1,"column_end":29}},{"value":"/     enabled: bool,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49149,"byte_end":49171,"line_start":72,"line_end":72,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49172,"byte_end":49177,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49178,"byte_end":49181,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49182,"byte_end":49197,"line_start":75,"line_end":75,"column_start":1,"column_end":16}},{"value":"/     let config = Config {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49198,"byte_end":49227,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/         database: Database {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49228,"byte_end":49260,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/             ip: \"192.168.1.1\".to_string(),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49261,"byte_end":49307,"line_start":78,"line_end":78,"column_start":1,"column_end":47}},{"value":"/             port: vec![8001, 8002, 8003],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49308,"byte_end":49353,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/             connection_max: 5000,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49354,"byte_end":49391,"line_start":80,"line_end":80,"column_start":1,"column_end":38}},{"value":"/             enabled: false,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49392,"byte_end":49423,"line_start":81,"line_end":81,"column_start":1,"column_end":32}},{"value":"/         },","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49424,"byte_end":49438,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/     };","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49439,"byte_end":49449,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49450,"byte_end":49453,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/     let toml = toml::to_string(&config).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49454,"byte_end":49507,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/     println!(\"{}\", toml)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49508,"byte_end":49536,"line_start":86,"line_end":86,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49537,"byte_end":49542,"line_start":87,"line_end":87,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49543,"byte_end":49550,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49978,"byte_end":49994,"line_start":101,"line_end":101,"column_start":8,"column_end":24},"name":"to_string_pretty","qualname":"::ser::to_string_pretty","value":"fn <T> (value: &T) -> Result<String, Error>","parent":null,"children":[],"decl_id":null,"docs":" Serialize the given data structure as a \"pretty\" String of TOML.","sig":null,"attributes":[{"value":"/ Serialize the given data structure as a \"pretty\" String of TOML.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49761,"byte_end":49829,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49830,"byte_end":49833,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This is identical to `to_string` except the output string has a more","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49834,"byte_end":49906,"line_start":99,"line_end":99,"column_start":1,"column_end":73}},{"value":"/ \"pretty\" output. See `Serializer::pretty` for more details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":49907,"byte_end":49970,"line_start":100,"line_end":100,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1260},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50528,"byte_end":50543,"line_start":117,"line_end":117,"column_start":5,"column_end":20},"name":"UnsupportedType","qualname":"::ser::Error::UnsupportedType","value":"Error::UnsupportedType","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Indicates that a Rust type was requested to be serialized but it was not\n supported.","sig":null,"attributes":[{"value":"/ Indicates that a Rust type was requested to be serialized but it was not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50302,"byte_end":50378,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ supported.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50383,"byte_end":50397,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50402,"byte_end":50405,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Currently the TOML format does not support serializing types such as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50410,"byte_end":50482,"line_start":115,"line_end":115,"column_start":5,"column_end":77}},{"value":"/ enums, tuples and tuple structs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50487,"byte_end":50523,"line_start":116,"line_end":116,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1262},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50681,"byte_end":50693,"line_start":121,"line_end":121,"column_start":5,"column_end":17},"name":"KeyNotString","qualname":"::ser::Error::KeyNotString","value":"Error::KeyNotString","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" The key of all TOML maps must be strings, but serialization was\n attempted where the key of a map was not a string.\n","sig":null,"attributes":[{"value":"/ The key of all TOML maps must be strings, but serialization was","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50550,"byte_end":50617,"line_start":119,"line_end":119,"column_start":5,"column_end":72}},{"value":"/ attempted where the key of a map was not a string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50622,"byte_end":50676,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1264},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50792,"byte_end":50802,"line_start":125,"line_end":125,"column_start":5,"column_end":15},"name":"KeyNewline","qualname":"::ser::Error::KeyNewline","value":"Error::KeyNewline","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" An error that we never omit but keep for backwards compatibility\n","sig":null,"attributes":[{"value":"/ An error that we never omit but keep for backwards compatibility","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50700,"byte_end":50768,"line_start":123,"line_end":123,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1266},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50908,"byte_end":50922,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"ArrayMixedType","qualname":"::ser::Error::ArrayMixedType","value":"Error::ArrayMixedType","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" Arrays in TOML must have a homogenous type, but a heterogeneous array\n was emitted.\n","sig":null,"attributes":[{"value":"/ Arrays in TOML must have a homogenous type, but a heterogeneous array","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50809,"byte_end":50882,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ was emitted.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50887,"byte_end":50903,"line_start":128,"line_end":128,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1268},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51099,"byte_end":51114,"line_start":134,"line_end":134,"column_start":5,"column_end":20},"name":"ValueAfterTable","qualname":"::ser::Error::ValueAfterTable","value":"Error::ValueAfterTable","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" All values in a TOML table must be emitted before further tables are\n emitted. If a value is emitted *after* a table then this error is\n generated.\n","sig":null,"attributes":[{"value":"/ All values in a TOML table must be emitted before further tables are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50929,"byte_end":51001,"line_start":131,"line_end":131,"column_start":5,"column_end":77}},{"value":"/ emitted. If a value is emitted *after* a table then this error is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51006,"byte_end":51075,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ generated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51080,"byte_end":51094,"line_start":133,"line_end":133,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1270},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51160,"byte_end":51171,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"DateInvalid","qualname":"::ser::Error::DateInvalid","value":"Error::DateInvalid","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" A serialized date was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized date was invalid.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51121,"byte_end":51155,"line_start":136,"line_end":136,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1272},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51219,"byte_end":51232,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"NumberInvalid","qualname":"::ser::Error::NumberInvalid","value":"Error::NumberInvalid","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" A serialized number was invalid.\n","sig":null,"attributes":[{"value":"/ A serialized number was invalid.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51178,"byte_end":51214,"line_start":139,"line_end":139,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1274},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51308,"byte_end":51323,"line_start":143,"line_end":143,"column_start":5,"column_end":20},"name":"UnsupportedNone","qualname":"::ser::Error::UnsupportedNone","value":"Error::UnsupportedNone","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" None was attempted to be serialized, but it's not supported.\n","sig":null,"attributes":[{"value":"/ None was attempted to be serialized, but it's not supported.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51239,"byte_end":51303,"line_start":142,"line_end":142,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1276},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51422,"byte_end":51428,"line_start":147,"line_end":147,"column_start":5,"column_end":11},"name":"Custom","qualname":"::ser::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":" A custom error which could be generated when serializing a particular\n type.\n","sig":null,"attributes":[{"value":"/ A custom error which could be generated when serializing a particular","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51330,"byte_end":51403,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51408,"byte_end":51417,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51462,"byte_end":51477,"line_start":150,"line_end":150,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ser::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1259},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50290,"byte_end":50295,"line_start":111,"line_end":111,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::Error","value":"Error::{UnsupportedType, KeyNotString, KeyNewline, ArrayMixedType, ValueAfterTable, DateInvalid, NumberInvalid, UnsupportedNone, Custom, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1270},{"krate":0,"index":1272},{"krate":0,"index":1274},{"krate":0,"index":1276},{"krate":0,"index":1279}],"decl_id":null,"docs":" Errors that can occur when serializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when serializing a type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":50191,"byte_end":50241,"line_start":109,"line_end":109,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52765,"byte_end":52775,"line_start":203,"line_end":203,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::ser::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":" Serialization implementation for TOML.","sig":null,"attributes":[{"value":"/ Serialization implementation for TOML.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52292,"byte_end":52334,"line_start":194,"line_end":194,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52335,"byte_end":52338,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ This structure implements serialization support for TOML to serialize an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52339,"byte_end":52415,"line_start":196,"line_end":196,"column_start":1,"column_end":77}},{"value":"/ arbitrary type to TOML. Note that the TOML format does not support all","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52416,"byte_end":52490,"line_start":197,"line_end":197,"column_start":1,"column_end":75}},{"value":"/ datatypes in Rust, such as enums, tuples, and tuple structs. These types","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52491,"byte_end":52567,"line_start":198,"line_end":198,"column_start":1,"column_end":77}},{"value":"/ will generate an error when serialized.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52568,"byte_end":52611,"line_start":199,"line_end":199,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52612,"byte_end":52615,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Currently a serializer always writes its output to an in-memory `String`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52616,"byte_end":52693,"line_start":201,"line_end":201,"column_start":1,"column_end":78}},{"value":"/ which is passed in when creating the serializer itself.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":52694,"byte_end":52753,"line_start":202,"line_end":202,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53237,"byte_end":53249,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"SerializeSeq","qualname":"::ser::SerializeSeq","value":"SerializeSeq {  }","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":394},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53443,"byte_end":53451,"line_start":236,"line_end":236,"column_start":5,"column_end":13},"name":"Datetime","qualname":"::ser::SerializeTable::Datetime","value":"SerializeTable::Datetime(&'b mut Serializer<'a>)","parent":{"krate":0,"index":391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":397},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53481,"byte_end":53486,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Table","qualname":"::ser::SerializeTable::Table","value":"SerializeTable::Table { ser, key, first, table_emitted }","parent":{"krate":0,"index":391},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":391},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53410,"byte_end":53424,"line_start":235,"line_end":235,"column_start":10,"column_end":24},"name":"SerializeTable","qualname":"::ser::SerializeTable","value":"SerializeTable::{Datetime, Table}","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":397}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53858,"byte_end":53861,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"fn (dst: &'a mut String) -> Serializer<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new serializer which will emit TOML into the buffer provided.","sig":null,"attributes":[{"value":"/ Creates a new serializer which will emit TOML into the buffer provided.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53648,"byte_end":53723,"line_start":246,"line_end":246,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53728,"byte_end":53731,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The serializer can then be used to serialize a type after which the data","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53736,"byte_end":53812,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ will be present in `dst`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53817,"byte_end":53846,"line_start":249,"line_end":249,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54425,"byte_end":54431,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"pretty","qualname":"<Serializer>::pretty","value":"fn (dst: &'a mut String) -> Serializer<'a>","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a \"pretty\" formatter","sig":null,"attributes":[{"value":"/ Instantiate a \"pretty\" formatter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54050,"byte_end":54086,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54091,"byte_end":54094,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ By default this will use:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54099,"byte_end":54128,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54133,"byte_end":54136,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ - pretty strings: strings with newlines will use the `'''` syntax. See","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54141,"byte_end":54215,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/   `Serializer::pretty_string`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54220,"byte_end":54253,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ - pretty arrays: each item in arrays will be on a newline, have an indentation of 4 and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54258,"byte_end":54349,"line_start":264,"line_end":264,"column_start":5,"column_end":96}},{"value":"/   have a trailing comma. See `Serializer::pretty_array`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54354,"byte_end":54413,"line_start":265,"line_end":265,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55265,"byte_end":55278,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"pretty_string","qualname":"<Serializer>::pretty_string","value":"fn (&mut self, value: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable pretty strings","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54735,"byte_end":54771,"line_start":277,"line_end":277,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54776,"byte_end":54779,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54784,"byte_end":54859,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54864,"byte_end":54934,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54939,"byte_end":54942,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54947,"byte_end":54961,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54966,"byte_end":54969,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54974,"byte_end":54989,"line_start":284,"line_end":284,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":54994,"byte_end":54997,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55002,"byte_end":55020,"line_start":286,"line_end":286,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55025,"byte_end":55051,"line_start":287,"line_end":287,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55056,"byte_end":55081,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55086,"byte_end":55093,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55098,"byte_end":55101,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55106,"byte_end":55124,"line_start":291,"line_end":291,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55129,"byte_end":55132,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55137,"byte_end":55155,"line_start":293,"line_end":293,"column_start":5,"column_end":23}},{"value":"/ single = 'no newlines'","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55160,"byte_end":55186,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/ text = '''","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55191,"byte_end":55205,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55210,"byte_end":55217,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55222,"byte_end":55229,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ '''","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55234,"byte_end":55241,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55246,"byte_end":55253,"line_start":299,"line_end":299,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56174,"byte_end":56195,"line_start":335,"line_end":335,"column_start":12,"column_end":33},"name":"pretty_string_literal","qualname":"<Serializer>::pretty_string_literal","value":"fn (&mut self, value: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable Literal strings for pretty strings","sig":null,"attributes":[{"value":"/ Enable or Disable Literal strings for pretty strings","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55499,"byte_end":55555,"line_start":309,"line_end":309,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55560,"byte_end":55563,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ If enabled, literal strings will be used when possible and strings with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55568,"byte_end":55643,"line_start":311,"line_end":311,"column_start":5,"column_end":80}},{"value":"/ one or more newlines will use triple quotes (i.e.: `'''` or `\"\"\"`)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55648,"byte_end":55718,"line_start":312,"line_end":312,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55723,"byte_end":55726,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ If disabled, literal strings will NEVER be used and strings with one or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55731,"byte_end":55806,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ more newlines will use `\"\"\"`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55811,"byte_end":55843,"line_start":315,"line_end":315,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55848,"byte_end":55851,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55856,"byte_end":55870,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55875,"byte_end":55878,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55883,"byte_end":55898,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55903,"byte_end":55906,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55911,"byte_end":55929,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55934,"byte_end":55960,"line_start":322,"line_end":322,"column_start":5,"column_end":31}},{"value":"/ text = \"\\nfoo\\nbar\\n\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55965,"byte_end":55990,"line_start":323,"line_end":323,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":55995,"byte_end":56002,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56007,"byte_end":56010,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56015,"byte_end":56033,"line_start":326,"line_end":326,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56038,"byte_end":56041,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56046,"byte_end":56064,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ single = \"no newlines\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56069,"byte_end":56095,"line_start":329,"line_end":329,"column_start":5,"column_end":31}},{"value":"/ text = \"\"\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56100,"byte_end":56114,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/ foo","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56119,"byte_end":56126,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ bar","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56131,"byte_end":56138,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ \"\"\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56143,"byte_end":56150,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56155,"byte_end":56162,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57383,"byte_end":57395,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"pretty_array","qualname":"<Serializer>::pretty_array","value":"fn (&mut self, value: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enable or Disable pretty arrays","sig":null,"attributes":[{"value":"/ Enable or Disable pretty arrays","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56684,"byte_end":56719,"line_start":352,"line_end":352,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56724,"byte_end":56727,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ If enabled, arrays will always have each item on their own line.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56732,"byte_end":56800,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56805,"byte_end":56808,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ Some specific features can be controlled via other builder methods:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56813,"byte_end":56884,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56889,"byte_end":56892,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ - `Serializer::pretty_array_indent`: set the indent to a value other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56897,"byte_end":56969,"line_start":358,"line_end":358,"column_start":5,"column_end":77}},{"value":"/   than 4.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56974,"byte_end":56987,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/ - `Serializer::pretty_array_trailing_comma`: enable/disable the trailing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":56992,"byte_end":57068,"line_start":360,"line_end":360,"column_start":5,"column_end":81}},{"value":"/   comma on the last item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57073,"byte_end":57102,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57107,"byte_end":57110,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57115,"byte_end":57129,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57134,"byte_end":57137,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Instead of:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57142,"byte_end":57157,"line_start":365,"line_end":365,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57162,"byte_end":57165,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57170,"byte_end":57188,"line_start":367,"line_end":367,"column_start":5,"column_end":23}},{"value":"/ array = [\"foo\", \"bar\"]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57193,"byte_end":57219,"line_start":368,"line_end":368,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57224,"byte_end":57231,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57236,"byte_end":57239,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ You will have:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57244,"byte_end":57262,"line_start":371,"line_end":371,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57267,"byte_end":57270,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```toml,ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57275,"byte_end":57293,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/ array = [","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57298,"byte_end":57311,"line_start":374,"line_end":374,"column_start":5,"column_end":18}},{"value":"/     \"foo\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57316,"byte_end":57330,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/     \"bar\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57335,"byte_end":57349,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/ ]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57354,"byte_end":57359,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57364,"byte_end":57371,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57727,"byte_end":57746,"line_start":391,"line_end":391,"column_start":12,"column_end":31},"name":"pretty_array_indent","qualname":"<Serializer>::pretty_array_indent","value":"fn (&mut self, value: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the indent for pretty arrays","sig":null,"attributes":[{"value":"/ Set the indent for pretty arrays","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57614,"byte_end":57650,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57655,"byte_end":57658,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":57663,"byte_end":57715,"line_start":390,"line_end":390,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":58379,"byte_end":58406,"line_start":411,"line_end":411,"column_start":12,"column_end":39},"name":"pretty_array_trailing_comma","qualname":"<Serializer>::pretty_array_trailing_comma","value":"fn (&mut self, value: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify whether to use a trailing comma when serializing pretty arrays","sig":null,"attributes":[{"value":"/ Specify whether to use a trailing comma when serializing pretty arrays","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":58228,"byte_end":58302,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":58307,"byte_end":58310,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ See `Serializer::pretty_array` for more details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":58315,"byte_end":58367,"line_start":410,"line_end":410,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":632},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95859,"byte_end":95870,"line_start":1552,"line_end":1552,"column_start":8,"column_end":19},"name":"tables_last","qualname":"::ser::tables_last","value":"fn <'a, I, K, V, S> (data: &'a I, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to serialize items in a map in an order valid with\n TOML.","sig":null,"attributes":[{"value":"/ Convenience function to serialize items in a map in an order valid with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95167,"byte_end":95242,"line_start":1531,"line_end":1531,"column_start":1,"column_end":76}},{"value":"/ TOML.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95243,"byte_end":95252,"line_start":1532,"line_end":1532,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95253,"byte_end":95256,"line_start":1533,"line_end":1533,"column_start":1,"column_end":4}},{"value":"/ TOML carries the restriction that keys in a table must be serialized last if","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95257,"byte_end":95337,"line_start":1534,"line_end":1534,"column_start":1,"column_end":81}},{"value":"/ their value is a table itself. This isn't always easy to guarantee, so this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95338,"byte_end":95417,"line_start":1535,"line_end":1535,"column_start":1,"column_end":80}},{"value":"/ helper can be used like so:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95418,"byte_end":95449,"line_start":1536,"line_end":1536,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95450,"byte_end":95453,"line_start":1537,"line_end":1537,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95454,"byte_end":95465,"line_start":1538,"line_end":1538,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate serde_derive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95466,"byte_end":95511,"line_start":1539,"line_end":1539,"column_start":1,"column_end":46}},{"value":"/ # extern crate toml;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95512,"byte_end":95536,"line_start":1540,"line_end":1540,"column_start":1,"column_end":25}},{"value":"/ # use std::collections::HashMap;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95537,"byte_end":95573,"line_start":1541,"line_end":1541,"column_start":1,"column_end":37}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95574,"byte_end":95598,"line_start":1542,"line_end":1542,"column_start":1,"column_end":25}},{"value":"/ struct Manifest {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95599,"byte_end":95620,"line_start":1543,"line_end":1543,"column_start":1,"column_end":22}},{"value":"/     package: Package,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95621,"byte_end":95646,"line_start":1544,"line_end":1544,"column_start":1,"column_end":26}},{"value":"/     #[serde(serialize_with = \"toml::ser::tables_last\")]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95647,"byte_end":95706,"line_start":1545,"line_end":1545,"column_start":1,"column_end":60}},{"value":"/     dependencies: HashMap<String, Dependency>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95707,"byte_end":95757,"line_start":1546,"line_end":1546,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95758,"byte_end":95763,"line_start":1547,"line_end":1547,"column_start":1,"column_end":6}},{"value":"/ # type Package = String;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95764,"byte_end":95792,"line_start":1548,"line_end":1548,"column_start":1,"column_end":29}},{"value":"/ # type Dependency = String;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95793,"byte_end":95824,"line_start":1549,"line_end":1549,"column_start":1,"column_end":32}},{"value":"/ # fn main() {}","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95825,"byte_end":95843,"line_start":1550,"line_end":1550,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95844,"byte_end":95851,"line_start":1551,"line_end":1551,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":737},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"de","qualname":"::de","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","parent":null,"children":[{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":1348},{"krate":0,"index":1352},{"krate":0,"index":1350},{"krate":0,"index":1354},{"krate":0,"index":1362},{"krate":0,"index":1360},{"krate":0,"index":1364},{"krate":0,"index":1416},{"krate":0,"index":1414},{"krate":0,"index":760},{"krate":0,"index":765},{"krate":0,"index":774},{"krate":0,"index":780},{"krate":0,"index":792},{"krate":0,"index":803},{"krate":0,"index":811},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":851},{"krate":0,"index":855},{"krate":0,"index":860},{"krate":0,"index":867},{"krate":0,"index":871},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":885},{"krate":0,"index":889},{"krate":0,"index":896},{"krate":0,"index":956},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":979},{"krate":0,"index":985},{"krate":0,"index":1684},{"krate":0,"index":1689},{"krate":0,"index":1692},{"krate":0,"index":1718},{"krate":0,"index":990}],"decl_id":null,"docs":" Deserializing TOML into Rust structures.","sig":null,"attributes":[{"value":"! Deserializing TOML into Rust structures.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103101,"byte_end":103145,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103146,"byte_end":103149,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains all the Serde support for deserializing TOML documents","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103150,"byte_end":103229,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"! into Rust structures. Note that some top-level functions here are also","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103230,"byte_end":103304,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! provided at the top of the crate.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103305,"byte_end":103342,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":754},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103804,"byte_end":103814,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::de::from_slice","value":"fn <'de, T> (bytes: &'de [u8]) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a byte slice into a type.","sig":null,"attributes":[{"value":"/ Deserializes a byte slice into a type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103622,"byte_end":103664,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103665,"byte_end":103668,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `bytes` as UTF-8 data and then","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103669,"byte_end":103743,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ deserialize `T` from the TOML document provided.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":103744,"byte_end":103796,"line_start":25,"line_end":25,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":757},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104756,"byte_end":104764,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"from_str","qualname":"::de::from_str","value":"fn <'de, T> (s: &'de str) -> Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a string into a type.","sig":null,"attributes":[{"value":"/ Deserializes a string into a type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104024,"byte_end":104062,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104063,"byte_end":104066,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This function will attempt to interpret `s` as a TOML document and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104067,"byte_end":104137,"line_start":37,"line_end":37,"column_start":1,"column_end":71}},{"value":"/ deserialize `T` from the document.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104138,"byte_end":104176,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104177,"byte_end":104180,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104181,"byte_end":104195,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104196,"byte_end":104199,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104200,"byte_end":104207,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ #[macro_use]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104208,"byte_end":104224,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/ extern crate serde_derive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104225,"byte_end":104255,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ extern crate toml;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104256,"byte_end":104278,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104279,"byte_end":104282,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104283,"byte_end":104309,"line_start":47,"line_end":47,"column_start":1,"column_end":27}},{"value":"/ struct Config {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104310,"byte_end":104329,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/     title: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104330,"byte_end":104352,"line_start":49,"line_end":49,"column_start":1,"column_end":23}},{"value":"/     owner: Owner,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104353,"byte_end":104374,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104375,"byte_end":104380,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104381,"byte_end":104384,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104385,"byte_end":104411,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/ struct Owner {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104412,"byte_end":104430,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/     name: String,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104431,"byte_end":104452,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104453,"byte_end":104458,"line_start":56,"line_end":56,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104459,"byte_end":104462,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104463,"byte_end":104478,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/     let config: Config = toml::from_str(r#\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104479,"byte_end":104526,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/         title = 'TOML Example'","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104527,"byte_end":104561,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104562,"byte_end":104565,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/         [owner]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104566,"byte_end":104585,"line_start":62,"line_end":62,"column_start":1,"column_end":20}},{"value":"/         name = 'Lisa'","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104586,"byte_end":104611,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/     \"#).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104612,"byte_end":104633,"line_start":64,"line_end":64,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104634,"byte_end":104637,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(config.title, \"TOML Example\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104638,"byte_end":104687,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(config.owner.name, \"Lisa\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104688,"byte_end":104734,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104735,"byte_end":104740,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104741,"byte_end":104748,"line_start":69,"line_end":69,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1348},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":105037,"byte_end":105042,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"Error","qualname":"::de::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":1349}],"decl_id":null,"docs":" Errors that can occur when deserializing a type.\n","sig":null,"attributes":[{"value":"/ Errors that can occur when deserializing a type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":104949,"byte_end":105001,"line_start":79,"line_end":79,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":760},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":107340,"byte_end":107352,"line_start":173,"line_end":173,"column_start":12,"column_end":24},"name":"Deserializer","qualname":"::de::Deserializer","value":"Deserializer {  }","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764}],"decl_id":null,"docs":" Deserialization implementation for TOML.\n","sig":null,"attributes":[{"value":"/ Deserialization implementation for TOML.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":107284,"byte_end":107328,"line_start":172,"line_end":172,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":780},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":110470,"byte_end":110480,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"MapVisitor","qualname":"::de::MapVisitor","value":"MapVisitor {  }","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124611,"byte_end":124614,"line_start":731,"line_end":731,"column_start":12,"column_end":15},"name":"new","qualname":"<Deserializer>::new","value":"fn (input: &'a str) -> Deserializer<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new deserializer which will be deserializing the string\n provided.\n","sig":null,"attributes":[{"value":"/ Creates a new deserializer which will be deserializing the string","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124512,"byte_end":124581,"line_start":729,"line_end":729,"column_start":5,"column_end":74}},{"value":"/ provided.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124586,"byte_end":124599,"line_start":730,"line_end":730,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125073,"byte_end":125076,"line_start":743,"line_end":743,"column_start":12,"column_end":15},"name":"end","qualname":"<Deserializer>::end","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" The `Deserializer::end` method should be called after a value has been\n fully deserialized.  This allows the `Deserializer` to validate that the\n input stream is at the end or that it only has trailing\n whitespace/comments.\n","sig":null,"attributes":[{"value":"/ The `Deserializer::end` method should be called after a value has been","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124813,"byte_end":124887,"line_start":739,"line_end":739,"column_start":5,"column_end":79}},{"value":"/ fully deserialized.  This allows the `Deserializer` to validate that the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124892,"byte_end":124968,"line_start":740,"line_end":740,"column_start":5,"column_end":81}},{"value":"/ input stream is at the end or that it only has trailing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124973,"byte_end":125032,"line_start":741,"line_end":741,"column_start":5,"column_end":64}},{"value":"/ whitespace/comments.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125037,"byte_end":125061,"line_start":742,"line_end":742,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125490,"byte_end":125521,"line_start":753,"line_end":753,"column_start":12,"column_end":43},"name":"set_require_newline_after_table","qualname":"<Deserializer>::set_require_newline_after_table","value":"fn (&mut self, require: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Historical versions of toml-rs accidentally allowed a newline after a\n table definition, but the TOML spec requires a newline after a table\n definition header.","sig":null,"attributes":[{"value":"/ Historical versions of toml-rs accidentally allowed a newline after a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125137,"byte_end":125210,"line_start":747,"line_end":747,"column_start":5,"column_end":78}},{"value":"/ table definition, but the TOML spec requires a newline after a table","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125215,"byte_end":125287,"line_start":748,"line_end":748,"column_start":5,"column_end":77}},{"value":"/ definition header.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125292,"byte_end":125314,"line_start":749,"line_end":749,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125319,"byte_end":125322,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This option can be set to `false` (the default is `true`) to emulate","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125327,"byte_end":125399,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ this behavior for backwards compatibility with older toml-rs versions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":125404,"byte_end":125478,"line_start":752,"line_end":752,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":145580,"byte_end":145588,"line_start":1313,"line_end":1313,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Error>::line_col","value":"fn (&self) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Produces a (line, column) pair of the position of the error if available","sig":null,"attributes":[{"value":"/ Produces a (line, column) pair of the position of the error if available","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":145451,"byte_end":145527,"line_start":1310,"line_end":1310,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":145532,"byte_end":145535,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ All indexes are 0-based.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":145540,"byte_end":145568,"line_start":1312,"line_end":1312,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":146405,"byte_end":146420,"line_start":1344,"line_end":1344,"column_start":12,"column_end":27},"name":"add_key_context","qualname":"<Error>::add_key_context","value":"fn (&mut self, key: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Do not call this method, it may be removed at any time, it's just an\n internal implementation detail.\n","sig":null,"attributes":[{"value":"/ Do not call this method, it may be removed at any time, it's just an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":146262,"byte_end":146334,"line_start":1341,"line_end":1341,"column_start":5,"column_end":77}},{"value":"/ internal implementation detail.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":146339,"byte_end":146374,"line_start":1342,"line_end":1342,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1721},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":153443,"byte_end":153447,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Span","qualname":"::tokens::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723}],"decl_id":null,"docs":" A span, designating a range of bytes where a token is located.\n","sig":null,"attributes":[{"value":"/ A span, designating a range of bytes where a token is located.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":153320,"byte_end":153386,"line_start":9,"line_end":9,"column_start":1,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":1722},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":153490,"byte_end":153495,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::tokens::Span::start","value":"usize","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":" The start of the range.\n","sig":null,"attributes":[{"value":"/ The start of the range.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":153454,"byte_end":153481,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1723},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":153554,"byte_end":153557,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"name":"end","qualname":"::tokens::Span::end","value":"usize","parent":{"krate":0,"index":1721},"children":[],"decl_id":null,"docs":" The end of the range (exclusive).\n","sig":null,"attributes":[{"value":"/ The end of the range (exclusive).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":153508,"byte_end":153545,"line_start":14,"line_end":14,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":1056},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/macros.rs","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1066},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/macros.rs","byte_start":194025,"byte_end":194036,"line_start":416,"line_end":416,"column_start":8,"column_end":19},"name":"insert_toml","qualname":"::macros::insert_toml","value":"fn (root: &mut Value, path: &[&str], value: Value) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1067},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/macros.rs","byte_start":194236,"byte_end":194245,"line_start":422,"line_end":422,"column_start":8,"column_end":17},"name":"push_toml","qualname":"::macros::push_toml","value":"fn (root: &mut Value, path: &[&str]) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1856},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196465,"byte_end":196472,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Spanned","qualname":"::spanned::Spanned","value":"Spanned {  }","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860}],"decl_id":null,"docs":" A spanned value, indicating the range at which it is defined in the source.\n","sig":null,"attributes":[{"value":"/ A spanned value, indicating the range at which it is defined in the source.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196357,"byte_end":196436,"line_start":37,"line_end":37,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196709,"byte_end":196714,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"start","qualname":"<Spanned<T>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the start of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the start of the span of the contained value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196641,"byte_end":196697,"line_start":49,"line_end":49,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196829,"byte_end":196832,"line_start":55,"line_end":55,"column_start":12,"column_end":15},"name":"end","qualname":"<Spanned<T>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Access the end of the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Access the end of the span of the contained value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196763,"byte_end":196817,"line_start":54,"line_end":54,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196931,"byte_end":196935,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"span","qualname":"<Spanned<T>>::span","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the span of the contained value.\n","sig":null,"attributes":[{"value":"/ Get the span of the contained value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196879,"byte_end":196919,"line_start":59,"line_end":59,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197080,"byte_end":197090,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Spanned<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the spanned value and returns the contained value.\n","sig":null,"attributes":[{"value":"/ Consumes the spanned value and returns the contained value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197005,"byte_end":197068,"line_start":64,"line_end":64,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197193,"byte_end":197200,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Spanned<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197134,"byte_end":197181,"line_start":69,"line_end":69,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197314,"byte_end":197321,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Spanned<T>>::get_mut","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197247,"byte_end":197302,"line_start":74,"line_end":74,"column_start":5,"column_end":60}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5374,"byte_end":5379,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11434,"byte_end":11439,"line_start":209,"line_end":209,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11613,"byte_end":11618,"line_start":217,"line_end":217,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11780,"byte_end":11785,"line_start":223,"line_end":223,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11925,"byte_end":11930,"line_start":230,"line_end":230,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":12107,"byte_end":12112,"line_start":236,"line_end":236,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":12379,"byte_end":12384,"line_start":246,"line_end":246,"column_start":75,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13809,"byte_end":13815,"line_start":298,"line_end":298,"column_start":17,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":14662,"byte_end":14668,"line_start":333,"line_end":333,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":15174,"byte_end":15179,"line_start":353,"line_end":353,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":15351,"byte_end":15356,"line_start":359,"line_end":359,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":15497,"byte_end":15502,"line_start":366,"line_end":366,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":17054,"byte_end":17059,"line_start":405,"line_end":405,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":17243,"byte_end":17255,"line_start":411,"line_end":411,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":20493,"byte_end":20498,"line_start":502,"line_end":502,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192},{"krate":0,"index":1194},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":23114,"byte_end":23129,"line_start":584,"line_end":584,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":23283,"byte_end":23298,"line_start":592,"line_end":592,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":23962,"byte_end":23977,"line_start":618,"line_end":618,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":24169,"byte_end":24184,"line_start":627,"line_end":627,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":25283,"byte_end":25288,"line_start":663,"line_end":663,"column_start":54,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":25430,"byte_end":25440,"line_start":673,"line_end":673,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":31345,"byte_end":31357,"line_start":856,"line_end":856,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":31728,"byte_end":31740,"line_start":872,"line_end":872,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":32681,"byte_end":32693,"line_start":904,"line_end":904,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":33203,"byte_end":33218,"line_start":924,"line_end":924,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":33459,"byte_end":33474,"line_start":934,"line_end":934,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36017,"byte_end":36025,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36153,"byte_end":36161,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36629,"byte_end":36633,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36798,"byte_end":36802,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":37145,"byte_end":37151,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":37435,"byte_end":37443,"line_start":119,"line_end":119,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":43481,"byte_end":43489,"line_start":309,"line_end":309,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":43815,"byte_end":43823,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":44012,"byte_end":44027,"line_start":327,"line_end":327,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":44860,"byte_end":44871,"line_start":354,"line_end":354,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":45060,"byte_end":45072,"line_start":360,"line_end":360,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":45765,"byte_end":45783,"line_start":387,"line_end":387,"column_start":36,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":45974,"byte_end":45981,"line_start":393,"line_end":393,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":46603,"byte_end":46621,"line_start":414,"line_end":414,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":46756,"byte_end":46774,"line_start":420,"line_end":420,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51651,"byte_end":51664,"line_start":161,"line_end":161,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51974,"byte_end":51988,"line_start":178,"line_end":178,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53627,"byte_end":53637,"line_start":245,"line_end":245,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":419},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":76829,"byte_end":76841,"line_start":952,"line_end":952,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":78357,"byte_end":78369,"line_start":1002,"line_end":1002,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":78736,"byte_end":78748,"line_start":1017,"line_end":1017,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":79112,"byte_end":79124,"line_start":1032,"line_end":1032,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":79480,"byte_end":79494,"line_start":1047,"line_end":1047,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":81449,"byte_end":81463,"line_start":1110,"line_end":1110,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":83254,"byte_end":83268,"line_start":1168,"line_end":1168,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":88328,"byte_end":88343,"line_start":1328,"line_end":1328,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":93479,"byte_end":93484,"line_start":1485,"line_end":1485,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":94278,"byte_end":94283,"line_start":1502,"line_end":1502,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95005,"byte_end":95010,"line_start":1519,"line_end":1519,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":96724,"byte_end":96734,"line_start":1582,"line_end":1582,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":96852,"byte_end":96862,"line_start":1588,"line_end":1588,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":100714,"byte_end":100724,"line_start":1712,"line_end":1712,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":101083,"byte_end":101093,"line_start":1726,"line_end":1726,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":101459,"byte_end":101469,"line_start":1740,"line_end":1740,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":101830,"byte_end":101840,"line_start":1754,"line_end":1754,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":102193,"byte_end":102203,"line_start":1768,"line_end":1768,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":102726,"byte_end":102736,"line_start":1787,"line_end":1787,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":110804,"byte_end":110814,"line_start":287,"line_end":287,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":114519,"byte_end":114529,"line_start":391,"line_end":391,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":115698,"byte_end":115708,"line_start":429,"line_end":429,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":116756,"byte_end":116771,"line_start":471,"line_end":471,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":826}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":116936,"byte_end":116951,"line_start":479,"line_end":479,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1548},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1556},{"krate":0,"index":1558},{"krate":0,"index":1560},{"krate":0,"index":1562},{"krate":0,"index":1564},{"krate":0,"index":1566},{"krate":0,"index":1568},{"krate":0,"index":1570},{"krate":0,"index":1572},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":117562,"byte_end":117579,"line_start":502,"line_end":502,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":117751,"byte_end":117768,"line_start":510,"line_end":510,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1604},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":120968,"byte_end":120973,"line_start":609,"line_end":609,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":121280,"byte_end":121299,"line_start":623,"line_end":623,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":122546,"byte_end":122566,"line_start":662,"line_end":662,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":123156,"byte_end":123181,"line_start":684,"line_end":684,"column_start":37,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1638},{"krate":0,"index":1640},{"krate":0,"index":1642},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1648},{"krate":0,"index":1650},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1664},{"krate":0,"index":1666},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":123784,"byte_end":123807,"line_start":705,"line_end":705,"column_start":34,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124489,"byte_end":124501,"line_start":728,"line_end":728,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":936},{"krate":0,"index":938},{"krate":0,"index":940},{"krate":0,"index":942},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":145439,"byte_end":145444,"line_start":1309,"line_end":1309,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":146527,"byte_end":146532,"line_start":1349,"line_end":1349,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":149309,"byte_end":149314,"line_start":1412,"line_end":1412,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":150859,"byte_end":150864,"line_start":1440,"line_end":1440,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":151218,"byte_end":151224,"line_start":1458,"line_end":1458,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":152633,"byte_end":152638,"line_start":1513,"line_end":1513,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":154726,"byte_end":154735,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1042}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":167397,"byte_end":167405,"line_start":442,"line_end":442,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":167829,"byte_end":167840,"line_start":459,"line_end":459,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":168683,"byte_end":168688,"line_start":492,"line_end":492,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196624,"byte_end":196631,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197404,"byte_end":197411,"line_start":80,"line_end":80,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197675,"byte_end":197689,"line_start":88,"line_end":88,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":199125,"byte_end":199132,"line_start":133,"line_end":133,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4032,"byte_end":4037,"line_start":157,"line_end":157,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4102,"byte_end":4105,"line_start":162,"line_end":162,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":358}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4197,"byte_end":4199,"line_start":165,"line_end":165,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":737}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/lib.rs","byte_start":4305,"byte_end":4311,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1056}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":5374,"byte_end":5379,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11434,"byte_end":11439,"line_start":209,"line_end":209,"column_start":27,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11613,"byte_end":11618,"line_start":217,"line_end":217,"column_start":30,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11780,"byte_end":11785,"line_start":223,"line_end":223,"column_start":28,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":11925,"byte_end":11930,"line_start":230,"line_end":230,"column_start":39,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":12107,"byte_end":12112,"line_start":236,"line_end":236,"column_start":64,"column_end":69},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":12379,"byte_end":12384,"line_start":246,"line_end":246,"column_start":75,"column_end":80},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13402,"byte_end":13408,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":82},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":13809,"byte_end":13815,"line_start":298,"line_end":298,"column_start":17,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":82}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":14662,"byte_end":14668,"line_start":333,"line_end":333,"column_start":16,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":5,"index":4900},"to":{"krate":0,"index":77}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":15174,"byte_end":15179,"line_start":353,"line_end":353,"column_start":23,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":15351,"byte_end":15356,"line_start":359,"line_end":359,"column_start":18,"column_end":23},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1110},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":15497,"byte_end":15502,"line_start":366,"line_end":366,"column_start":25,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1110},"to":{"krate":15,"index":1509}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":17054,"byte_end":17059,"line_start":405,"line_end":405,"column_start":36,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1110},"to":{"krate":15,"index":1074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":17243,"byte_end":17255,"line_start":411,"line_end":411,"column_start":40,"column_end":52},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":128},"to":{"krate":15,"index":1158}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":20493,"byte_end":20498,"line_start":502,"line_end":502,"column_start":37,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1110},"to":{"krate":15,"index":1096}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":23114,"byte_end":23129,"line_start":584,"line_end":584,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":23283,"byte_end":23298,"line_start":592,"line_end":592,"column_start":34,"column_end":49},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":167},"to":{"krate":15,"index":1214}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":23962,"byte_end":23977,"line_start":618,"line_end":618,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":24169,"byte_end":24184,"line_start":627,"line_end":627,"column_start":34,"column_end":49},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":177},"to":{"krate":15,"index":1232}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":25283,"byte_end":25288,"line_start":663,"line_end":663,"column_start":54,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1110},"to":{"krate":15,"index":1290}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":25430,"byte_end":25440,"line_start":673,"line_end":673,"column_start":26,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":195},"to":{"krate":15,"index":1512}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":31345,"byte_end":31357,"line_start":856,"line_end":856,"column_start":28,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":239},"to":{"krate":15,"index":1563}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":31728,"byte_end":31740,"line_start":872,"line_end":872,"column_start":28,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":241},"to":{"krate":15,"index":1587}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":32681,"byte_end":32693,"line_start":904,"line_end":904,"column_start":31,"column_end":43},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":241},"to":{"krate":15,"index":1598}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":33203,"byte_end":33218,"line_start":924,"line_end":924,"column_start":44,"column_end":59},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":264},"to":{"krate":15,"index":1085}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/value.rs","byte_start":33459,"byte_end":33474,"line_start":934,"line_end":934,"column_start":36,"column_end":51},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":264},"to":{"krate":15,"index":1158}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36017,"byte_end":36025,"line_start":67,"line_end":67,"column_start":21,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36153,"byte_end":36161,"line_start":73,"line_end":73,"column_start":23,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36629,"byte_end":36633,"line_start":91,"line_end":91,"column_start":23,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":36798,"byte_end":36802,"line_start":97,"line_end":97,"column_start":23,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1236},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":37145,"byte_end":37151,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1247},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":37435,"byte_end":37443,"line_start":119,"line_end":119,"column_start":18,"column_end":26},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":43481,"byte_end":43489,"line_start":309,"line_end":309,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1210},"to":{"krate":15,"index":1509}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":43815,"byte_end":43823,"line_start":321,"line_end":321,"column_start":36,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1210},"to":{"krate":15,"index":1074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":44012,"byte_end":44027,"line_start":327,"line_end":327,"column_start":40,"column_end":55},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":316},"to":{"krate":15,"index":1158}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":44860,"byte_end":44871,"line_start":354,"line_end":354,"column_start":36,"column_end":47},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":326},"to":{"krate":15,"index":1074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":45060,"byte_end":45072,"line_start":360,"line_end":360,"column_start":40,"column_end":52},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":332},"to":{"krate":15,"index":1158}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":45765,"byte_end":45783,"line_start":387,"line_end":387,"column_start":36,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":340},"to":{"krate":15,"index":1074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":45974,"byte_end":45981,"line_start":393,"line_end":393,"column_start":40,"column_end":47},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":346},"to":{"krate":15,"index":1158}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":46603,"byte_end":46621,"line_start":414,"line_end":414,"column_start":23,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1220},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/datetime.rs","byte_start":46756,"byte_end":46774,"line_start":420,"line_end":420,"column_start":23,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1220},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51651,"byte_end":51664,"line_start":161,"line_end":161,"column_start":6,"column_end":19},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":51974,"byte_end":51988,"line_start":178,"line_end":178,"column_start":6,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":53627,"byte_end":53637,"line_start":245,"line_end":245,"column_start":10,"column_end":20},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":76829,"byte_end":76841,"line_start":952,"line_end":952,"column_start":36,"column_end":48},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":384},"to":{"krate":15,"index":1563}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":78357,"byte_end":78369,"line_start":1002,"line_end":1002,"column_start":38,"column_end":50},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":384},"to":{"krate":15,"index":1569}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":78736,"byte_end":78748,"line_start":1017,"line_end":1017,"column_start":45,"column_end":57},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":384},"to":{"krate":15,"index":1581}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":79112,"byte_end":79124,"line_start":1032,"line_end":1032,"column_start":44,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":384},"to":{"krate":15,"index":1575}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":79480,"byte_end":79494,"line_start":1047,"line_end":1047,"column_start":36,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":391},"to":{"krate":15,"index":1587}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":81449,"byte_end":81463,"line_start":1110,"line_end":1110,"column_start":39,"column_end":53},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":391},"to":{"krate":15,"index":1598}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":83254,"byte_end":83268,"line_start":1168,"line_end":1168,"column_start":34,"column_end":48},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":527},"to":{"krate":15,"index":1512}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":88328,"byte_end":88343,"line_start":1328,"line_end":1328,"column_start":26,"column_end":41},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":575},"to":{"krate":15,"index":1512}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":93479,"byte_end":93484,"line_start":1485,"line_end":1485,"column_start":23,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1259},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":94278,"byte_end":94283,"line_start":1502,"line_end":1502,"column_start":23,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1259},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":95005,"byte_end":95010,"line_start":1519,"line_end":1519,"column_start":21,"column_end":26},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1259},"to":{"krate":15,"index":8374}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":96724,"byte_end":96734,"line_start":1582,"line_end":1582,"column_start":9,"column_end":19},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":639},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":96852,"byte_end":96862,"line_start":1588,"line_end":1588,"column_start":41,"column_end":51},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1512}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":100714,"byte_end":100724,"line_start":1712,"line_end":1712,"column_start":43,"column_end":53},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1563}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":101083,"byte_end":101093,"line_start":1726,"line_end":1726,"column_start":45,"column_end":55},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1569}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":101459,"byte_end":101469,"line_start":1740,"line_end":1740,"column_start":52,"column_end":62},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1581}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":101830,"byte_end":101840,"line_start":1754,"line_end":1754,"column_start":51,"column_end":61},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1575}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":102193,"byte_end":102203,"line_start":1768,"line_end":1768,"column_start":43,"column_end":53},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1587}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/ser.rs","byte_start":102726,"byte_end":102736,"line_start":1787,"line_end":1787,"column_start":46,"column_end":56},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":639},"to":{"krate":15,"index":1598}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":110804,"byte_end":110814,"line_start":287,"line_end":287,"column_start":38,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":780},"to":{"krate":15,"index":1232}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":114519,"byte_end":114529,"line_start":391,"line_end":391,"column_start":38,"column_end":48},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":780},"to":{"krate":15,"index":1214}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":115698,"byte_end":115708,"line_start":429,"line_end":429,"column_start":41,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":780},"to":{"krate":15,"index":1096}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":116756,"byte_end":116771,"line_start":471,"line_end":471,"column_start":10,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":116936,"byte_end":116951,"line_start":479,"line_end":479,"column_start":37,"column_end":52},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":821},"to":{"krate":15,"index":1096}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":117562,"byte_end":117579,"line_start":502,"line_end":502,"column_start":10,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":117751,"byte_end":117768,"line_start":510,"line_end":510,"column_start":37,"column_end":54},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":832},"to":{"krate":15,"index":1096}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":120968,"byte_end":120973,"line_start":609,"line_end":609,"column_start":48,"column_end":53},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1684},"to":{"krate":15,"index":1290}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":121280,"byte_end":121299,"line_start":623,"line_end":623,"column_start":34,"column_end":53},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":855},"to":{"krate":15,"index":1232}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":122546,"byte_end":122566,"line_start":662,"line_end":662,"column_start":34,"column_end":54},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":867},"to":{"krate":15,"index":1232}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":123156,"byte_end":123181,"line_start":684,"line_end":684,"column_start":37,"column_end":62},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":878},"to":{"krate":15,"index":1096}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":123784,"byte_end":123807,"line_start":705,"line_end":705,"column_start":34,"column_end":57},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":885},"to":{"krate":15,"index":1232}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":124489,"byte_end":124501,"line_start":728,"line_end":728,"column_start":10,"column_end":22},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":145439,"byte_end":145444,"line_start":1309,"line_end":1309,"column_start":6,"column_end":11},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":146527,"byte_end":146532,"line_start":1349,"line_end":1349,"column_start":23,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1348},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":149309,"byte_end":149314,"line_start":1412,"line_end":1412,"column_start":23,"column_end":28},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1348},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":150859,"byte_end":150864,"line_start":1440,"line_end":1440,"column_start":20,"column_end":25},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1348},"to":{"krate":15,"index":7827}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":151218,"byte_end":151224,"line_start":1458,"line_end":1458,"column_start":10,"column_end":16},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/de.rs","byte_start":152633,"byte_end":152638,"line_start":1513,"line_end":1513,"column_start":10,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":154726,"byte_end":154735,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":167397,"byte_end":167405,"line_start":442,"line_end":442,"column_start":23,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1841},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":167829,"byte_end":167840,"line_start":459,"line_end":459,"column_start":6,"column_end":17},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/tokens.rs","byte_start":168683,"byte_end":168688,"line_start":492,"line_end":492,"column_start":10,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":196624,"byte_end":196631,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1856},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197404,"byte_end":197411,"line_start":80,"line_end":80,"column_start":39,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1856},"to":{"krate":15,"index":1074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":197675,"byte_end":197689,"line_start":88,"line_end":88,"column_start":43,"column_end":57},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1092},"to":{"krate":15,"index":1158}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.4.8/src/spanned.rs","byte_start":199125,"byte_end":199132,"line_start":133,"line_end":133,"column_start":44,"column_end":51},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1856},"to":{"krate":15,"index":1509}}]}