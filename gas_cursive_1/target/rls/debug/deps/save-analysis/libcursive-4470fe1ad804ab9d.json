{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2","program":"/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cursive","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"maplit\"","--cfg","feature=\"ncurses\"","--cfg","feature=\"ncurses-backend\"","--cfg","feature=\"term_size\"","-C","metadata=4470fe1ad804ab9d","-C","extra-filename=-4470fe1ad804ab9d","--out-dir","/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","--extern","crossbeam_channel=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libcrossbeam_channel-36c2b60571d5a8e4.rmeta","--extern","enum_map=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libenum_map-c15ad8768386dd17.rmeta","--extern","enumset=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libenumset-0f88b1a334edf788.rmeta","--extern","libc=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/liblibc-db7bb442240c65fc.rmeta","--extern","log=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/liblog-bb8e7d88a3a8a4b8.rmeta","--extern","maplit=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libmaplit-4784b36a7b98e0b9.rmeta","--extern","ncurses=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libncurses-fda197f459d79855.rmeta","--extern","num=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libnum-74605e8cfa230f5c.rmeta","--extern","owning_ref=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libowning_ref-757f3a62c7ed3ad7.rmeta","--extern","signal_hook=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libsignal_hook-11d01b8220b7369f.rmeta","--extern","term_size=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libterm_size-748edae4f89260d3.rmeta","--extern","toml=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libtoml-0a613c201335f11b.rmeta","--extern","unicode_segmentation=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libunicode_segmentation-c813bf00f50d2294.rmeta","--extern","unicode_width=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libunicode_width-abb1d51c5d6a50a0.rmeta","--extern","xi_unicode=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libxi_unicode-515b6141f5c23811.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libcursive-4470fe1ad804ab9d.rmeta"},"prelude":{"crate_id":{"name":"cursive","disambiguator":[10973115533753244104,7668410818890703737]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":15,"id":{"name":"enum_map","disambiguator":[14783049086963870308,13725583092964785339]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":16,"id":{"name":"array_macro","disambiguator":[16639465654947145716,5251126014152091102]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":17,"id":{"name":"reexport_proc_macro","disambiguator":[6958512488509726938,15098721519115147075]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":18,"id":{"name":"enum_map_derive","disambiguator":[11351956326799553380,6247764195403033711]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":19,"id":{"name":"enumset","disambiguator":[8295688377655511623,14588934840639614358]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[6257840280883506128,408502665489315770]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":21,"id":{"name":"log","disambiguator":[13707154275548202633,8984072857799035583]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[9741642906770342224,7883444029440083660]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":23,"id":{"name":"crossbeam_channel","disambiguator":[462319674394482396,2855217435170084079]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":24,"id":{"name":"crossbeam_epoch","disambiguator":[3825081848831519680,9542622902179000419]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":25,"id":{"name":"arrayvec","disambiguator":[15012179566342584198,16884783005833511033]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":26,"id":{"name":"nodrop","disambiguator":[14990617643825252019,7433150405053078830]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":27,"id":{"name":"crossbeam_utils","disambiguator":[1620463856313359360,7978778919480178659]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":28,"id":{"name":"lazy_static","disambiguator":[7529629145617459419,8526779069248662370]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":29,"id":{"name":"memoffset","disambiguator":[13683457499067376039,15924188266993050870]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":30,"id":{"name":"scopeguard","disambiguator":[10803843064322961270,17222625851977101955]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":31,"id":{"name":"rand","disambiguator":[12770867073998145274,15381033126195001761]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":32,"id":{"name":"rand_core","disambiguator":[11929260456822064901,9483971370527615094]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":33,"id":{"name":"rand_core","disambiguator":[3696222371436855056,8102528365619791797]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":34,"id":{"name":"libc","disambiguator":[13742126743162842846,10810135314539812706]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":35,"id":{"name":"parking_lot","disambiguator":[7752972066025872951,17374017934032475541]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":36,"id":{"name":"lock_api","disambiguator":[18247176831884053221,15300703531073378096]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":37,"id":{"name":"owning_ref","disambiguator":[4971824143575454474,6795702872838761503]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":38,"id":{"name":"stable_deref_trait","disambiguator":[18198962884365941290,9466889265010732196]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":39,"id":{"name":"parking_lot_core","disambiguator":[16919500776700732048,11767318279792111878]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":40,"id":{"name":"smallvec","disambiguator":[6062515022335757656,14667170738313882331]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":41,"id":{"name":"unreachable","disambiguator":[15718493366018263193,18347556500326701204]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":42,"id":{"name":"void","disambiguator":[8308233586780780350,8472106470453304101]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":43,"id":{"name":"maplit","disambiguator":[15050704300455771215,5191721667243458127]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":44,"id":{"name":"signal_hook","disambiguator":[3264232168699063229,11868072372931984356]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":45,"id":{"name":"arc_swap","disambiguator":[3351498055899195351,7917580380068427152]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":46,"id":{"name":"num","disambiguator":[8843717854160529048,5172554896099197663]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":47,"id":{"name":"num_complex","disambiguator":[485388095551676374,3913963564800298977]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":48,"id":{"name":"num_integer","disambiguator":[16485680975751051326,567058608978884700]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":49,"id":{"name":"num_iter","disambiguator":[17873708617358930630,15607466229817521664]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":50,"id":{"name":"num_rational","disambiguator":[10012897564101817040,9830424276620970032]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":51,"id":{"name":"owning_ref","disambiguator":[15568681721531742483,15953847229538956127]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":52,"id":{"name":"toml","disambiguator":[16556068264732568292,7015741641914176394]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":53,"id":{"name":"serde","disambiguator":[11094036867885156780,8787967179329837002]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":54,"id":{"name":"unicode_segmentation","disambiguator":[5519019702666485722,2109027809004689269]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":55,"id":{"name":"unicode_width","disambiguator":[8352742352848424550,2773884902715582692]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","num":56,"id":{"name":"xi_unicode","disambiguator":[16930028023356772333,10185178050129603399]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","num":57,"id":{"name":"term_size","disambiguator":[9718958658837258705,7718489864211803222]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","num":58,"id":{"name":"ncurses","disambiguator":[4571461907272388411,17639407008799559109]}}],"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":0,"byte_end":3180,"line_start":1,"line_end":133,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3397,"byte_end":3404,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"alias_span":null,"name":"Boxable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3406,"byte_end":3412,"line_start":12,"line_end":12,"column_start":25,"column_end":31},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3414,"byte_end":3426,"line_start":12,"line_end":12,"column_start":33,"column_end":45},"alias_span":null,"name":"Identifiable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3428,"byte_end":3438,"line_start":12,"line_end":12,"column_start":47,"column_end":57},"alias_span":null,"name":"Scrollable","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3440,"byte_end":3444,"line_start":12,"line_end":12,"column_start":59,"column_end":63},"alias_span":null,"name":"View","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":3165},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3474,"byte_end":3478,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":17}},{"kind":"Use","ref_id":{"krate":0,"index":145},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16504,"byte_end":16511,"line_start":59,"line_end":59,"column_start":20,"column_end":27},"alias_span":null,"name":"AnyView","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16536,"byte_end":16543,"line_start":60,"line_end":60,"column_start":24,"column_end":31},"alias_span":null,"name":"Boxable","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16568,"byte_end":16574,"line_start":61,"line_end":61,"column_start":24,"column_end":30},"alias_span":null,"name":"Finder","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":179},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16576,"byte_end":16584,"line_start":61,"line_end":61,"column_start":32,"column_end":40},"alias_span":null,"name":"Selector","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16615,"byte_end":16627,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"alias_span":null,"name":"Identifiable","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":366},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16660,"byte_end":16673,"line_start":63,"line_end":63,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoBoxedView","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3634},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16698,"byte_end":16705,"line_start":64,"line_end":64,"column_start":24,"column_end":31},"alias_span":null,"name":"Margins","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3642},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16732,"byte_end":16738,"line_start":65,"line_end":65,"column_start":26,"column_end":32},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":227},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16740,"byte_end":16748,"line_start":65,"line_end":65,"column_start":34,"column_end":42},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3692},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16774,"byte_end":16784,"line_start":66,"line_end":66,"column_start":24,"column_end":34},"alias_span":null,"name":"ScrollBase","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3703},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16786,"byte_end":16800,"line_start":66,"line_end":66,"column_start":36,"column_end":50},"alias_span":null,"name":"ScrollStrategy","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":360},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16829,"byte_end":16839,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"alias_span":null,"name":"Scrollable","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3659},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16867,"byte_end":16876,"line_start":68,"line_end":68,"column_start":27,"column_end":36},"alias_span":null,"name":"SizeCache","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":3671},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16909,"byte_end":16923,"line_start":69,"line_end":69,"column_start":32,"column_end":46},"alias_span":null,"name":"SizeConstraint","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16945,"byte_end":16949,"line_start":70,"line_end":70,"column_start":21,"column_end":25},"alias_span":null,"name":"View","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16976,"byte_end":16984,"line_start":71,"line_end":71,"column_start":26,"column_end":34},"alias_span":null,"name":"ViewPath","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":17014,"byte_end":17025,"line_start":72,"line_end":72,"column_start":29,"column_end":40},"alias_span":null,"name":"ViewWrapper","value":"","parent":{"krate":0,"index":85}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61015,"byte_end":61028,"line_start":10,"line_end":10,"column_start":31,"column_end":44},"alias_span":null,"name":"LinesIterator","value":"","parent":{"krate":0,"index":409}},{"kind":"Use","ref_id":{"krate":0,"index":3717},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61049,"byte_end":61052,"line_start":11,"line_end":11,"column_start":20,"column_end":23},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":409}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67616,"byte_end":67629,"line_start":18,"line_end":18,"column_start":31,"column_end":44},"alias_span":null,"name":"LinesIterator","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":3759},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67650,"byte_end":67653,"line_start":19,"line_end":19,"column_start":20,"column_end":23},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":3773},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67678,"byte_end":67685,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"Segment","value":"","parent":{"krate":0,"index":465}},{"kind":"Use","ref_id":{"krate":0,"index":3712},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":55824,"byte_end":55831,"line_start":11,"line_end":11,"column_start":24,"column_end":31},"alias_span":null,"name":"Counter","value":"","parent":{"krate":0,"index":393}},{"kind":"Use","ref_id":{"krate":0,"index":615},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":55855,"byte_end":55869,"line_start":12,"line_end":12,"column_start":23,"column_end":37},"alias_span":null,"name":"ProgressReader","value":"","parent":{"krate":0,"index":393}},{"kind":"Use","ref_id":{"krate":0,"index":4020},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128174,"byte_end":128185,"line_start":167,"line_end":167,"column_start":29,"column_end":40},"alias_span":null,"name":"BorderStyle","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4041},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128209,"byte_end":128218,"line_start":168,"line_end":168,"column_start":23,"column_end":32},"alias_span":null,"name":"BaseColor","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4072},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128220,"byte_end":128225,"line_start":168,"line_end":168,"column_start":34,"column_end":39},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4106},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128254,"byte_end":128263,"line_start":169,"line_end":169,"column_start":27,"column_end":36},"alias_span":null,"name":"ColorPair","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4124},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128293,"byte_end":128303,"line_start":170,"line_end":170,"column_start":29,"column_end":39},"alias_span":null,"name":"ColorStyle","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128305,"byte_end":128314,"line_start":170,"line_end":170,"column_start":41,"column_end":50},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4190},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128339,"byte_end":128345,"line_start":171,"line_end":171,"column_start":23,"column_end":29},"alias_span":null,"name":"Effect","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4219},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128371,"byte_end":128378,"line_start":172,"line_end":172,"column_start":25,"column_end":32},"alias_span":null,"name":"Palette","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4252},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128380,"byte_end":128392,"line_start":172,"line_end":172,"column_start":34,"column_end":46},"alias_span":null,"name":"PaletteColor","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":4298},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128416,"byte_end":128421,"line_start":173,"line_end":173,"column_start":22,"column_end":27},"alias_span":null,"name":"Style","value":"","parent":{"krate":0,"index":841}},{"kind":"Use","ref_id":{"krate":0,"index":1101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161565,"byte_end":161572,"line_start":67,"line_end":67,"column_start":25,"column_end":32},"alias_span":null,"name":"BoxView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1151},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161596,"byte_end":161602,"line_start":68,"line_end":68,"column_start":23,"column_end":29},"alias_span":null,"name":"Button","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161626,"byte_end":161632,"line_start":69,"line_end":69,"column_start":23,"column_end":29},"alias_span":null,"name":"Canvas","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1303},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161658,"byte_end":161666,"line_start":70,"line_end":70,"column_start":25,"column_end":33},"alias_span":null,"name":"Checkbox","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1366},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161691,"byte_end":161697,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"Dialog","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":4347},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161699,"byte_end":161710,"line_start":71,"line_end":71,"column_start":32,"column_end":43},"alias_span":null,"name":"DialogFocus","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1448},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161734,"byte_end":161743,"line_start":72,"line_end":72,"column_start":22,"column_end":31},"alias_span":null,"name":"DummyView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161770,"byte_end":161778,"line_start":73,"line_end":73,"column_start":26,"column_end":34},"alias_span":null,"name":"EditView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161809,"byte_end":161821,"line_start":74,"line_end":74,"column_start":30,"column_end":42},"alias_span":null,"name":"HideableView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1612},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161847,"byte_end":161853,"line_start":75,"line_end":75,"column_start":25,"column_end":31},"alias_span":null,"name":"IdView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1616},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161855,"byte_end":161862,"line_start":75,"line_end":75,"column_start":33,"column_end":40},"alias_span":null,"name":"ViewRef","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":4372},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161886,"byte_end":161891,"line_start":76,"line_end":76,"column_start":22,"column_end":27},"alias_span":null,"name":"Layer","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1672},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161922,"byte_end":161934,"line_start":77,"line_end":77,"column_start":30,"column_end":42},"alias_span":null,"name":"LinearLayout","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1779},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161962,"byte_end":161971,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"alias_span":null,"name":"ListChild","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1789},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":161973,"byte_end":161981,"line_start":78,"line_end":78,"column_start":38,"column_end":46},"alias_span":null,"name":"ListView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1867},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162010,"byte_end":162019,"line_start":79,"line_end":79,"column_start":27,"column_end":36},"alias_span":null,"name":"MenuPopup","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1932},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162044,"byte_end":162051,"line_start":80,"line_end":80,"column_start":24,"column_end":31},"alias_span":null,"name":"Menubar","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":1997},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162082,"byte_end":162093,"line_start":81,"line_end":81,"column_start":30,"column_end":41},"alias_span":null,"name":"OnEventView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":4424},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162116,"byte_end":162121,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"Panel","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162151,"byte_end":162162,"line_start":83,"line_end":83,"column_start":29,"column_end":40},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2169},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162186,"byte_end":162197,"line_start":84,"line_end":84,"column_start":23,"column_end":34},"alias_span":null,"name":"RadioButton","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":4445},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162199,"byte_end":162209,"line_start":84,"line_end":84,"column_start":36,"column_end":46},"alias_span":null,"name":"RadioGroup","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2215},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162239,"byte_end":162249,"line_start":85,"line_end":85,"column_start":28,"column_end":38},"alias_span":null,"name":"ScrollView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2312},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162278,"byte_end":162288,"line_start":86,"line_end":86,"column_start":28,"column_end":38},"alias_span":null,"name":"SelectView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2455},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162317,"byte_end":162327,"line_start":87,"line_end":87,"column_start":28,"column_end":38},"alias_span":null,"name":"ShadowView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2478},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162355,"byte_end":162364,"line_start":88,"line_end":88,"column_start":27,"column_end":36},"alias_span":null,"name":"SizedView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2507},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162393,"byte_end":162403,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"SliderView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":4478},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162432,"byte_end":162445,"line_start":90,"line_end":90,"column_start":28,"column_end":41},"alias_span":null,"name":"LayerPosition","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2561},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162447,"byte_end":162456,"line_start":90,"line_end":90,"column_start":43,"column_end":52},"alias_span":null,"name":"StackView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2709},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162484,"byte_end":162492,"line_start":91,"line_end":91,"column_start":26,"column_end":34},"alias_span":null,"name":"TextArea","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":4501},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162520,"byte_end":162531,"line_start":92,"line_end":92,"column_start":27,"column_end":38},"alias_span":null,"name":"TextContent","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2801},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162533,"byte_end":162547,"line_start":92,"line_end":92,"column_start":40,"column_end":54},"alias_span":null,"name":"TextContentRef","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2824},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162549,"byte_end":162557,"line_start":92,"line_end":92,"column_start":56,"column_end":64},"alias_span":null,"name":"TextView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2874},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162588,"byte_end":162599,"line_start":93,"line_end":93,"column_start":29,"column_end":40},"alias_span":null,"name":"TrackedView","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":2894},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":162625,"byte_end":162632,"line_start":94,"line_end":94,"column_start":25,"column_end":32},"alias_span":null,"name":"ViewBox","value":"","parent":{"krate":0,"index":1091}},{"kind":"Use","ref_id":{"krate":0,"index":3007},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3072,"byte_end":3078,"line_start":129,"line_end":129,"column_start":19,"column_end":25},"alias_span":null,"name":"CbFunc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2982},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3080,"byte_end":3087,"line_start":129,"line_end":129,"column_start":27,"column_end":34},"alias_span":null,"name":"Cursive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3006},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3089,"byte_end":3097,"line_start":129,"line_end":129,"column_start":36,"column_end":44},"alias_span":null,"name":"ScreenId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3094},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3117,"byte_end":3124,"line_start":130,"line_end":130,"column_start":18,"column_end":25},"alias_span":null,"name":"Printer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1003},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3139,"byte_end":3143,"line_start":131,"line_end":131,"column_start":14,"column_end":18},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3165},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3159,"byte_end":3163,"line_start":132,"line_end":132,"column_start":15,"column_end":19},"alias_span":null,"name":"With","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4521},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3177,"byte_end":3179,"line_start":133,"line_end":133,"column_start":13,"column_end":15},"alias_span":null,"name":"XY","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":0,"byte_end":3180,"line_start":1,"line_end":133,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":25},{"krate":0,"index":85},{"krate":0,"index":393},{"krate":0,"index":716},{"krate":0,"index":728},{"krate":0,"index":758},{"krate":0,"index":805},{"krate":0,"index":841},{"krate":0,"index":990},{"krate":0,"index":1091},{"krate":0,"index":2955},{"krate":0,"index":3075},{"krate":0,"index":3164},{"krate":0,"index":3175},{"krate":0,"index":3260},{"krate":0,"index":3264},{"krate":0,"index":3269},{"krate":0,"index":3434},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441}],"decl_id":null,"docs":" # Cursive","sig":null,"attributes":[{"value":"! # Cursive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":0,"byte_end":13,"line_start":1,"line_end":1,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":14,"byte_end":17,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! [Cursive] is a [TUI] library - it lets you easily build rich interfaces","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":18,"byte_end":93,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"! for use in a terminal.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":94,"byte_end":120,"line_start":4,"line_end":4,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":121,"byte_end":124,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! [Cursive]: https://github.com/gyscos/Cursive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":125,"byte_end":173,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"! [TUI]: https://en.wikipedia.org/wiki/Text-based_user_interface","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":174,"byte_end":240,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":241,"byte_end":244,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! ## Getting started","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":245,"byte_end":267,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":268,"byte_end":271,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! * Every application should start with a [`Cursive`](struct.Cursive.html)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":272,"byte_end":348,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"!   object. It is the main entry-point to the library.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":349,"byte_end":405,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"! * A declarative phase then describes the structure of the UI by adding","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":406,"byte_end":480,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"!   views and configuring their behaviours.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":481,"byte_end":526,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"! * Finally, the event loop is started by calling","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":527,"byte_end":578,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"!   [`Cursive::run(&mut self)`](struct.Cursive.html#method.run).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":579,"byte_end":645,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":646,"byte_end":649,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! ## Views","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":650,"byte_end":662,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":663,"byte_end":666,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! Views are the main components of a cursive interface.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":667,"byte_end":724,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"! The [`views`](./views/index.html) module contains many views to use in your","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":725,"byte_end":804,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"! application; if you don't find what you need, you may also implement the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":805,"byte_end":881,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"! [`View`](view/trait.View.html) trait and build your own.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":882,"byte_end":942,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":943,"byte_end":946,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ## Callbacks","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":947,"byte_end":963,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":964,"byte_end":967,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Cursive is a *reactive* UI: it *reacts* to events generated by user input.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":968,"byte_end":1046,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1047,"byte_end":1050,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! During the declarative phase, callbacks are set to trigger on specific","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1051,"byte_end":1125,"line_start":29,"line_end":29,"column_start":1,"column_end":75}},{"value":"! events. These functions usually take a `&mut Cursive` argument, allowing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1126,"byte_end":1202,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"! them to modify the view tree at will.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1203,"byte_end":1244,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1245,"byte_end":1248,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1249,"byte_end":1264,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1265,"byte_end":1268,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1269,"byte_end":1280,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"! extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1281,"byte_end":1306,"line_start":36,"line_end":36,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1307,"byte_end":1310,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1311,"byte_end":1336,"line_start":38,"line_end":38,"column_start":1,"column_end":26}},{"value":"! use cursive::views::TextView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1337,"byte_end":1370,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1371,"byte_end":1374,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1375,"byte_end":1390,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"!     let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1391,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1431,"byte_end":1434,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"!     siv.add_layer(TextView::new(\"Hello World!\\nPress q to quit.\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1435,"byte_end":1506,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1507,"byte_end":1510,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"!     siv.add_global_callback('q', |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1511,"byte_end":1562,"line_start":46,"line_end":46,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1563,"byte_end":1566,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"!     siv.run();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1567,"byte_end":1585,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1586,"byte_end":1591,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1592,"byte_end":1599,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1600,"byte_end":1603,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! ## Debugging","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1604,"byte_end":1620,"line_start":52,"line_end":52,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1621,"byte_end":1624,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"! The `Cursive` root initializes the terminal on creation, and do cleanups","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1625,"byte_end":1701,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"! on drop. While it is alive, printing to the terminal will not work","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1702,"byte_end":1772,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"! as expected, making debugging a bit harder.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1773,"byte_end":1820,"line_start":56,"line_end":56,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! One solution is to redirect stderr to a file when running the application,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1825,"byte_end":1903,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"! and log to it instead of stdout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1904,"byte_end":1940,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1941,"byte_end":1944,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Or you can use gdb as usual.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1945,"byte_end":1977,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"deny(missing_docs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":1978,"byte_end":2000,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":17},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"traits","qualname":"::traits","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":24}],"decl_id":null,"docs":" Commonly used traits bundled for easy import.","sig":null,"attributes":[{"value":"! Commonly used traits bundled for easy import.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3182,"byte_end":3231,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3232,"byte_end":3235,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module provides an easy way to import some traits.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3236,"byte_end":3295,"line_start":3,"line_end":3,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3296,"byte_end":3299,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3300,"byte_end":3314,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3315,"byte_end":3318,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3319,"byte_end":3326,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"! use cursive::traits::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3327,"byte_end":3354,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/traits.rs","byte_start":3355,"byte_end":3362,"line_start":9,"line_end":9,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"event","qualname":"::event","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":43},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":59},{"krate":0,"index":3447},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3512},{"krate":0,"index":3511},{"krate":0,"index":3508},{"krate":0,"index":3506},{"krate":0,"index":69},{"krate":0,"index":3520},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3539},{"krate":0,"index":3538},{"krate":0,"index":3535},{"krate":0,"index":3533},{"krate":0,"index":3547},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3567},{"krate":0,"index":3566},{"krate":0,"index":3563},{"krate":0,"index":3561},{"krate":0,"index":71},{"krate":0,"index":3576},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3625},{"krate":0,"index":3622},{"krate":0,"index":3620},{"krate":0,"index":74},{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" User-input events and their effects.","sig":null,"attributes":[{"value":"! User-input events and their effects.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3481,"byte_end":3521,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3522,"byte_end":3525,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! * Every user input the application receives is converted to an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3526,"byte_end":3592,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"!   [`Event`](./enum.Event.html).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3593,"byte_end":3628,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"! * Each event is then given to the root, and descends the view tree down to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3629,"byte_end":3707,"line_start":5,"line_end":5,"column_start":1,"column_end":79}},{"value":"!   the view currently in focus, through the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3708,"byte_end":3754,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"!   [`on_event`](../view/trait.View.html#method.on_event) method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3755,"byte_end":3822,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!     * If the view consumes the event, it may return a callback to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3823,"byte_end":3895,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"!       executed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3896,"byte_end":3915,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"!     * Otherwise, it ignores the event, and the view parent can in turn","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3916,"byte_end":3990,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"!       choose to consume it or not.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":3991,"byte_end":4029,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"! * If no view consumes the event, the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4030,"byte_end":4070,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"!   [global callback](../struct.Cursive.html#method.add_global_callback)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4071,"byte_end":4145,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"!   table is checked.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4146,"byte_end":4169,"line_start":14,"line_end":14,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3442},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4420,"byte_end":4428,"line_start":26,"line_end":26,"column_start":12,"column_end":20},"name":"Callback","qualname":"::event::Callback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Callback is a function that can be triggered by an event.\n It has a mutable access to the cursive root.\n","sig":null,"attributes":[{"value":"/ Callback is a function that can be triggered by an event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4281,"byte_end":4342,"line_start":23,"line_end":23,"column_start":1,"column_end":62}},{"value":"/ It has a mutable access to the cursive root.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4343,"byte_end":4391,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4583,"byte_end":4588,"line_start":30,"line_end":30,"column_start":10,"column_end":15},"name":"AnyCb","qualname":"::event::AnyCb","value":"Box<FnMut(&mut Any) + 'a>","parent":null,"children":[],"decl_id":null,"docs":" A boxed callback that can be run on `&mut Any`.\n","sig":null,"attributes":[{"value":"/ A boxed callback that can be run on `&mut Any`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4522,"byte_end":4573,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4709,"byte_end":4716,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<Callback>::from_fn","value":"fn <F> (f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given function into a `Callback` object.\n","sig":null,"attributes":[{"value":"/ Wraps the given function into a `Callback` object.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4643,"byte_end":4697,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5019,"byte_end":5030,"line_start":46,"line_end":46,"column_start":12,"column_end":23},"name":"from_fn_mut","qualname":"<Callback>::from_fn_mut","value":"fn <F> (f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wrap a `FnMut` into a `Callback` object.","sig":null,"attributes":[{"value":"/ Wrap a `FnMut` into a `Callback` object.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4880,"byte_end":4924,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4929,"byte_end":4932,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If this methods tries to call itself, nested calls will be no-ops.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4937,"byte_end":5007,"line_start":45,"line_end":45,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5362,"byte_end":5367,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"dummy","qualname":"<Callback>::dummy","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a dummy callback that doesn't run anything.\n","sig":null,"attributes":[{"value":"/ Returns a dummy callback that doesn't run anything.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5295,"byte_end":5350,"line_start":59,"line_end":59,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":54},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6158,"byte_end":6165,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"Ignored","qualname":"::event::EventResult::Ignored","value":"EventResult::Ignored","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The event was ignored. The parent can keep handling it.\n","sig":null,"attributes":[{"value":"/ The event was ignored. The parent can keep handling it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6094,"byte_end":6153,"line_start":93,"line_end":93,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":56},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6245,"byte_end":6253,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Consumed","qualname":"::event::EventResult::Consumed","value":"EventResult::Consumed(Option<Callback>)","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" The event was consumed. An optionnal callback to run is attached.\n","sig":null,"attributes":[{"value":"/ The event was consumed. An optionnal callback to run is attached.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6171,"byte_end":6240,"line_start":95,"line_end":95,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":53},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6076,"byte_end":6087,"line_start":92,"line_end":92,"column_start":10,"column_end":21},"name":"EventResult","qualname":"::event::EventResult","value":"EventResult::{Ignored, Consumed}","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56}],"decl_id":null,"docs":" Answer to an event notification.\n The event can be consumed or ignored.\n","sig":null,"attributes":[{"value":"/ Answer to an event notification.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5988,"byte_end":6024,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ The event can be consumed or ignored.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6025,"byte_end":6066,"line_start":91,"line_end":91,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6391,"byte_end":6398,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"with_cb","qualname":"<EventResult>::with_cb","value":"fn <F> (f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create `Consumed(Some(f))`\n","sig":null,"attributes":[{"value":"/ Convenient method to create `Consumed(Some(f))`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6328,"byte_end":6379,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6608,"byte_end":6619,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"is_consumed","qualname":"<EventResult>::is_consumed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `EventResult::Consumed`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is `EventResult::Consumed`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6540,"byte_end":6596,"line_start":108,"line_end":108,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6811,"byte_end":6823,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"has_callback","qualname":"<EventResult>::has_callback","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` contains a callback.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` contains a callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6750,"byte_end":6799,"line_start":116,"line_end":116,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7056,"byte_end":7063,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"process","qualname":"<EventResult>::process","value":"fn (self, s: &mut Cursive) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Process this result if it is a callback.","sig":null,"attributes":[{"value":"/ Process this result if it is a callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6960,"byte_end":7004,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7009,"byte_end":7012,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Does nothing otherwise.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7017,"byte_end":7044,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7277,"byte_end":7284,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"or_else","qualname":"<EventResult>::or_else","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` if it is not `EventResult::Ignored`, otherwise returns `f()`.\n","sig":null,"attributes":[{"value":"/ Returns `self` if it is not `EventResult::Ignored`, otherwise returns `f()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7185,"byte_end":7265,"line_start":133,"line_end":133,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7544,"byte_end":7547,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"and","qualname":"<EventResult>::and","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an event result that combines `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns an event result that combines `self` and `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":7471,"byte_end":7532,"line_start":144,"line_end":144,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3448},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8321,"byte_end":8326,"line_start":168,"line_end":168,"column_start":5,"column_end":10},"name":"Enter","qualname":"::event::Key::Enter","value":"Key::Enter","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Both Enter (or Return) and numpad Enter\n","sig":null,"attributes":[{"value":"/ Both Enter (or Return) and numpad Enter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8273,"byte_end":8316,"line_start":167,"line_end":167,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3450},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8355,"byte_end":8358,"line_start":170,"line_end":170,"column_start":5,"column_end":8},"name":"Tab","qualname":"::event::Key::Tab","value":"Key::Tab","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Tabulation key\n","sig":null,"attributes":[{"value":"/ Tabulation key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8332,"byte_end":8350,"line_start":169,"line_end":169,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3452},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8386,"byte_end":8395,"line_start":172,"line_end":172,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::event::Key::Backspace","value":"Key::Backspace","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Backspace key\n","sig":null,"attributes":[{"value":"/ Backspace key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8364,"byte_end":8381,"line_start":171,"line_end":171,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3454},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8420,"byte_end":8423,"line_start":174,"line_end":174,"column_start":5,"column_end":8},"name":"Esc","qualname":"::event::Key::Esc","value":"Key::Esc","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Escape key\n","sig":null,"attributes":[{"value":"/ Escape key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8401,"byte_end":8415,"line_start":173,"line_end":173,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3456},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8449,"byte_end":8453,"line_start":177,"line_end":177,"column_start":5,"column_end":9},"name":"Left","qualname":"::event::Key::Left","value":"Key::Left","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Left arrow\n","sig":null,"attributes":[{"value":"/ Left arrow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8430,"byte_end":8444,"line_start":176,"line_end":176,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3458},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8479,"byte_end":8484,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Right","qualname":"::event::Key::Right","value":"Key::Right","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Right arrow\n","sig":null,"attributes":[{"value":"/ Right arrow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8459,"byte_end":8474,"line_start":178,"line_end":178,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3460},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8507,"byte_end":8509,"line_start":181,"line_end":181,"column_start":5,"column_end":7},"name":"Up","qualname":"::event::Key::Up","value":"Key::Up","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Up arrow\n","sig":null,"attributes":[{"value":"/ Up arrow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8490,"byte_end":8502,"line_start":180,"line_end":180,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3462},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8534,"byte_end":8538,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Down","qualname":"::event::Key::Down","value":"Key::Down","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Down arrow\n","sig":null,"attributes":[{"value":"/ Down arrow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8515,"byte_end":8529,"line_start":182,"line_end":182,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3464},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8564,"byte_end":8567,"line_start":186,"line_end":186,"column_start":5,"column_end":8},"name":"Ins","qualname":"::event::Key::Ins","value":"Key::Ins","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Insert key\n","sig":null,"attributes":[{"value":"/ Insert key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8545,"byte_end":8559,"line_start":185,"line_end":185,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3466},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8592,"byte_end":8595,"line_start":188,"line_end":188,"column_start":5,"column_end":8},"name":"Del","qualname":"::event::Key::Del","value":"Key::Del","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Delete key\n","sig":null,"attributes":[{"value":"/ Delete key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8573,"byte_end":8587,"line_start":187,"line_end":187,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3468},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8618,"byte_end":8622,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"name":"Home","qualname":"::event::Key::Home","value":"Key::Home","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Home key\n","sig":null,"attributes":[{"value":"/ Home key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8601,"byte_end":8613,"line_start":189,"line_end":189,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3470},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8644,"byte_end":8647,"line_start":192,"line_end":192,"column_start":5,"column_end":8},"name":"End","qualname":"::event::Key::End","value":"Key::End","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" End key\n","sig":null,"attributes":[{"value":"/ End key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8628,"byte_end":8639,"line_start":191,"line_end":191,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3472},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8673,"byte_end":8679,"line_start":194,"line_end":194,"column_start":5,"column_end":11},"name":"PageUp","qualname":"::event::Key::PageUp","value":"Key::PageUp","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Page Up key\n","sig":null,"attributes":[{"value":"/ Page Up key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8653,"byte_end":8668,"line_start":193,"line_end":193,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3474},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8707,"byte_end":8715,"line_start":196,"line_end":196,"column_start":5,"column_end":13},"name":"PageDown","qualname":"::event::Key::PageDown","value":"Key::PageDown","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Page Down key\n","sig":null,"attributes":[{"value":"/ Page Down key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8685,"byte_end":8702,"line_start":195,"line_end":195,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3476},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8746,"byte_end":8756,"line_start":199,"line_end":199,"column_start":5,"column_end":15},"name":"PauseBreak","qualname":"::event::Key::PauseBreak","value":"Key::PauseBreak","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" Pause Break key\n","sig":null,"attributes":[{"value":"/ Pause Break key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8722,"byte_end":8741,"line_start":198,"line_end":198,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3478},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8832,"byte_end":8844,"line_start":202,"line_end":202,"column_start":5,"column_end":17},"name":"NumpadCenter","qualname":"::event::Key::NumpadCenter","value":"Key::NumpadCenter","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" The 5 in the center of the keypad, when numlock is disabled.\n","sig":null,"attributes":[{"value":"/ The 5 in the center of the keypad, when numlock is disabled.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8763,"byte_end":8827,"line_start":201,"line_end":201,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3480},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8866,"byte_end":8868,"line_start":205,"line_end":205,"column_start":5,"column_end":7},"name":"F0","qualname":"::event::Key::F0","value":"Key::F0","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F0 key\n","sig":null,"attributes":[{"value":"/ F0 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8851,"byte_end":8861,"line_start":204,"line_end":204,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3482},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8889,"byte_end":8891,"line_start":207,"line_end":207,"column_start":5,"column_end":7},"name":"F1","qualname":"::event::Key::F1","value":"Key::F1","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F1 key\n","sig":null,"attributes":[{"value":"/ F1 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8874,"byte_end":8884,"line_start":206,"line_end":206,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3484},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8912,"byte_end":8914,"line_start":209,"line_end":209,"column_start":5,"column_end":7},"name":"F2","qualname":"::event::Key::F2","value":"Key::F2","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F2 key\n","sig":null,"attributes":[{"value":"/ F2 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8897,"byte_end":8907,"line_start":208,"line_end":208,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3486},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8935,"byte_end":8937,"line_start":211,"line_end":211,"column_start":5,"column_end":7},"name":"F3","qualname":"::event::Key::F3","value":"Key::F3","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F3 key\n","sig":null,"attributes":[{"value":"/ F3 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8920,"byte_end":8930,"line_start":210,"line_end":210,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3488},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8958,"byte_end":8960,"line_start":213,"line_end":213,"column_start":5,"column_end":7},"name":"F4","qualname":"::event::Key::F4","value":"Key::F4","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F4 key\n","sig":null,"attributes":[{"value":"/ F4 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8943,"byte_end":8953,"line_start":212,"line_end":212,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8981,"byte_end":8983,"line_start":215,"line_end":215,"column_start":5,"column_end":7},"name":"F5","qualname":"::event::Key::F5","value":"Key::F5","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F5 key\n","sig":null,"attributes":[{"value":"/ F5 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8966,"byte_end":8976,"line_start":214,"line_end":214,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3492},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9004,"byte_end":9006,"line_start":217,"line_end":217,"column_start":5,"column_end":7},"name":"F6","qualname":"::event::Key::F6","value":"Key::F6","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F6 key\n","sig":null,"attributes":[{"value":"/ F6 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8989,"byte_end":8999,"line_start":216,"line_end":216,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3494},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9027,"byte_end":9029,"line_start":219,"line_end":219,"column_start":5,"column_end":7},"name":"F7","qualname":"::event::Key::F7","value":"Key::F7","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F7 key\n","sig":null,"attributes":[{"value":"/ F7 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9012,"byte_end":9022,"line_start":218,"line_end":218,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3496},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9050,"byte_end":9052,"line_start":221,"line_end":221,"column_start":5,"column_end":7},"name":"F8","qualname":"::event::Key::F8","value":"Key::F8","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F8 key\n","sig":null,"attributes":[{"value":"/ F8 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9035,"byte_end":9045,"line_start":220,"line_end":220,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3498},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9073,"byte_end":9075,"line_start":223,"line_end":223,"column_start":5,"column_end":7},"name":"F9","qualname":"::event::Key::F9","value":"Key::F9","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F9 key\n","sig":null,"attributes":[{"value":"/ F9 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9058,"byte_end":9068,"line_start":222,"line_end":222,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3500},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9097,"byte_end":9100,"line_start":225,"line_end":225,"column_start":5,"column_end":8},"name":"F10","qualname":"::event::Key::F10","value":"Key::F10","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F10 key\n","sig":null,"attributes":[{"value":"/ F10 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9081,"byte_end":9092,"line_start":224,"line_end":224,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3502},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9122,"byte_end":9125,"line_start":227,"line_end":227,"column_start":5,"column_end":8},"name":"F11","qualname":"::event::Key::F11","value":"Key::F11","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F11 key\n","sig":null,"attributes":[{"value":"/ F11 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9106,"byte_end":9117,"line_start":226,"line_end":226,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3504},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9147,"byte_end":9150,"line_start":229,"line_end":229,"column_start":5,"column_end":8},"name":"F12","qualname":"::event::Key::F12","value":"Key::F12","parent":{"krate":0,"index":3447},"children":[],"decl_id":null,"docs":" F12 key\n","sig":null,"attributes":[{"value":"/ F12 key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9131,"byte_end":9142,"line_start":228,"line_end":228,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":3447},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8263,"byte_end":8266,"line_start":166,"line_end":166,"column_start":10,"column_end":13},"name":"Key","qualname":"::event::Key","value":"Key::{Enter, Tab, Backspace, Esc, Left, Right, Up, Down, Ins, Del, Home, End, PageUp, PageDown, PauseBreak, NumpadCenter, F0, F1, F2, F3, F4, F5, F6, F7, F8, F9, F10, F11, F12}","parent":null,"children":[{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504}],"decl_id":null,"docs":" A non-character key on the keyboard\n","sig":null,"attributes":[{"value":"/ A non-character key on the keyboard","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":8163,"byte_end":8202,"line_start":164,"line_end":164,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9339,"byte_end":9345,"line_start":240,"line_end":240,"column_start":12,"column_end":18},"name":"from_f","qualname":"<Key>::from_f","value":"fn (n: u8) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the function key corresponding to the given number","sig":null,"attributes":[{"value":"/ Returns the function key corresponding to the given number","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9170,"byte_end":9232,"line_start":233,"line_end":233,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9237,"byte_end":9240,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ 1 -> F1, etc...","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9245,"byte_end":9264,"line_start":235,"line_end":235,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9269,"byte_end":9272,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9277,"byte_end":9289,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9294,"byte_end":9297,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ If `n == 0 || n > 12`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9302,"byte_end":9327,"line_start":239,"line_end":239,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3521},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9970,"byte_end":9974,"line_start":264,"line_end":264,"column_start":5,"column_end":9},"name":"Left","qualname":"::event::MouseButton::Left","value":"MouseButton::Left","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" The left button, used for main actions.\n","sig":null,"attributes":[{"value":"/ The left button, used for main actions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9922,"byte_end":9965,"line_start":263,"line_end":263,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3523},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10058,"byte_end":10064,"line_start":266,"line_end":266,"column_start":5,"column_end":11},"name":"Middle","qualname":"::event::MouseButton::Middle","value":"MouseButton::Middle","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" Middle button, probably the wheel. Often pastes text in X11 on linux.\n","sig":null,"attributes":[{"value":"/ Middle button, probably the wheel. Often pastes text in X11 on linux.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9980,"byte_end":10053,"line_start":265,"line_end":265,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3525},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10117,"byte_end":10122,"line_start":268,"line_end":268,"column_start":5,"column_end":10},"name":"Right","qualname":"::event::MouseButton::Right","value":"MouseButton::Right","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" The right button, for special actions.\n","sig":null,"attributes":[{"value":"/ The right button, for special actions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10070,"byte_end":10112,"line_start":267,"line_end":267,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3527},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10177,"byte_end":10184,"line_start":271,"line_end":271,"column_start":5,"column_end":12},"name":"Button4","qualname":"::event::MouseButton::Button4","value":"MouseButton::Button4","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" Fourth button if the mouse supports it.\n","sig":null,"attributes":[{"value":"/ Fourth button if the mouse supports it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10129,"byte_end":10172,"line_start":270,"line_end":270,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3529},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10237,"byte_end":10244,"line_start":273,"line_end":273,"column_start":5,"column_end":12},"name":"Button5","qualname":"::event::MouseButton::Button5","value":"MouseButton::Button5","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":" Fifth button if the mouse supports it.\n","sig":null,"attributes":[{"value":"/ Fifth button if the mouse supports it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10190,"byte_end":10232,"line_start":272,"line_end":272,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3531},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10304,"byte_end":10309,"line_start":277,"line_end":277,"column_start":5,"column_end":10},"name":"Other","qualname":"::event::MouseButton::Other","value":"MouseButton::Other","parent":{"krate":0,"index":3520},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3520},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9904,"byte_end":9915,"line_start":262,"line_end":262,"column_start":10,"column_end":21},"name":"MouseButton","qualname":"::event::MouseButton","value":"MouseButton::{Left, Middle, Right, Button4, Button5, Other}","parent":null,"children":[{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3525},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3531}],"decl_id":null,"docs":" One of the buttons present on the mouse\n","sig":null,"attributes":[{"value":"/ One of the buttons present on the mouse","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9800,"byte_end":9843,"line_start":260,"line_end":260,"column_start":1,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3548},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10472,"byte_end":10477,"line_start":284,"line_end":284,"column_start":5,"column_end":10},"name":"Press","qualname":"::event::MouseEvent::Press","value":"MouseEvent::Press(MouseButton)","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":" A button was pressed.\n","sig":null,"attributes":[{"value":"/ A button was pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10442,"byte_end":10467,"line_start":283,"line_end":283,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3551},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10527,"byte_end":10534,"line_start":286,"line_end":286,"column_start":5,"column_end":12},"name":"Release","qualname":"::event::MouseEvent::Release","value":"MouseEvent::Release(MouseButton)","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":" A button was released.\n","sig":null,"attributes":[{"value":"/ A button was released.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10496,"byte_end":10522,"line_start":285,"line_end":285,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10585,"byte_end":10589,"line_start":288,"line_end":288,"column_start":5,"column_end":9},"name":"Hold","qualname":"::event::MouseEvent::Hold","value":"MouseEvent::Hold(MouseButton)","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":" A button is being held.\n","sig":null,"attributes":[{"value":"/ A button is being held.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10553,"byte_end":10580,"line_start":287,"line_end":287,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10640,"byte_end":10647,"line_start":290,"line_end":290,"column_start":5,"column_end":12},"name":"WheelUp","qualname":"::event::MouseEvent::WheelUp","value":"MouseEvent::WheelUp","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":" The wheel was moved up.\n","sig":null,"attributes":[{"value":"/ The wheel was moved up.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10608,"byte_end":10635,"line_start":289,"line_end":289,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3559},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10687,"byte_end":10696,"line_start":292,"line_end":292,"column_start":5,"column_end":14},"name":"WheelDown","qualname":"::event::MouseEvent::WheelDown","value":"MouseEvent::WheelDown","parent":{"krate":0,"index":3547},"children":[],"decl_id":null,"docs":" The wheel was moved down.\n","sig":null,"attributes":[{"value":"/ The wheel was moved down.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10653,"byte_end":10682,"line_start":291,"line_end":291,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":3547},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10425,"byte_end":10435,"line_start":282,"line_end":282,"column_start":10,"column_end":20},"name":"MouseEvent","qualname":"::event::MouseEvent","value":"MouseEvent::{Press, Release, Hold, WheelUp, WheelDown}","parent":null,"children":[{"krate":0,"index":3548},{"krate":0,"index":3551},{"krate":0,"index":3554},{"krate":0,"index":3557},{"krate":0,"index":3559}],"decl_id":null,"docs":" Represents a possible event sent by the mouse.\n","sig":null,"attributes":[{"value":"/ Represents a possible event sent by the mouse.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10314,"byte_end":10364,"line_start":280,"line_end":280,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10855,"byte_end":10861,"line_start":299,"line_end":299,"column_start":12,"column_end":18},"name":"button","qualname":"<MouseEvent>::button","value":"fn (self) -> Option<MouseButton>","parent":null,"children":[],"decl_id":null,"docs":" Returns the button used by this event, if any.","sig":null,"attributes":[{"value":"/ Returns the button used by this event, if any.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10723,"byte_end":10773,"line_start":296,"line_end":296,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10778,"byte_end":10781,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is `WheelUp` or `WheelDown`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10786,"byte_end":10843,"line_start":298,"line_end":298,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11221,"byte_end":11232,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"grabs_focus","qualname":"<MouseEvent>::grabs_focus","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an event that can grab focus.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an event that can grab focus.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11082,"byte_end":11143,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11148,"byte_end":11151,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This includes `Press`, `WheelUp` and `WheelDown`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11156,"byte_end":11209,"line_start":310,"line_end":310,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3577},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11591,"byte_end":11603,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"name":"WindowResize","qualname":"::event::Event::WindowResize","value":"Event::WindowResize","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Event fired when the window is resized.\n","sig":null,"attributes":[{"value":"/ Event fired when the window is resized.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11543,"byte_end":11586,"line_start":324,"line_end":324,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11668,"byte_end":11675,"line_start":328,"line_end":328,"column_start":5,"column_end":12},"name":"Refresh","qualname":"::event::Event::Refresh","value":"Event::Refresh","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Event fired regularly when a auto-refresh is set.\n","sig":null,"attributes":[{"value":"/ Event fired regularly when a auto-refresh is set.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11610,"byte_end":11663,"line_start":327,"line_end":327,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3581},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11821,"byte_end":11825,"line_start":332,"line_end":332,"column_start":5,"column_end":9},"name":"Char","qualname":"::event::Event::Char","value":"Event::Char(char)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A character was entered (includes numbers, punctuation, ...).\n","sig":null,"attributes":[{"value":"/ A character was entered (includes numbers, punctuation, ...).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11751,"byte_end":11816,"line_start":331,"line_end":331,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3584},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11896,"byte_end":11904,"line_start":334,"line_end":334,"column_start":5,"column_end":13},"name":"CtrlChar","qualname":"::event::Event::CtrlChar","value":"Event::CtrlChar(char)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A character was entered with the Ctrl key pressed.\n","sig":null,"attributes":[{"value":"/ A character was entered with the Ctrl key pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11837,"byte_end":11891,"line_start":333,"line_end":333,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3587},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11974,"byte_end":11981,"line_start":336,"line_end":336,"column_start":5,"column_end":12},"name":"AltChar","qualname":"::event::Event::AltChar","value":"Event::AltChar(char)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A character was entered with the Alt key pressed.\n","sig":null,"attributes":[{"value":"/ A character was entered with the Alt key pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11916,"byte_end":11969,"line_start":335,"line_end":335,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3590},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12035,"byte_end":12038,"line_start":339,"line_end":339,"column_start":5,"column_end":8},"name":"Key","qualname":"::event::Event::Key","value":"Event::Key(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11994,"byte_end":12030,"line_start":338,"line_end":338,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3593},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12117,"byte_end":12122,"line_start":341,"line_end":341,"column_start":5,"column_end":10},"name":"Shift","qualname":"::event::Event::Shift","value":"Event::Shift(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Shift key pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Shift key pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12049,"byte_end":12112,"line_start":340,"line_end":340,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12199,"byte_end":12202,"line_start":343,"line_end":343,"column_start":5,"column_end":8},"name":"Alt","qualname":"::event::Event::Alt","value":"Event::Alt(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Alt key pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Alt key pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12133,"byte_end":12194,"line_start":342,"line_end":342,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12290,"byte_end":12298,"line_start":345,"line_end":345,"column_start":5,"column_end":13},"name":"AltShift","qualname":"::event::Event::AltShift","value":"Event::AltShift(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Shift and Alt keys pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Shift and Alt keys pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12213,"byte_end":12285,"line_start":344,"line_end":344,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3602},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12376,"byte_end":12380,"line_start":347,"line_end":347,"column_start":5,"column_end":9},"name":"Ctrl","qualname":"::event::Event::Ctrl","value":"Event::Ctrl(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Ctrl key pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Ctrl key pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12309,"byte_end":12371,"line_start":346,"line_end":346,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3605},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12469,"byte_end":12478,"line_start":349,"line_end":349,"column_start":5,"column_end":14},"name":"CtrlShift","qualname":"::event::Event::CtrlShift","value":"Event::CtrlShift(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Ctrl and Shift keys pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Ctrl and Shift keys pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12391,"byte_end":12464,"line_start":348,"line_end":348,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3608},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12565,"byte_end":12572,"line_start":351,"line_end":351,"column_start":5,"column_end":12},"name":"CtrlAlt","qualname":"::event::Event::CtrlAlt","value":"Event::CtrlAlt(Key)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A non-character key was pressed with the Ctrl and Alt keys pressed.\n","sig":null,"attributes":[{"value":"/ A non-character key was pressed with the Ctrl and Alt keys pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12489,"byte_end":12560,"line_start":350,"line_end":350,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":3611},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12616,"byte_end":12621,"line_start":354,"line_end":354,"column_start":5,"column_end":10},"name":"Mouse","qualname":"::event::Event::Mouse","value":"Event::Mouse { offset, position, event }","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" A mouse event was sent.\n","sig":null,"attributes":[{"value":"/ A mouse event was sent.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12584,"byte_end":12611,"line_start":353,"line_end":353,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3615},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12989,"byte_end":12996,"line_start":365,"line_end":365,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::event::Event::Unknown","value":"Event::Unknown(Vec<u8>)","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" An unknown event was received.\n","sig":null,"attributes":[{"value":"/ An unknown event was received.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":12950,"byte_end":12984,"line_start":364,"line_end":364,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3618},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13242,"byte_end":13246,"line_start":373,"line_end":373,"column_start":5,"column_end":9},"name":"Exit","qualname":"::event::Event::Exit","value":"Event::Exit","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The application is about to exit.\n","sig":null,"attributes":[{"value":"/ The application is about to exit.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13200,"byte_end":13237,"line_start":372,"line_end":372,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":3576},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11531,"byte_end":11536,"line_start":323,"line_end":323,"column_start":10,"column_end":15},"name":"Event","qualname":"::event::Event","value":"Event::{WindowResize, Refresh, Char, CtrlChar, AltChar, Key, Shift, Alt, AltShift, Ctrl, CtrlShift, CtrlAlt, Mouse, Unknown, Exit}","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3590},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3599},{"krate":0,"index":3602},{"krate":0,"index":3605},{"krate":0,"index":3608},{"krate":0,"index":3611},{"krate":0,"index":3615},{"krate":0,"index":3618}],"decl_id":null,"docs":" Represents an event as seen by the application.\n","sig":null,"attributes":[{"value":"/ Represents an event as seen by the application.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":11425,"byte_end":11476,"line_start":321,"line_end":321,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13346,"byte_end":13360,"line_start":378,"line_end":378,"column_start":12,"column_end":26},"name":"mouse_position","qualname":"<Event>::mouse_position","value":"fn (&self) -> Option<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the mouse, if `self` is a mouse event.\n","sig":null,"attributes":[{"value":"/ Returns the position of the mouse, if `self` is a mouse event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13268,"byte_end":13334,"line_start":377,"line_end":377,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13659,"byte_end":13677,"line_start":389,"line_end":389,"column_start":12,"column_end":30},"name":"mouse_position_mut","qualname":"<Event>::mouse_position_mut","value":"fn (&mut self) -> Option<&mut Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the position of the mouse/","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the position of the mouse/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13523,"byte_end":13584,"line_start":386,"line_end":386,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13589,"byte_end":13592,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not a mouse event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13597,"byte_end":13647,"line_start":388,"line_end":388,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14043,"byte_end":14053,"line_start":404,"line_end":404,"column_start":12,"column_end":22},"name":"relativize","qualname":"<Event>::relativize","value":"fn <V> (&mut self, top_left: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update `self` with the given offset.","sig":null,"attributes":[{"value":"/ Update `self` with the given offset.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13885,"byte_end":13925,"line_start":400,"line_end":400,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13930,"byte_end":13933,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ If `self` is a mouse event, adds `top_left` to its offset.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13938,"byte_end":14000,"line_start":402,"line_end":402,"column_start":5,"column_end":67}},{"value":"/ Otherwise, do nothing.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14005,"byte_end":14031,"line_start":403,"line_end":403,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14414,"byte_end":14425,"line_start":417,"line_end":417,"column_start":12,"column_end":23},"name":"relativized","qualname":"<Event>::relativized","value":"fn <V> (&self, top_left: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a cloned, relativized event.","sig":null,"attributes":[{"value":"/ Returns a cloned, relativized event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14244,"byte_end":14284,"line_start":413,"line_end":413,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14289,"byte_end":14292,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ If `self` is a mouse event, adds `top_left` to its offset.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14297,"byte_end":14359,"line_start":415,"line_end":415,"column_start":5,"column_end":67}},{"value":"/ Otherwise, returns a simple clone.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14364,"byte_end":14402,"line_start":416,"line_end":416,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":85},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"view","qualname":"::view","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":142},{"krate":0,"index":154},{"krate":0,"index":187},{"krate":0,"index":223},{"krate":0,"index":240},{"krate":0,"index":249},{"krate":0,"index":254},{"krate":0,"index":278},{"krate":0,"index":290},{"krate":0,"index":315},{"krate":0,"index":323},{"krate":0,"index":357},{"krate":0,"index":364},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Base elements required to build views.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2749,"byte_end":2761,"line_start":103,"line_end":103,"column_start":1,"column_end":13}},{"value":"! Base elements required to build views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":14777,"byte_end":14819,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":14820,"byte_end":14823,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Views are the main building blocks of your UI.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":14824,"byte_end":14874,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":14875,"byte_end":14878,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A view can delegate part or all of its responsabilities to child views,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":14879,"byte_end":14954,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"! forming a view tree. The root of this tree is a `StackView` handled","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":14955,"byte_end":15026,"line_start":6,"line_end":6,"column_start":1,"column_end":72}},{"value":"! directly by the `Cursive` element.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15027,"byte_end":15065,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15066,"byte_end":15069,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Layout","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15070,"byte_end":15082,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15083,"byte_end":15086,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The layout phase is when the size and location of each view is computed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15087,"byte_end":15163,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15164,"byte_end":15167,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Each view is given an area of the screen by the `View::layout()` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15168,"byte_end":15244,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! With this, the view is free to plan its content, including calling","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15245,"byte_end":15315,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! `View::layout()` on its own children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15316,"byte_end":15357,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15358,"byte_end":15361,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! In order to determine how much space should be given each child, parents","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15362,"byte_end":15438,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! can use `View::required_size()` on them.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15439,"byte_end":15483,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15484,"byte_end":15487,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15488,"byte_end":15491,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ### Contracts","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15492,"byte_end":15509,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15510,"byte_end":15513,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! When building new Views, you should respect these contracts:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15514,"byte_end":15578,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15579,"byte_end":15582,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! * By default, `View::layout()` should be called before any call to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15583,"byte_end":15653,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"!   `View::draw()` with the same available size. The only exceptions is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15654,"byte_end":15727,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"!   when both following conditions are met:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15728,"byte_end":15773,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"!     * The available size has not changed since the last call to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15774,"byte_end":15841,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"!       `View::layout()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15842,"byte_end":15868,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"!     * `View::needs_relayout()` returns `false`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15869,"byte_end":15919,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15920,"byte_end":15923,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"!   In this case, it is safe to omit the call to `View::layout()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15924,"byte_end":15992,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15993,"byte_end":15996,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! * The value returned by `required_size` should be an actually viable size,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":15997,"byte_end":16075,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"!   no matter what the request is. This means calling `View::layout()` with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16076,"byte_end":16153,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"!   a size returned by `required_size` is **never** an error.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/mod.rs","byte_start":16154,"byte_end":16217,"line_start":36,"line_end":36,"column_start":1,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":99},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17730,"byte_end":17741,"line_start":23,"line_end":23,"column_start":11,"column_end":22},"name":"ViewWrapper","qualname":"::view::view_wrapper::ViewWrapper","value":"ViewWrapper: 'static","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125}],"decl_id":null,"docs":" Generic wrapper around a view.","sig":null,"attributes":[{"value":"/ Generic wrapper around a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17186,"byte_end":17220,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17221,"byte_end":17224,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait is a shortcut to implement `View` on a type by forwarding","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17225,"byte_end":17297,"line_start":11,"line_end":11,"column_start":1,"column_end":73}},{"value":"/ calls to a wrapped view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17298,"byte_end":17326,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17327,"byte_end":17330,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ You only need to define `with_view` and `with_view_mut`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17331,"byte_end":17390,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/ (the [`wrap_impl!`] macro can help you with that), and you will get","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17391,"byte_end":17462,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ the `View` implementation for free.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17463,"byte_end":17502,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17503,"byte_end":17506,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can also override any of the `wrap_*` methods for more specific","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17507,"byte_end":17578,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/ behaviors (the default implementations simply forwards the calls to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17579,"byte_end":17654,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ child view).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17655,"byte_end":17671,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17672,"byte_end":17675,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`wrap_impl!`]: ../macro.wrap_impl.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17676,"byte_end":17719,"line_start":22,"line_end":22,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":100},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17797,"byte_end":17798,"line_start":25,"line_end":25,"column_start":10,"column_end":11},"name":"V","qualname":"::view::view_wrapper::ViewWrapper::V","value":"type V: View + ?Sized;","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Type that this view wraps.\n","sig":null,"attributes":[{"value":"/ Type that this view wraps.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17757,"byte_end":17787,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18048,"byte_end":18057,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"with_view","qualname":"::view::view_wrapper::ViewWrapper::with_view","value":"fn <F, R> (&self, f: F) -> Option<R>","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Runs a function on the inner view, returning the result.","sig":null,"attributes":[{"value":"/ Runs a function on the inner view, returning the result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17820,"byte_end":17880,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17885,"byte_end":17888,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the inner view is unavailable.  This should only","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17893,"byte_end":17963,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ happen with some views if they are already borrowed by another call.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":17968,"byte_end":18040,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18367,"byte_end":18380,"line_start":39,"line_end":39,"column_start":8,"column_end":21},"name":"with_view_mut","qualname":"::view::view_wrapper::ViewWrapper::with_view_mut","value":"fn <F, R> (&mut self, f: F) -> Option<R>","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Runs a function on the inner view, returning the result.","sig":null,"attributes":[{"value":"/ Runs a function on the inner view, returning the result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18139,"byte_end":18199,"line_start":35,"line_end":35,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18204,"byte_end":18207,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the inner view is unavailable.  This should only","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18212,"byte_end":18282,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/ happen with some views if they are already borrowed by another call.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18287,"byte_end":18359,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18518,"byte_end":18528,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"into_inner","qualname":"::view::view_wrapper::ViewWrapper::into_inner","value":"fn (self) -> Result<Self::V, Self>","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Attempts to retrieve the inner view.\n","sig":null,"attributes":[{"value":"/ Attempts to retrieve the inner view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18470,"byte_end":18510,"line_start":43,"line_end":43,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18686,"byte_end":18695,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"wrap_draw","qualname":"::view::view_wrapper::ViewWrapper::wrap_draw","value":"fn (&self, printer: &Printer) -> ()","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `draw` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `draw` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18650,"byte_end":18678,"line_start":52,"line_end":52,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18825,"byte_end":18843,"line_start":58,"line_end":58,"column_start":8,"column_end":26},"name":"wrap_required_size","qualname":"::view::view_wrapper::ViewWrapper::wrap_required_size","value":"fn (&mut self, req: Vec2) -> Vec2","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `required_size` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `required_size` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18780,"byte_end":18817,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19020,"byte_end":19033,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"wrap_on_event","qualname":"::view::view_wrapper::ViewWrapper::wrap_on_event","value":"fn (&mut self, ch: Event) -> EventResult","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `on_event` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `on_event` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":18980,"byte_end":19012,"line_start":63,"line_end":63,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19214,"byte_end":19225,"line_start":70,"line_end":70,"column_start":8,"column_end":19},"name":"wrap_layout","qualname":"::view::view_wrapper::ViewWrapper::wrap_layout","value":"fn (&mut self, size: Vec2) -> ()","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `layout` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `layout` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19176,"byte_end":19206,"line_start":69,"line_end":69,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19352,"byte_end":19367,"line_start":75,"line_end":75,"column_start":8,"column_end":23},"name":"wrap_take_focus","qualname":"::view::view_wrapper::ViewWrapper::wrap_take_focus","value":"fn (&mut self, source: Direction) -> bool","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `take_focus` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `take_focus` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19310,"byte_end":19344,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19538,"byte_end":19554,"line_start":81,"line_end":81,"column_start":8,"column_end":24},"name":"wrap_call_on_any","qualname":"::view::view_wrapper::ViewWrapper::wrap_call_on_any","value":"fn <'a> (&mut self, selector: &Selector, callback: AnyCb<'a>) -> ()","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `find` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `find` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19502,"byte_end":19530,"line_start":80,"line_end":80,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19749,"byte_end":19764,"line_start":88,"line_end":88,"column_start":8,"column_end":23},"name":"wrap_focus_view","qualname":"::view::view_wrapper::ViewWrapper::wrap_focus_view","value":"fn (&mut self, selector: &Selector) -> Result<(), ()>","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `focus_view` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `focus_view` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19707,"byte_end":19741,"line_start":87,"line_end":87,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19961,"byte_end":19980,"line_start":94,"line_end":94,"column_start":8,"column_end":27},"name":"wrap_needs_relayout","qualname":"::view::view_wrapper::ViewWrapper::wrap_needs_relayout","value":"fn (&self) -> bool","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `needs_relayout` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `needs_relayout` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":19915,"byte_end":19953,"line_start":93,"line_end":93,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":20118,"byte_end":20137,"line_start":99,"line_end":99,"column_start":8,"column_end":27},"name":"wrap_important_area","qualname":"::view::view_wrapper::ViewWrapper::wrap_important_area","value":"fn (&self, size: Vec2) -> Rect","parent":{"krate":0,"index":99},"children":[],"decl_id":null,"docs":" Wraps the `important_area` method.\n","sig":null,"attributes":[{"value":"/ Wraps the `important_area` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":20072,"byte_end":20110,"line_start":98,"line_end":98,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":145},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23473,"byte_end":23480,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"name":"AnyView","qualname":"::view::any::AnyView","value":"AnyView","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"decl_id":null,"docs":" A view that can be downcasted to its concrete type.","sig":null,"attributes":[{"value":"/ A view that can be downcasted to its concrete type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23340,"byte_end":23395,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23396,"byte_end":23399,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This trait is automatically implemented for any `T: View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23400,"byte_end":23462,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23524,"byte_end":23530,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"as_any","qualname":"::view::any::AnyView::as_any","value":"fn (&self) -> &Any","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Downcast self to a `Any`.\n","sig":null,"attributes":[{"value":"/ Downcast self to a `Any`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23487,"byte_end":23516,"line_start":8,"line_end":8,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23597,"byte_end":23607,"line_start":12,"line_end":12,"column_start":8,"column_end":18},"name":"as_any_mut","qualname":"::view::any::AnyView::as_any_mut","value":"fn (&mut self) -> &mut Any","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Downcast self to a mutable `Any`.\n","sig":null,"attributes":[{"value":"/ Downcast self to a mutable `Any`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23552,"byte_end":23589,"line_start":11,"line_end":11,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":24053,"byte_end":24065,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"as_boxed_any","qualname":"::view::any::AnyView::as_boxed_any","value":"fn (self: Box<Self>) -> Box<Any>","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" Returns a boxed any from a boxed self.","sig":null,"attributes":[{"value":"/ Returns a boxed any from a boxed self.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23637,"byte_end":23679,"line_start":14,"line_end":14,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23684,"byte_end":23687,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Can be used before `Box::downcast()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23692,"byte_end":23733,"line_start":16,"line_end":16,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23738,"byte_end":23741,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23746,"byte_end":23760,"line_start":18,"line_end":18,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23765,"byte_end":23768,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23773,"byte_end":23784,"line_start":20,"line_end":20,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::TextView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23789,"byte_end":23824,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"/ # use cursive::view::View;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23829,"byte_end":23859,"line_start":22,"line_end":22,"column_start":5,"column_end":35}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23864,"byte_end":23881,"line_start":23,"line_end":23,"column_start":5,"column_end":22}},{"value":"/ let boxed: Box<View> = Box::new(TextView::new(\"text\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23886,"byte_end":23945,"line_start":24,"line_end":24,"column_start":5,"column_end":64}},{"value":"/ let text: Box<TextView> = boxed.as_boxed_any().downcast().unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":23950,"byte_end":24021,"line_start":25,"line_end":25,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":24026,"byte_end":24033,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":24038,"byte_end":24045,"line_start":27,"line_end":27,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24738,"byte_end":24744,"line_start":12,"line_end":12,"column_start":11,"column_end":17},"name":"Finder","qualname":"::view::finder::Finder","value":"Finder","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":166}],"decl_id":null,"docs":" Provides `call_on<V: View>` to views.","sig":null,"attributes":[{"value":"/ Provides `call_on<V: View>` to views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24472,"byte_end":24513,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24514,"byte_end":24517,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This trait is mostly a wrapper around [`View::call_on_any`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24518,"byte_end":24582,"line_start":7,"line_end":7,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24583,"byte_end":24586,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ It provides a nicer interface to find a view when you know its type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24587,"byte_end":24659,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24660,"byte_end":24663,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`View::call_on_any`]: ./trait.View.html#method.call_on_any","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24664,"byte_end":24727,"line_start":11,"line_end":11,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24921,"byte_end":24928,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"call_on","qualname":"::view::finder::Finder::call_on","value":"fn <V, F, R> (&mut self, sel: &Selector, callback: F) -> Option<R>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Tries to find the view pointed to by the given selector.","sig":null,"attributes":[{"value":"/ Tries to find the view pointed to by the given selector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24751,"byte_end":24811,"line_start":13,"line_end":13,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24816,"byte_end":24819,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ If the view is not found, or if it is not of the asked type,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24824,"byte_end":24888,"line_start":15,"line_end":15,"column_start":5,"column_end":69}},{"value":"/ it returns None.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":24893,"byte_end":24913,"line_start":16,"line_end":16,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":25136,"byte_end":25143,"line_start":23,"line_end":23,"column_start":8,"column_end":15},"name":"find_id","qualname":"::view::finder::Finder::find_id","value":"fn <V, F, R> (&mut self, id: &str, callback: F) -> Option<R>","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Convenient method to use `call_on` with a `view::Selector::Id`.\n","sig":null,"attributes":[{"value":"/ Convenient method to use `call_on` with a `view::Selector::Id`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":25061,"byte_end":25128,"line_start":22,"line_end":22,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":26361,"byte_end":26363,"line_start":64,"line_end":64,"column_start":5,"column_end":7},"name":"Id","qualname":"::view::finder::Selector::Id","value":"Selector::Id(&'a str)","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Selects a view from its ID.\n","sig":null,"attributes":[{"value":"/ Selects a view from its ID.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":26325,"byte_end":26356,"line_start":63,"line_end":63,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":26416,"byte_end":26420,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Path","qualname":"::view::finder::Selector::Path","value":"Selector::Path(&'a ViewPath)","parent":{"krate":0,"index":179},"children":[],"decl_id":null,"docs":" Selects a view from its path.\n","sig":null,"attributes":[{"value":"/ Selects a view from its path.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":26378,"byte_end":26411,"line_start":65,"line_end":65,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":179},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":26306,"byte_end":26314,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"Selector","qualname":"::view::finder::Selector","value":"Selector::{Id, Path}","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":184}],"decl_id":null,"docs":" Selects a single view (if any) in the tree.\n","sig":null,"attributes":[{"value":"/ Selects a single view (if any) in the tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":26249,"byte_end":26296,"line_start":61,"line_end":61,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":3634},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26570,"byte_end":26577,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"Margins","qualname":"::view::margins::Margins","value":"Margins { left, right, top, bottom }","parent":null,"children":[{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638}],"decl_id":null,"docs":" Four values representing each direction.\n","sig":null,"attributes":[{"value":"/ Four values representing each direction.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26491,"byte_end":26535,"line_start":4,"line_end":4,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3635},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26608,"byte_end":26612,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"left","qualname":"::view::margins::Margins::left","value":"usize","parent":{"krate":0,"index":3634},"children":[],"decl_id":null,"docs":" Left margin\n","sig":null,"attributes":[{"value":"/ Left margin","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26584,"byte_end":26599,"line_start":7,"line_end":7,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":3636},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26650,"byte_end":26655,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"right","qualname":"::view::margins::Margins::right","value":"usize","parent":{"krate":0,"index":3634},"children":[],"decl_id":null,"docs":" Right margin\n","sig":null,"attributes":[{"value":"/ Right margin","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26625,"byte_end":26641,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3637},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26691,"byte_end":26694,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"top","qualname":"::view::margins::Margins::top","value":"usize","parent":{"krate":0,"index":3634},"children":[],"decl_id":null,"docs":" Top margin\n","sig":null,"attributes":[{"value":"/ Top margin","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26668,"byte_end":26682,"line_start":11,"line_end":11,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":3638},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26733,"byte_end":26739,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"bottom","qualname":"::view::margins::Margins::bottom","value":"usize","parent":{"krate":0,"index":3634},"children":[],"decl_id":null,"docs":" Bottom margin\n","sig":null,"attributes":[{"value":"/ Bottom margin","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26707,"byte_end":26724,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26808,"byte_end":26811,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<Margins>::new","value":"fn (left: usize, right: usize, top: usize, bottom: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Margins.\n","sig":null,"attributes":[{"value":"/ Creates a new Margins.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26770,"byte_end":26796,"line_start":18,"line_end":18,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27026,"byte_end":27036,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Margins>::horizontal","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns left + right.\n","sig":null,"attributes":[{"value":"/ Returns left + right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26989,"byte_end":27014,"line_start":28,"line_end":28,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27134,"byte_end":27142,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Margins>::vertical","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns top + bottom.\n","sig":null,"attributes":[{"value":"/ Returns top + bottom.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27097,"byte_end":27122,"line_start":33,"line_end":33,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27252,"byte_end":27260,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"combined","qualname":"<Margins>::combined","value":"fn (&self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns (left+right, top+bottom).\n","sig":null,"attributes":[{"value":"/ Returns (left+right, top+bottom).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27203,"byte_end":27240,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27379,"byte_end":27387,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Margins>::top_left","value":"fn (&self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns (left, top).\n","sig":null,"attributes":[{"value":"/ Returns (left, top).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27343,"byte_end":27367,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27495,"byte_end":27504,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"bot_right","qualname":"<Margins>::bot_right","value":"fn (&self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns (right, bottom).\n","sig":null,"attributes":[{"value":"/ Returns (right, bottom).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27455,"byte_end":27483,"line_start":48,"line_end":48,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":227},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29758,"byte_end":29766,"line_start":6,"line_end":6,"column_start":10,"column_end":18},"name":"Position","qualname":"::view::position::Position","value":"XY<Offset>","parent":null,"children":[],"decl_id":null,"docs":" Location of the view on screen\n","sig":null,"attributes":[{"value":"/ Location of the view on screen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29714,"byte_end":29748,"line_start":5,"line_end":5,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29859,"byte_end":29865,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"center","qualname":"<Position>::center","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a position centered on both axis.\n","sig":null,"attributes":[{"value":"/ Returns a position centered on both axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29802,"byte_end":29847,"line_start":9,"line_end":9,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30000,"byte_end":30008,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"absolute","qualname":"<Position>::absolute","value":"fn <T> (offset: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a position absolute on both axis.\n","sig":null,"attributes":[{"value":"/ Returns a position absolute on both axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29943,"byte_end":29988,"line_start":14,"line_end":14,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30241,"byte_end":30247,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"parent","qualname":"<Position>::parent","value":"fn <T> (offset: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a position relative to the parent on both axis.\n","sig":null,"attributes":[{"value":"/ Returns a position relative to the parent on both axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30170,"byte_end":30229,"line_start":20,"line_end":20,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30732,"byte_end":30746,"line_start":32,"line_end":32,"column_start":12,"column_end":26},"name":"compute_offset","qualname":"<Position>::compute_offset","value":"fn <S, A, P> (&self, size: S, available: A, parent: P) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Computes the offset required to draw a view.","sig":null,"attributes":[{"value":"/ Computes the offset required to draw a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30410,"byte_end":30458,"line_start":26,"line_end":26,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30463,"byte_end":30466,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ When drawing a view with `size` in a container with `available`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30471,"byte_end":30539,"line_start":28,"line_end":28,"column_start":5,"column_end":73}},{"value":"/ and a parent with the absolute coordinates `parent`, drawing the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30544,"byte_end":30612,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/ child with its top-left corner at the returned coordinates will","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30617,"byte_end":30684,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ position him appropriately.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":30689,"byte_end":30720,"line_start":31,"line_end":31,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3643},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31317,"byte_end":31323,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Center","qualname":"::view::position::Offset::Center","value":"Offset::Center","parent":{"krate":0,"index":3642},"children":[],"decl_id":null,"docs":" In the center of the screen\n","sig":null,"attributes":[{"value":"/ In the center of the screen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31281,"byte_end":31312,"line_start":54,"line_end":54,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3645},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31393,"byte_end":31401,"line_start":57,"line_end":57,"column_start":5,"column_end":13},"name":"Absolute","qualname":"::view::position::Offset::Absolute","value":"Offset::Absolute(usize)","parent":{"krate":0,"index":3642},"children":[],"decl_id":null,"docs":" Place top-left corner at the given absolute coordinates\n","sig":null,"attributes":[{"value":"/ Place top-left corner at the given absolute coordinates","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31329,"byte_end":31388,"line_start":56,"line_end":56,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3648},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31542,"byte_end":31548,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"Parent","qualname":"::view::position::Offset::Parent","value":"Offset::Parent(isize)","parent":{"krate":0,"index":3642},"children":[],"decl_id":null,"docs":" Offset from the previous layer's top-left corner.","sig":null,"attributes":[{"value":"/ Offset from the previous layer's top-left corner.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31415,"byte_end":31468,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31473,"byte_end":31476,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ If this is the first layer, behaves like `Absolute`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31481,"byte_end":31537,"line_start":61,"line_end":61,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3642},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31268,"byte_end":31274,"line_start":53,"line_end":53,"column_start":10,"column_end":16},"name":"Offset","qualname":"::view::position::Offset","value":"Offset::{Center, Absolute, Parent}","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":3645},{"krate":0,"index":3648}],"decl_id":null,"docs":" Single-dimensional offset policy.\n","sig":null,"attributes":[{"value":"/ Single-dimensional offset policy.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31186,"byte_end":31223,"line_start":51,"line_end":51,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31652,"byte_end":31666,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"compute_offset","qualname":"<Offset>::compute_offset","value":"fn (&self, size: usize, available: usize, parent: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes a single-dimension offset requred to draw a view.\n","sig":null,"attributes":[{"value":"/ Computes a single-dimension offset requred to draw a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31578,"byte_end":31640,"line_start":66,"line_end":66,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3659},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":32975,"byte_end":32984,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SizeCache","qualname":"::view::size_cache::SizeCache","value":"SizeCache { value, constrained }","parent":null,"children":[{"krate":0,"index":3660},{"krate":0,"index":3661}],"decl_id":null,"docs":" Cache around a one-dimensional layout result.","sig":null,"attributes":[{"value":"/ Cache around a one-dimensional layout result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":32789,"byte_end":32838,"line_start":4,"line_end":4,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":32839,"byte_end":32842,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is not a View, but something to help you if you create your own Views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":32843,"byte_end":32922,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3660},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33016,"byte_end":33021,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"value","qualname":"::view::size_cache::SizeCache::value","value":"usize","parent":{"krate":0,"index":3659},"children":[],"decl_id":null,"docs":" Cached value\n","sig":null,"attributes":[{"value":"/ Cached value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":32991,"byte_end":33007,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3661},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33192,"byte_end":33203,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"name":"constrained","qualname":"::view::size_cache::SizeCache::constrained","value":"bool","parent":{"krate":0,"index":3659},"children":[],"decl_id":null,"docs":" `true` if the last size was constrained.","sig":null,"attributes":[{"value":"/ `true` if the last size was constrained.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33034,"byte_end":33078,"line_start":11,"line_end":11,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33083,"byte_end":33086,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If unconstrained, any request larger than this value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33091,"byte_end":33147,"line_start":13,"line_end":13,"column_start":5,"column_end":61}},{"value":"/ would return the same size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33152,"byte_end":33183,"line_start":14,"line_end":14,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33276,"byte_end":33279,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<SizeCache>::new","value":"fn (value: usize, constrained: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sized cache\n","sig":null,"attributes":[{"value":"/ Creates a new sized cache","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33235,"byte_end":33264,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33455,"byte_end":33461,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"accept","qualname":"<SizeCache>::accept","value":"fn (self, request: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is still valid for the given `request`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is still valid for the given `request`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33375,"byte_end":33443,"line_start":24,"line_end":24,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33720,"byte_end":33725,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"value","qualname":"<SizeCache>::value","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the value in the cache.\n","sig":null,"attributes":[{"value":"/ Returns the value in the cache.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33673,"byte_end":33708,"line_start":35,"line_end":35,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34263,"byte_end":34268,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"build","qualname":"<SizeCache>::build","value":"fn (size: Vec2, req: Vec2) -> XY<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new bi-dimensional cache.","sig":null,"attributes":[{"value":"/ Creates a new bi-dimensional cache.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33773,"byte_end":33812,"line_start":40,"line_end":40,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33817,"byte_end":33820,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ It will stay valid for the same request, and compatible ones.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33825,"byte_end":33890,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33895,"byte_end":33898,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ A compatible request is one where, for each axis, either:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33903,"byte_end":33964,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33969,"byte_end":33972,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ * the request is equal to the cached size, or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33977,"byte_end":34026,"line_start":46,"line_end":46,"column_start":5,"column_end":54}},{"value":"/ * the request is larger than the cached size and the cache is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34031,"byte_end":34096,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/   unconstrained","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34101,"byte_end":34120,"line_start":48,"line_end":48,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34125,"byte_end":34128,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Notes:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34133,"byte_end":34143,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34148,"byte_end":34151,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ * `size` must fit inside `req`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34156,"byte_end":34191,"line_start":52,"line_end":52,"column_start":5,"column_end":40}},{"value":"/ * for each dimension, `constrained = (size == req)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":34196,"byte_end":34251,"line_start":53,"line_end":53,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3672},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34697,"byte_end":34701,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Free","qualname":"::view::size_constraint::SizeConstraint::Free","value":"SizeConstraint::Free","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" No constraint imposed, the child view's response is used.\n","sig":null,"attributes":[{"value":"/ No constraint imposed, the child view's response is used.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34631,"byte_end":34692,"line_start":10,"line_end":10,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3674},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34782,"byte_end":34786,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"Full","qualname":"::view::size_constraint::SizeConstraint::Full","value":"SizeConstraint::Full","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Tries to take all available space, no matter what the child needs.\n","sig":null,"attributes":[{"value":"/ Tries to take all available space, no matter what the child needs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34707,"byte_end":34777,"line_start":12,"line_end":12,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3676},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34865,"byte_end":34870,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::view::size_constraint::SizeConstraint::Fixed","value":"SizeConstraint::Fixed(usize)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Always return the included size, no matter what the child needs.\n","sig":null,"attributes":[{"value":"/ Always return the included size, no matter what the child needs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34792,"byte_end":34860,"line_start":14,"line_end":14,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3679},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34960,"byte_end":34966,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"AtMost","qualname":"::view::size_constraint::SizeConstraint::AtMost","value":"SizeConstraint::AtMost(usize)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Returns the minimum of the included value and the child view's size.\n","sig":null,"attributes":[{"value":"/ Returns the minimum of the included value and the child view's size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34883,"byte_end":34955,"line_start":16,"line_end":16,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3682},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35056,"byte_end":35063,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"AtLeast","qualname":"::view::size_constraint::SizeConstraint::AtLeast","value":"SizeConstraint::AtLeast(usize)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Returns the maximum of the included value and the child view's size.\n","sig":null,"attributes":[{"value":"/ Returns the maximum of the included value and the child view's size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34979,"byte_end":35051,"line_start":18,"line_end":18,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":3671},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34610,"byte_end":34624,"line_start":9,"line_end":9,"column_start":10,"column_end":24},"name":"SizeConstraint","qualname":"::view::size_constraint::SizeConstraint","value":"SizeConstraint::{Free, Full, Fixed, AtMost, AtLeast}","parent":null,"children":[{"krate":0,"index":3672},{"krate":0,"index":3674},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3682}],"decl_id":null,"docs":" Single-dimensional constraint on a view size.","sig":null,"attributes":[{"value":"/ Single-dimensional constraint on a view size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34408,"byte_end":34457,"line_start":3,"line_end":3,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34458,"byte_end":34461,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This describes a possible behaviour for a [`BoxView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34462,"byte_end":34520,"line_start":5,"line_end":5,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34521,"byte_end":34524,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`BoxView`]: ../views/struct.BoxView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":34525,"byte_end":34570,"line_start":7,"line_end":7,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35221,"byte_end":35230,"line_start":26,"line_end":26,"column_start":12,"column_end":21},"name":"available","qualname":"<SizeConstraint>::available","value":"fn (self, available: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size to be given to the child.","sig":null,"attributes":[{"value":"/ Returns the size to be given to the child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35101,"byte_end":35147,"line_start":23,"line_end":23,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35152,"byte_end":35155,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ When `available` is offered to the `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35160,"byte_end":35209,"line_start":25,"line_end":25,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35746,"byte_end":35752,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"result","qualname":"<SizeConstraint>::result","value":"fn (self, (result, available): (usize, usize)) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the size the child view should actually use.","sig":null,"attributes":[{"value":"/ Returns the size the child view should actually use.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35629,"byte_end":35685,"line_start":38,"line_end":38,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35690,"byte_end":35693,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ When it said it wanted `result`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35698,"byte_end":35734,"line_start":40,"line_end":40,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":267},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36391,"byte_end":36395,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"name":"View","qualname":"::view::view::View","value":"View: Any + AnyView","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277}],"decl_id":null,"docs":" Main trait defining a view behaviour.","sig":null,"attributes":[{"value":"/ Main trait defining a view behaviour.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36272,"byte_end":36313,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36314,"byte_end":36317,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is what you should implement to define a custom View.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36318,"byte_end":36380,"line_start":11,"line_end":11,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36560,"byte_end":36564,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"draw","qualname":"::view::view::View::draw","value":"fn (&self, printer: &Printer) -> ()","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Draws the view with the given printer (includes bounds) and focus.","sig":null,"attributes":[{"value":"/ Draws the view with the given printer (includes bounds) and focus.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36417,"byte_end":36487,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36492,"byte_end":36495,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This is the only *required* method to implement.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36500,"byte_end":36552,"line_start":15,"line_end":15,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36978,"byte_end":36984,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"layout","qualname":"::view::view::View::layout","value":"fn (&mut self, Vec2) -> ()","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Called once the size for this view has been decided.","sig":null,"attributes":[{"value":"/ Called once the size for this view has been decided.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36597,"byte_end":36653,"line_start":18,"line_end":18,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36658,"byte_end":36661,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ It can be used to pre-compute the configuration of child views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36666,"byte_end":36733,"line_start":20,"line_end":20,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36738,"byte_end":36741,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ View groups should propagate the information to their children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36746,"byte_end":36813,"line_start":22,"line_end":22,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36818,"byte_end":36821,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ At this point, the given size is final and cannot be negociated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36826,"byte_end":36894,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ It is guaranteed to be the size available for the call to `draw()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36899,"byte_end":36970,"line_start":25,"line_end":25,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37591,"byte_end":37605,"line_start":39,"line_end":39,"column_start":8,"column_end":22},"name":"needs_relayout","qualname":"::view::view::View::needs_relayout","value":"fn (&self) -> bool","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Returns `true` if the view content changed since last layout phase.","sig":null,"attributes":[{"value":"/ Returns `true` if the view content changed since last layout phase.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37010,"byte_end":37081,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37086,"byte_end":37089,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is mostly an optimisation for views where the layout phase is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37094,"byte_end":37164,"line_start":30,"line_end":30,"column_start":5,"column_end":75}},{"value":"/ expensive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37169,"byte_end":37183,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37188,"byte_end":37191,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ * Views can ignore it and always return true (default implementation).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37196,"byte_end":37270,"line_start":33,"line_end":33,"column_start":5,"column_end":79}},{"value":"/   They will always be assumed to have changed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37275,"byte_end":37325,"line_start":34,"line_end":34,"column_start":5,"column_end":55}},{"value":"/ * View Groups can ignore it and always re-layout their children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37330,"byte_end":37398,"line_start":35,"line_end":35,"column_start":5,"column_end":73}},{"value":"/     * If they call `required_size` or `layout` with stable parameters,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37403,"byte_end":37477,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/       the children may cache the result themselves and speed up the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37482,"byte_end":37553,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/       process anyway.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37558,"byte_end":37583,"line_start":38,"line_end":38,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38073,"byte_end":38086,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"required_size","qualname":"::view::view::View::required_size","value":"fn (&mut self, constraint: Vec2) -> Vec2","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Returns the minimum size the view requires with the given restrictions.","sig":null,"attributes":[{"value":"/ Returns the minimum size the view requires with the given restrictions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37647,"byte_end":37722,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37727,"byte_end":37730,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is the main way a view communicate its size to its parent.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37735,"byte_end":37802,"line_start":45,"line_end":45,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37807,"byte_end":37810,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ If the view is flexible (it has multiple size options), it can try","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37815,"byte_end":37885,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/ to return one that fits the given `constraint`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37890,"byte_end":37941,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/ It's also fine to ignore it and return a fixed value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":37946,"byte_end":38003,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38008,"byte_end":38011,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Default implementation always return `(1,1)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38016,"byte_end":38065,"line_start":51,"line_end":51,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38406,"byte_end":38414,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"on_event","qualname":"::view::view::View::on_event","value":"fn (&mut self, Event) -> EventResult","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Called when an event is received (key press, mouse event, ...).","sig":null,"attributes":[{"value":"/ Called when an event is received (key press, mouse event, ...).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38189,"byte_end":38256,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38261,"byte_end":38264,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ You can return an `EventResult`, with an optional callback to be run.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38269,"byte_end":38342,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38347,"byte_end":38350,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Default implementation just ignores it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38355,"byte_end":38398,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38864,"byte_end":38875,"line_start":76,"line_end":76,"column_start":8,"column_end":19},"name":"call_on_any","qualname":"::view::view::View::call_on_any","value":"fn <'a> (&mut self, _: &Selector, _: AnyCb<'a>) -> ()","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Runs a closure on the view identified by the given selector.","sig":null,"attributes":[{"value":"/ Runs a closure on the view identified by the given selector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38490,"byte_end":38554,"line_start":66,"line_end":66,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38559,"byte_end":38562,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ See [`Finder::call_on`] for a nicer interface, implemented for all","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38567,"byte_end":38637,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38642,"byte_end":38652,"line_start":69,"line_end":69,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38657,"byte_end":38660,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [`Finder::call_on`]: trait.Finder.html#method.call_on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38665,"byte_end":38722,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38727,"byte_end":38730,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If the selector doesn't find a match, the closure will not be run.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38735,"byte_end":38805,"line_start":73,"line_end":73,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38810,"byte_end":38813,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Default implementation is a no-op.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38818,"byte_end":38856,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39186,"byte_end":39196,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"focus_view","qualname":"::view::view::View::focus_view","value":"fn (&mut self, &Selector) -> Result<(), ()>","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Moves the focus to the view identified by the given selector.","sig":null,"attributes":[{"value":"/ Moves the focus to the view identified by the given selector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":38979,"byte_end":39044,"line_start":80,"line_end":80,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39049,"byte_end":39052,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok(())` if the view was found and selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39057,"byte_end":39113,"line_start":82,"line_end":82,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39118,"byte_end":39121,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Default implementation simply returns `Err(())`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39126,"byte_end":39178,"line_start":84,"line_end":84,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39508,"byte_end":39518,"line_start":95,"line_end":95,"column_start":8,"column_end":18},"name":"take_focus","qualname":"::view::view::View::take_focus","value":"fn (&mut self, source: Direction) -> bool","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" This view is offered focus. Will it take it?","sig":null,"attributes":[{"value":"/ This view is offered focus. Will it take it?","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39266,"byte_end":39314,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39319,"byte_end":39322,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ `source` indicates where the focus comes from.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39327,"byte_end":39377,"line_start":91,"line_end":91,"column_start":5,"column_end":55}},{"value":"/ When the source is unclear, `Front` is usually used.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39382,"byte_end":39438,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39443,"byte_end":39446,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Default implementation always return `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39451,"byte_end":39500,"line_start":94,"line_end":94,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39914,"byte_end":39928,"line_start":108,"line_end":108,"column_start":8,"column_end":22},"name":"important_area","qualname":"::view::view::View::important_area","value":"fn (&self, view_size: Vec2) -> Rect","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" What part of the view is important and should be visible?","sig":null,"attributes":[{"value":"/ What part of the view is important and should be visible?","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39608,"byte_end":39669,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39674,"byte_end":39677,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ When only part of this view can be visible, this helps","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39682,"byte_end":39740,"line_start":102,"line_end":102,"column_start":5,"column_end":63}},{"value":"/ determine which part.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39745,"byte_end":39770,"line_start":103,"line_end":103,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39775,"byte_end":39778,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ It is given the view size (same size given to `layout`).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39783,"byte_end":39843,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39848,"byte_end":39851,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Default implementation return the entire view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":39856,"byte_end":39906,"line_start":107,"line_end":107,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40080,"byte_end":40088,"line_start":2,"line_end":2,"column_start":12,"column_end":20},"name":"ViewPath","qualname":"::view::view_path::ViewPath","value":"ViewPath { path }","parent":null,"children":[{"krate":0,"index":280}],"decl_id":null,"docs":" Represents a path to a single view in the layout.\n","sig":null,"attributes":[{"value":"/ Represents a path to a single view in the layout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40015,"byte_end":40068,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":280},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40235,"byte_end":40239,"line_start":5,"line_end":5,"column_start":9,"column_end":13},"name":"path","qualname":"::view::view_path::ViewPath::path","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":279},"children":[],"decl_id":null,"docs":" List of turns to make on decision nodes when descending the view tree.\n Simple nodes (with one fixed child) are skipped.\n","sig":null,"attributes":[{"value":"/ List of turns to make on decision nodes when descending the view tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40095,"byte_end":40169,"line_start":3,"line_end":3,"column_start":5,"column_end":79}},{"value":"/ Simple nodes (with one fixed child) are skipped.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40174,"byte_end":40226,"line_start":4,"line_end":4,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40342,"byte_end":40345,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<ViewPath>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty path.\n","sig":null,"attributes":[{"value":"/ Creates a new empty path.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40301,"byte_end":40330,"line_start":11,"line_end":11,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40458,"byte_end":40462,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"from","qualname":"<ViewPath>::from","value":"fn <T> (path: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a path from the given item.\n","sig":null,"attributes":[{"value":"/ Creates a path from the given item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40407,"byte_end":40446,"line_start":16,"line_end":16,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":285},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40607,"byte_end":40613,"line_start":23,"line_end":23,"column_start":11,"column_end":17},"name":"ToPath","qualname":"::view::view_path::ToPath","value":"ToPath","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" Generic trait for elements that can be converted into a `ViewPath`.\n","sig":null,"attributes":[{"value":"/ Generic trait for elements that can be converted into a `ViewPath`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40525,"byte_end":40596,"line_start":22,"line_end":22,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40664,"byte_end":40671,"line_start":25,"line_end":25,"column_start":8,"column_end":15},"name":"to_path","qualname":"::view::view_path::ToPath::to_path","value":"fn (self) -> ViewPath","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Creates a path from the element.\n","sig":null,"attributes":[{"value":"/ Creates a path from the element.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40620,"byte_end":40656,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41011,"byte_end":41018,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Boxable","qualname":"::view::boxable::Boxable","value":"Boxable: View + Sized","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" Makes a view wrappable in a [`BoxView`].","sig":null,"attributes":[{"value":"/ Makes a view wrappable in a [`BoxView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":40906,"byte_end":40950,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":40951,"byte_end":40954,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`BoxView`]: ../views/struct.BoxView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":40955,"byte_end":41000,"line_start":7,"line_end":7,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41111,"byte_end":41116,"line_start":10,"line_end":10,"column_start":8,"column_end":13},"name":"boxed","qualname":"::view::boxable::Boxable::boxed","value":"fn (self, width: SizeConstraint, height: SizeConstraint) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BoxView` with the given size constraints.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BoxView` with the given size constraints.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41039,"byte_end":41103,"line_start":9,"line_end":9,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41310,"byte_end":41320,"line_start":17,"line_end":17,"column_start":8,"column_end":18},"name":"fixed_size","qualname":"::view::boxable::Boxable::fixed_size","value":"fn <S> (self, size: S) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a fixed-size `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a fixed-size `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41257,"byte_end":41302,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41480,"byte_end":41491,"line_start":22,"line_end":22,"column_start":8,"column_end":19},"name":"fixed_width","qualname":"::view::boxable::Boxable::fixed_width","value":"fn (self, width: usize) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a fixed-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a fixed-width `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41426,"byte_end":41472,"line_start":21,"line_end":21,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41643,"byte_end":41655,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"fixed_height","qualname":"::view::boxable::Boxable::fixed_height","value":"fn (self, height: usize) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a fixed-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a fixed-width `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41589,"byte_end":41635,"line_start":26,"line_end":26,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41810,"byte_end":41821,"line_start":32,"line_end":32,"column_start":8,"column_end":19},"name":"full_screen","qualname":"::view::boxable::Boxable::full_screen","value":"fn (self) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a full-screen `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a full-screen `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41756,"byte_end":41802,"line_start":31,"line_end":31,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41951,"byte_end":41961,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"full_width","qualname":"::view::boxable::Boxable::full_width","value":"fn (self) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a full-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a full-width `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41898,"byte_end":41943,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42091,"byte_end":42102,"line_start":42,"line_end":42,"column_start":8,"column_end":19},"name":"full_height","qualname":"::view::boxable::Boxable::full_height","value":"fn (self) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a full-height `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a full-height `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42037,"byte_end":42083,"line_start":41,"line_end":41,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42234,"byte_end":42242,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"max_size","qualname":"::view::boxable::Boxable::max_size","value":"fn <S> (self, size: S) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a limited-size `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a limited-size `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42179,"byte_end":42226,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42402,"byte_end":42411,"line_start":52,"line_end":52,"column_start":8,"column_end":17},"name":"max_width","qualname":"::view::boxable::Boxable::max_width","value":"fn (self, max_width: usize) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a limited-width `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a limited-width `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42346,"byte_end":42394,"line_start":51,"line_end":51,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42572,"byte_end":42582,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"max_height","qualname":"::view::boxable::Boxable::max_height","value":"fn (self, max_height: usize) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a limited-height `BoxView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a limited-height `BoxView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42515,"byte_end":42564,"line_start":56,"line_end":56,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42753,"byte_end":42761,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"min_size","qualname":"::view::boxable::Boxable::min_size","value":"fn <S> (self, size: S) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` into a `BoxView` at least sized `size`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` into a `BoxView` at least sized `size`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42689,"byte_end":42745,"line_start":61,"line_end":61,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42931,"byte_end":42940,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"min_width","qualname":"::view::boxable::Boxable::min_width","value":"fn (self, min_width: usize) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BoxView` at least `min_width` wide.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BoxView` at least `min_width` wide.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":42865,"byte_end":42923,"line_start":66,"line_end":66,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":43111,"byte_end":43121,"line_start":72,"line_end":72,"column_start":8,"column_end":18},"name":"min_height","qualname":"::view::boxable::Boxable::min_height","value":"fn (self, min_height: usize) -> BoxView<Self>","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Wraps `self` in a `BoxView` at least `min_height` tall.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `BoxView` at least `min_height` tall.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":43044,"byte_end":43103,"line_start":71,"line_end":71,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":318},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43397,"byte_end":43409,"line_start":7,"line_end":7,"column_start":11,"column_end":23},"name":"Identifiable","qualname":"::view::identifiable::Identifiable","value":"Identifiable: View + Sized","parent":null,"children":[{"krate":0,"index":319}],"decl_id":null,"docs":" Makes a view wrappable in an [`IdView`].","sig":null,"attributes":[{"value":"/ Makes a view wrappable in an [`IdView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43294,"byte_end":43338,"line_start":4,"line_end":4,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43339,"byte_end":43342,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`IdView`]: ../views/struct.IdView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43343,"byte_end":43386,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44558,"byte_end":44565,"line_start":44,"line_end":44,"column_start":8,"column_end":15},"name":"with_id","qualname":"::view::identifiable::Identifiable::with_id","value":"fn <S> (self, id: S) -> IdView<Self>","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Wraps this view into an `IdView` with the given id.","sig":null,"attributes":[{"value":"/ Wraps this view into an `IdView` with the given id.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43430,"byte_end":43485,"line_start":8,"line_end":8,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43490,"byte_end":43493,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ This is just a shortcut for `IdView::new(id, self)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43498,"byte_end":43553,"line_start":10,"line_end":10,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43558,"byte_end":43561,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ You can use the given id to find the view in the layout tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43566,"byte_end":43631,"line_start":12,"line_end":12,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43636,"byte_end":43639,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43644,"byte_end":43658,"line_start":14,"line_end":14,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43663,"byte_end":43666,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43671,"byte_end":43682,"line_start":16,"line_end":16,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43687,"byte_end":43714,"line_start":17,"line_end":17,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::TextView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43719,"byte_end":43754,"line_start":18,"line_end":18,"column_start":5,"column_end":40}},{"value":"/ # use cursive::view::Boxable;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43759,"byte_end":43792,"line_start":19,"line_end":19,"column_start":5,"column_end":38}},{"value":"/ use cursive::view::Identifiable;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43797,"byte_end":43833,"line_start":20,"line_end":20,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43838,"byte_end":43841,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43846,"byte_end":43881,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/ siv.add_layer(","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43886,"byte_end":43904,"line_start":23,"line_end":23,"column_start":5,"column_end":23}},{"value":"/     TextView::new(\"foo\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43909,"byte_end":43937,"line_start":24,"line_end":24,"column_start":5,"column_end":33}},{"value":"/         .with_id(\"text\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43942,"byte_end":43970,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/         .fixed_width(10)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43975,"byte_end":44003,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44008,"byte_end":44014,"line_start":27,"line_end":27,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44019,"byte_end":44022,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ // You could call this from an event callback","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44027,"byte_end":44076,"line_start":29,"line_end":29,"column_start":5,"column_end":54}},{"value":"/ siv.call_on_id(\"text\", |view: &mut TextView| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44081,"byte_end":44131,"line_start":30,"line_end":30,"column_start":5,"column_end":55}},{"value":"/     view.set_content(\"New content!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44136,"byte_end":44177,"line_start":31,"line_end":31,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44182,"byte_end":44189,"line_start":32,"line_end":32,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44194,"byte_end":44201,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44206,"byte_end":44209,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44214,"byte_end":44225,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44230,"byte_end":44233,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ You should call this directly on the view you want to retrieve later,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44238,"byte_end":44311,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ before other wrappers like [`fixed_width`]. Otherwise, you would be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44316,"byte_end":44387,"line_start":38,"line_end":38,"column_start":5,"column_end":76}},{"value":"/ retrieving a [`BoxView`]!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44392,"byte_end":44421,"line_start":39,"line_end":39,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44426,"byte_end":44429,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ [`fixed_width`]: trait.Boxable.html#method.fixed_width","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44434,"byte_end":44492,"line_start":41,"line_end":41,"column_start":5,"column_end":63}},{"value":"/ [`BoxView`]: ../views/struct.BoxView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44497,"byte_end":44542,"line_start":42,"line_end":42,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44547,"byte_end":44550,"line_start":43,"line_end":43,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45015,"byte_end":45025,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"ScrollBase","qualname":"::view::scroll::ScrollBase","value":"ScrollBase { start_line, content_height, view_height, scrollbar_offset, right_padding, thumb_grab }","parent":null,"children":[{"krate":0,"index":3693},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698}],"decl_id":null,"docs":" Provide scrolling functionalities to a view.","sig":null,"attributes":[{"value":"/ Provide scrolling functionalities to a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":44823,"byte_end":44871,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":44872,"byte_end":44875,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ You're not supposed to use this directly,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":44876,"byte_end":44921,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ but it can be helpful if you create your own Views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":44922,"byte_end":44977,"line_start":10,"line_end":10,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3693},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45063,"byte_end":45073,"line_start":14,"line_end":14,"column_start":9,"column_end":19},"name":"start_line","qualname":"::view::scroll::ScrollBase::start_line","value":"usize","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" First line visible\n","sig":null,"attributes":[{"value":"/ First line visible","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45032,"byte_end":45054,"line_start":13,"line_end":13,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3694},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45114,"byte_end":45128,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"content_height","qualname":"::view::scroll::ScrollBase::content_height","value":"usize","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" Content height\n","sig":null,"attributes":[{"value":"/ Content height","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45087,"byte_end":45105,"line_start":16,"line_end":16,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3695},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45180,"byte_end":45191,"line_start":20,"line_end":20,"column_start":9,"column_end":20},"name":"view_height","qualname":"::view::scroll::ScrollBase::view_height","value":"usize","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" Number of lines displayed\n","sig":null,"attributes":[{"value":"/ Number of lines displayed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45142,"byte_end":45171,"line_start":19,"line_end":19,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3696},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45458,"byte_end":45474,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"scrollbar_offset","qualname":"::view::scroll::ScrollBase::scrollbar_offset","value":"usize","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" Padding for the scrollbar","sig":null,"attributes":[{"value":"/ Padding for the scrollbar","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45205,"byte_end":45234,"line_start":22,"line_end":22,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45239,"byte_end":45242,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If present, the scrollbar will be shifted","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45247,"byte_end":45292,"line_start":24,"line_end":24,"column_start":5,"column_end":50}},{"value":"/ `scrollbar_offset` columns to the left.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45297,"byte_end":45340,"line_start":25,"line_end":25,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45345,"byte_end":45348,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ (Useful when each item includes its own side borders,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45353,"byte_end":45410,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/ to draw the scrollbar inside.)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45415,"byte_end":45449,"line_start":28,"line_end":28,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3697},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45542,"byte_end":45555,"line_start":32,"line_end":32,"column_start":9,"column_end":22},"name":"right_padding","qualname":"::view::scroll::ScrollBase::right_padding","value":"usize","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" Blank between the text and the scrollbar.\n","sig":null,"attributes":[{"value":"/ Blank between the text and the scrollbar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45488,"byte_end":45533,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3698},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45627,"byte_end":45637,"line_start":35,"line_end":35,"column_start":9,"column_end":19},"name":"thumb_grab","qualname":"::view::scroll::ScrollBase::thumb_grab","value":"std::option::Option<usize>","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":" Initial position of the cursor when dragging.\n","sig":null,"attributes":[{"value":"/ Initial position of the cursor when dragging.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45569,"byte_end":45618,"line_start":34,"line_end":34,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3704},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45800,"byte_end":45807,"line_start":42,"line_end":42,"column_start":5,"column_end":12},"name":"KeepRow","qualname":"::view::scroll::ScrollStrategy::KeepRow","value":"ScrollStrategy::KeepRow","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":" Keeps the same row number\n","sig":null,"attributes":[{"value":"/ Keeps the same row number","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45766,"byte_end":45795,"line_start":41,"line_end":41,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3706},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45840,"byte_end":45850,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"StickToTop","qualname":"::view::scroll::ScrollStrategy::StickToTop","value":"ScrollStrategy::StickToTop","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":" Sticks to the top.\n","sig":null,"attributes":[{"value":"/ Sticks to the top.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45813,"byte_end":45835,"line_start":43,"line_end":43,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3708},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45898,"byte_end":45911,"line_start":46,"line_end":46,"column_start":5,"column_end":18},"name":"StickToBottom","qualname":"::view::scroll::ScrollStrategy::StickToBottom","value":"ScrollStrategy::StickToBottom","parent":{"krate":0,"index":3703},"children":[],"decl_id":null,"docs":" Sticks to the bottom of the view.\n","sig":null,"attributes":[{"value":"/ Sticks to the bottom of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45856,"byte_end":45893,"line_start":45,"line_end":45,"column_start":5,"column_end":42}}]},{"kind":"Enum","id":{"krate":0,"index":3703},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45745,"byte_end":45759,"line_start":40,"line_end":40,"column_start":10,"column_end":24},"name":"ScrollStrategy","qualname":"::view::scroll::ScrollStrategy","value":"ScrollStrategy::{KeepRow, StickToTop, StickToBottom}","parent":null,"children":[{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3708}],"decl_id":null,"docs":" Defines the scrolling behaviour on content or size change\n","sig":null,"attributes":[{"value":"/ Defines the scrolling behaviour on content or size change","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45657,"byte_end":45718,"line_start":38,"line_end":38,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46095,"byte_end":46098,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<ScrollBase>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, uninitialized scrollbar.\n","sig":null,"attributes":[{"value":"/ Creates a new, uninitialized scrollbar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46040,"byte_end":46083,"line_start":56,"line_end":56,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46563,"byte_end":46579,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"scrollbar_offset","qualname":"<ScrollBase>::scrollbar_offset","value":"fn (mut self, offset: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shifts the scrollbar toward the inside of the view.","sig":null,"attributes":[{"value":"/ Shifts the scrollbar toward the inside of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46332,"byte_end":46387,"line_start":68,"line_end":68,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46392,"byte_end":46395,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Used by views that draw their side borders in the children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46400,"byte_end":46463,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ Pushing the scrollbar to the left allows it to stay inside","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46468,"byte_end":46530,"line_start":71,"line_end":71,"column_start":5,"column_end":67}},{"value":"/ the borders.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46535,"byte_end":46551,"line_start":72,"line_end":72,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46792,"byte_end":46805,"line_start":81,"line_end":81,"column_start":12,"column_end":25},"name":"right_padding","qualname":"<ScrollBase>::right_padding","value":"fn (mut self, padding: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of blank cells between the text and the scrollbar.","sig":null,"attributes":[{"value":"/ Sets the number of blank cells between the text and the scrollbar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46679,"byte_end":46749,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46754,"byte_end":46757,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Defaults to 1.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46762,"byte_end":46780,"line_start":80,"line_end":80,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46974,"byte_end":46985,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"set_heights","qualname":"<ScrollBase>::set_heights","value":"fn (&mut self, view_height: usize, content_height: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call this method whem the content or the view changes.\n","sig":null,"attributes":[{"value":"/ Call this method whem the content or the view changes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46904,"byte_end":46962,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47479,"byte_end":47489,"line_start":102,"line_end":102,"column_start":12,"column_end":22},"name":"scrollable","qualname":"<ScrollBase>::scrollable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `TRUE` if the view needs to scroll.\n","sig":null,"attributes":[{"value":"/ Returns `TRUE` if the view needs to scroll.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47420,"byte_end":47467,"line_start":101,"line_end":101,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47621,"byte_end":47634,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"can_scroll_up","qualname":"<ScrollBase>::can_scroll_up","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `TRUE` unless we are at the top.\n","sig":null,"attributes":[{"value":"/ Returns `TRUE` unless we are at the top.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47565,"byte_end":47609,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47750,"byte_end":47765,"line_start":112,"line_end":112,"column_start":12,"column_end":27},"name":"can_scroll_down","qualname":"<ScrollBase>::can_scroll_down","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `TRUE` unless we are at the bottom.\n","sig":null,"attributes":[{"value":"/ Returns `TRUE` unless we are at the bottom.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47691,"byte_end":47738,"line_start":111,"line_end":111,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47905,"byte_end":47915,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"name":"scroll_top","qualname":"<ScrollBase>::scroll_top","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scroll to the top of the view.\n","sig":null,"attributes":[{"value":"/ Scroll to the top of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47859,"byte_end":47893,"line_start":116,"line_end":116,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48048,"byte_end":48057,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"scroll_to","qualname":"<ScrollBase>::scroll_to","value":"fn (&mut self, y: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Makes sure that the given line is visible, scrolling if needed.\n","sig":null,"attributes":[{"value":"/ Makes sure that the given line is visible, scrolling if needed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":47969,"byte_end":48036,"line_start":121,"line_end":121,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48333,"byte_end":48346,"line_start":131,"line_end":131,"column_start":12,"column_end":25},"name":"scroll_bottom","qualname":"<ScrollBase>::scroll_bottom","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scroll to the bottom of the view.\n","sig":null,"attributes":[{"value":"/ Scroll to the bottom of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48284,"byte_end":48321,"line_start":130,"line_end":130,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48597,"byte_end":48608,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"scroll_down","qualname":"<ScrollBase>::scroll_down","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scroll down by the given number of line.","sig":null,"attributes":[{"value":"/ Scroll down by the given number of line.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48482,"byte_end":48526,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48531,"byte_end":48534,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Never further than the bottom of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48539,"byte_end":48585,"line_start":139,"line_end":139,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48907,"byte_end":48922,"line_start":150,"line_end":150,"column_start":12,"column_end":27},"name":"scroll_to_thumb","qualname":"<ScrollBase>::scroll_to_thumb","value":"fn (&mut self, thumb_y: usize, thumb_height: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scrolls down until the scrollbar thumb is at the given location.\n","sig":null,"attributes":[{"value":"/ Scrolls down until the scrollbar thumb is at the given location.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":48827,"byte_end":48895,"line_start":149,"line_end":149,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":49537,"byte_end":49546,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"scroll_up","qualname":"<ScrollBase>::scroll_up","value":"fn (&mut self, n: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scroll up by the given number of lines.","sig":null,"attributes":[{"value":"/ Scroll up by the given number of lines.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":49433,"byte_end":49476,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":49481,"byte_end":49484,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Never above the top of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":49489,"byte_end":49525,"line_start":165,"line_end":165,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":49742,"byte_end":49752,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"start_drag","qualname":"<ScrollBase>::start_drag","value":"fn (&mut self, position: Vec2, width: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Starts scrolling from the given cursor position.\n","sig":null,"attributes":[{"value":"/ Starts scrolling from the given cursor position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":49678,"byte_end":49730,"line_start":172,"line_end":172,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":50656,"byte_end":50660,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"drag","qualname":"<ScrollBase>::drag","value":"fn (&mut self, position: Vec2) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Keeps scrolling by dragging the cursor.\n","sig":null,"attributes":[{"value":"/ Keeps scrolling by dragging the cursor.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":50601,"byte_end":50644,"line_start":198,"line_end":198,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51220,"byte_end":51231,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"is_dragging","qualname":"<ScrollBase>::is_dragging","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if we are in the process of dragging the scroll thumb.\n","sig":null,"attributes":[{"value":"/ Returns `true` if we are in the process of dragging the scroll thumb.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51135,"byte_end":51208,"line_start":210,"line_end":210,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51339,"byte_end":51351,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"release_grab","qualname":"<ScrollBase>::release_grab","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops grabbing the scrollbar.\n","sig":null,"attributes":[{"value":"/ Stops grabbing the scrollbar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51294,"byte_end":51327,"line_start":215,"line_end":215,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52328,"byte_end":52332,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"name":"draw","qualname":"<ScrollBase>::draw","value":"fn <F> (&self, printer: &Printer, line_drawer: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws the scroll bar and the content using the given drawer.","sig":null,"attributes":[{"value":"/ Draws the scroll bar and the content using the given drawer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51408,"byte_end":51472,"line_start":220,"line_end":220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51477,"byte_end":51480,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ `line_drawer` will be called once for each line that needs to be drawn.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51485,"byte_end":51560,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ It will be given the absolute ID of the item to draw..","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51565,"byte_end":51623,"line_start":223,"line_end":223,"column_start":5,"column_end":63}},{"value":"/ It will also be given a printer with the correct offset,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51628,"byte_end":51688,"line_start":224,"line_end":224,"column_start":5,"column_end":65}},{"value":"/ so it should only print on the first line.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51693,"byte_end":51739,"line_start":225,"line_end":225,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51744,"byte_end":51747,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51752,"byte_end":51766,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51771,"byte_end":51774,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51779,"byte_end":51790,"line_start":229,"line_end":229,"column_start":5,"column_end":16}},{"value":"/ # use cursive::view::ScrollBase;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51795,"byte_end":51831,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"/ # use cursive::Printer;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51836,"byte_end":51863,"line_start":231,"line_end":231,"column_start":5,"column_end":32}},{"value":"/ # use cursive::theme;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51868,"byte_end":51893,"line_start":232,"line_end":232,"column_start":5,"column_end":30}},{"value":"/ # use cursive::backend;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51898,"byte_end":51925,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/ # let scrollbase = ScrollBase::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51930,"byte_end":51971,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/ # let b = backend::dummy::Backend::init();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":51976,"byte_end":52022,"line_start":235,"line_end":235,"column_start":5,"column_end":51}},{"value":"/ # let t = theme::load_default();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52027,"byte_end":52063,"line_start":236,"line_end":236,"column_start":5,"column_end":41}},{"value":"/ # let printer = Printer::new((5,1), &t, &*b);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52068,"byte_end":52117,"line_start":237,"line_end":237,"column_start":5,"column_end":54}},{"value":"/ # let printer = &printer;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52122,"byte_end":52151,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/ let lines = [\"Line 1\", \"Line number 2\"];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52156,"byte_end":52200,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/ scrollbase.draw(printer, |printer, i| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52205,"byte_end":52248,"line_start":240,"line_end":240,"column_start":5,"column_end":48}},{"value":"/     printer.print((0,0), lines[i]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52253,"byte_end":52292,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52297,"byte_end":52304,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":52309,"byte_end":52316,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54345,"byte_end":54356,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"scrollbar_x","qualname":"<ScrollBase>::scrollbar_x","value":"fn (&self, total_size: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the X position of the scrollbar, given the size available.","sig":null,"attributes":[{"value":"/ Returns the X position of the scrollbar, given the size available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54155,"byte_end":54225,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54230,"byte_end":54233,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Note that this does not depend whether or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54238,"byte_end":54283,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ not a scrollbar will actually be present.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54288,"byte_end":54333,"line_start":301,"line_end":301,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54524,"byte_end":54546,"line_start":307,"line_end":307,"column_start":12,"column_end":34},"name":"scrollbar_thumb_height","qualname":"<ScrollBase>::scrollbar_thumb_height","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the scrollbar thumb.\n","sig":null,"attributes":[{"value":"/ Returns the height of the scrollbar thumb.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54466,"byte_end":54512,"line_start":306,"line_end":306,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54712,"byte_end":54729,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"scrollbar_thumb_y","qualname":"<ScrollBase>::scrollbar_thumb_y","value":"fn (&self, scrollbar_thumb_height: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the y position of the scrollbar thumb.\n","sig":null,"attributes":[{"value":"/ Returns the y position of the scrollbar thumb.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":54650,"byte_end":54700,"line_start":311,"line_end":311,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":360},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55076,"byte_end":55086,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"Scrollable","qualname":"::view::scrollable::Scrollable","value":"Scrollable: View + Sized","parent":null,"children":[{"krate":0,"index":361}],"decl_id":null,"docs":" Makes a view wrappable in a [`ScrollView`].","sig":null,"attributes":[{"value":"/ Makes a view wrappable in a [`ScrollView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":54974,"byte_end":55021,"line_start":4,"line_end":4,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55022,"byte_end":55025,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`ScrollView`]: ::views::ScrollView","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55026,"byte_end":55065,"line_start":6,"line_end":6,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55150,"byte_end":55160,"line_start":9,"line_end":9,"column_start":8,"column_end":18},"name":"scrollable","qualname":"::view::scrollable::Scrollable::scrollable","value":"fn (self) -> ScrollView<Self>","parent":{"krate":0,"index":360},"children":[],"decl_id":null,"docs":" Wraps `self` in a `ScrollView`.\n","sig":null,"attributes":[{"value":"/ Wraps `self` in a `ScrollView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55107,"byte_end":55142,"line_start":8,"line_end":8,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":366},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55349,"byte_end":55362,"line_start":4,"line_end":4,"column_start":11,"column_end":24},"name":"IntoBoxedView","qualname":"::view::into_boxed_view::IntoBoxedView","value":"IntoBoxedView","parent":null,"children":[{"krate":0,"index":367}],"decl_id":null,"docs":" Represents a type that can be made into a `Box<View>`.\n","sig":null,"attributes":[{"value":"/ Represents a type that can be made into a `Box<View>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55280,"byte_end":55338,"line_start":3,"line_end":3,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55403,"byte_end":55416,"line_start":6,"line_end":6,"column_start":8,"column_end":21},"name":"as_boxed_view","qualname":"::view::into_boxed_view::IntoBoxedView::as_boxed_view","value":"fn (self) -> Box<View>","parent":{"krate":0,"index":366},"children":[],"decl_id":null,"docs":" Returns a `Box<View>`.\n","sig":null,"attributes":[{"value":"/ Returns a `Box<View>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55369,"byte_end":55395,"line_start":5,"line_end":5,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::utils","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":404},{"krate":0,"index":408},{"krate":0,"index":589},{"krate":0,"index":610},{"krate":0,"index":626},{"krate":0,"index":714},{"krate":0,"index":715}],"decl_id":null,"docs":" Toolbox to make text layout easier.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2777,"byte_end":2789,"line_start":106,"line_end":106,"column_start":1,"column_end":13}},{"value":"! Toolbox to make text layout easier.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":55662,"byte_end":55701,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3712},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56071,"byte_end":56078,"line_start":8,"line_end":8,"column_start":12,"column_end":19},"name":"Counter","qualname":"::utils::counter::Counter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Atomic counter used by [`ProgressBar`].","sig":null,"attributes":[{"value":"/ Atomic counter used by [`ProgressBar`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":55941,"byte_end":55984,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":55985,"byte_end":55988,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ [`ProgressBar`]: ../views/struct.ProgressBar.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":55989,"byte_end":56042,"line_start":6,"line_end":6,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56192,"byte_end":56195,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"new","qualname":"<Counter>::new","value":"fn (value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Counter` starting with the given value.\n","sig":null,"attributes":[{"value":"/ Creates a new `Counter` starting with the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56122,"byte_end":56180,"line_start":11,"line_end":11,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56335,"byte_end":56338,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"get","qualname":"<Counter>::get","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the current progress value.\n","sig":null,"attributes":[{"value":"/ Retrieves the current progress value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56282,"byte_end":56323,"line_start":16,"line_end":16,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56455,"byte_end":56458,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"set","qualname":"<Counter>::set","value":"fn (&self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current progress value.\n","sig":null,"attributes":[{"value":"/ Sets the current progress value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56407,"byte_end":56443,"line_start":21,"line_end":21,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56598,"byte_end":56602,"line_start":27,"line_end":27,"column_start":12,"column_end":16},"name":"tick","qualname":"<Counter>::tick","value":"fn (&self, ticks: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increase the current progress by `ticks`.\n","sig":null,"attributes":[{"value":"/ Increase the current progress by `ticks`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56541,"byte_end":56586,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":408},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lines","qualname":"::utils::lines","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/mod.rs","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":465}],"decl_id":null,"docs":" Compute rows of text with a width constraint.\n","sig":null,"attributes":[{"value":"! Compute rows of text with a width constraint.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/mod.rs","byte_start":60720,"byte_end":60769,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":409},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"simple","qualname":"::utils::lines::simple","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":440},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":464}],"decl_id":null,"docs":" Compute lines on simple text.","sig":null,"attributes":[{"value":"! Compute lines on simple text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":60803,"byte_end":60836,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":60837,"byte_end":60840,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The input is a single `&str`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":60841,"byte_end":60874,"line_start":3,"line_end":3,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":60875,"byte_end":60878,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Computed rows will include start/end byte offsets in the input string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":60879,"byte_end":60953,"line_start":5,"line_end":5,"column_start":1,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":416},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64674,"byte_end":64687,"line_start":9,"line_end":9,"column_start":12,"column_end":25},"name":"LinesIterator","qualname":"::utils::lines::simple::lines_iterator::LinesIterator","value":"LinesIterator {  }","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419}],"decl_id":null,"docs":" Generates rows of text in constrained width.","sig":null,"attributes":[{"value":"/ Generates rows of text in constrained width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64491,"byte_end":64539,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64540,"byte_end":64543,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Given a long text and a width constraint, it iterates over","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64544,"byte_end":64606,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/ substrings of the text, each within the constraint.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64607,"byte_end":64662,"line_start":8,"line_end":8,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65460,"byte_end":65463,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesIterator>::new","value":"fn (content: &'a str, width: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `LinesIterator` on `content`.","sig":null,"attributes":[{"value":"/ Returns a new `LinesIterator` on `content`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65347,"byte_end":65394,"line_start":41,"line_end":41,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65399,"byte_end":65402,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Yields rows of `width` cells or less.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65407,"byte_end":65448,"line_start":43,"line_end":43,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65807,"byte_end":65818,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"show_spaces","qualname":"<LinesIterator>::show_spaces","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Leave a blank cell at the end of lines.","sig":null,"attributes":[{"value":"/ Leave a blank cell at the end of lines.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65652,"byte_end":65695,"line_start":50,"line_end":50,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65700,"byte_end":65703,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Unless a word had to be truncated, in which case","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65708,"byte_end":65760,"line_start":52,"line_end":52,"column_start":5,"column_end":57}},{"value":"/ it takes the entire width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65765,"byte_end":65795,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":3717},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66504,"byte_end":66507,"line_start":8,"line_end":8,"column_start":12,"column_end":15},"name":"Row","qualname":"::utils::lines::simple::row::Row","value":"Row { start, end, width }","parent":null,"children":[{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720}],"decl_id":null,"docs":" Represents a row of text within a `String`.","sig":null,"attributes":[{"value":"/ Represents a row of text within a `String`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66286,"byte_end":66333,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66334,"byte_end":66337,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A row is made of offsets into a parent `String`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66338,"byte_end":66390,"line_start":5,"line_end":5,"column_start":1,"column_end":53}},{"value":"/ The corresponding substring should take `width` cells when printed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66391,"byte_end":66462,"line_start":6,"line_end":6,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3718},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66571,"byte_end":66576,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"start","qualname":"::utils::lines::simple::row::Row::start","value":"usize","parent":{"krate":0,"index":3717},"children":[],"decl_id":null,"docs":" Beginning of the row in the parent `String`.\n","sig":null,"attributes":[{"value":"/ Beginning of the row in the parent `String`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66514,"byte_end":66562,"line_start":9,"line_end":9,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3719},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66627,"byte_end":66630,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"end","qualname":"::utils::lines::simple::row::Row::end","value":"usize","parent":{"krate":0,"index":3717},"children":[],"decl_id":null,"docs":" End of the row (excluded)\n","sig":null,"attributes":[{"value":"/ End of the row (excluded)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66589,"byte_end":66618,"line_start":11,"line_end":11,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3720},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66683,"byte_end":66688,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::simple::row::Row::width","value":"usize","parent":{"krate":0,"index":3717},"children":[],"decl_id":null,"docs":" Width of the row, in cells.\n","sig":null,"attributes":[{"value":"/ Width of the row, in cells.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66643,"byte_end":66674,"line_start":13,"line_end":13,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66769,"byte_end":66774,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"shift","qualname":"<Row>::shift","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shift a row start and end by `offset`.\n","sig":null,"attributes":[{"value":"/ Shift a row start and end by `offset`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66715,"byte_end":66757,"line_start":18,"line_end":18,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66961,"byte_end":66968,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"shifted","qualname":"<Row>::shifted","value":"fn (self, offset: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shift a row start and end by `offset`.","sig":null,"attributes":[{"value":"/ Shift a row start and end by `offset`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66872,"byte_end":66914,"line_start":24,"line_end":24,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66919,"byte_end":66922,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Chainable variant;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66927,"byte_end":66949,"line_start":26,"line_end":26,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":67109,"byte_end":67118,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"rev_shift","qualname":"<Row>::rev_shift","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shift back a row start and end by `offset`.\n","sig":null,"attributes":[{"value":"/ Shift back a row start and end by `offset`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":67050,"byte_end":67097,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61197,"byte_end":61201,"line_start":16,"line_end":16,"column_start":12,"column_end":16},"name":"Span","qualname":"::utils::lines::simple::Span","value":"Span { length, width }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" The length and width of a part of a string.\n","sig":null,"attributes":[{"value":"/ The length and width of a part of a string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61138,"byte_end":61185,"line_start":15,"line_end":15,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":452},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61257,"byte_end":61263,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"length","qualname":"::utils::lines::simple::Span::length","value":"usize","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" The length (in bytes) of the string.\n","sig":null,"attributes":[{"value":"/ The length (in bytes) of the string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61208,"byte_end":61248,"line_start":17,"line_end":17,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":453},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61321,"byte_end":61326,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::simple::Span::width","value":"usize","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" The unicode-width of the string.\n","sig":null,"attributes":[{"value":"/ The unicode-width of the string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61276,"byte_end":61312,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":454},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61472,"byte_end":61482,"line_start":26,"line_end":26,"column_start":8,"column_end":18},"name":"make_lines","qualname":"::utils::lines::simple::make_lines","value":"fn (content: &str, width: usize) -> Vec<Row>","parent":null,"children":[],"decl_id":null,"docs":" Compute lines for the given content and width.","sig":null,"attributes":[{"value":"/ Compute lines for the given content and width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61338,"byte_end":61388,"line_start":23,"line_end":23,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61389,"byte_end":61392,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Equivalent to constructing a new `LinesIterator` and collecting it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61393,"byte_end":61464,"line_start":25,"line_end":25,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":455},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62369,"byte_end":62375,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"prefix","qualname":"::utils::lines::simple::prefix","value":"fn <'a, I> (iter: I, available_width: usize, delimiter: &str) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Computes a prefix that fits in the given `width`.","sig":null,"attributes":[{"value":"/ Computes a prefix that fits in the given `width`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61578,"byte_end":61631,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61632,"byte_end":61635,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Takes non-breakable elements from `iter`, while keeping the string width","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61636,"byte_end":61712,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ under `width` (and adding `delimiter` between each element).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61713,"byte_end":61777,"line_start":33,"line_end":33,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61778,"byte_end":61781,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Given `total_text = iter.collect().join(delimiter)`, the result is the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61782,"byte_end":61856,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ length of the longest prefix of `width` or less cells, without breaking","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61857,"byte_end":61932,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ inside an element.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61933,"byte_end":61955,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61956,"byte_end":61959,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61960,"byte_end":61972,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61973,"byte_end":61976,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61977,"byte_end":61984,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":61985,"byte_end":62012,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ extern crate unicode_segmentation;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62013,"byte_end":62051,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ use unicode_segmentation::UnicodeSegmentation;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62052,"byte_end":62102,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62103,"byte_end":62106,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # use cursive::utils::lines::simple::prefix;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62107,"byte_end":62155,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62156,"byte_end":62173,"line_start":47,"line_end":47,"column_start":1,"column_end":18}},{"value":"/ let my_text = \"blah...\";","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62174,"byte_end":62202,"line_start":48,"line_end":48,"column_start":1,"column_end":29}},{"value":"/ // This returns the number of bytes for a prefix of `my_text` that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62203,"byte_end":62273,"line_start":49,"line_end":49,"column_start":1,"column_end":71}},{"value":"/ // fits within 5 cells.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62274,"byte_end":62301,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/ prefix(my_text.graphemes(true), 5, \"\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62302,"byte_end":62345,"line_start":51,"line_end":51,"column_start":1,"column_end":44}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62346,"byte_end":62353,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":62354,"byte_end":62361,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63803,"byte_end":63809,"line_start":99,"line_end":99,"column_start":8,"column_end":14},"name":"suffix","qualname":"::utils::lines::simple::suffix","value":"fn <'a, I> (iter: I, width: usize, delimiter: &str) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Computes the longest suffix that fits in the given `width`.","sig":null,"attributes":[{"value":"/ Computes the longest suffix that fits in the given `width`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63501,"byte_end":63564,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63565,"byte_end":63568,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Doesn't break inside elements returned by `iter`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63569,"byte_end":63622,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63623,"byte_end":63626,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Returns the number of bytes of the longest","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63627,"byte_end":63673,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/ suffix from `text` that fits in `width`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63674,"byte_end":63718,"line_start":96,"line_end":96,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63719,"byte_end":63722,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This is a shortcut for `prefix_length(iter.rev(), width, delimiter)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63723,"byte_end":63795,"line_start":98,"line_end":98,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":463},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64074,"byte_end":64087,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"simple_suffix","qualname":"::utils::lines::simple::simple_suffix","value":"fn (text: &str, width: usize) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Computes the longest suffix that fits in the given `width`.","sig":null,"attributes":[{"value":"/ Computes the longest suffix that fits in the given `width`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":63961,"byte_end":64024,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64025,"byte_end":64028,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ Breaks between any two graphemes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64029,"byte_end":64066,"line_start":108,"line_end":108,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":464},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64282,"byte_end":64295,"line_start":116,"line_end":116,"column_start":8,"column_end":21},"name":"simple_prefix","qualname":"::utils::lines::simple::simple_prefix","value":"fn (text: &str, width: usize) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Computes the longest prefix that fits in the given width.","sig":null,"attributes":[{"value":"/ Computes the longest prefix that fits in the given width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64171,"byte_end":64232,"line_start":113,"line_end":113,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64233,"byte_end":64236,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Breaks between any two graphemes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/mod.rs","byte_start":64237,"byte_end":64274,"line_start":115,"line_end":115,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":465},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spans","qualname":"::utils::lines::spans","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":491},{"krate":0,"index":528},{"krate":0,"index":543},{"krate":0,"index":558},{"krate":0,"index":573},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"decl_id":null,"docs":" Compute lines on multiple spans of text.","sig":null,"attributes":[{"value":"! Compute lines on multiple spans of text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67214,"byte_end":67258,"line_start":1,"line_end":1,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67259,"byte_end":67262,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! The input is a list of consecutive text spans.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67263,"byte_end":67313,"line_start":3,"line_end":3,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67314,"byte_end":67317,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Computed rows will include a list of span segments.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67318,"byte_end":67373,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"! Each segment include the source span ID, and start/end byte offsets.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/mod.rs","byte_start":67374,"byte_end":67446,"line_start":6,"line_end":6,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":76813,"byte_end":76826,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"LinesIterator","qualname":"::utils::lines::spans::lines_iterator::LinesIterator","value":"LinesIterator {  }","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511}],"decl_id":null,"docs":" Generates rows of text in constrainted width.","sig":null,"attributes":[{"value":"/ Generates rows of text in constrainted width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":76720,"byte_end":76769,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":76770,"byte_end":76773,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Works on spans of text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":76774,"byte_end":76801,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77363,"byte_end":77366,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesIterator<S>>::new","value":"fn (source: S, width: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new iterator with the given content and width.\n","sig":null,"attributes":[{"value":"/ Creates a new iterator with the given content and width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77291,"byte_end":77351,"line_start":39,"line_end":39,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77868,"byte_end":77879,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"show_spaces","qualname":"<LinesIterator<S>>::show_spaces","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Leave a blank cell at the end of lines.","sig":null,"attributes":[{"value":"/ Leave a blank cell at the end of lines.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77710,"byte_end":77753,"line_start":52,"line_end":52,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77758,"byte_end":77761,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Unless a word had to be truncated, in which case","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77766,"byte_end":77818,"line_start":54,"line_end":54,"column_start":5,"column_end":57}},{"value":"/ it can take the entire width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77823,"byte_end":77856,"line_start":55,"line_end":55,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3759},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":85960,"byte_end":85963,"line_start":6,"line_end":6,"column_start":12,"column_end":15},"name":"Row","qualname":"::utils::lines::spans::row::Row","value":"Row { segments, width }","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3761}],"decl_id":null,"docs":" A list of segments representing a row of text\n","sig":null,"attributes":[{"value":"/ A list of segments representing a row of text","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":85860,"byte_end":85909,"line_start":4,"line_end":4,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3760},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":85999,"byte_end":86007,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"name":"segments","qualname":"::utils::lines::spans::row::Row::segments","value":"std::vec::Vec<utils::lines::spans::segment::Segment>","parent":{"krate":0,"index":3759},"children":[],"decl_id":null,"docs":" List of segments\n","sig":null,"attributes":[{"value":"/ List of segments","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":85970,"byte_end":85990,"line_start":7,"line_end":7,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3761},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86064,"byte_end":86069,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::spans::row::Row::width","value":"usize","parent":{"krate":0,"index":3759},"children":[],"decl_id":null,"docs":" Total width for this row\n","sig":null,"attributes":[{"value":"/ Total width for this row","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86027,"byte_end":86055,"line_start":9,"line_end":9,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86170,"byte_end":86177,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Row>::resolve","value":"fn <'a, T, S> (&self, source: S) -> Vec<Span<'a, T>>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the row indices into string slices and attributes.\n","sig":null,"attributes":[{"value":"/ Resolve the row indices into string slices and attributes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86096,"byte_end":86158,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86640,"byte_end":86655,"line_start":31,"line_end":31,"column_start":12,"column_end":27},"name":"overall_indices","qualname":"<Row>::overall_indices","value":"fn <S> (&self, spans: &[S]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns indices in the source string, if possible.","sig":null,"attributes":[{"value":"/ Returns indices in the source string, if possible.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86489,"byte_end":86543,"line_start":28,"line_end":28,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86548,"byte_end":86551,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Returns overall `(start, end)`, or `None` if the segments are owned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86556,"byte_end":86628,"line_start":30,"line_end":30,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3773},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87079,"byte_end":87086,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Segment","qualname":"::utils::lines::spans::segment::Segment","value":"Segment { span_id, start, end, width }","parent":null,"children":[{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777}],"decl_id":null,"docs":" Refers to a part of a span\n","sig":null,"attributes":[{"value":"/ Refers to a part of a span","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":86992,"byte_end":87022,"line_start":3,"line_end":3,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3774},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87143,"byte_end":87150,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"span_id","qualname":"::utils::lines::spans::segment::Segment::span_id","value":"usize","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":" ID of the span this segment refers to\n","sig":null,"attributes":[{"value":"/ ID of the span this segment refers to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87093,"byte_end":87134,"line_start":6,"line_end":6,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3775},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87229,"byte_end":87234,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"start","qualname":"::utils::lines::spans::segment::Segment::start","value":"usize","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":" Beginning of this segment within the span (included)\n","sig":null,"attributes":[{"value":"/ Beginning of this segment within the span (included)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87164,"byte_end":87220,"line_start":9,"line_end":9,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3776},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87306,"byte_end":87309,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"end","qualname":"::utils::lines::spans::segment::Segment::end","value":"usize","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":" End of this segment within the span (excluded)\n","sig":null,"attributes":[{"value":"/ End of this segment within the span (excluded)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87247,"byte_end":87297,"line_start":11,"line_end":11,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3777},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87357,"byte_end":87362,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"width","qualname":"::utils::lines::spans::segment::Segment::width","value":"usize","parent":{"krate":0,"index":3773},"children":[],"decl_id":null,"docs":" Width of this segment\n","sig":null,"attributes":[{"value":"/ Width of this segment","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87323,"byte_end":87348,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87465,"byte_end":87472,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Segment>::resolve","value":"fn <'a, T> (&self, source: &SpannedStr<'a, T>) -> Span<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Resolve this segment to a string slice and an attribute.\n","sig":null,"attributes":[{"value":"/ Resolve this segment to a string slice and an attribute.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87393,"byte_end":87453,"line_start":19,"line_end":19,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87842,"byte_end":87855,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"resolve_plain","qualname":"<Segment>::resolve_plain","value":"fn <'a, S> (&self, source: &'a S) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Resolves this segment to plain text.\n","sig":null,"attributes":[{"value":"/ Resolves this segment to plain text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87790,"byte_end":87830,"line_start":32,"line_end":32,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":88255,"byte_end":88269,"line_start":47,"line_end":47,"column_start":12,"column_end":26},"name":"source_indices","qualname":"<Segment>::source_indices","value":"fn <S> (&self, spans: &[S]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns indices in the source string, if possible.","sig":null,"attributes":[{"value":"/ Returns indices in the source string, if possible.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":88100,"byte_end":88154,"line_start":44,"line_end":44,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":88159,"byte_end":88162,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Returns `(start, end)`, or `None` if the target span is an owned string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":88167,"byte_end":88243,"line_start":46,"line_end":46,"column_start":5,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":589},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"markup","qualname":"::utils::markup","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":599}],"decl_id":null,"docs":" Parse various text markup formats.","sig":null,"attributes":[{"value":"! Parse various text markup formats.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":89877,"byte_end":89915,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":89916,"byte_end":89919,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Each module is optional and relies on a feature.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":89920,"byte_end":89972,"line_start":3,"line_end":3,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":595},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90428,"byte_end":90440,"line_start":20,"line_end":20,"column_start":10,"column_end":22},"name":"StyledString","qualname":"::utils::markup::StyledString","value":"SpannedString<Style>","parent":null,"children":[],"decl_id":null,"docs":" A parsed string with markup style.","sig":null,"attributes":[{"value":"/ A parsed string with markup style.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90094,"byte_end":90132,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90133,"byte_end":90136,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Contains both the source string, and parsed information indicating the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90137,"byte_end":90211,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ style to apply.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90212,"byte_end":90231,"line_start":14,"line_end":14,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90232,"byte_end":90235,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ **Note**: due to limitations in rustdoc, you will need to read the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90236,"byte_end":90306,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ documentation from the [`SpannedString`] page.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90307,"byte_end":90357,"line_start":17,"line_end":17,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90358,"byte_end":90361,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`SpannedString`]: ../span/struct.SpannedString.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90362,"byte_end":90418,"line_start":19,"line_end":19,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":596},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90516,"byte_end":90533,"line_start":23,"line_end":23,"column_start":10,"column_end":27},"name":"StyledIndexedSpan","qualname":"::utils::markup::StyledIndexedSpan","value":"IndexedSpan<Style>","parent":null,"children":[],"decl_id":null,"docs":" Indexes a span into a source string.\n","sig":null,"attributes":[{"value":"/ Indexes a span into a source string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90466,"byte_end":90506,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":597},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90622,"byte_end":90632,"line_start":26,"line_end":26,"column_start":10,"column_end":20},"name":"StyledSpan","qualname":"::utils::markup::StyledSpan","value":"Span<'a, Style>","parent":null,"children":[],"decl_id":null,"docs":" A resolved styled span borrowing its source string.\n","sig":null,"attributes":[{"value":"/ A resolved styled span borrowing its source string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90557,"byte_end":90612,"line_start":25,"line_end":25,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90810,"byte_end":90815,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"plain","qualname":"<SpannedString<Style>>::plain","value":"fn <S> (content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a plain StyledString without any style.","sig":null,"attributes":[{"value":"/ Returns a plain StyledString without any style.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90689,"byte_end":90740,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90745,"byte_end":90748,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ > You got no style, Dutch. You know that.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90753,"byte_end":90798,"line_start":31,"line_end":31,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":91022,"byte_end":91028,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"styled","qualname":"<SpannedString<Style>>::styled","value":"fn <S, T> (content: S, style: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `StyledString` using a single style for the entire text.\n","sig":null,"attributes":[{"value":"/ Creates a new `StyledString` using a single style for the entire text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90936,"byte_end":91010,"line_start":39,"line_end":39,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":91311,"byte_end":91323,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"append_plain","qualname":"<SpannedString<Style>>::append_plain","value":"fn <S> (&mut self, text: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends the given plain text to `self`.\n","sig":null,"attributes":[{"value":"/ Appends the given plain text to `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":91256,"byte_end":91299,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":91495,"byte_end":91508,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"append_styled","qualname":"<SpannedString<Style>>::append_styled","value":"fn <S, T> (&mut self, text: S, style: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends `text` to `self`, using `style`.\n","sig":null,"attributes":[{"value":"/ Appends `text` to `self`, using `style`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":91439,"byte_end":91483,"line_start":59,"line_end":59,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91874,"byte_end":91888,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"ProgressReader","qualname":"::utils::reader::ProgressReader","value":"ProgressReader {  }","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" Wrapper around a `Read` that reports the progress made.","sig":null,"attributes":[{"value":"/ Wrapper around a `Read` that reports the progress made.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91715,"byte_end":91774,"line_start":4,"line_end":4,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91775,"byte_end":91778,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Used to monitor a file downloading or other slow IO task","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91779,"byte_end":91839,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ in a progress bar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91840,"byte_end":91862,"line_start":7,"line_end":7,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92217,"byte_end":92220,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressReader<R>>::new","value":"fn (counter: Counter, reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ProgressReader` around `reader`.","sig":null,"attributes":[{"value":"/ Creates a new `ProgressReader` around `reader`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91978,"byte_end":92029,"line_start":14,"line_end":14,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92034,"byte_end":92037,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ `counter` will be updated with the number of bytes read.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92042,"byte_end":92102,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92107,"byte_end":92110,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ You should make sure the progress bar knows how","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92115,"byte_end":92166,"line_start":18,"line_end":18,"column_start":5,"column_end":56}},{"value":"/ many bytes should be received.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92171,"byte_end":92205,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92394,"byte_end":92405,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"deconstruct","qualname":"<ProgressReader<R>>::deconstruct","value":"fn (self) -> (R, Counter)","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `ProgressReader`, returning the reader and counter.\n","sig":null,"attributes":[{"value":"/ Unwraps this `ProgressReader`, returning the reader and counter.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92314,"byte_end":92382,"line_start":24,"line_end":24,"column_start":5,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":626},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"span","qualname":"::utils::span","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":3790},{"krate":0,"index":3808},{"krate":0,"index":3805},{"krate":0,"index":3799},{"krate":0,"index":3801},{"krate":0,"index":3794},{"krate":0,"index":3796},{"krate":0,"index":3811},{"krate":0,"index":3831},{"krate":0,"index":3823},{"krate":0,"index":3826},{"krate":0,"index":3816},{"krate":0,"index":3819},{"krate":0,"index":628},{"krate":0,"index":634},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":647},{"krate":0,"index":653},{"krate":0,"index":659},{"krate":0,"index":663},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":695},{"krate":0,"index":3835},{"krate":0,"index":3853},{"krate":0,"index":3850},{"krate":0,"index":3844},{"krate":0,"index":3846},{"krate":0,"index":3839},{"krate":0,"index":3841},{"krate":0,"index":699},{"krate":0,"index":3856},{"krate":0,"index":3880},{"krate":0,"index":3876},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3861},{"krate":0,"index":3864},{"krate":0,"index":702},{"krate":0,"index":3884},{"krate":0,"index":3900},{"krate":0,"index":3898},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":708}],"decl_id":null,"docs":" Work with spans of text.","sig":null,"attributes":[{"value":"! Work with spans of text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92688,"byte_end":92716,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92717,"byte_end":92720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines various structs describing a span of text from a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92721,"byte_end":92793,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! larger string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92794,"byte_end":92812,"line_start":4,"line_end":4,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":3790},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92973,"byte_end":92986,"line_start":11,"line_end":11,"column_start":12,"column_end":25},"name":"SpannedString","qualname":"::utils::span::SpannedString","value":"SpannedString {  }","parent":null,"children":[{"krate":0,"index":3792},{"krate":0,"index":3793}],"decl_id":null,"docs":" A string with associated spans.","sig":null,"attributes":[{"value":"/ A string with associated spans.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92836,"byte_end":92871,"line_start":7,"line_end":7,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92872,"byte_end":92875,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Each span has an associated attribute `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":92876,"byte_end":92922,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3811},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93149,"byte_end":93159,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"SpannedStr","qualname":"::utils::span::SpannedStr","value":"SpannedStr {  }","parent":null,"children":[{"krate":0,"index":3814},{"krate":0,"index":3815}],"decl_id":null,"docs":" The immutable, borrowed equivalent of `SpannedString`.\n","sig":null,"attributes":[{"value":"/ The immutable, borrowed equivalent of `SpannedString`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93047,"byte_end":93105,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":628},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93311,"byte_end":93322,"line_start":27,"line_end":27,"column_start":11,"column_end":22},"name":"SpannedText","qualname":"::utils::span::SpannedText","value":"SpannedText","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632}],"decl_id":null,"docs":" Describes an object that appears like a `SpannedStr`.\n","sig":null,"attributes":[{"value":"/ Describes an object that appears like a `SpannedStr`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93243,"byte_end":93300,"line_start":26,"line_end":26,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":629},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93391,"byte_end":93392,"line_start":29,"line_end":29,"column_start":10,"column_end":11},"name":"S","qualname":"::utils::span::SpannedText::S","value":"type S: AsRef<IndexedCow>;","parent":{"krate":0,"index":628},"children":[],"decl_id":null,"docs":" Type of span returned by `SpannedText::spans()`.\n","sig":null,"attributes":[{"value":"/ Type of span returned by `SpannedText::spans()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93329,"byte_end":93381,"line_start":28,"line_end":28,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93454,"byte_end":93460,"line_start":32,"line_end":32,"column_start":8,"column_end":14},"name":"source","qualname":"::utils::span::SpannedText::source","value":"fn (&self) -> &str","parent":{"krate":0,"index":628},"children":[],"decl_id":null,"docs":" Returns the source text.\n","sig":null,"attributes":[{"value":"/ Returns the source text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93418,"byte_end":93446,"line_start":31,"line_end":31,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93526,"byte_end":93531,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"spans","qualname":"::utils::span::SpannedText::spans","value":"fn (&self) -> &[Self::S]","parent":{"krate":0,"index":628},"children":[],"decl_id":null,"docs":" Returns the spans for this text.\n","sig":null,"attributes":[{"value":"/ Returns the spans for this text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93482,"byte_end":93518,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93677,"byte_end":93683,"line_start":39,"line_end":39,"column_start":8,"column_end":14},"name":"as_ref","qualname":"::utils::span::SpannedText::as_ref","value":"fn <'a> (&'a self) -> SpannedTextRef<'a, Self>","parent":{"krate":0,"index":628},"children":[],"decl_id":null,"docs":" Returns a `SpannedText` by reference.\n","sig":null,"attributes":[{"value":"/ Returns a `SpannedText` by reference.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93559,"byte_end":93600,"line_start":37,"line_end":37,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93825,"byte_end":93839,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"SpannedTextRef","qualname":"::utils::span::SpannedTextRef","value":"SpannedTextRef {  }","parent":null,"children":[{"krate":0,"index":637}],"decl_id":null,"docs":" A reference to another `SpannedText`.\n","sig":null,"attributes":[{"value":"/ A reference to another `SpannedText`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93772,"byte_end":93813,"line_start":44,"line_end":44,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94987,"byte_end":94990,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<SpannedStr>::new","value":"fn (source: &'a str, spans: &'a [IndexedSpan<T>]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpannedStr` from the given references.\n","sig":null,"attributes":[{"value":"/ Creates a new `SpannedStr` from the given references.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94918,"byte_end":94975,"line_start":114,"line_end":114,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95151,"byte_end":95156,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"spans","qualname":"<SpannedStr>::spans","value":"fn (&self) -> Vec<Span<'a, T>>","parent":null,"children":[],"decl_id":null,"docs":" Gives access to the parsed styled spans.\n","sig":null,"attributes":[{"value":"/ Gives access to the parsed styled spans.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95095,"byte_end":95139,"line_start":119,"line_end":119,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95367,"byte_end":95376,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"spans_raw","qualname":"<SpannedStr>::spans_raw","value":"fn (&self) -> &'a [IndexedSpan<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the indexed spans.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the indexed spans.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95310,"byte_end":95355,"line_start":127,"line_end":127,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95510,"byte_end":95516,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"source","qualname":"<SpannedStr>::source","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the source (non-parsed) string.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the source (non-parsed) string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95440,"byte_end":95498,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95680,"byte_end":95688,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SpannedStr>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is empty.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95568,"byte_end":95606,"line_start":137,"line_end":137,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95611,"byte_end":95614,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Can be caused by an empty source, or no span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95619,"byte_end":95668,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96046,"byte_end":96051,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"plain","qualname":"<SpannedString<()>>::plain","value":"fn <S> (content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a simple spanned string without any attribute.\n","sig":null,"attributes":[{"value":"/ Returns a simple spanned string without any attribute.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95976,"byte_end":96034,"line_start":155,"line_end":155,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96244,"byte_end":96247,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<SpannedString<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty `SpannedString`.\n","sig":null,"attributes":[{"value":"/ Returns an empty `SpannedString`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96195,"byte_end":96232,"line_start":165,"line_end":165,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96496,"byte_end":96506,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"with_spans","qualname":"<SpannedString<T>>::with_spans","value":"fn <S> (source: S, spans: Vec<IndexedSpan<T>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SpannedString` manually.","sig":null,"attributes":[{"value":"/ Creates a new `SpannedString` manually.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96323,"byte_end":96366,"line_start":170,"line_end":170,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96371,"byte_end":96374,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to use this directly.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96379,"byte_end":96426,"line_start":172,"line_end":172,"column_start":5,"column_end":52}},{"value":"/ Instead, look for methods like `Markdown::parse`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96431,"byte_end":96484,"line_start":173,"line_end":173,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97031,"byte_end":97042,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"single_span","qualname":"<SpannedString<T>>::single_span","value":"fn <S> (source: S, attr: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new SpannedString with a single span.\n","sig":null,"attributes":[{"value":"/ Returns a new SpannedString with a single span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96968,"byte_end":97019,"line_start":191,"line_end":191,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97452,"byte_end":97458,"line_start":210,"line_end":210,"column_start":12,"column_end":18},"name":"append","qualname":"<SpannedString<T>>::append","value":"fn <S> (&mut self, other: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends the given `StyledString` to `self`.\n","sig":null,"attributes":[{"value":"/ Appends the given `StyledString` to `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97393,"byte_end":97440,"line_start":209,"line_end":209,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97799,"byte_end":97809,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"append_raw","qualname":"<SpannedString<T>>::append_raw","value":"fn (&mut self, source: &str, spans: Vec<IndexedSpan<T>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends `content` and its corresponding spans to the end.","sig":null,"attributes":[{"value":"/ Appends `content` and its corresponding spans to the end.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97620,"byte_end":97681,"line_start":218,"line_end":218,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97686,"byte_end":97689,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is not recommended to use this directly;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97694,"byte_end":97741,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/ instead, look at the `append` method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":97746,"byte_end":97787,"line_start":221,"line_end":221,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98235,"byte_end":98240,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"spans","qualname":"<SpannedString<T>>::spans","value":"fn <'a> (&'a self) -> Vec<Span<'a, T>>","parent":null,"children":[],"decl_id":null,"docs":" Gives access to the parsed styled spans.\n","sig":null,"attributes":[{"value":"/ Gives access to the parsed styled spans.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98110,"byte_end":98154,"line_start":234,"line_end":234,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98459,"byte_end":98468,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"spans_raw","qualname":"<SpannedString<T>>::spans_raw","value":"fn (&self) -> &[IndexedSpan<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the indexed spans.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the indexed spans.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98402,"byte_end":98447,"line_start":243,"line_end":243,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98634,"byte_end":98640,"line_start":251,"line_end":251,"column_start":12,"column_end":18},"name":"source","qualname":"<SpannedString<T>>::source","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the source string.","sig":null,"attributes":[{"value":"/ Returns a reference to the source string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98530,"byte_end":98575,"line_start":248,"line_end":248,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98580,"byte_end":98583,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ This is the non-parsed string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98588,"byte_end":98622,"line_start":250,"line_end":250,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98738,"byte_end":98746,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SpannedString<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if self is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if self is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98690,"byte_end":98726,"line_start":255,"line_end":255,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3835},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99105,"byte_end":99116,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"IndexedSpan","qualname":"::utils::span::IndexedSpan","value":"IndexedSpan { content, attr }","parent":null,"children":[{"krate":0,"index":3837},{"krate":0,"index":3838}],"decl_id":null,"docs":" An indexed span with an associated attribute.\n","sig":null,"attributes":[{"value":"/ An indexed span with an associated attribute.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99005,"byte_end":99054,"line_start":267,"line_end":267,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3837},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99159,"byte_end":99166,"line_start":271,"line_end":271,"column_start":9,"column_end":16},"name":"content","qualname":"::utils::span::IndexedSpan::content","value":"utils::span::IndexedCow","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":" Content of the span.\n","sig":null,"attributes":[{"value":"/ Content of the span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99126,"byte_end":99150,"line_start":270,"line_end":270,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3838},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99228,"byte_end":99232,"line_start":274,"line_end":274,"column_start":9,"column_end":13},"name":"attr","qualname":"::utils::span::IndexedSpan::attr","value":"T","parent":{"krate":0,"index":3835},"children":[],"decl_id":null,"docs":" Attribute applied to the span.\n","sig":null,"attributes":[{"value":"/ Attribute applied to the span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99185,"byte_end":99219,"line_start":273,"line_end":273,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3856},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99455,"byte_end":99459,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"name":"Span","qualname":"::utils::span::Span","value":"Span { content, attr }","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860}],"decl_id":null,"docs":" A resolved span borrowing its source string.\n","sig":null,"attributes":[{"value":"/ A resolved span borrowing its source string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99356,"byte_end":99404,"line_start":283,"line_end":283,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3859},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99511,"byte_end":99518,"line_start":287,"line_end":287,"column_start":9,"column_end":16},"name":"content","qualname":"::utils::span::Span::content","value":"&'a str","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Content of this span.\n","sig":null,"attributes":[{"value":"/ Content of this span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99477,"byte_end":99502,"line_start":286,"line_end":286,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3860},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99581,"byte_end":99585,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"attr","qualname":"::utils::span::Span::attr","value":"&'a T","parent":{"krate":0,"index":3856},"children":[],"decl_id":null,"docs":" Attribute associated to this span.\n","sig":null,"attributes":[{"value":"/ Attribute associated to this span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99534,"byte_end":99572,"line_start":289,"line_end":289,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99694,"byte_end":99701,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"resolve","qualname":"<IndexedSpan<T>>::resolve","value":"fn <'a> (&'a self, source: &'a str) -> Span<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the span to a string slice and an attribute.\n","sig":null,"attributes":[{"value":"/ Resolve the span to a string slice and an attribute.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99626,"byte_end":99682,"line_start":294,"line_end":294,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99954,"byte_end":99962,"line_start":306,"line_end":306,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexedSpan<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is an empty span.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is an empty span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99896,"byte_end":99942,"line_start":305,"line_end":305,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100084,"byte_end":100090,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"simple","qualname":"<IndexedSpan<T>>::simple","value":"fn (content: &str, attr: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a single span around the entire text.\n","sig":null,"attributes":[{"value":"/ Returns a single span around the entire text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100023,"byte_end":100072,"line_start":310,"line_end":310,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":3885},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100491,"byte_end":100499,"line_start":326,"line_end":326,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::utils::span::IndexedCow::Borrowed","value":"IndexedCow::Borrowed { start, end }","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Indexes content in a separate string.\n","sig":null,"attributes":[{"value":"/ Indexes content in a separate string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100445,"byte_end":100486,"line_start":325,"line_end":325,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3888},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100707,"byte_end":100712,"line_start":335,"line_end":335,"column_start":5,"column_end":10},"name":"Owned","qualname":"::utils::span::IndexedCow::Owned","value":"IndexedCow::Owned(String)","parent":{"krate":0,"index":3884},"children":[],"decl_id":null,"docs":" Owns its content.\n","sig":null,"attributes":[{"value":"/ Owns its content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100681,"byte_end":100702,"line_start":334,"line_end":334,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3884},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100428,"byte_end":100438,"line_start":324,"line_end":324,"column_start":10,"column_end":20},"name":"IndexedCow","qualname":"::utils::span::IndexedCow","value":"IndexedCow::{Borrowed, Owned}","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3888}],"decl_id":null,"docs":" A span of text that can be either owned, or indexed in another String.\n","sig":null,"attributes":[{"value":"/ A span of text that can be either owned, or indexed in another String.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100305,"byte_end":100379,"line_start":322,"line_end":322,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100798,"byte_end":100805,"line_start":340,"line_end":340,"column_start":12,"column_end":19},"name":"resolve","qualname":"<IndexedCow>::resolve","value":"fn <'a> (&'a self, source: &'a str) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Resolve the span to a string slice.\n","sig":null,"attributes":[{"value":"/ Resolve the span to a string slice.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100747,"byte_end":100786,"line_start":339,"line_end":339,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":101166,"byte_end":101174,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"from_cow","qualname":"<IndexedCow>::from_cow","value":"fn (cow: Cow<str>, source: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an indexed view of the given item.","sig":null,"attributes":[{"value":"/ Returns an indexed view of the given item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":101020,"byte_end":101066,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":101071,"byte_end":101074,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ **Note**: it is assumed `cow`, if borrowed, is a substring of `source`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":101079,"byte_end":101154,"line_start":349,"line_end":349,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":101900,"byte_end":101908,"line_start":369,"line_end":369,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexedCow>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `ŧrue` if this represents an empty span.\n","sig":null,"attributes":[{"value":"/ Returns `ŧrue` if this represents an empty span.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":101835,"byte_end":101888,"line_start":368,"line_end":368,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":102244,"byte_end":102250,"line_start":379,"line_end":379,"column_start":12,"column_end":18},"name":"offset","qualname":"<IndexedCow>::offset","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If `self` is borrowed, offset its indices by the given value.","sig":null,"attributes":[{"value":"/ If `self` is borrowed, offset its indices by the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":102100,"byte_end":102165,"line_start":376,"line_end":376,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":102170,"byte_end":102173,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Useful to update spans when concatenating sources.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":102178,"byte_end":102232,"line_start":378,"line_end":378,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":716},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"align","qualname":"::align","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","parent":null,"children":[{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":717},{"krate":0,"index":3907},{"krate":0,"index":3914},{"krate":0,"index":3916},{"krate":0,"index":3923},{"krate":0,"index":724},{"krate":0,"index":726}],"decl_id":null,"docs":" Tools to control view alignment.\n","sig":null,"attributes":[{"value":"! Tools to control view alignment.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102474,"byte_end":102510,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":3902},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102615,"byte_end":102620,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"Align","qualname":"::align::Align","value":"Align { h, v }","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904}],"decl_id":null,"docs":" Specifies the alignment along both horizontal and vertical directions.\n","sig":null,"attributes":[{"value":"/ Specifies the alignment along both horizontal and vertical directions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102512,"byte_end":102586,"line_start":3,"line_end":3,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3903},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102667,"byte_end":102668,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"h","qualname":"::align::Align::h","value":"align::HAlign","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Horizontal alignment policy\n","sig":null,"attributes":[{"value":"/ Horizontal alignment policy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102627,"byte_end":102658,"line_start":6,"line_end":6,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3904},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102720,"byte_end":102721,"line_start":9,"line_end":9,"column_start":9,"column_end":10},"name":"v","qualname":"::align::Align::v","value":"align::VAlign","parent":{"krate":0,"index":3902},"children":[],"decl_id":null,"docs":" Vertical alignment policy\n","sig":null,"attributes":[{"value":"/ Vertical alignment policy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102682,"byte_end":102711,"line_start":8,"line_end":8,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102820,"byte_end":102823,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<Align>::new","value":"fn (h: HAlign, v: VAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Align object from the given alignments.\n","sig":null,"attributes":[{"value":"/ Creates a new Align object from the given alignments.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102751,"byte_end":102808,"line_start":13,"line_end":13,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102935,"byte_end":102943,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Align>::top_left","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a top-left alignment.\n","sig":null,"attributes":[{"value":"/ Creates a top-left alignment.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102890,"byte_end":102923,"line_start":18,"line_end":18,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103059,"byte_end":103068,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"top_right","qualname":"<Align>::top_right","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a top-right alignment.\n","sig":null,"attributes":[{"value":"/ Creates a top-right alignment.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103013,"byte_end":103047,"line_start":23,"line_end":23,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103187,"byte_end":103195,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"bot_left","qualname":"<Align>::bot_left","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a bottom-left alignment.\n","sig":null,"attributes":[{"value":"/ Creates a bottom-left alignment.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103139,"byte_end":103175,"line_start":28,"line_end":28,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103317,"byte_end":103326,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"bot_right","qualname":"<Align>::bot_right","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a bottom-right alignment.\n","sig":null,"attributes":[{"value":"/ Creates a bottom-right alignment.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103268,"byte_end":103305,"line_start":33,"line_end":33,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103476,"byte_end":103482,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"center","qualname":"<Align>::center","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an alignment centered both horizontally and vertically.\n","sig":null,"attributes":[{"value":"/ Creates an alignment centered both horizontally and vertically.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103397,"byte_end":103464,"line_start":38,"line_end":38,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103676,"byte_end":103680,"line_start":48,"line_end":48,"column_start":5,"column_end":9},"name":"Left","qualname":"::align::HAlign::Left","value":"HAlign::Left","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Place the element to the left of available space\n","sig":null,"attributes":[{"value":"/ Place the element to the left of available space","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103619,"byte_end":103671,"line_start":47,"line_end":47,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3910},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103758,"byte_end":103764,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Center","qualname":"::align::HAlign::Center","value":"HAlign::Center","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Place the element horizontally in the center of available space\n","sig":null,"attributes":[{"value":"/ Place the element horizontally in the center of available space","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103686,"byte_end":103753,"line_start":49,"line_end":49,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3912},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103828,"byte_end":103833,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Right","qualname":"::align::HAlign::Right","value":"HAlign::Right","parent":{"krate":0,"index":3907},"children":[],"decl_id":null,"docs":" Place the element to the right of available space\n","sig":null,"attributes":[{"value":"/ Place the element to the right of available space","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103770,"byte_end":103823,"line_start":51,"line_end":51,"column_start":5,"column_end":58}}]},{"kind":"Enum","id":{"krate":0,"index":3907},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103606,"byte_end":103612,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"HAlign","qualname":"::align::HAlign","value":"HAlign::{Left, Center, Right}","parent":null,"children":[{"krate":0,"index":3908},{"krate":0,"index":3910},{"krate":0,"index":3912}],"decl_id":null,"docs":" Horizontal alignment\n","sig":null,"attributes":[{"value":"/ Horizontal alignment","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103555,"byte_end":103579,"line_start":44,"line_end":44,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3917},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103956,"byte_end":103959,"line_start":59,"line_end":59,"column_start":5,"column_end":8},"name":"Top","qualname":"::align::VAlign::Top","value":"VAlign::Top","parent":{"krate":0,"index":3916},"children":[],"decl_id":null,"docs":" Place the element at the top of available space\n","sig":null,"attributes":[{"value":"/ Place the element at the top of available space","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103900,"byte_end":103951,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3919},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104035,"byte_end":104041,"line_start":61,"line_end":61,"column_start":5,"column_end":11},"name":"Center","qualname":"::align::VAlign::Center","value":"VAlign::Center","parent":{"krate":0,"index":3916},"children":[],"decl_id":null,"docs":" Place the element vertically in the center of available space\n","sig":null,"attributes":[{"value":"/ Place the element vertically in the center of available space","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103965,"byte_end":104030,"line_start":60,"line_end":60,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3921},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104106,"byte_end":104112,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Bottom","qualname":"::align::VAlign::Bottom","value":"VAlign::Bottom","parent":{"krate":0,"index":3916},"children":[],"decl_id":null,"docs":" Place the element at the bottom of available space\n","sig":null,"attributes":[{"value":"/ Place the element at the bottom of available space","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104047,"byte_end":104101,"line_start":62,"line_end":62,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3916},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103887,"byte_end":103893,"line_start":57,"line_end":57,"column_start":10,"column_end":16},"name":"VAlign","qualname":"::align::VAlign","value":"VAlign::{Top, Center, Bottom}","parent":null,"children":[{"krate":0,"index":3917},{"krate":0,"index":3919},{"krate":0,"index":3921}],"decl_id":null,"docs":" Vertical alignment\n","sig":null,"attributes":[{"value":"/ Vertical alignment","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":103838,"byte_end":103860,"line_start":55,"line_end":55,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104375,"byte_end":104385,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<HAlign>::get_offset","value":"fn (&self, content: usize, container: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset required to position a view.","sig":null,"attributes":[{"value":"/ Returns the offset required to position a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104135,"byte_end":104186,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104191,"byte_end":104194,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ When drawing a view with size `content` when the available size is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104199,"byte_end":104269,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `container`, printing at the resulting offset will align the view as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104274,"byte_end":104346,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ desired.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104351,"byte_end":104363,"line_start":71,"line_end":71,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104971,"byte_end":104981,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"get_offset","qualname":"<VAlign>::get_offset","value":"fn (&self, content: usize, container: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the offset required to position a view.","sig":null,"attributes":[{"value":"/ Returns the offset required to position a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104731,"byte_end":104782,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104787,"byte_end":104790,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ When drawing a view with size `content` when the available size is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104795,"byte_end":104865,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ `container`, printing at the resulting offset will align the view as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104870,"byte_end":104942,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ desired.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104947,"byte_end":104959,"line_start":90,"line_end":90,"column_start":5,"column_end":17}}]},{"kind":"Mod","id":{"krate":0,"index":728},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"direction","qualname":"::direction","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":3925},{"krate":0,"index":3936},{"krate":0,"index":3935},{"krate":0,"index":3933},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":731},{"krate":0,"index":3938},{"krate":0,"index":3952},{"krate":0,"index":3950},{"krate":0,"index":3949},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":744},{"krate":0,"index":3954},{"krate":0,"index":3965},{"krate":0,"index":3963},{"krate":0,"index":3962},{"krate":0,"index":3959},{"krate":0,"index":3960},{"krate":0,"index":754},{"krate":0,"index":3967},{"krate":0,"index":3984},{"krate":0,"index":3982},{"krate":0,"index":3981},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":756}],"decl_id":null,"docs":" Direction-related structures.","sig":null,"attributes":[{"value":"! Direction-related structures.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105309,"byte_end":105342,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105343,"byte_end":105346,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module defines two main concepts: [Orientation] and [Direction].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105347,"byte_end":105420,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105421,"byte_end":105424,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ### Orientation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105425,"byte_end":105444,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105445,"byte_end":105448,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! `Orientation` is a simple enum that can take two values:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105449,"byte_end":105509,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"! `Horizontal` or `Vertical`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105510,"byte_end":105541,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105542,"byte_end":105545,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! ### Direction","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105546,"byte_end":105563,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105564,"byte_end":105567,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! `Direction` is a bit more complex, and can be of two kinds:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105568,"byte_end":105631,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105632,"byte_end":105635,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! * Absolute direction: left, up, right, or down","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105636,"byte_end":105686,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"! * Relative direction: front or back.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105687,"byte_end":105727,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!   Its actual direction depends on the orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105728,"byte_end":105782,"line_start":16,"line_end":16,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3926},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105970,"byte_end":105980,"line_start":25,"line_end":25,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::direction::Orientation::Horizontal","value":"Orientation::Horizontal","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":" Horizontal orientation\n","sig":null,"attributes":[{"value":"/ Horizontal orientation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105939,"byte_end":105965,"line_start":24,"line_end":24,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3928},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106015,"byte_end":106023,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::direction::Orientation::Vertical","value":"Orientation::Vertical","parent":{"krate":0,"index":3925},"children":[],"decl_id":null,"docs":" Vertical orientation\n","sig":null,"attributes":[{"value":"/ Vertical orientation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105986,"byte_end":106010,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":3925},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105921,"byte_end":105932,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"Orientation","qualname":"::direction::Orientation","value":"Orientation::{Horizontal, Vertical}","parent":null,"children":[{"krate":0,"index":3926},{"krate":0,"index":3928}],"decl_id":null,"docs":" Describes a vertical or horizontal orientation for a view.\n","sig":null,"attributes":[{"value":"/ Describes a vertical or horizontal orientation for a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":105808,"byte_end":105870,"line_start":21,"line_end":21,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106104,"byte_end":106108,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"pair","qualname":"<Orientation>::pair","value":"fn () -> XY<Orientation>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `XY(Horizontal, Vertical)`.\n","sig":null,"attributes":[{"value":"/ Returns a `XY(Horizontal, Vertical)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106051,"byte_end":106092,"line_start":31,"line_end":31,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106390,"byte_end":106393,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"get","qualname":"<Orientation>::get","value":"fn <T> (self, v: &XY<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the component of `v` corresponding to this orientation.","sig":null,"attributes":[{"value":"/ Returns the component of `v` corresponding to this orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106207,"byte_end":106274,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106279,"byte_end":106282,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ (`Horizontal` will return the x value,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106287,"byte_end":106329,"line_start":38,"line_end":38,"column_start":5,"column_end":47}},{"value":"/ and `Vertical` will return the y value.)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106334,"byte_end":106378,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106513,"byte_end":106517,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"swap","qualname":"<Orientation>::swap","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the other orientation.\n","sig":null,"attributes":[{"value":"/ Returns the other orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106467,"byte_end":106501,"line_start":44,"line_end":44,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106823,"byte_end":106830,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Orientation>::get_ref","value":"fn <T> (self, v: &mut XY<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the component of the given vector\n corresponding to this orientation.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the component of the given vector","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106700,"byte_end":106768,"line_start":52,"line_end":52,"column_start":5,"column_end":73}},{"value":"/ corresponding to this orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106773,"byte_end":106811,"line_start":53,"line_end":53,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107268,"byte_end":107273,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"stack","qualname":"<Orientation>::stack","value":"fn <'a, T> (self, iter: T) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Takes an iterator on sizes, and stack them in the current orientation,\n returning the size of the required bounding box.","sig":null,"attributes":[{"value":"/ Takes an iterator on sizes, and stack them in the current orientation,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107005,"byte_end":107079,"line_start":61,"line_end":61,"column_start":5,"column_end":79}},{"value":"/ returning the size of the required bounding box.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107084,"byte_end":107136,"line_start":62,"line_end":62,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107141,"byte_end":107144,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ For an horizontal view, returns (Sum(x), Max(y)).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107149,"byte_end":107202,"line_start":64,"line_end":64,"column_start":5,"column_end":58}},{"value":"/ For a vertical view, returns (Max(x),Sum(y)).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107207,"byte_end":107256,"line_start":65,"line_end":65,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":743},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107688,"byte_end":107696,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"make_vec","qualname":"<Orientation>::make_vec","value":"fn (self, main_axis: usize, second_axis: usize) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Vec2` with `value` in `self`'s axis.\n","sig":null,"attributes":[{"value":"/ Creates a new `Vec2` with `value` in `self`'s axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107621,"byte_end":107676,"line_start":77,"line_end":77,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3939},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108193,"byte_end":108196,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Abs","qualname":"::direction::Direction::Abs","value":"Direction::Abs(Absolute)","parent":{"krate":0,"index":3938},"children":[],"decl_id":null,"docs":" An absolute direction.\n","sig":null,"attributes":[{"value":"/ An absolute direction.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108162,"byte_end":108188,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3942},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108269,"byte_end":108272,"line_start":95,"line_end":95,"column_start":5,"column_end":8},"name":"Rel","qualname":"::direction::Direction::Rel","value":"Direction::Rel(Relative)","parent":{"krate":0,"index":3938},"children":[],"decl_id":null,"docs":" A direction relative to the current orientation.\n","sig":null,"attributes":[{"value":"/ A direction relative to the current orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108212,"byte_end":108264,"line_start":94,"line_end":94,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":3938},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108146,"byte_end":108155,"line_start":91,"line_end":91,"column_start":10,"column_end":19},"name":"Direction","qualname":"::direction::Direction","value":"Direction::{Abs, Rel}","parent":null,"children":[{"krate":0,"index":3939},{"krate":0,"index":3942}],"decl_id":null,"docs":" Represents a direction, either absolute or orientation-dependent.","sig":null,"attributes":[{"value":"/ Represents a direction, either absolute or orientation-dependent.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107919,"byte_end":107988,"line_start":86,"line_end":86,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107989,"byte_end":107992,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ * Absolute directions are Up, Down, Left, and Right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":107993,"byte_end":108049,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/ * Relative directions are Front and Back.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108050,"byte_end":108095,"line_start":89,"line_end":89,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108381,"byte_end":108389,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"relative","qualname":"<Direction>::relative","value":"fn (self, orientation: Orientation) -> Option<Relative>","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative direction for the given orientation.\n","sig":null,"attributes":[{"value":"/ Returns the relative direction for the given orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108308,"byte_end":108369,"line_start":99,"line_end":99,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108668,"byte_end":108676,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"absolute","qualname":"<Direction>::absolute","value":"fn (self, orientation: Orientation) -> Absolute","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute direction in the given `orientation`.\n","sig":null,"attributes":[{"value":"/ Returns the absolute direction in the given `orientation`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108594,"byte_end":108656,"line_start":107,"line_end":107,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108934,"byte_end":108938,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"back","qualname":"<Direction>::back","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Rel(Relative::Back)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Rel(Relative::Back)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108867,"byte_end":108922,"line_start":115,"line_end":115,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109069,"byte_end":109074,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"front","qualname":"<Direction>::front","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Rel(Relative::Front)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Rel(Relative::Front)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109001,"byte_end":109057,"line_start":120,"line_end":120,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109205,"byte_end":109209,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"left","qualname":"<Direction>::left","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Left)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Left)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109138,"byte_end":109193,"line_start":125,"line_end":125,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109340,"byte_end":109345,"line_start":131,"line_end":131,"column_start":12,"column_end":17},"name":"right","qualname":"<Direction>::right","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Right)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Right)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109272,"byte_end":109328,"line_start":130,"line_end":130,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109474,"byte_end":109476,"line_start":136,"line_end":136,"column_start":12,"column_end":14},"name":"up","qualname":"<Direction>::up","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Up)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Up)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109409,"byte_end":109462,"line_start":135,"line_end":135,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109604,"byte_end":109608,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"down","qualname":"<Direction>::down","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::Down)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::Down)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109537,"byte_end":109592,"line_start":140,"line_end":140,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109738,"byte_end":109742,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"none","qualname":"<Direction>::none","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut to create `Direction::Abs(Absolute::None)`\n","sig":null,"attributes":[{"value":"/ Shortcut to create `Direction::Abs(Absolute::None)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109671,"byte_end":109726,"line_start":145,"line_end":145,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3955},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110076,"byte_end":110081,"line_start":160,"line_end":160,"column_start":5,"column_end":10},"name":"Front","qualname":"::direction::Relative::Front","value":"Relative::Front","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" Front relative direction.","sig":null,"attributes":[{"value":"/ Front relative direction.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109910,"byte_end":109939,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109944,"byte_end":109947,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ * Horizontally, this means `Left`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109952,"byte_end":109989,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ * Vertically, this means `Up`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109994,"byte_end":110027,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110032,"byte_end":110035,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ TODO: handle right-to-left?","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110040,"byte_end":110071,"line_start":159,"line_end":159,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3957},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110213,"byte_end":110217,"line_start":166,"line_end":166,"column_start":5,"column_end":9},"name":"Back","qualname":"::direction::Relative::Back","value":"Relative::Back","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" Back relative direction.","sig":null,"attributes":[{"value":"/ Back relative direction.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110088,"byte_end":110116,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110121,"byte_end":110124,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ * Horizontally, this means `Right`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110129,"byte_end":110167,"line_start":164,"line_end":164,"column_start":5,"column_end":43}},{"value":"/ * Vertically, this means `Down`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110172,"byte_end":110208,"line_start":165,"line_end":165,"column_start":5,"column_end":41}}]},{"kind":"Enum","id":{"krate":0,"index":3954},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109895,"byte_end":109903,"line_start":153,"line_end":153,"column_start":10,"column_end":18},"name":"Relative","qualname":"::direction::Relative","value":"Relative::{Front, Back}","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3957}],"decl_id":null,"docs":" Direction relative to an orientation.\n","sig":null,"attributes":[{"value":"/ Direction relative to an orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":109803,"byte_end":109844,"line_start":151,"line_end":151,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110316,"byte_end":110324,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"absolute","qualname":"<Relative>::absolute","value":"fn (self, orientation: Orientation) -> Absolute","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute direction in the given `orientation`.\n","sig":null,"attributes":[{"value":"/ Returns the absolute direction in the given `orientation`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110242,"byte_end":110304,"line_start":170,"line_end":170,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3968},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110841,"byte_end":110845,"line_start":185,"line_end":185,"column_start":5,"column_end":9},"name":"Left","qualname":"::direction::Absolute::Left","value":"Absolute::Left","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":" Left\n","sig":null,"attributes":[{"value":"/ Left","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110828,"byte_end":110836,"line_start":184,"line_end":184,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3970},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110862,"byte_end":110864,"line_start":187,"line_end":187,"column_start":5,"column_end":7},"name":"Up","qualname":"::direction::Absolute::Up","value":"Absolute::Up","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":" Up\n","sig":null,"attributes":[{"value":"/ Up","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110851,"byte_end":110857,"line_start":186,"line_end":186,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3972},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110884,"byte_end":110889,"line_start":189,"line_end":189,"column_start":5,"column_end":10},"name":"Right","qualname":"::direction::Absolute::Right","value":"Absolute::Right","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":" Right\n","sig":null,"attributes":[{"value":"/ Right","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110870,"byte_end":110879,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3974},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110908,"byte_end":110912,"line_start":191,"line_end":191,"column_start":5,"column_end":9},"name":"Down","qualname":"::direction::Absolute::Down","value":"Absolute::Down","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":" Down\n","sig":null,"attributes":[{"value":"/ Down","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110895,"byte_end":110903,"line_start":190,"line_end":190,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3976},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111020,"byte_end":111024,"line_start":196,"line_end":196,"column_start":5,"column_end":9},"name":"None","qualname":"::direction::Absolute::None","value":"Absolute::None","parent":{"krate":0,"index":3967},"children":[],"decl_id":null,"docs":" No real direction.","sig":null,"attributes":[{"value":"/ No real direction.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110919,"byte_end":110941,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110946,"byte_end":110949,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Used when the \"direction\" is accross layers for instance.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110954,"byte_end":111015,"line_start":195,"line_end":195,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":3967},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110813,"byte_end":110821,"line_start":183,"line_end":183,"column_start":10,"column_end":18},"name":"Absolute","qualname":"::direction::Absolute","value":"Absolute::{Left, Up, Right, Down, None}","parent":null,"children":[{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3974},{"krate":0,"index":3976}],"decl_id":null,"docs":" Absolute direction (up, down, left, right).\n","sig":null,"attributes":[{"value":"/ Absolute direction (up, down, left, right).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110715,"byte_end":110762,"line_start":181,"line_end":181,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111249,"byte_end":111257,"line_start":204,"line_end":204,"column_start":12,"column_end":20},"name":"relative","qualname":"<Absolute>::relative","value":"fn (self, orientation: Orientation) -> Option<Relative>","parent":null,"children":[],"decl_id":null,"docs":" Returns the relative direction for the given orientation.","sig":null,"attributes":[{"value":"/ Returns the relative direction for the given orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111049,"byte_end":111110,"line_start":200,"line_end":200,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111115,"byte_end":111118,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the direction does not apply to the given","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111123,"byte_end":111188,"line_start":202,"line_end":202,"column_start":5,"column_end":70}},{"value":"/ orientation (ex: `Left` and `Vertical`).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111193,"byte_end":111237,"line_start":203,"line_end":203,"column_start":5,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":758},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"menu","qualname":"::menu","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":3986},{"krate":0,"index":3990},{"krate":0,"index":3988},{"krate":0,"index":3992},{"krate":0,"index":4003},{"krate":0,"index":763},{"krate":0,"index":769}],"decl_id":null,"docs":" Build menu trees.","sig":null,"attributes":[{"value":"! Build menu trees.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111656,"byte_end":111677,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111678,"byte_end":111681,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Menus are a way to arrange many actions in groups of more manageable size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111682,"byte_end":111760,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111761,"byte_end":111764,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! A menu can be seen as a `MenuTree`. It has a list of children:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111765,"byte_end":111831,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111832,"byte_end":111835,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * Leaf nodes are made of a label and a callback","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111836,"byte_end":111887,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"! * Sub-trees are made of a label, and another `MenuTree`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111888,"byte_end":111948,"line_start":8,"line_end":8,"column_start":1,"column_end":61}},{"value":"! * Delimiters are just there to separate groups of related children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":111949,"byte_end":112020,"line_start":9,"line_end":9,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112021,"byte_end":112024,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! The [menubar] is the main way to show menus.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112025,"byte_end":112073,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112074,"byte_end":112077,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! [menubar]: ../struct.Cursive.html#method.menubar","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112078,"byte_end":112130,"line_start":13,"line_end":13,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":3986},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112256,"byte_end":112264,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"MenuTree","qualname":"::menu::MenuTree","value":"MenuTree { children }","parent":null,"children":[{"krate":0,"index":3987}],"decl_id":null,"docs":" Root of a menu tree.\n","sig":null,"attributes":[{"value":"/ Root of a menu tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112194,"byte_end":112218,"line_start":20,"line_end":20,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3987},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112294,"byte_end":112302,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"children","qualname":"::menu::MenuTree::children","value":"std::vec::Vec<menu::MenuItem>","parent":{"krate":0,"index":3986},"children":[],"decl_id":null,"docs":" Menu items\n","sig":null,"attributes":[{"value":"/ Menu items","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112271,"byte_end":112285,"line_start":23,"line_end":23,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3993},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112431,"byte_end":112435,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Leaf","qualname":"::menu::MenuItem::Leaf","value":"MenuItem::Leaf(String, Callback)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Actionnable button with a label.\n","sig":null,"attributes":[{"value":"/ Actionnable button with a label.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112390,"byte_end":112426,"line_start":30,"line_end":30,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3997},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112490,"byte_end":112497,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"Subtree","qualname":"::menu::MenuItem::Subtree","value":"MenuItem::Subtree(String, Rc<MenuTree>)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Sub-menu with a label.\n","sig":null,"attributes":[{"value":"/ Sub-menu with a label.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112459,"byte_end":112485,"line_start":32,"line_end":32,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4001},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112560,"byte_end":112569,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Delimiter","qualname":"::menu::MenuItem::Delimiter","value":"MenuItem::Delimiter","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" Delimiter without a label.\n","sig":null,"attributes":[{"value":"/ Delimiter without a label.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112525,"byte_end":112555,"line_start":34,"line_end":34,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3992},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112375,"byte_end":112383,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"name":"MenuItem","qualname":"::menu::MenuItem","value":"MenuItem::{Leaf, Subtree, Delimiter}","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3997},{"krate":0,"index":4001}],"decl_id":null,"docs":" Node in the menu tree.\n","sig":null,"attributes":[{"value":"/ Node in the menu tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112322,"byte_end":112348,"line_start":27,"line_end":27,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112708,"byte_end":112713,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"label","qualname":"<MenuItem>::label","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the label for this item.","sig":null,"attributes":[{"value":"/ Returns the label for this item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112594,"byte_end":112630,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112635,"byte_end":112638,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Returns an empty string if `self` is a delimiter.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112643,"byte_end":112696,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112988,"byte_end":113000,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"is_delimiter","qualname":"<MenuItem>::is_delimiter","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a delimiter.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a delimiter.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112932,"byte_end":112976,"line_start":51,"line_end":51,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113182,"byte_end":113189,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"is_leaf","qualname":"<MenuItem>::is_leaf","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a leaf node.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a leaf node.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113126,"byte_end":113170,"line_start":59,"line_end":59,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113370,"byte_end":113380,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_subtree","qualname":"<MenuItem>::is_subtree","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a subtree.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` is a subtree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113316,"byte_end":113358,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113654,"byte_end":113664,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"as_subtree","qualname":"<MenuItem>::as_subtree","value":"fn (&mut self) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the subtree, if applicable.","sig":null,"attributes":[{"value":"/ Return a mutable reference to the subtree, if applicable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113510,"byte_end":113571,"line_start":75,"line_end":75,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113576,"byte_end":113579,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not a `MenuItem::Subtree`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113584,"byte_end":113642,"line_start":77,"line_end":77,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113905,"byte_end":113908,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuTree>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty tree.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113863,"byte_end":113893,"line_start":87,"line_end":87,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114009,"byte_end":114014,"line_start":93,"line_end":93,"column_start":12,"column_end":17},"name":"clear","qualname":"<MenuTree>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove every children from this tree.\n","sig":null,"attributes":[{"value":"/ Remove every children from this tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113956,"byte_end":113997,"line_start":92,"line_end":92,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114124,"byte_end":114130,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"insert","qualname":"<MenuTree>::insert","value":"fn (&mut self, i: usize, item: MenuItem) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts an item at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114070,"byte_end":114112,"line_start":97,"line_end":97,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114278,"byte_end":114294,"line_start":103,"line_end":103,"column_start":12,"column_end":28},"name":"insert_delimiter","qualname":"<MenuTree>::insert_delimiter","value":"fn (&mut self, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a delimiter at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts a delimiter at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114220,"byte_end":114266,"line_start":102,"line_end":102,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114431,"byte_end":114444,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"add_delimiter","qualname":"<MenuTree>::add_delimiter","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of this tree.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of this tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114374,"byte_end":114419,"line_start":107,"line_end":107,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114617,"byte_end":114626,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<MenuTree>::delimiter","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of this tree - chainable variant.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of this tree - chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114540,"byte_end":114605,"line_start":113,"line_end":113,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114765,"byte_end":114773,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"add_leaf","qualname":"<MenuTree>::add_leaf","value":"fn <S, F> (&mut self, title: S, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a actionnable leaf to the end of this tree.\n","sig":null,"attributes":[{"value":"/ Adds a actionnable leaf to the end of this tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114701,"byte_end":114753,"line_start":118,"line_end":118,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115029,"byte_end":115040,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"insert_leaf","qualname":"<MenuTree>::insert_leaf","value":"fn <S, F> (&mut self, i: usize, title: S, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a leaf at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts a leaf at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":114976,"byte_end":115017,"line_start":128,"line_end":128,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115364,"byte_end":115368,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"leaf","qualname":"<MenuTree>::leaf","value":"fn <S, F> (self, title: S, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a actionnable leaf to the end of this tree - chainable variant.\n","sig":null,"attributes":[{"value":"/ Adds a actionnable leaf to the end of this tree - chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115280,"byte_end":115352,"line_start":138,"line_end":138,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115604,"byte_end":115618,"line_start":148,"line_end":148,"column_start":12,"column_end":26},"name":"insert_subtree","qualname":"<MenuTree>::insert_subtree","value":"fn <S> (&mut self, i: usize, title: S, tree: MenuTree) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a subtree at the given position.\n","sig":null,"attributes":[{"value":"/ Inserts a subtree at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115548,"byte_end":115592,"line_start":147,"line_end":147,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115900,"byte_end":115911,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"add_subtree","qualname":"<MenuTree>::add_subtree","value":"fn <S> (&mut self, title: S, tree: MenuTree) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a submenu to the end of this tree.\n","sig":null,"attributes":[{"value":"/ Adds a submenu to the end of this tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":115845,"byte_end":115888,"line_start":157,"line_end":157,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116161,"byte_end":116168,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"subtree","qualname":"<MenuTree>::subtree","value":"fn <S> (self, title: S, tree: MenuTree) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a submenu to the end of this tree - chainable variant.\n","sig":null,"attributes":[{"value":"/ Adds a submenu to the end of this tree - chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116086,"byte_end":116149,"line_start":166,"line_end":166,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116431,"byte_end":116438,"line_start":177,"line_end":177,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MenuTree>::get_mut","value":"fn (&mut self, i: usize) -> Option<&mut MenuItem>","parent":null,"children":[],"decl_id":null,"docs":" Looks for the child at the given position.","sig":null,"attributes":[{"value":"/ Looks for the child at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116320,"byte_end":116366,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116371,"byte_end":116374,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `i >= self.len()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116379,"byte_end":116419,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116670,"byte_end":116681,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_subtree","qualname":"<MenuTree>::get_subtree","value":"fn (&mut self, i: usize) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item at the given position.","sig":null,"attributes":[{"value":"/ Returns the item at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116531,"byte_end":116574,"line_start":181,"line_end":181,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116579,"byte_end":116582,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `i > self.len()` or if the item is not a subtree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116587,"byte_end":116658,"line_start":183,"line_end":183,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116910,"byte_end":116919,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"find_item","qualname":"<MenuTree>::find_item","value":"fn (&mut self, title: &str) -> Option<&mut MenuItem>","parent":null,"children":[],"decl_id":null,"docs":" Looks for a child with the given title.","sig":null,"attributes":[{"value":"/ Looks for a child with the given title.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116796,"byte_end":116839,"line_start":188,"line_end":188,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116844,"byte_end":116847,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no such label was found.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":116852,"byte_end":116898,"line_start":190,"line_end":190,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117135,"byte_end":117147,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"find_subtree","qualname":"<MenuTree>::find_subtree","value":"fn (&mut self, title: &str) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Looks for a subtree with the given title.\n","sig":null,"attributes":[{"value":"/ Looks for a subtree with the given title.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117078,"byte_end":117123,"line_start":197,"line_end":197,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117502,"byte_end":117515,"line_start":209,"line_end":209,"column_start":12,"column_end":25},"name":"find_position","qualname":"<MenuTree>::find_position","value":"fn (&mut self, title: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of a child with the given label.","sig":null,"attributes":[{"value":"/ Returns the position of a child with the given label.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117374,"byte_end":117431,"line_start":206,"line_end":206,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117436,"byte_end":117439,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no such label was found.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117444,"byte_end":117490,"line_start":208,"line_end":208,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117721,"byte_end":117727,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"remove","qualname":"<MenuTree>::remove","value":"fn (&mut self, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the item at the given position.\n","sig":null,"attributes":[{"value":"/ Removes the item at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117666,"byte_end":117709,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117943,"byte_end":117946,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"len","qualname":"<MenuTree>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of direct children in this node.","sig":null,"attributes":[{"value":"/ Returns the number of direct children in this node.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117795,"byte_end":117850,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117855,"byte_end":117858,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * Includes delimiters.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117863,"byte_end":117889,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/ * Does not count nested children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":117894,"byte_end":117931,"line_start":223,"line_end":223,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":118064,"byte_end":118072,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<MenuTree>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this tree has no children.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this tree has no children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":118004,"byte_end":118052,"line_start":228,"line_end":228,"column_start":5,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":805},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rect","qualname":"::rect","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","parent":null,"children":[{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":4005},{"krate":0,"index":4018},{"krate":0,"index":4016},{"krate":0,"index":4015},{"krate":0,"index":4011},{"krate":0,"index":4012},{"krate":0,"index":4008},{"krate":0,"index":4009},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":815}],"decl_id":null,"docs":" Rectangles on the 2D character grid.\n","sig":null,"attributes":[{"value":"! Rectangles on the 2D character grid.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118132,"byte_end":118172,"line_start":1,"line_end":1,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4005},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118306,"byte_end":118310,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect {  }","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4007}],"decl_id":null,"docs":" A non-empty rectangle on the 2D grid.\n","sig":null,"attributes":[{"value":"/ A non-empty rectangle on the 2D grid.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118208,"byte_end":118249,"line_start":5,"line_end":5,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118922,"byte_end":118931,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Rect>::from_size","value":"fn <U, V> (top_left: U, size: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` with the given position and size.","sig":null,"attributes":[{"value":"/ Creates a new `Rect` with the given position and size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118804,"byte_end":118862,"line_start":37,"line_end":37,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118867,"byte_end":118870,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The minimum size will `(1, 1)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118875,"byte_end":118910,"line_start":39,"line_end":39,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119339,"byte_end":119351,"line_start":56,"line_end":56,"column_start":12,"column_end":24},"name":"from_corners","qualname":"<Rect>::from_corners","value":"fn <U, V> (a: U, b: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rect` from two corners.","sig":null,"attributes":[{"value":"/ Creates a new `Rect` from two corners.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119233,"byte_end":119275,"line_start":53,"line_end":53,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119280,"byte_end":119283,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ It can be any two opposite corners.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119288,"byte_end":119327,"line_start":55,"line_end":55,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119730,"byte_end":119739,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"expand_to","qualname":"<Rect>::expand_to","value":"fn <R> (&mut self, other: R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Grow this rectangle if necessary to include `other`.\n","sig":null,"attributes":[{"value":"/ Grow this rectangle if necessary to include `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119662,"byte_end":119718,"line_start":73,"line_end":73,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120063,"byte_end":120074,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"expanded_to","qualname":"<Rect>::expanded_to","value":"fn <R> (mut self, other: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new rectangle that includes both `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns a new rectangle that includes both `self` and `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":119985,"byte_end":120051,"line_start":84,"line_end":84,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120256,"byte_end":120262,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"offset","qualname":"<Rect>::offset","value":"fn <V> (&mut self, offset: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the given offset to this rectangle.\n","sig":null,"attributes":[{"value":"/ Adds the given offset to this rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120200,"byte_end":120244,"line_start":93,"line_end":93,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120528,"byte_end":120532,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"size","qualname":"<Rect>::size","value":"fn (self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the size of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120478,"byte_end":120516,"line_start":103,"line_end":103,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120662,"byte_end":120667,"line_start":109,"line_end":109,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect>::width","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the width of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120611,"byte_end":120650,"line_start":108,"line_end":108,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120770,"byte_end":120776,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect>::height","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the height of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120718,"byte_end":120758,"line_start":113,"line_end":113,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120906,"byte_end":120914,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"top_left","qualname":"<Rect>::top_left","value":"fn (self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the top-left corner.","sig":null,"attributes":[{"value":"/ Returns the top-left corner.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120827,"byte_end":120859,"line_start":118,"line_end":118,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120864,"byte_end":120867,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120872,"byte_end":120894,"line_start":120,"line_end":120,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121047,"byte_end":121059,"line_start":128,"line_end":128,"column_start":12,"column_end":24},"name":"bottom_right","qualname":"<Rect>::bottom_right","value":"fn (self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom-right corner.","sig":null,"attributes":[{"value":"/ Returns the bottom-right corner.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":120964,"byte_end":121000,"line_start":125,"line_end":125,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121005,"byte_end":121008,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121013,"byte_end":121035,"line_start":127,"line_end":127,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121193,"byte_end":121202,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"top_right","qualname":"<Rect>::top_right","value":"fn (self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the top-right corner.","sig":null,"attributes":[{"value":"/ Returns the top-right corner.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121113,"byte_end":121146,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121151,"byte_end":121154,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121159,"byte_end":121181,"line_start":134,"line_end":134,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121356,"byte_end":121367,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"bottom_left","qualname":"<Rect>::bottom_left","value":"fn (self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the bottom-left corner.","sig":null,"attributes":[{"value":"/ Returns the bottom-left corner.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121274,"byte_end":121309,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121314,"byte_end":121317,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121322,"byte_end":121344,"line_start":141,"line_end":141,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121545,"byte_end":121548,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"top","qualname":"<Rect>::top","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y value of the top edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the Y value of the top edge of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121441,"byte_end":121498,"line_start":146,"line_end":146,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121503,"byte_end":121506,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121511,"byte_end":121533,"line_start":148,"line_end":148,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121706,"byte_end":121710,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"left","qualname":"<Rect>::left","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the X value of the left edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the X value of the left edge of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121601,"byte_end":121659,"line_start":153,"line_end":153,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121664,"byte_end":121667,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121672,"byte_end":121694,"line_start":155,"line_end":155,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121869,"byte_end":121874,"line_start":163,"line_end":163,"column_start":12,"column_end":17},"name":"right","qualname":"<Rect>::right","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the X value of the right edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the X value of the right edge of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121763,"byte_end":121822,"line_start":160,"line_end":160,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121827,"byte_end":121830,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121835,"byte_end":121857,"line_start":162,"line_end":162,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":122038,"byte_end":122044,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Rect>::bottom","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the Y value of the botton edge of the rectangle.","sig":null,"attributes":[{"value":"/ Returns the Y value of the botton edge of the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121931,"byte_end":121991,"line_start":167,"line_end":167,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":121996,"byte_end":121999,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ This is inclusive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":122004,"byte_end":122026,"line_start":169,"line_end":169,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":122180,"byte_end":122187,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"surface","qualname":"<Rect>::surface","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the surface (number of cells) covered by the rectangle.\n","sig":null,"attributes":[{"value":"/ Returns the surface (number of cells) covered by the rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":122101,"byte_end":122168,"line_start":174,"line_end":174,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":122300,"byte_end":122308,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect>::contains","value":"fn (self, point: Vec2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if a point is in `self`.\n","sig":null,"attributes":[{"value":"/ Checks if a point is in `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":122253,"byte_end":122288,"line_start":179,"line_end":179,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":841},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"theme","qualname":"::theme","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":847},{"krate":0,"index":857},{"krate":0,"index":862},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":935},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":4313},{"krate":0,"index":4319},{"krate":0,"index":4317},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":4321},{"krate":0,"index":4328},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989}],"decl_id":null,"docs":" Handle colors and themes in the UI.","sig":null,"attributes":[{"value":"! Handle colors and themes in the UI.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122417,"byte_end":122456,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122457,"byte_end":122460,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! # Colors","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122461,"byte_end":122473,"line_start":3,"line_end":3,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122474,"byte_end":122477,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! Characters can be printed in the terminal with a specific color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122478,"byte_end":122546,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"! The [`Color`] enum represents the ways this can be set.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122547,"byte_end":122606,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122607,"byte_end":122610,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! [`Color`]: enum.Color.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122611,"byte_end":122641,"line_start":8,"line_end":8,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122642,"byte_end":122645,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! # Palette","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122646,"byte_end":122659,"line_start":10,"line_end":10,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122660,"byte_end":122663,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! To achieve a customizable, yet unified look, Cursive uses a configurable","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122664,"byte_end":122740,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"! palette of colors to be used through the entire application.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122741,"byte_end":122805,"line_start":13,"line_end":13,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122806,"byte_end":122809,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! The [`PaletteColor`] enum defines possible entries in this palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122810,"byte_end":122881,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122882,"byte_end":122885,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! [`PaletteColor`]: enum.PaletteColor.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122886,"byte_end":122930,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122931,"byte_end":122934,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! These entries are:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122935,"byte_end":122957,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122958,"byte_end":122961,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! * **`Background`**: used to color the application background","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":122962,"byte_end":123026,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"!   (around views).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123027,"byte_end":123048,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"!   Defaults to **blue**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123049,"byte_end":123076,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"! * **`Shadow`**: used to color shadow around views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123077,"byte_end":123131,"line_start":24,"line_end":24,"column_start":1,"column_end":55}},{"value":"!   Defaults to **black**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123132,"byte_end":123160,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"! * **`View`**: used to color the background for views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123161,"byte_end":123218,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"!   Defaults to **white**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123219,"byte_end":123247,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"! * **`Primary`**: used to print primary text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123248,"byte_end":123296,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"!   Defaults to **black**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123297,"byte_end":123325,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"! * **`Secondary`**: used to print secondary text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123326,"byte_end":123378,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"!   Defaults to **blue**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123379,"byte_end":123406,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"! * **`Tertiary`**: used to print tertiary text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123407,"byte_end":123457,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"!   Defaults to **white**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123458,"byte_end":123486,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"! * **`TitlePrimary`**: used to print primary titles.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123487,"byte_end":123542,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"!   Defaults to **red**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123543,"byte_end":123569,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"! * **`TitleSecondary`**: used to print secondary titles.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123570,"byte_end":123629,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"!   Defaults to **yellow**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123630,"byte_end":123659,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"! * **`Highlight`**: used to highlight selected items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123660,"byte_end":123716,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"!   Defaults to **red**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123717,"byte_end":123743,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"! * **`HighlightInactive`**: used to highlight selected but inactive items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123744,"byte_end":123821,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"!   Defaults to **blue**.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123822,"byte_end":123849,"line_start":41,"line_end":41,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123850,"byte_end":123853,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! A [`Palette`] then maps each of these to an actual [`Color`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123854,"byte_end":123919,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123920,"byte_end":123923,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! [`Palette`]: type.Palette.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123924,"byte_end":123958,"line_start":45,"line_end":45,"column_start":1,"column_end":35}},{"value":"! [`Color`]: enum.Color.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123959,"byte_end":123989,"line_start":46,"line_end":46,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123990,"byte_end":123993,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! # Color Types","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":123994,"byte_end":124011,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124012,"byte_end":124015,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! When drawing views, color can be picked in two way:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124016,"byte_end":124071,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124072,"byte_end":124075,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! * An exact [`Color`] can be given directly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124076,"byte_end":124122,"line_start":52,"line_end":52,"column_start":1,"column_end":47}},{"value":"! * A [`PaletteColor`] entry can be given, which will fetch whatever color","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124123,"byte_end":124199,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"!   is currently defined for this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124200,"byte_end":124236,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124237,"byte_end":124240,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! The [`ColorType`] enum abstract over these two choices.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124241,"byte_end":124300,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124301,"byte_end":124304,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! [`ColorType`]: enum.ColorType.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124305,"byte_end":124343,"line_start":58,"line_end":58,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124344,"byte_end":124347,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! # Color Styles","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124348,"byte_end":124366,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124367,"byte_end":124370,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! To actually print anything, two colors must be picked: one for the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124371,"byte_end":124441,"line_start":62,"line_end":62,"column_start":1,"column_end":71}},{"value":"! foreground, and one for the background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124442,"byte_end":124485,"line_start":63,"line_end":63,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124486,"byte_end":124489,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! As such, a [`ColorStyle`] is made of a pair of `ColorType`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124490,"byte_end":124553,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124554,"byte_end":124557,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! Since some pairs are frequently used, `ColorStyle` defines some methods to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124558,"byte_end":124636,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! create these usual values:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124637,"byte_end":124667,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124668,"byte_end":124671,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! * **`ColorStyle::background()`**: style used to print the application","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124672,"byte_end":124745,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"!   background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124746,"byte_end":124763,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"!     * Its *background* color is `Background`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124764,"byte_end":124813,"line_start":72,"line_end":72,"column_start":1,"column_end":50}},{"value":"!     * Its *foreground* color is unimportant as no characters are ever","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124814,"byte_end":124887,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"!       printed in the background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124888,"byte_end":124924,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"! * **`ColorStyle::shadow()`**: style used to print shadows behind views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":124925,"byte_end":125000,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"!     * Its *background* color is `Shadow`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125001,"byte_end":125046,"line_start":76,"line_end":76,"column_start":1,"column_end":46}},{"value":"!     * Here again, the *foreground* color is unimportant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125047,"byte_end":125107,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"! * **`ColorStyle::primary()`**: style used to print primary text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125108,"byte_end":125176,"line_start":78,"line_end":78,"column_start":1,"column_end":69}},{"value":"!     * Its *background* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125177,"byte_end":125220,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"!     * Its *foreground* color is `Primary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125221,"byte_end":125267,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"! * **`ColorStyle::secondary()`**: style used to print secondary text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125268,"byte_end":125340,"line_start":81,"line_end":81,"column_start":1,"column_end":73}},{"value":"!     * Its *background* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125341,"byte_end":125384,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"!     * Its *foreground* color is `Secondary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125385,"byte_end":125433,"line_start":83,"line_end":83,"column_start":1,"column_end":49}},{"value":"! * **`ColorStyle::tertiary()`**: style used to print tertiary text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125434,"byte_end":125504,"line_start":84,"line_end":84,"column_start":1,"column_end":71}},{"value":"!     * Its *background* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125505,"byte_end":125548,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"!     * Its *foreground* color is `Tertiary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125549,"byte_end":125596,"line_start":86,"line_end":86,"column_start":1,"column_end":48}},{"value":"! * **`ColorStyle::title_primary()`**: style used to print titles.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125597,"byte_end":125665,"line_start":87,"line_end":87,"column_start":1,"column_end":69}},{"value":"!     * Its *background* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125666,"byte_end":125709,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"!     * Its *foreground* color is `TitlePrimary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125710,"byte_end":125761,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"! * **`ColorStyle::title_secondary()`**: style used to print secondary","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125762,"byte_end":125834,"line_start":90,"line_end":90,"column_start":1,"column_end":73}},{"value":"!   titles.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125835,"byte_end":125848,"line_start":91,"line_end":91,"column_start":1,"column_end":14}},{"value":"!     * Its *background* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125849,"byte_end":125892,"line_start":92,"line_end":92,"column_start":1,"column_end":44}},{"value":"!     * Its *foreground* color is `TitleSecondary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125893,"byte_end":125946,"line_start":93,"line_end":93,"column_start":1,"column_end":54}},{"value":"! * **`ColorStyle::highlight()`**: style used to print selected items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":125947,"byte_end":126019,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"!     * Its *background* color is `Highlight`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126020,"byte_end":126068,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!     * Its *foreground* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126069,"byte_end":126112,"line_start":96,"line_end":96,"column_start":1,"column_end":44}},{"value":"! * **`ColorStyle::highlight_inactive()`**: style used to print selected,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126113,"byte_end":126188,"line_start":97,"line_end":97,"column_start":1,"column_end":76}},{"value":"!   but inactive items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126189,"byte_end":126214,"line_start":98,"line_end":98,"column_start":1,"column_end":26}},{"value":"!     * Its *background* color is `HighlightInactive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126215,"byte_end":126271,"line_start":99,"line_end":99,"column_start":1,"column_end":57}},{"value":"!     * Its *foreground* color is `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126272,"byte_end":126315,"line_start":100,"line_end":100,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126316,"byte_end":126319,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"! Using one of these pairs when styling your application helps give it a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126320,"byte_end":126394,"line_start":102,"line_end":102,"column_start":1,"column_end":75}},{"value":"! coherent look.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126395,"byte_end":126413,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126414,"byte_end":126417,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! [`ColorStyle`]: struct.ColorStyle.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126418,"byte_end":126460,"line_start":105,"line_end":105,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126461,"byte_end":126464,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! # Effects","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126465,"byte_end":126478,"line_start":107,"line_end":107,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126479,"byte_end":126482,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! On top of a color style, some effects can be applied on cells: `Reverse`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126483,"byte_end":126560,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"! for instance, swaps the foreground and background colors of a cell.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126561,"byte_end":126632,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126633,"byte_end":126636,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126637,"byte_end":126640,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! # Style","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126641,"byte_end":126652,"line_start":113,"line_end":113,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126653,"byte_end":126656,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! Finally, a style combine a [`ColorType`] and a set of [`Effect`]s, to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126657,"byte_end":126730,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"! represent any way text should be printed on screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126731,"byte_end":126786,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126787,"byte_end":126790,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"! [`Effect`]: enum.Effect.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126791,"byte_end":126823,"line_start":118,"line_end":118,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126824,"byte_end":126827,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! # Themes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126828,"byte_end":126840,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126841,"byte_end":126844,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! A theme defines the color palette an application will use, as well as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126845,"byte_end":126918,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"! various options to style views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126919,"byte_end":126954,"line_start":123,"line_end":123,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126955,"byte_end":126958,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! Themes are described in toml configuration files. All fields are optional.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":126959,"byte_end":127037,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127038,"byte_end":127041,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! Here are the possible entries:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127042,"byte_end":127076,"line_start":127,"line_end":127,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127077,"byte_end":127080,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127081,"byte_end":127092,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"! # Every field in a theme file is optional.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127093,"byte_end":127139,"line_start":130,"line_end":130,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127140,"byte_end":127143,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! # First come some various options","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127144,"byte_end":127181,"line_start":132,"line_end":132,"column_start":1,"column_end":38}},{"value":"! shadow = false  # Don't draw shadows around stacked views","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127182,"byte_end":127243,"line_start":133,"line_end":133,"column_start":1,"column_end":62}},{"value":"! borders = \"simple\"  # Alternatives are \"none\" and \"outset\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127244,"byte_end":127306,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127307,"byte_end":127310,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! # Here we define the color palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127311,"byte_end":127350,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"! [colors]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127351,"byte_end":127363,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"! \tbackground = \"black\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127364,"byte_end":127389,"line_start":138,"line_end":138,"column_start":1,"column_end":26}},{"value":"! \t# If the value is an array, the first valid color will be used.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127390,"byte_end":127458,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"! \t# If the terminal doesn't support custom color,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127459,"byte_end":127511,"line_start":140,"line_end":140,"column_start":1,"column_end":53}},{"value":"! \t# non-base colors will be skipped.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127512,"byte_end":127551,"line_start":141,"line_end":141,"column_start":1,"column_end":40}},{"value":"! \tshadow     = [\"#000000\", \"black\"]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127552,"byte_end":127590,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"! \tview       = \"#d3d7cf\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127591,"byte_end":127618,"line_start":143,"line_end":143,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127619,"byte_end":127622,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! \t# Array and simple values have the same effect.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127623,"byte_end":127675,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"! \tprimary   = [\"#111111\"]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127676,"byte_end":127704,"line_start":146,"line_end":146,"column_start":1,"column_end":29}},{"value":"! \tsecondary = \"#EEEEEE\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127705,"byte_end":127731,"line_start":147,"line_end":147,"column_start":1,"column_end":27}},{"value":"! \ttertiary  = \"#444444\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127732,"byte_end":127758,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127759,"byte_end":127762,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! \t# Hex values can use lower or uppercase.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127763,"byte_end":127808,"line_start":150,"line_end":150,"column_start":1,"column_end":46}},{"value":"! \t# (base color MUST be lowercase)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127809,"byte_end":127846,"line_start":151,"line_end":151,"column_start":1,"column_end":38}},{"value":"! \ttitle_primary   = \"#ff5555\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127847,"byte_end":127879,"line_start":152,"line_end":152,"column_start":1,"column_end":33}},{"value":"! \ttitle_secondary = \"#ffff55\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127880,"byte_end":127912,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127913,"byte_end":127916,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! \t# Lower precision values can use only 3 digits.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127917,"byte_end":127969,"line_start":155,"line_end":155,"column_start":1,"column_end":53}},{"value":"! \thighlight          = \"#F00\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":127970,"byte_end":128002,"line_start":156,"line_end":156,"column_start":1,"column_end":33}},{"value":"! \thighlight_inactive = \"#5555FF\"","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128003,"byte_end":128038,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128039,"byte_end":128046,"line_start":158,"line_end":158,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4021},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130929,"byte_end":130935,"line_start":9,"line_end":9,"column_start":5,"column_end":11},"name":"Simple","qualname":"::theme::border_style::BorderStyle::Simple","value":"BorderStyle::Simple","parent":{"krate":0,"index":4020},"children":[],"decl_id":null,"docs":" Simple borders.\n","sig":null,"attributes":[{"value":"/ Simple borders.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130905,"byte_end":130924,"line_start":8,"line_end":8,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4023},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130989,"byte_end":130995,"line_start":11,"line_end":11,"column_start":5,"column_end":11},"name":"Outset","qualname":"::theme::border_style::BorderStyle::Outset","value":"BorderStyle::Outset","parent":{"krate":0,"index":4020},"children":[],"decl_id":null,"docs":" Outset borders with a simple 3d effect.\n","sig":null,"attributes":[{"value":"/ Outset borders with a simple 3d effect.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130941,"byte_end":130984,"line_start":10,"line_end":10,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4025},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":131021,"byte_end":131025,"line_start":13,"line_end":13,"column_start":5,"column_end":9},"name":"None","qualname":"::theme::border_style::BorderStyle::None","value":"BorderStyle::None","parent":{"krate":0,"index":4020},"children":[],"decl_id":null,"docs":" No borders.\n","sig":null,"attributes":[{"value":"/ No borders.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":131001,"byte_end":131016,"line_start":12,"line_end":12,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":4020},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130887,"byte_end":130898,"line_start":7,"line_end":7,"column_start":10,"column_end":21},"name":"BorderStyle","qualname":"::theme::border_style::BorderStyle","value":"BorderStyle::{Simple, Outset, None}","parent":null,"children":[{"krate":0,"index":4021},{"krate":0,"index":4023},{"krate":0,"index":4025}],"decl_id":null,"docs":" Specifies how some borders should be drawn.","sig":null,"attributes":[{"value":"/ Specifies how some borders should be drawn.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130711,"byte_end":130758,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130759,"byte_end":130762,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Borders are used around Dialogs, select popups, and panels.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":130763,"byte_end":130826,"line_start":5,"line_end":5,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4042},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131462,"byte_end":131467,"line_start":7,"line_end":7,"column_start":5,"column_end":10},"name":"Black","qualname":"::theme::color::BaseColor::Black","value":"BaseColor::Black","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Black color","sig":null,"attributes":[{"value":"/ Black color","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131417,"byte_end":131432,"line_start":4,"line_end":4,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131437,"byte_end":131440,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ Color #0","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131445,"byte_end":131457,"line_start":6,"line_end":6,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4044},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131516,"byte_end":131519,"line_start":11,"line_end":11,"column_start":5,"column_end":8},"name":"Red","qualname":"::theme::color::BaseColor::Red","value":"BaseColor::Red","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Red color","sig":null,"attributes":[{"value":"/ Red color","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131473,"byte_end":131486,"line_start":8,"line_end":8,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131491,"byte_end":131494,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Color #1","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131499,"byte_end":131511,"line_start":10,"line_end":10,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4046},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131570,"byte_end":131575,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Green","qualname":"::theme::color::BaseColor::Green","value":"BaseColor::Green","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Green color","sig":null,"attributes":[{"value":"/ Green color","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131525,"byte_end":131540,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131545,"byte_end":131548,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ Color #2","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131553,"byte_end":131565,"line_start":14,"line_end":14,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4048},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131641,"byte_end":131647,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::theme::color::BaseColor::Yellow","value":"BaseColor::Yellow","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Yellow color (Red + Green)","sig":null,"attributes":[{"value":"/ Yellow color (Red + Green)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131581,"byte_end":131611,"line_start":16,"line_end":16,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131616,"byte_end":131619,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ Color #3","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131624,"byte_end":131636,"line_start":18,"line_end":18,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4050},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131697,"byte_end":131701,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Blue","qualname":"::theme::color::BaseColor::Blue","value":"BaseColor::Blue","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Blue color","sig":null,"attributes":[{"value":"/ Blue color","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131653,"byte_end":131667,"line_start":20,"line_end":20,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131672,"byte_end":131675,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Color #4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131680,"byte_end":131692,"line_start":22,"line_end":22,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4052},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131767,"byte_end":131774,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"name":"Magenta","qualname":"::theme::color::BaseColor::Magenta","value":"BaseColor::Magenta","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Magenta color (Red + Blue)","sig":null,"attributes":[{"value":"/ Magenta color (Red + Blue)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131707,"byte_end":131737,"line_start":24,"line_end":24,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131742,"byte_end":131745,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ Color #5","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131750,"byte_end":131762,"line_start":26,"line_end":26,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4054},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131839,"byte_end":131843,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::theme::color::BaseColor::Cyan","value":"BaseColor::Cyan","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" Cyan color (Green + Blue)","sig":null,"attributes":[{"value":"/ Cyan color (Green + Blue)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131780,"byte_end":131809,"line_start":28,"line_end":28,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131814,"byte_end":131817,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Color #6","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131822,"byte_end":131834,"line_start":30,"line_end":30,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4056},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131915,"byte_end":131920,"line_start":35,"line_end":35,"column_start":5,"column_end":10},"name":"White","qualname":"::theme::color::BaseColor::White","value":"BaseColor::White","parent":{"krate":0,"index":4041},"children":[],"decl_id":null,"docs":" White color (Red + Green + Blue)","sig":null,"attributes":[{"value":"/ White color (Red + Green + Blue)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131849,"byte_end":131885,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131890,"byte_end":131893,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Color #7","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131898,"byte_end":131910,"line_start":34,"line_end":34,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":4041},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131401,"byte_end":131410,"line_start":3,"line_end":3,"column_start":10,"column_end":19},"name":"BaseColor","qualname":"::theme::color::BaseColor","value":"BaseColor::{Black, Red, Green, Yellow, Blue, Magenta, Cyan, White}","parent":null,"children":[{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4048},{"krate":0,"index":4050},{"krate":0,"index":4052},{"krate":0,"index":4054},{"krate":0,"index":4056}],"decl_id":null,"docs":" One of the 8 base colors.\n","sig":null,"attributes":[{"value":"/ One of the 8 base colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131311,"byte_end":131340,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4073},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132499,"byte_end":132514,"line_start":58,"line_end":58,"column_start":5,"column_end":20},"name":"TerminalDefault","qualname":"::theme::color::Color::TerminalDefault","value":"Color::TerminalDefault","parent":{"krate":0,"index":4072},"children":[],"decl_id":null,"docs":" Represents a color, preset by terminal.\n","sig":null,"attributes":[{"value":"/ Represents a color, preset by terminal.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132451,"byte_end":132494,"line_start":57,"line_end":57,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4075},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132638,"byte_end":132642,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Dark","qualname":"::theme::color::Color::Dark","value":"Color::Dark(BaseColor)","parent":{"krate":0,"index":4072},"children":[],"decl_id":null,"docs":" One of the 8 base colors.","sig":null,"attributes":[{"value":"/ One of the 8 base colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132521,"byte_end":132550,"line_start":60,"line_end":60,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132555,"byte_end":132558,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note: the actual color used depends on the terminal configuration.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132563,"byte_end":132633,"line_start":62,"line_end":62,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4078},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132784,"byte_end":132789,"line_start":68,"line_end":68,"column_start":5,"column_end":10},"name":"Light","qualname":"::theme::color::Color::Light","value":"Color::Light(BaseColor)","parent":{"krate":0,"index":4072},"children":[],"decl_id":null,"docs":" Lighter version of a base color.","sig":null,"attributes":[{"value":"/ Lighter version of a base color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132660,"byte_end":132696,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132701,"byte_end":132704,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Note: the actual color used depends on the terminal configuration.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132709,"byte_end":132779,"line_start":67,"line_end":67,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4081},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132835,"byte_end":132838,"line_start":71,"line_end":71,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::theme::color::Color::Rgb","value":"Color::Rgb(u8, u8, u8)","parent":{"krate":0,"index":4072},"children":[],"decl_id":null,"docs":" True-color, 24-bit.\n","sig":null,"attributes":[{"value":"/ True-color, 24-bit.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132807,"byte_end":132830,"line_start":70,"line_end":70,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4086},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133036,"byte_end":133045,"line_start":78,"line_end":78,"column_start":5,"column_end":14},"name":"RgbLowRes","qualname":"::theme::color::Color::RgbLowRes","value":"Color::RgbLowRes(u8, u8, u8)","parent":{"krate":0,"index":4072},"children":[],"decl_id":null,"docs":" Low-resolution","sig":null,"attributes":[{"value":"/ Low-resolution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132857,"byte_end":132875,"line_start":73,"line_end":73,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132880,"byte_end":132883,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Each value should be `<= 5` (you'll get panics otherwise).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132888,"byte_end":132950,"line_start":75,"line_end":75,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132955,"byte_end":132958,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ These 216 possible colors are part of the default color palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132963,"byte_end":133031,"line_start":77,"line_end":77,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":4072},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132439,"byte_end":132444,"line_start":56,"line_end":56,"column_start":10,"column_end":15},"name":"Color","qualname":"::theme::color::Color","value":"Color::{TerminalDefault, Dark, Light, Rgb, RgbLowRes}","parent":null,"children":[{"krate":0,"index":4073},{"krate":0,"index":4075},{"krate":0,"index":4078},{"krate":0,"index":4081},{"krate":0,"index":4086}],"decl_id":null,"docs":" Represents a color used by the theme.\n","sig":null,"attributes":[{"value":"/ Represents a color used by the theme.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":132337,"byte_end":132378,"line_start":54,"line_end":54,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133368,"byte_end":133382,"line_start":88,"line_end":88,"column_start":12,"column_end":26},"name":"from_256colors","qualname":"<Color>::from_256colors","value":"fn (n: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a color from its ID in the 256 colors list.","sig":null,"attributes":[{"value":"/ Creates a color from its ID in the 256 colors list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133079,"byte_end":133134,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133139,"byte_end":133142,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ * Colors 0-7 are base dark colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133147,"byte_end":133185,"line_start":84,"line_end":84,"column_start":5,"column_end":43}},{"value":"/ * Colors 8-15 are base light colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133190,"byte_end":133230,"line_start":85,"line_end":85,"column_start":5,"column_end":45}},{"value":"/ * Colors 16-231 are rgb colors with 6 values per channel (216 colors).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133235,"byte_end":133309,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ * Colors 232-255 are grayscale colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133314,"byte_end":133356,"line_start":87,"line_end":87,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":4106},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137552,"byte_end":137561,"line_start":5,"line_end":5,"column_start":12,"column_end":21},"name":"ColorPair","qualname":"::theme::color_pair::ColorPair","value":"ColorPair { front, back }","parent":null,"children":[{"krate":0,"index":4107},{"krate":0,"index":4108}],"decl_id":null,"docs":" Combines a front and back color.\n","sig":null,"attributes":[{"value":"/ Combines a front and back color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137453,"byte_end":137489,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":4107},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137611,"byte_end":137616,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"front","qualname":"::theme::color_pair::ColorPair::front","value":"theme::color::Color","parent":{"krate":0,"index":4106},"children":[],"decl_id":null,"docs":" Color used for the foreground.\n","sig":null,"attributes":[{"value":"/ Color used for the foreground.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137568,"byte_end":137602,"line_start":6,"line_end":6,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4108},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137673,"byte_end":137677,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"back","qualname":"::theme::color_pair::ColorPair::back","value":"theme::color::Color","parent":{"krate":0,"index":4106},"children":[],"decl_id":null,"docs":" Color used for the background.\n","sig":null,"attributes":[{"value":"/ Color used for the background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137630,"byte_end":137664,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137807,"byte_end":137813,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"invert","qualname":"<ColorPair>::invert","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an inverted color pair.","sig":null,"attributes":[{"value":"/ Return an inverted color pair.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137710,"byte_end":137744,"line_start":14,"line_end":14,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137749,"byte_end":137752,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ With swapped front abd back color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137757,"byte_end":137795,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137987,"byte_end":138001,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"from_256colors","qualname":"<ColorPair>::from_256colors","value":"fn (front: u8, back: u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new color pair from color IDs.\n","sig":null,"attributes":[{"value":"/ Creates a new color pair from color IDs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137931,"byte_end":137975,"line_start":24,"line_end":24,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":4124},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138469,"byte_end":138479,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"ColorStyle","qualname":"::theme::color_style::ColorStyle","value":"ColorStyle { front, back }","parent":null,"children":[{"krate":0,"index":4125},{"krate":0,"index":4126}],"decl_id":null,"docs":" Possible color style for a cell.","sig":null,"attributes":[{"value":"/ Possible color style for a cell.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138218,"byte_end":138254,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138255,"byte_end":138258,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Represents a color pair role to use when printing something.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138259,"byte_end":138323,"line_start":5,"line_end":5,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138324,"byte_end":138327,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The current theme will assign each role a foreground and background color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138328,"byte_end":138406,"line_start":7,"line_end":7,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":4125},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138547,"byte_end":138552,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"front","qualname":"::theme::color_style::ColorStyle::front","value":"theme::color_style::ColorType","parent":{"krate":0,"index":4124},"children":[],"decl_id":null,"docs":" Color used for the foreground (the text itself).\n","sig":null,"attributes":[{"value":"/ Color used for the foreground (the text itself).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138486,"byte_end":138538,"line_start":10,"line_end":10,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4126},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138613,"byte_end":138617,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"back","qualname":"::theme::color_style::ColorStyle::back","value":"theme::color_style::ColorType","parent":{"krate":0,"index":4124},"children":[],"decl_id":null,"docs":" Color used for the background.\n","sig":null,"attributes":[{"value":"/ Color used for the background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138570,"byte_end":138604,"line_start":13,"line_end":13,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138678,"byte_end":138681,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorStyle>::new","value":"fn <F, B> (front: F, back: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates\n","sig":null,"attributes":[{"value":"/ Creates","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138655,"byte_end":138666,"line_start":18,"line_end":18,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138965,"byte_end":138981,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"name":"terminal_default","qualname":"<ColorStyle>::terminal_default","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Style set by terminal before entering a Cursive program.\n","sig":null,"attributes":[{"value":"/ Style set by terminal before entering a Cursive program.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138893,"byte_end":138953,"line_start":29,"line_end":29,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139136,"byte_end":139146,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"background","qualname":"<ColorStyle>::background","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Application background, where no view is present.\n","sig":null,"attributes":[{"value":"/ Application background, where no view is present.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139071,"byte_end":139124,"line_start":34,"line_end":34,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139308,"byte_end":139314,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"shadow","qualname":"<ColorStyle>::shadow","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Color used by view shadows. Only background matters.\n","sig":null,"attributes":[{"value":"/ Color used by view shadows. Only background matters.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139240,"byte_end":139296,"line_start":39,"line_end":39,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139450,"byte_end":139457,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"primary","qualname":"<ColorStyle>::primary","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Main text with default background.\n","sig":null,"attributes":[{"value":"/ Main text with default background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139400,"byte_end":139438,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139604,"byte_end":139613,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"secondary","qualname":"<ColorStyle>::secondary","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Secondary text color, with default background.\n","sig":null,"attributes":[{"value":"/ Secondary text color, with default background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139542,"byte_end":139592,"line_start":49,"line_end":49,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139761,"byte_end":139769,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"tertiary","qualname":"<ColorStyle>::tertiary","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tertiary text color, with default background.\n","sig":null,"attributes":[{"value":"/ Tertiary text color, with default background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139700,"byte_end":139749,"line_start":54,"line_end":54,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139912,"byte_end":139925,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"title_primary","qualname":"<ColorStyle>::title_primary","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Title text color with default background.\n","sig":null,"attributes":[{"value":"/ Title text color with default background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":139855,"byte_end":139900,"line_start":59,"line_end":59,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140061,"byte_end":140076,"line_start":65,"line_end":65,"column_start":12,"column_end":27},"name":"title_secondary","qualname":"<ColorStyle>::title_secondary","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alternative color for a title.\n","sig":null,"attributes":[{"value":"/ Alternative color for a title.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140015,"byte_end":140049,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140225,"byte_end":140234,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"highlight","qualname":"<ColorStyle>::highlight","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alternate text with highlight background.\n","sig":null,"attributes":[{"value":"/ Alternate text with highlight background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140168,"byte_end":140213,"line_start":69,"line_end":69,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140387,"byte_end":140405,"line_start":75,"line_end":75,"column_start":12,"column_end":30},"name":"highlight_inactive","qualname":"<ColorStyle>::highlight_inactive","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight color for inactive views (not in focus).\n","sig":null,"attributes":[{"value":"/ Highlight color for inactive views (not in focus).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140321,"byte_end":140375,"line_start":74,"line_end":74,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140565,"byte_end":140572,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ColorStyle>::resolve","value":"fn (&self, palette: &Palette) -> ColorPair","parent":null,"children":[],"decl_id":null,"docs":" Return the color pair that this style represents.\n","sig":null,"attributes":[{"value":"/ Return the color pair that this style represents.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140500,"byte_end":140553,"line_start":79,"line_end":79,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4143},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141504,"byte_end":141511,"line_start":120,"line_end":120,"column_start":5,"column_end":12},"name":"Palette","qualname":"::theme::color_style::ColorType::Palette","value":"ColorType::Palette(PaletteColor)","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Uses a color from the application palette.\n","sig":null,"attributes":[{"value":"/ Uses a color from the application palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141453,"byte_end":141499,"line_start":119,"line_end":119,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4146},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141597,"byte_end":141602,"line_start":123,"line_end":123,"column_start":5,"column_end":10},"name":"Color","qualname":"::theme::color_style::ColorType::Color","value":"ColorType::Color(Color)","parent":{"krate":0,"index":4142},"children":[],"decl_id":null,"docs":" Uses a direct color, independent of the current palette.\n","sig":null,"attributes":[{"value":"/ Uses a direct color, independent of the current palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141532,"byte_end":141592,"line_start":122,"line_end":122,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":4142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141437,"byte_end":141446,"line_start":118,"line_end":118,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::theme::color_style::ColorType","value":"ColorType::{Palette, Color}","parent":null,"children":[{"krate":0,"index":4143},{"krate":0,"index":4146}],"decl_id":null,"docs":" Either a color from the palette, or a direct color.\n","sig":null,"attributes":[{"value":"/ Either a color from the palette, or a direct color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141321,"byte_end":141376,"line_start":116,"line_end":116,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141703,"byte_end":141710,"line_start":128,"line_end":128,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ColorType>::resolve","value":"fn (self, palette: &Palette) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Given a palette, resolve `self` to a concrete color.\n","sig":null,"attributes":[{"value":"/ Given a palette, resolve `self` to a concrete color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141635,"byte_end":141691,"line_start":127,"line_end":127,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4191},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/effect.rs","byte_start":142223,"byte_end":142229,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"name":"Simple","qualname":"::theme::effect::Effect::Simple","value":"Effect::Simple","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":" No effect\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4193},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/effect.rs","byte_start":142293,"byte_end":142300,"line_start":7,"line_end":7,"column_start":9,"column_end":16},"name":"Reverse","qualname":"::theme::effect::Effect::Reverse","value":"Effect::Reverse","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":" Reverses foreground and background colors\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4195},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/effect.rs","byte_start":142348,"byte_end":142352,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"name":"Bold","qualname":"::theme::effect::Effect::Bold","value":"Effect::Bold","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":" Prints foreground in bold\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4197},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/effect.rs","byte_start":142402,"byte_end":142408,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"Italic","qualname":"::theme::effect::Effect::Italic","value":"Effect::Italic","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":" Prints foreground in italic\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4199},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/effect.rs","byte_start":142463,"byte_end":142472,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"name":"Underline","qualname":"::theme::effect::Effect::Underline","value":"Effect::Underline","parent":{"krate":0,"index":4190},"children":[],"decl_id":null,"docs":" Prints foreground with underline\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4190},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/effect.rs","byte_start":142184,"byte_end":142190,"line_start":3,"line_end":3,"column_start":14,"column_end":20},"name":"Effect","qualname":"::theme::effect::Effect","value":"Effect::{Simple, Reverse, Bold, Italic, Underline}","parent":null,"children":[{"krate":0,"index":4191},{"krate":0,"index":4193},{"krate":0,"index":4195},{"krate":0,"index":4197},{"krate":0,"index":4199}],"decl_id":null,"docs":" Text effect\n","sig":null,"attributes":[{"value":"repr(u8)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/enumset-0.3.12/src/lib.rs","byte_start":7557956,"byte_end":7557967,"line_start":465,"line_end":465,"column_start":27,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4219},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143146,"byte_end":143153,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"Palette","qualname":"::theme::palette::Palette","value":"Palette {  }","parent":null,"children":[{"krate":0,"index":4220},{"krate":0,"index":4221}],"decl_id":null,"docs":" Color configuration for the application.","sig":null,"attributes":[{"value":"/ Color configuration for the application.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142600,"byte_end":142644,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142645,"byte_end":142648,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Assign each color role an actual color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142649,"byte_end":142692,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142693,"byte_end":142696,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ It implements `Index` and `IndexMut` to access and modify this mapping:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142697,"byte_end":142772,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142773,"byte_end":142776,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142777,"byte_end":142790,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142791,"byte_end":142794,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142795,"byte_end":142806,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ # use cursive::theme::Palette;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142807,"byte_end":142841,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"/ use cursive::theme::PaletteColor::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142842,"byte_end":142882,"line_start":18,"line_end":18,"column_start":1,"column_end":41}},{"value":"/ use cursive::theme::Color::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142883,"byte_end":142916,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ use cursive::theme::BaseColor::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142917,"byte_end":142954,"line_start":20,"line_end":20,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142955,"byte_end":142958,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let mut palette = Palette::default();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":142959,"byte_end":143000,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143001,"byte_end":143004,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(palette[Background], Dark(Blue));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143005,"byte_end":143053,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/ palette[Shadow] = Light(Red);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143054,"byte_end":143087,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143088,"byte_end":143095,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4234},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143520,"byte_end":143525,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"Color","qualname":"::theme::palette::PaletteNode::Color","value":"PaletteNode::Color(Color)","parent":{"krate":0,"index":4233},"children":[],"decl_id":null,"docs":" A single color.\n","sig":null,"attributes":[{"value":"/ A single color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143496,"byte_end":143515,"line_start":40,"line_end":40,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4237},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143674,"byte_end":143683,"line_start":45,"line_end":45,"column_start":5,"column_end":14},"name":"Namespace","qualname":"::theme::palette::PaletteNode::Namespace","value":"PaletteNode::Namespace(HashMap<String, PaletteNode>)","parent":{"krate":0,"index":4233},"children":[],"decl_id":null,"docs":" A group of values bundled in the same namespace.","sig":null,"attributes":[{"value":"/ A group of values bundled in the same namespace.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143538,"byte_end":143590,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143595,"byte_end":143598,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Namespaces can be merged in the palette with `Palette::merge`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143603,"byte_end":143669,"line_start":44,"line_end":44,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":4233},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143478,"byte_end":143489,"line_start":39,"line_end":39,"column_start":10,"column_end":21},"name":"PaletteNode","qualname":"::theme::palette::PaletteNode","value":"PaletteNode::{Color, Namespace}","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":4237}],"decl_id":null,"docs":" A node in the palette tree.","sig":null,"attributes":[{"value":"/ A node in the palette tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143242,"byte_end":143273,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143274,"byte_end":143277,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This describes a value attached to a custom keyword in the palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143278,"byte_end":143349,"line_start":35,"line_end":35,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143350,"byte_end":143353,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This can either be a color, or a nested namespace with its own mapping.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143354,"byte_end":143429,"line_start":37,"line_end":37,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144283,"byte_end":144289,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"custom","qualname":"<Palette>::custom","value":"fn <'a> (&'a self, key: &str) -> Option<&'a Color>","parent":null,"children":[],"decl_id":null,"docs":" Returns a custom color from this palette.","sig":null,"attributes":[{"value":"/ Returns a custom color from this palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144163,"byte_end":144208,"line_start":65,"line_end":65,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144213,"byte_end":144216,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the given key was not found.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144221,"byte_end":144271,"line_start":67,"line_end":67,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144705,"byte_end":144710,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"name":"merge","qualname":"<Palette>::merge","value":"fn (&self, namespace: &str) -> Palette","parent":null,"children":[],"decl_id":null,"docs":" Returns a new palette where the given namespace has been merged.","sig":null,"attributes":[{"value":"/ Returns a new palette where the given namespace has been merged.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144550,"byte_end":144618,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144623,"byte_end":144626,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ All values in the namespace will override previous values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144631,"byte_end":144693,"line_start":80,"line_end":80,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":145440,"byte_end":145449,"line_start":104,"line_end":104,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Palette>::set_color","value":"fn (&mut self, key: &str, color: Color) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the color for the given key.","sig":null,"attributes":[{"value":"/ Sets the color for the given key.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":145311,"byte_end":145348,"line_start":101,"line_end":101,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":145353,"byte_end":145356,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This will update either the basic palette or the custom values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":145361,"byte_end":145428,"line_start":103,"line_end":103,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":146356,"byte_end":146369,"line_start":126,"line_end":126,"column_start":12,"column_end":25},"name":"add_namespace","qualname":"<Palette>::add_namespace","value":"fn (&mut self, key: &str, namespace: HashMap<String, PaletteNode>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a color namespace to this palette.\n","sig":null,"attributes":[{"value":"/ Adds a color namespace to this palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":146301,"byte_end":146344,"line_start":125,"line_end":125,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4253},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149905,"byte_end":149915,"line_start":232,"line_end":232,"column_start":5,"column_end":15},"name":"Background","qualname":"::theme::palette::PaletteColor::Background","value":"PaletteColor::Background","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Color used for the application background.\n","sig":null,"attributes":[{"value":"/ Color used for the application background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149854,"byte_end":149900,"line_start":231,"line_end":231,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4255},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149958,"byte_end":149964,"line_start":234,"line_end":234,"column_start":5,"column_end":11},"name":"Shadow","qualname":"::theme::palette::PaletteColor::Shadow","value":"PaletteColor::Shadow","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Color used for View shadows.\n","sig":null,"attributes":[{"value":"/ Color used for View shadows.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149921,"byte_end":149953,"line_start":233,"line_end":233,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4257},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150011,"byte_end":150015,"line_start":236,"line_end":236,"column_start":5,"column_end":9},"name":"View","qualname":"::theme::palette::PaletteColor::View","value":"PaletteColor::View","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Color used for View backgrounds.\n","sig":null,"attributes":[{"value":"/ Color used for View backgrounds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149970,"byte_end":150006,"line_start":235,"line_end":235,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4259},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150062,"byte_end":150069,"line_start":238,"line_end":238,"column_start":5,"column_end":12},"name":"Primary","qualname":"::theme::palette::PaletteColor::Primary","value":"PaletteColor::Primary","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Primary color used for the text.\n","sig":null,"attributes":[{"value":"/ Primary color used for the text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150021,"byte_end":150057,"line_start":237,"line_end":237,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4261},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150118,"byte_end":150127,"line_start":240,"line_end":240,"column_start":5,"column_end":14},"name":"Secondary","qualname":"::theme::palette::PaletteColor::Secondary","value":"PaletteColor::Secondary","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Secondary color used for the text.\n","sig":null,"attributes":[{"value":"/ Secondary color used for the text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150075,"byte_end":150113,"line_start":239,"line_end":239,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4263},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150175,"byte_end":150183,"line_start":242,"line_end":242,"column_start":5,"column_end":13},"name":"Tertiary","qualname":"::theme::palette::PaletteColor::Tertiary","value":"PaletteColor::Tertiary","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Tertiary color used for the text.\n","sig":null,"attributes":[{"value":"/ Tertiary color used for the text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150133,"byte_end":150170,"line_start":241,"line_end":241,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4265},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150232,"byte_end":150244,"line_start":244,"line_end":244,"column_start":5,"column_end":17},"name":"TitlePrimary","qualname":"::theme::palette::PaletteColor::TitlePrimary","value":"PaletteColor::TitlePrimary","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Primary color used for title text.\n","sig":null,"attributes":[{"value":"/ Primary color used for title text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150189,"byte_end":150227,"line_start":243,"line_end":243,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4267},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150295,"byte_end":150309,"line_start":246,"line_end":246,"column_start":5,"column_end":19},"name":"TitleSecondary","qualname":"::theme::palette::PaletteColor::TitleSecondary","value":"PaletteColor::TitleSecondary","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Secondary color used for title text.\n","sig":null,"attributes":[{"value":"/ Secondary color used for title text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150250,"byte_end":150290,"line_start":245,"line_end":245,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150357,"byte_end":150366,"line_start":248,"line_end":248,"column_start":5,"column_end":14},"name":"Highlight","qualname":"::theme::palette::PaletteColor::Highlight","value":"PaletteColor::Highlight","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Color used for highlighting text.\n","sig":null,"attributes":[{"value":"/ Color used for highlighting text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150315,"byte_end":150352,"line_start":247,"line_end":247,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4271},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150423,"byte_end":150440,"line_start":250,"line_end":250,"column_start":5,"column_end":22},"name":"HighlightInactive","qualname":"::theme::palette::PaletteColor::HighlightInactive","value":"PaletteColor::HighlightInactive","parent":{"krate":0,"index":4252},"children":[],"decl_id":null,"docs":" Color used for highlighting inactive text.\n","sig":null,"attributes":[{"value":"/ Color used for highlighting inactive text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150372,"byte_end":150418,"line_start":249,"line_end":249,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":4252},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149835,"byte_end":149847,"line_start":230,"line_end":230,"column_start":10,"column_end":22},"name":"PaletteColor","qualname":"::theme::palette::PaletteColor","value":"PaletteColor::{Background, Shadow, View, Primary, Secondary, Tertiary, TitlePrimary, TitleSecondary, Highlight, HighlightInactive}","parent":null,"children":[{"krate":0,"index":4253},{"krate":0,"index":4255},{"krate":0,"index":4257},{"krate":0,"index":4259},{"krate":0,"index":4261},{"krate":0,"index":4263},{"krate":0,"index":4265},{"krate":0,"index":4267},{"krate":0,"index":4269},{"krate":0,"index":4271}],"decl_id":null,"docs":" Color entry in a palette.","sig":null,"attributes":[{"value":"/ Color entry in a palette.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149657,"byte_end":149686,"line_start":226,"line_end":226,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149687,"byte_end":149690,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Each `PaletteColor` is used for a specific role in a default application.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":149691,"byte_end":149768,"line_start":228,"line_end":228,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150537,"byte_end":150544,"line_start":255,"line_end":255,"column_start":12,"column_end":19},"name":"resolve","qualname":"<PaletteColor>::resolve","value":"fn (self, palette: &Palette) -> Color","parent":null,"children":[],"decl_id":null,"docs":" Given a palette, resolve `self` to a concrete color.\n","sig":null,"attributes":[{"value":"/ Given a palette, resolve `self` to a concrete color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150469,"byte_end":150525,"line_start":254,"line_end":254,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":4298},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150858,"byte_end":150863,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Style","qualname":"::theme::style::Style","value":"Style { effects, color }","parent":null,"children":[{"krate":0,"index":4299},{"krate":0,"index":4300}],"decl_id":null,"docs":" Combine a color and an effect.","sig":null,"attributes":[{"value":"/ Combine a color and an effect.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150700,"byte_end":150734,"line_start":4,"line_end":4,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150735,"byte_end":150738,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Represents any transformation that can be applied to text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150739,"byte_end":150801,"line_start":6,"line_end":6,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4299},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150954,"byte_end":150961,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"effects","qualname":"::theme::style::Style::effects","value":"enumset::EnumSet<theme::effect::Effect>","parent":{"krate":0,"index":4298},"children":[],"decl_id":null,"docs":" Effect to apply.","sig":null,"attributes":[{"value":"/ Effect to apply.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150870,"byte_end":150890,"line_start":9,"line_end":9,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150895,"byte_end":150898,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ `None` to keep using previous effects.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150903,"byte_end":150945,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4300},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151077,"byte_end":151082,"line_start":17,"line_end":17,"column_start":9,"column_end":14},"name":"color","qualname":"::theme::style::Style::color","value":"std::option::Option<theme::color_style::ColorStyle>","parent":{"krate":0,"index":4298},"children":[],"decl_id":null,"docs":" Color style to apply.","sig":null,"attributes":[{"value":"/ Color style to apply.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":150985,"byte_end":151010,"line_start":14,"line_end":14,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151015,"byte_end":151018,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ `None` to keep using the previous colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151023,"byte_end":151068,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151272,"byte_end":151276,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"none","qualname":"<Style>::none","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Style` that doesn't apply anything.\n","sig":null,"attributes":[{"value":"/ Returns a new `Style` that doesn't apply anything.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151206,"byte_end":151260,"line_start":27,"line_end":27,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151536,"byte_end":151541,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"merge","qualname":"<Style>::merge","value":"fn (styles: &[Style]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Style` by merging all given styles.","sig":null,"attributes":[{"value":"/ Returns a new `Style` by merging all given styles.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151388,"byte_end":151442,"line_start":35,"line_end":35,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151447,"byte_end":151450,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Will use the last non-`None` color, and will combine all effects.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151455,"byte_end":151524,"line_start":37,"line_end":37,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151926,"byte_end":151933,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"combine","qualname":"<Style>::combine","value":"fn <S> (self, other: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a combination of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns a combination of `self` and `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151866,"byte_end":151914,"line_start":53,"line_end":53,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4313},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128598,"byte_end":128603,"line_start":182,"line_end":182,"column_start":12,"column_end":17},"name":"Theme","qualname":"::theme::Theme","value":"Theme { shadow, borders, palette }","parent":null,"children":[{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316}],"decl_id":null,"docs":" Represents the style a Cursive application will use.\n","sig":null,"attributes":[{"value":"/ Represents the style a Cursive application will use.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128506,"byte_end":128562,"line_start":180,"line_end":180,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4314},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128672,"byte_end":128678,"line_start":184,"line_end":184,"column_start":9,"column_end":15},"name":"shadow","qualname":"::theme::Theme::shadow","value":"bool","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" Whether views in a StackView should have shadows.\n","sig":null,"attributes":[{"value":"/ Whether views in a StackView should have shadows.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128610,"byte_end":128663,"line_start":183,"line_end":183,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":4315},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128736,"byte_end":128743,"line_start":186,"line_end":186,"column_start":9,"column_end":16},"name":"borders","qualname":"::theme::Theme::borders","value":"theme::border_style::BorderStyle","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" How view borders should be drawn.\n","sig":null,"attributes":[{"value":"/ How view borders should be drawn.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128690,"byte_end":128727,"line_start":185,"line_end":185,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4316},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128826,"byte_end":128833,"line_start":188,"line_end":188,"column_start":9,"column_end":16},"name":"palette","qualname":"::theme::Theme::palette","value":"theme::palette::Palette","parent":{"krate":0,"index":4313},"children":[],"decl_id":null,"docs":" What colors should be used through the application?\n","sig":null,"attributes":[{"value":"/ What colors should be used through the application?","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128762,"byte_end":128817,"line_start":187,"line_end":187,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4322},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129669,"byte_end":129671,"line_start":221,"line_end":221,"column_start":5,"column_end":7},"name":"Io","qualname":"::theme::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":4321},"children":[],"decl_id":null,"docs":" An error occured when reading the file.\n","sig":null,"attributes":[{"value":"/ An error occured when reading the file.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129621,"byte_end":129664,"line_start":220,"line_end":220,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4325},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129744,"byte_end":129749,"line_start":223,"line_end":223,"column_start":5,"column_end":10},"name":"Parse","qualname":"::theme::Error::Parse","value":"Error::Parse(toml::de::Error)","parent":{"krate":0,"index":4321},"children":[],"decl_id":null,"docs":" An error occured when parsing the toml content.\n","sig":null,"attributes":[{"value":"/ An error occured when parsing the toml content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129688,"byte_end":129739,"line_start":222,"line_end":222,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4321},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129609,"byte_end":129614,"line_start":219,"line_end":219,"column_start":10,"column_end":15},"name":"Error","qualname":"::theme::Error","value":"Error::{Io, Parse}","parent":null,"children":[{"krate":0,"index":4322},{"krate":0,"index":4325}],"decl_id":null,"docs":" Possible error returned when loading a theme.\n","sig":null,"attributes":[{"value":"/ Possible error returned when loading a theme.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129533,"byte_end":129582,"line_start":217,"line_end":217,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":986},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":130050,"byte_end":130065,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"load_theme_file","qualname":"::theme::load_theme_file","value":"fn <P> (filename: P) -> Result<Theme, Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme from file and sets it as active.\n","sig":null,"attributes":[{"value":"/ Loads a theme from file and sets it as active.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129992,"byte_end":130042,"line_start":238,"line_end":238,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":988},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":130388,"byte_end":130397,"line_start":251,"line_end":251,"column_start":8,"column_end":17},"name":"load_toml","qualname":"::theme::load_toml","value":"fn (content: &str) -> Result<Theme, Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme string and sets it as active.\n","sig":null,"attributes":[{"value":"/ Loads a theme string and sets it as active.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":130333,"byte_end":130380,"line_start":250,"line_end":250,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":989},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":130639,"byte_end":130651,"line_start":261,"line_end":261,"column_start":8,"column_end":20},"name":"load_default","qualname":"::theme::load_default","value":"fn () -> Theme","parent":null,"children":[],"decl_id":null,"docs":" Loads the default theme, and returns its representation.\n","sig":null,"attributes":[{"value":"/ Loads the default theme, and returns its representation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":130571,"byte_end":130631,"line_start":260,"line_end":260,"column_start":1,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":990},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":995},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1019},{"krate":0,"index":1035},{"krate":0,"index":1042},{"krate":0,"index":1047},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1062},{"krate":0,"index":1067},{"krate":0,"index":1072},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1086}],"decl_id":null,"docs":" Points on the 2D character grid.\n","sig":null,"attributes":[{"value":"! Points on the 2D character grid.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":152769,"byte_end":152805,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1003},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153178,"byte_end":153182,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"name":"Vec2","qualname":"::vec::Vec2","value":"XY<usize>","parent":null,"children":[],"decl_id":null,"docs":" Simple 2D size, in cells.","sig":null,"attributes":[{"value":"/ Simple 2D size, in cells.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":152922,"byte_end":152951,"line_start":11,"line_end":11,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":152952,"byte_end":152955,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Note: due to a bug in rustdoc ([#32077]), the documentation for `Vec2` is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":152956,"byte_end":153033,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ currently shown on the [`XY`] page.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153034,"byte_end":153073,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153074,"byte_end":153077,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [#32077]: https://github.com/rust-lang/rust/issues/32077","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153078,"byte_end":153138,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`XY`]: ../struct.XY.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153139,"byte_end":153168,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153738,"byte_end":153747,"line_start":37,"line_end":37,"column_start":12,"column_end":21},"name":"max_value","qualname":"<XY<usize>>::max_value","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Vec2` with `usize::max_value()` in each axis.\n","sig":null,"attributes":[{"value":"/ Returns a `Vec2` with `usize::max_value()` in each axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153666,"byte_end":153726,"line_start":36,"line_end":36,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153940,"byte_end":153954,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"saturating_sub","qualname":"<XY<usize>>::saturating_sub","value":"fn <O> (&self, other: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Saturating subtraction. Computes `self - other`, saturating at 0.","sig":null,"attributes":[{"value":"/ Saturating subtraction. Computes `self - other`, saturating at 0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153829,"byte_end":153898,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153903,"byte_end":153906,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Never panics.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153911,"byte_end":153928,"line_start":43,"line_end":43,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154195,"byte_end":154209,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"saturating_add","qualname":"<XY<usize>>::saturating_add","value":"fn <O> (&self, other: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Saturating addition with a signed vec.","sig":null,"attributes":[{"value":"/ Saturating addition with a signed vec.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154093,"byte_end":154135,"line_start":49,"line_end":49,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154140,"byte_end":154143,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Any coordinates saturates to 0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154148,"byte_end":154183,"line_start":51,"line_end":51,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154549,"byte_end":154555,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"name":"div_up","qualname":"<XY<usize>>::div_up","value":"fn <O> (&self, other: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Term-by-term integer division that rounds up.\n","sig":null,"attributes":[{"value":"/ Term-by-term integer division that rounds up.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154488,"byte_end":154537,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154859,"byte_end":154870,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<XY<usize>>::checked_sub","value":"fn <O> (&self, other: O) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Checked subtraction. Computes `self - other` if possible.","sig":null,"attributes":[{"value":"/ Checked subtraction. Computes `self - other` if possible.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154682,"byte_end":154743,"line_start":72,"line_end":72,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154748,"byte_end":154751,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self.x < other.x || self.y < other.y`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154756,"byte_end":154817,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154822,"byte_end":154825,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Never panics.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":154830,"byte_end":154847,"line_start":76,"line_end":76,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155122,"byte_end":155128,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"signed","qualname":"<XY<usize>>::signed","value":"fn (self) -> XY<isize>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `XY<isize>` from `self`.\n","sig":null,"attributes":[{"value":"/ Returns a `XY<isize>` from `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155072,"byte_end":155110,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155421,"byte_end":155428,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"fits_in","qualname":"<XY<T>>::fits_in","value":"fn <O> (&self, other: O) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` could fit inside `other`.","sig":null,"attributes":[{"value":"/ Returns `true` if `self` could fit inside `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155204,"byte_end":155258,"line_start":93,"line_end":93,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155263,"byte_end":155266,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.x <= other.x && self.y <= other.y`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155271,"byte_end":155329,"line_start":95,"line_end":95,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155334,"byte_end":155337,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ If this returns `true`, then `other - self` will not underflow.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155342,"byte_end":155409,"line_start":97,"line_end":97,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155780,"byte_end":155784,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"fits","qualname":"<XY<T>>::fits","value":"fn <O> (&self, other: O) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `other` could fit inside `self`.","sig":null,"attributes":[{"value":"/ Returns `true` if `other` could fit inside `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155563,"byte_end":155617,"line_start":103,"line_end":103,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155622,"byte_end":155625,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.x >= other.x && self.y >= other.y`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155630,"byte_end":155688,"line_start":105,"line_end":105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155693,"byte_end":155696,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ If this returns `true`, then `self - other` will not underflow.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155701,"byte_end":155768,"line_start":107,"line_end":107,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155987,"byte_end":155990,"line_start":114,"line_end":114,"column_start":12,"column_end":15},"name":"max","qualname":"<XY<T>>::max","value":"fn <A, B> (a: A, b: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Vec2 that is a maximum per coordinate.\n","sig":null,"attributes":[{"value":"/ Returns a new Vec2 that is a maximum per coordinate.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155919,"byte_end":155975,"line_start":113,"line_end":113,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156221,"byte_end":156224,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"min","qualname":"<XY<T>>::min","value":"fn <A, B> (a: A, b: B) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Vec2 that is no larger than any input in both dimensions.\n","sig":null,"attributes":[{"value":"/ Returns a new Vec2 that is no larger than any input in both dimensions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156134,"byte_end":156209,"line_start":120,"line_end":120,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156426,"byte_end":156432,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"or_min","qualname":"<XY<T>>::or_min","value":"fn <O> (self, other: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the minimum of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum of `self` and `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156368,"byte_end":156414,"line_start":127,"line_end":127,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156575,"byte_end":156581,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"or_max","qualname":"<XY<T>>::or_max","value":"fn <O> (self, other: O) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum of `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns the maximum of `self` and `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156517,"byte_end":156563,"line_start":132,"line_end":132,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156776,"byte_end":156790,"line_start":140,"line_end":140,"column_start":12,"column_end":26},"name":"stack_vertical","qualname":"<XY<T>>::stack_vertical","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns (max(self.x,other.x), self.y+other.y)\n","sig":null,"attributes":[{"value":"/ Returns (max(self.x,other.x), self.y+other.y)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156715,"byte_end":156764,"line_start":139,"line_end":139,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157019,"byte_end":157035,"line_start":148,"line_end":148,"column_start":12,"column_end":28},"name":"stack_horizontal","qualname":"<XY<T>>::stack_horizontal","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns (self.x+other.x, max(self.y,other.y))\n","sig":null,"attributes":[{"value":"/ Returns (self.x+other.x, max(self.y,other.y))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156958,"byte_end":157007,"line_start":147,"line_end":147,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157272,"byte_end":157284,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"name":"fits_in_rect","qualname":"<XY<T>>::fits_in_rect","value":"fn <O1, O2> (&self, top_left: O1, size: O2) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` fits in the given rectangle.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` fits in the given rectangle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157203,"byte_end":157260,"line_start":155,"line_end":155,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157615,"byte_end":157621,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"keep_x","qualname":"<XY<T>>::keep_x","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector with the X component of self, and y=0.\n","sig":null,"attributes":[{"value":"/ Returns a vector with the X component of self, and y=0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157544,"byte_end":157603,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157766,"byte_end":157772,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"keep_y","qualname":"<XY<T>>::keep_y","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector with the Y component of self, and x=0.\n","sig":null,"attributes":[{"value":"/ Returns a vector with the Y component of self, and x=0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157695,"byte_end":157754,"line_start":172,"line_end":172,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157889,"byte_end":157893,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"zero","qualname":"<XY<T>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alias for `Self::new(0,0)`.\n","sig":null,"attributes":[{"value":"/ Alias for `Self::new(0,0)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157846,"byte_end":157877,"line_start":177,"line_end":177,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":1091},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"views","qualname":"::views","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","parent":null,"children":[{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1138},{"krate":0,"index":1187},{"krate":0,"index":1288},{"krate":0,"index":1332},{"krate":0,"index":1445},{"krate":0,"index":1453},{"krate":0,"index":1562},{"krate":0,"index":1598},{"krate":0,"index":1643},{"krate":0,"index":1654},{"krate":0,"index":1761},{"krate":0,"index":1842},{"krate":0,"index":1913},{"krate":0,"index":1985},{"krate":0,"index":2051},{"krate":0,"index":2088},{"krate":0,"index":2133},{"krate":0,"index":2191},{"krate":0,"index":2283},{"krate":0,"index":2445},{"krate":0,"index":2474},{"krate":0,"index":2488},{"krate":0,"index":2538},{"krate":0,"index":2680},{"krate":0,"index":2774},{"krate":0,"index":2866},{"krate":0,"index":2886},{"krate":0,"index":2914},{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2949},{"krate":0,"index":2953},{"krate":0,"index":2954}],"decl_id":null,"docs":" Various views to use when creating the layout.\n","sig":null,"attributes":[{"value":"! Various views to use when creating the layout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/mod.rs","byte_start":160254,"byte_end":160304,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163216,"byte_end":163223,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"BoxView","qualname":"::views::box_view::BoxView","value":"BoxView {  }","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106}],"decl_id":null,"docs":" Wrapper around another view, with a controlled size.","sig":null,"attributes":[{"value":"/ Wrapper around another view, with a controlled size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162716,"byte_end":162772,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162773,"byte_end":162776,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Each axis can independently be set to:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162777,"byte_end":162819,"line_start":8,"line_end":8,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162820,"byte_end":162823,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Keep a **fixed** size","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162824,"byte_end":162851,"line_start":10,"line_end":10,"column_start":1,"column_end":28}},{"value":"/ * Use **all** available size","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162852,"byte_end":162884,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/ * Use **at most** a given size","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162885,"byte_end":162919,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/ * Use **at least** a given size","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162920,"byte_end":162955,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ * Let the wrapped view decide.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162956,"byte_end":162990,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162991,"byte_end":162994,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":162995,"byte_end":163009,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163010,"byte_end":163013,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163014,"byte_end":163021,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::{BoxView,TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163022,"byte_end":163067,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ // Creates a 20x4 BoxView with a TextView content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163068,"byte_end":163122,"line_start":20,"line_end":20,"column_start":1,"column_end":55}},{"value":"/ let view = BoxView::with_fixed_size((20,4), TextView::new(\"Hello!\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163123,"byte_end":163196,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163197,"byte_end":163204,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163930,"byte_end":163933,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxView<T>>::new","value":"fn (width: SizeConstraint, height: SizeConstraint, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BoxView` with the given width and height requirements.","sig":null,"attributes":[{"value":"/ Creates a new `BoxView` with the given width and height requirements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163774,"byte_end":163847,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163852,"byte_end":163855,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `None` values will use the wrapped view's preferences.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163860,"byte_end":163918,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164232,"byte_end":164247,"line_start":57,"line_end":57,"column_start":12,"column_end":27},"name":"set_constraints","qualname":"<BoxView<T>>::set_constraints","value":"fn (&mut self, width: SizeConstraint, height: SizeConstraint) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the size constraints for this view.\n","sig":null,"attributes":[{"value":"/ Sets the size constraints for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164176,"byte_end":164220,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164499,"byte_end":164508,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"set_width","qualname":"<BoxView<T>>::set_width","value":"fn (&mut self, width: SizeConstraint) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the width constraint for this view.","sig":null,"attributes":[{"value":"/ Sets the width constraint for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164398,"byte_end":164442,"line_start":64,"line_end":64,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164447,"byte_end":164450,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Leaves the height unchanged.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164455,"byte_end":164487,"line_start":66,"line_end":66,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164713,"byte_end":164723,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"set_height","qualname":"<BoxView<T>>::set_height","value":"fn (&mut self, height: SizeConstraint) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the height constraint for this view.","sig":null,"attributes":[{"value":"/ Sets the height constraint for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164612,"byte_end":164657,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164662,"byte_end":164665,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Leaves the width unchanged.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164670,"byte_end":164701,"line_start":74,"line_end":74,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165213,"byte_end":165223,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"squishable","qualname":"<BoxView<T>>::squishable","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to be squishable.","sig":null,"attributes":[{"value":"/ Sets `self` to be squishable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164829,"byte_end":164862,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164867,"byte_end":164870,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ A squishable `BoxView` will take a smaller size than it should when","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164875,"byte_end":164946,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ the available space is too small. In that case, it will allow the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":164951,"byte_end":165020,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ child view to contract, if it can.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165025,"byte_end":165063,"line_start":84,"line_end":84,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165068,"byte_end":165071,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ More specifically, if the available space is less than the size we","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165076,"byte_end":165146,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ would normally ask for, return the child size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165151,"byte_end":165201,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165352,"byte_end":165366,"line_start":93,"line_end":93,"column_start":12,"column_end":26},"name":"set_squishable","qualname":"<BoxView<T>>::set_squishable","value":"fn (&mut self, squishable: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Controls the \"squishability\" of `self`.\n","sig":null,"attributes":[{"value":"/ Controls the \"squishability\" of `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165297,"byte_end":165340,"line_start":92,"line_end":92,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165542,"byte_end":165557,"line_start":99,"line_end":99,"column_start":12,"column_end":27},"name":"with_fixed_size","qualname":"<BoxView<T>>::with_fixed_size","value":"fn <S> (size: S, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `BoxView` with the given size.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `BoxView` with the given size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165474,"byte_end":165530,"line_start":98,"line_end":98,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165846,"byte_end":165862,"line_start":110,"line_end":110,"column_start":12,"column_end":28},"name":"with_fixed_width","qualname":"<BoxView<T>>::with_fixed_width","value":"fn (width: usize, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `BoxView` with fixed width.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `BoxView` with fixed width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165781,"byte_end":165834,"line_start":109,"line_end":109,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166052,"byte_end":166069,"line_start":115,"line_end":115,"column_start":12,"column_end":29},"name":"with_fixed_height","qualname":"<BoxView<T>>::with_fixed_height","value":"fn (height: usize, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `BoxView` with fixed height.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `BoxView` with fixed height.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":165986,"byte_end":166040,"line_start":114,"line_end":114,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166275,"byte_end":166291,"line_start":120,"line_end":120,"column_start":12,"column_end":28},"name":"with_full_screen","qualname":"<BoxView<T>>::with_full_screen","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will take all available space.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will take all available space.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166195,"byte_end":166263,"line_start":119,"line_end":119,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166473,"byte_end":166488,"line_start":125,"line_end":125,"column_start":12,"column_end":27},"name":"with_full_width","qualname":"<BoxView<T>>::with_full_width","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will take all available width.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will take all available width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166393,"byte_end":166461,"line_start":124,"line_end":124,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166671,"byte_end":166687,"line_start":130,"line_end":130,"column_start":12,"column_end":28},"name":"with_full_height","qualname":"<BoxView<T>>::with_full_height","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will take all available height.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will take all available height.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166590,"byte_end":166659,"line_start":129,"line_end":129,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166872,"byte_end":166885,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"with_max_size","qualname":"<BoxView<T>>::with_max_size","value":"fn <S> (size: S, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will never be bigger than `size`.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will never be bigger than `size`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":166789,"byte_end":166860,"line_start":134,"line_end":134,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167263,"byte_end":167277,"line_start":148,"line_end":148,"column_start":12,"column_end":26},"name":"with_max_width","qualname":"<BoxView<T>>::with_max_width","value":"fn (max_width: usize, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a maximum width.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a maximum width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167111,"byte_end":167178,"line_start":145,"line_end":145,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167183,"byte_end":167186,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The resulting width will never be more than `max_width`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167191,"byte_end":167251,"line_start":147,"line_end":147,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167612,"byte_end":167627,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"with_max_height","qualname":"<BoxView<T>>::with_max_height","value":"fn (max_height: usize, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a maximum height.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a maximum height.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167457,"byte_end":167525,"line_start":156,"line_end":156,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167530,"byte_end":167533,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The resulting height will never be more than `max_height`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167538,"byte_end":167600,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167893,"byte_end":167906,"line_start":168,"line_end":168,"column_start":12,"column_end":25},"name":"with_min_size","qualname":"<BoxView<T>>::with_min_size","value":"fn <S> (size: S, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will never be smaller than `size`.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will never be smaller than `size`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":167809,"byte_end":167881,"line_start":167,"line_end":167,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168286,"byte_end":168300,"line_start":181,"line_end":181,"column_start":12,"column_end":26},"name":"with_min_width","qualname":"<BoxView<T>>::with_min_width","value":"fn (min_width: usize, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a minimum width.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a minimum width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168134,"byte_end":168201,"line_start":178,"line_end":178,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168206,"byte_end":168209,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The resulting width will never be less than `min_width`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168214,"byte_end":168274,"line_start":180,"line_end":180,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168636,"byte_end":168651,"line_start":192,"line_end":192,"column_start":12,"column_end":27},"name":"with_min_height","qualname":"<BoxView<T>>::with_min_height","value":"fn (min_height: usize, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a `BoxView` which will enforce a minimum height.","sig":null,"attributes":[{"value":"/ Wraps `view` in a `BoxView` which will enforce a minimum height.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168481,"byte_end":168549,"line_start":189,"line_end":189,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168554,"byte_end":168557,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ The resulting height will never be less than `min_height`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":168562,"byte_end":168624,"line_start":191,"line_end":191,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1151},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174157,"byte_end":174163,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Button","qualname":"::views::button::Button","value":"Button {  }","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156}],"decl_id":null,"docs":" Simple text label with a callback when <Enter> is pressed.","sig":null,"attributes":[{"value":"/ Simple text label with a callback when <Enter> is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":173879,"byte_end":173941,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":173942,"byte_end":173945,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A button shows its content in a single line and has a fixed size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":173946,"byte_end":174015,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174016,"byte_end":174019,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174020,"byte_end":174034,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174035,"byte_end":174038,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174039,"byte_end":174046,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::Button;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174047,"byte_end":174080,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ let quit_button = Button::new(\"Quit\", |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174081,"byte_end":174137,"line_start":19,"line_end":19,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174138,"byte_end":174145,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174367,"byte_end":174370,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Button>::new","value":"fn <F, S> (label: S, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new button with the given content and callback.\n","sig":null,"attributes":[{"value":"/ Creates a new button with the given content and callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174294,"byte_end":174355,"line_start":31,"line_end":31,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174637,"byte_end":174644,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"new_raw","qualname":"<Button>::new_raw","value":"fn <F, S> (label: S, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new button without angle brackets.\n","sig":null,"attributes":[{"value":"/ Creates a new button without angle brackets.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174577,"byte_end":174625,"line_start":41,"line_end":41,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175078,"byte_end":175090,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"set_callback","qualname":"<Button>::set_callback","value":"fn <F> (&mut self, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the function to be called when the button is pressed.","sig":null,"attributes":[{"value":"/ Sets the function to be called when the button is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174956,"byte_end":175018,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175023,"byte_end":175026,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Replaces the previous callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175031,"byte_end":175066,"line_start":57,"line_end":57,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175312,"byte_end":175319,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"disable","qualname":"<Button>::disable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175225,"byte_end":175248,"line_start":65,"line_end":65,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175253,"byte_end":175256,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175261,"byte_end":175300,"line_start":67,"line_end":67,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175444,"byte_end":175452,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"disabled","qualname":"<Button>::disabled","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175374,"byte_end":175397,"line_start":72,"line_end":72,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175402,"byte_end":175405,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175410,"byte_end":175432,"line_start":74,"line_end":74,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175550,"byte_end":175556,"line_start":80,"line_end":80,"column_start":12,"column_end":18},"name":"enable","qualname":"<Button>::enable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175513,"byte_end":175538,"line_start":79,"line_end":79,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175654,"byte_end":175665,"line_start":85,"line_end":85,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<Button>::set_enabled","value":"fn (&mut self, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable this view.\n","sig":null,"attributes":[{"value":"/ Enable or disable this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175610,"byte_end":175642,"line_start":84,"line_end":84,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175792,"byte_end":175802,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Button>::is_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175737,"byte_end":175780,"line_start":89,"line_end":89,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176140,"byte_end":176145,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"label","qualname":"<Button>::label","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the label for this button.","sig":null,"attributes":[{"value":"/ Returns the label for this button.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175852,"byte_end":175890,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175895,"byte_end":175898,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Includes brackets.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175903,"byte_end":175925,"line_start":96,"line_end":96,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175930,"byte_end":175933,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175938,"byte_end":175952,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175957,"byte_end":175960,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175965,"byte_end":175976,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::Button;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":175981,"byte_end":176014,"line_start":101,"line_end":101,"column_start":5,"column_end":38}},{"value":"/ let button = Button::new(\"Quit\", |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176019,"byte_end":176070,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(button.label(), \"<Quit>\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176075,"byte_end":176116,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176121,"byte_end":176128,"line_start":104,"line_end":104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176288,"byte_end":176297,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"set_label","qualname":"<Button>::set_label","value":"fn <S> (&mut self, label: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the label to the given value.","sig":null,"attributes":[{"value":"/ Sets the label to the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176194,"byte_end":176232,"line_start":109,"line_end":109,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176237,"byte_end":176240,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This will include brackets.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176245,"byte_end":176276,"line_start":111,"line_end":111,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176539,"byte_end":176552,"line_start":122,"line_end":122,"column_start":12,"column_end":25},"name":"set_label_raw","qualname":"<Button>::set_label_raw","value":"fn <S> (&mut self, label: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the label exactly to the given value.","sig":null,"attributes":[{"value":"/ Sets the label exactly to the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176433,"byte_end":176479,"line_start":119,"line_end":119,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176484,"byte_end":176487,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ This will not include brackets.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176492,"byte_end":176527,"line_start":121,"line_end":121,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1200},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179196,"byte_end":179202,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Canvas","qualname":"::views::canvas::Canvas","value":"Canvas {  }","parent":null,"children":[{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1212}],"decl_id":null,"docs":" A blank view that forwards calls to closures.","sig":null,"attributes":[{"value":"/ A blank view that forwards calls to closures.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179070,"byte_end":179119,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179120,"byte_end":179123,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ You can use this view to easily draw your own interface.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179124,"byte_end":179184,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1215},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179846,"byte_end":179850,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Canvas<T>>::wrap","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Canvas around the given view.","sig":null,"attributes":[{"value":"/ Creates a new Canvas around the given view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179721,"byte_end":179768,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179773,"byte_end":179776,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ By default, forwards all calls to the inner view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179781,"byte_end":179834,"line_start":29,"line_end":29,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180643,"byte_end":180646,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Canvas<T>>::new","value":"fn (state: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty Canvas.","sig":null,"attributes":[{"value":"/ Creates a new, empty Canvas.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180325,"byte_end":180357,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180362,"byte_end":180365,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180370,"byte_end":180384,"line_start":47,"line_end":47,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180389,"byte_end":180392,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180397,"byte_end":180408,"line_start":49,"line_end":49,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::Canvas;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180413,"byte_end":180446,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/ let canvas = Canvas::new(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180451,"byte_end":180483,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"/                     .with_draw(|printer, _| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180488,"byte_end":180537,"line_start":52,"line_end":52,"column_start":5,"column_end":54}},{"value":"/                         // Print the view","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180542,"byte_end":180587,"line_start":53,"line_end":53,"column_start":5,"column_end":50}},{"value":"/                     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180592,"byte_end":180619,"line_start":54,"line_end":54,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180624,"byte_end":180631,"line_start":55,"line_end":55,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181295,"byte_end":181304,"line_start":74,"line_end":74,"column_start":12,"column_end":21},"name":"state_mut","qualname":"<Canvas<T>>::state_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the inner state.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the inner state.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181235,"byte_end":181283,"line_start":73,"line_end":73,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181417,"byte_end":181425,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"set_draw","qualname":"<Canvas<T>>::set_draw","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `draw(&Printer)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `draw(&Printer)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181363,"byte_end":181405,"line_start":78,"line_end":78,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181634,"byte_end":181643,"line_start":89,"line_end":89,"column_start":12,"column_end":21},"name":"with_draw","qualname":"<Canvas<T>>::with_draw","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `draw(&Printer)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `draw(&Printer)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181545,"byte_end":181587,"line_start":86,"line_end":86,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181592,"byte_end":181595,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181600,"byte_end":181622,"line_start":88,"line_end":88,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181825,"byte_end":181837,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"set_on_event","qualname":"<Canvas<T>>::set_on_event","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `on_event(Event)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `on_event(Event)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181770,"byte_end":181813,"line_start":96,"line_end":96,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182070,"byte_end":182083,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"with_on_event","qualname":"<Canvas<T>>::with_on_event","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `on_event(Event)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `on_event(Event)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":181980,"byte_end":182023,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182028,"byte_end":182031,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182036,"byte_end":182058,"line_start":106,"line_end":106,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182292,"byte_end":182309,"line_start":115,"line_end":115,"column_start":12,"column_end":29},"name":"set_required_size","qualname":"<Canvas<T>>::set_required_size","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `required_size(Vec2)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `required_size(Vec2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182233,"byte_end":182280,"line_start":114,"line_end":114,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182543,"byte_end":182561,"line_start":125,"line_end":125,"column_start":12,"column_end":30},"name":"with_required_size","qualname":"<Canvas<T>>::with_required_size","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `required_size(Vec2)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `required_size(Vec2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182449,"byte_end":182496,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182501,"byte_end":182504,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182509,"byte_end":182531,"line_start":124,"line_end":124,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182760,"byte_end":182770,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"set_layout","qualname":"<Canvas<T>>::set_layout","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `layout(Vec2)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `layout(Vec2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182708,"byte_end":182748,"line_start":132,"line_end":132,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182982,"byte_end":182993,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"with_layout","qualname":"<Canvas<T>>::with_layout","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `layout(Vec2)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `layout(Vec2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182895,"byte_end":182935,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182940,"byte_end":182943,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":182948,"byte_end":182970,"line_start":142,"line_end":142,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183186,"byte_end":183200,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"set_take_focus","qualname":"<Canvas<T>>::set_take_focus","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `take_focus(Direction)`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `take_focus(Direction)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183125,"byte_end":183174,"line_start":150,"line_end":150,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183438,"byte_end":183453,"line_start":161,"line_end":161,"column_start":12,"column_end":27},"name":"with_take_focus","qualname":"<Canvas<T>>::with_take_focus","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `take_focus(Direction)`.","sig":null,"attributes":[{"value":"/ Sets the closure for `take_focus(Direction)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183342,"byte_end":183391,"line_start":158,"line_end":158,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183396,"byte_end":183399,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183404,"byte_end":183426,"line_start":160,"line_end":160,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183658,"byte_end":183676,"line_start":169,"line_end":169,"column_start":12,"column_end":30},"name":"set_needs_relayout","qualname":"<Canvas<T>>::set_needs_relayout","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `needs_relayout()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `needs_relayout()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183602,"byte_end":183646,"line_start":168,"line_end":168,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183895,"byte_end":183914,"line_start":179,"line_end":179,"column_start":12,"column_end":31},"name":"with_needs_relayout","qualname":"<Canvas<T>>::with_needs_relayout","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `needs_relayout()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `needs_relayout()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183804,"byte_end":183848,"line_start":176,"line_end":176,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183853,"byte_end":183856,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":183861,"byte_end":183883,"line_start":178,"line_end":178,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184102,"byte_end":184117,"line_start":187,"line_end":187,"column_start":12,"column_end":27},"name":"set_call_on_any","qualname":"<Canvas<T>>::set_call_on_any","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `call_on_any()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `call_on_any()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184049,"byte_end":184090,"line_start":186,"line_end":186,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184359,"byte_end":184375,"line_start":197,"line_end":197,"column_start":12,"column_end":28},"name":"with_call_on_any","qualname":"<Canvas<T>>::with_call_on_any","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `call_on_any()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `call_on_any()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184271,"byte_end":184312,"line_start":194,"line_end":194,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184317,"byte_end":184320,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184325,"byte_end":184347,"line_start":196,"line_end":196,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184592,"byte_end":184610,"line_start":205,"line_end":205,"column_start":12,"column_end":30},"name":"set_important_area","qualname":"<Canvas<T>>::set_important_area","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `important_area()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `important_area()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184536,"byte_end":184580,"line_start":204,"line_end":204,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184835,"byte_end":184854,"line_start":215,"line_end":215,"column_start":12,"column_end":31},"name":"with_important_area","qualname":"<Canvas<T>>::with_important_area","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `important_area()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `important_area()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184744,"byte_end":184788,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184793,"byte_end":184796,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184801,"byte_end":184823,"line_start":214,"line_end":214,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185047,"byte_end":185061,"line_start":223,"line_end":223,"column_start":12,"column_end":26},"name":"set_focus_view","qualname":"<Canvas<T>>::set_focus_view","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `focus_view()`.\n","sig":null,"attributes":[{"value":"/ Sets the closure for `focus_view()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":184995,"byte_end":185035,"line_start":222,"line_end":222,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185300,"byte_end":185315,"line_start":233,"line_end":233,"column_start":12,"column_end":27},"name":"with_focus_view","qualname":"<Canvas<T>>::with_focus_view","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the closure for `focus_view()`.","sig":null,"attributes":[{"value":"/ Sets the closure for `focus_view()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185213,"byte_end":185253,"line_start":230,"line_end":230,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185258,"byte_end":185261,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185266,"byte_end":185288,"line_start":232,"line_end":232,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1303},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":186749,"byte_end":186757,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"Checkbox","qualname":"::views::checkbox::Checkbox","value":"Checkbox {  }","parent":null,"children":[{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306}],"decl_id":null,"docs":" Checkable box.\n","sig":null,"attributes":[{"value":"/ Checkable box.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":186719,"byte_end":186737,"line_start":11,"line_end":11,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":186982,"byte_end":186985,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkbox>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, unchecked checkbox.\n","sig":null,"attributes":[{"value":"/ Creates a new, unchecked checkbox.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":186932,"byte_end":186970,"line_start":24,"line_end":24,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187188,"byte_end":187201,"line_start":34,"line_end":34,"column_start":12,"column_end":25},"name":"set_on_change","qualname":"<Checkbox>::set_on_change","value":"fn <F> (&mut self, on_change: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when the state changes.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when the state changes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187122,"byte_end":187176,"line_start":33,"line_end":33,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187444,"byte_end":187453,"line_start":43,"line_end":43,"column_start":12,"column_end":21},"name":"on_change","qualname":"<Checkbox>::on_change","value":"fn <F> (self, on_change: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when the state changes.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when the state changes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187343,"byte_end":187397,"line_start":40,"line_end":40,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187402,"byte_end":187405,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187410,"byte_end":187432,"line_start":42,"line_end":42,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1314},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187640,"byte_end":187646,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"toggle","qualname":"<Checkbox>::toggle","value":"fn (&mut self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Toggles the checkbox state.\n","sig":null,"attributes":[{"value":"/ Toggles the checkbox state.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187597,"byte_end":187628,"line_start":49,"line_end":49,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187792,"byte_end":187797,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"check","qualname":"<Checkbox>::check","value":"fn (&mut self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Check the checkbox.\n","sig":null,"attributes":[{"value":"/ Check the checkbox.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187757,"byte_end":187780,"line_start":55,"line_end":55,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187938,"byte_end":187945,"line_start":63,"line_end":63,"column_start":12,"column_end":19},"name":"checked","qualname":"<Checkbox>::checked","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Check the checkbox.","sig":null,"attributes":[{"value":"/ Check the checkbox.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187868,"byte_end":187891,"line_start":60,"line_end":60,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187896,"byte_end":187899,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":187904,"byte_end":187926,"line_start":62,"line_end":62,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188089,"byte_end":188099,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"is_checked","qualname":"<Checkbox>::is_checked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the checkbox is checked.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the checkbox is checked.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188031,"byte_end":188077,"line_start":69,"line_end":69,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188186,"byte_end":188193,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"uncheck","qualname":"<Checkbox>::uncheck","value":"fn (&mut self) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Uncheck the checkbox.\n","sig":null,"attributes":[{"value":"/ Uncheck the checkbox.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188149,"byte_end":188174,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188337,"byte_end":188346,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"unchecked","qualname":"<Checkbox>::unchecked","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Uncheck the checkbox.","sig":null,"attributes":[{"value":"/ Uncheck the checkbox.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188265,"byte_end":188290,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188295,"byte_end":188298,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188303,"byte_end":188325,"line_start":81,"line_end":81,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188474,"byte_end":188485,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"set_checked","qualname":"<Checkbox>::set_checked","value":"fn (&mut self, checked: bool) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the checkbox state.\n","sig":null,"attributes":[{"value":"/ Sets the checkbox state.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188434,"byte_end":188462,"line_start":88,"line_end":88,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4348},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190548,"byte_end":190555,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Content","qualname":"::views::dialog::DialogFocus::Content","value":"DialogFocus::Content","parent":{"krate":0,"index":4347},"children":[],"decl_id":null,"docs":" Content element focused\n","sig":null,"attributes":[{"value":"/ Content element focused","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190516,"byte_end":190543,"line_start":21,"line_end":21,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4350},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190592,"byte_end":190598,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Button","qualname":"::views::dialog::DialogFocus::Button","value":"DialogFocus::Button(usize)","parent":{"krate":0,"index":4347},"children":[],"decl_id":null,"docs":" One of buttons focused\n","sig":null,"attributes":[{"value":"/ One of buttons focused","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190561,"byte_end":190587,"line_start":23,"line_end":23,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":4347},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190498,"byte_end":190509,"line_start":20,"line_end":20,"column_start":10,"column_end":21},"name":"DialogFocus","qualname":"::views::dialog::DialogFocus","value":"DialogFocus::{Content, Button}","parent":null,"children":[{"krate":0,"index":4348},{"krate":0,"index":4350}],"decl_id":null,"docs":" Identifies currently focused element in [`Dialog`].","sig":null,"attributes":[{"value":"/ Identifies currently focused element in [`Dialog`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190349,"byte_end":190404,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190405,"byte_end":190408,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Dialog`]: struct.Dialog.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190409,"byte_end":190443,"line_start":18,"line_end":18,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1366},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191246,"byte_end":191252,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Dialog","qualname":"::views::dialog::Dialog","value":"Dialog {  }","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"decl_id":null,"docs":" Popup-like view with a main content, and optional buttons under it.","sig":null,"attributes":[{"value":"/ Popup-like view with a main content, and optional buttons under it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190969,"byte_end":191040,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191041,"byte_end":191044,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191045,"byte_end":191059,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191060,"byte_end":191063,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191064,"byte_end":191071,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::{Dialog,TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191072,"byte_end":191116,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ let dialog = Dialog::around(TextView::new(\"Hello!\"))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191117,"byte_end":191173,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/                     .button(\"Ok\", |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191174,"byte_end":191226,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191227,"byte_end":191234,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192027,"byte_end":192030,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<Dialog>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Dialog` with empty content.","sig":null,"attributes":[{"value":"/ Creates a new `Dialog` with empty content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191910,"byte_end":191956,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191961,"byte_end":191964,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ You should probably call `content()` next.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191969,"byte_end":192015,"line_start":88,"line_end":88,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192148,"byte_end":192154,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"around","qualname":"<Dialog>::around","value":"fn <V> (view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Dialog` with the given content.\n","sig":null,"attributes":[{"value":"/ Creates a new `Dialog` with the given content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192086,"byte_end":192136,"line_start":93,"line_end":93,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192690,"byte_end":192697,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"content","qualname":"<Dialog>::content","value":"fn <V> (self, view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the content for this dialog.","sig":null,"attributes":[{"value":"/ Sets the content for this dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192606,"byte_end":192643,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192648,"byte_end":192651,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192656,"byte_end":192678,"line_start":110,"line_end":110,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193204,"byte_end":193215,"line_start":127,"line_end":127,"column_start":12,"column_end":23},"name":"get_content","qualname":"<Dialog>::get_content","value":"fn (&self) -> &View","parent":null,"children":[],"decl_id":null,"docs":" Gets the content of this dialog.","sig":null,"attributes":[{"value":"/ Gets the content of this dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192796,"byte_end":192832,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192837,"byte_end":192840,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192845,"byte_end":192852,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ use cursive::views::{Dialog, TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192857,"byte_end":192900,"line_start":118,"line_end":118,"column_start":5,"column_end":48}},{"value":"/ let dialog = Dialog::around(TextView::new(\"Hello!\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192905,"byte_end":192962,"line_start":119,"line_end":119,"column_start":5,"column_end":62}},{"value":"/ let text_view: &TextView = dialog","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":192967,"byte_end":193004,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/     .get_content()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193009,"byte_end":193031,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/     .as_any()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193036,"byte_end":193053,"line_start":122,"line_end":122,"column_start":5,"column_end":22}},{"value":"/     .downcast_ref::<TextView>()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193058,"byte_end":193093,"line_start":123,"line_end":123,"column_start":5,"column_end":40}},{"value":"/     .unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193098,"byte_end":193116,"line_start":124,"line_end":124,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(text_view.get_content().source(), \"Hello!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193121,"byte_end":193180,"line_start":125,"line_end":125,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193185,"byte_end":193192,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193324,"byte_end":193339,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"get_content_mut","qualname":"<Dialog>::get_content_mut","value":"fn (&mut self) -> &mut View","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable access to the content.\n","sig":null,"attributes":[{"value":"/ Gets mutable access to the content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193273,"byte_end":193312,"line_start":131,"line_end":131,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193535,"byte_end":193546,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"set_content","qualname":"<Dialog>::set_content","value":"fn <V> (&mut self, view: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the content for this dialog.","sig":null,"attributes":[{"value":"/ Sets the content for this dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193436,"byte_end":193473,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193478,"byte_end":193481,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Previous content will be dropped.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193486,"byte_end":193523,"line_start":139,"line_end":139,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193767,"byte_end":193771,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"text","qualname":"<Dialog>::text","value":"fn <S> (text: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create a dialog with a simple text content.\n","sig":null,"attributes":[{"value":"/ Convenient method to create a dialog with a simple text content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193687,"byte_end":193755,"line_start":145,"line_end":145,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193990,"byte_end":193994,"line_start":153,"line_end":153,"column_start":12,"column_end":16},"name":"info","qualname":"<Dialog>::info","value":"fn <S> (text: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create an infobox.","sig":null,"attributes":[{"value":"/ Convenient method to create an infobox.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193861,"byte_end":193904,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193909,"byte_end":193912,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ It will contain the given text and a `Ok` dismiss button.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":193917,"byte_end":193978,"line_start":152,"line_end":152,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194229,"byte_end":194235,"line_start":160,"line_end":160,"column_start":12,"column_end":18},"name":"button","qualname":"<Dialog>::button","value":"fn <F, S> (self, label: S, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a button to the dialog with the given label and callback.","sig":null,"attributes":[{"value":"/ Adds a button to the dialog with the given label and callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194090,"byte_end":194156,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194161,"byte_end":194164,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Consumes and returns self for easy chaining.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194169,"byte_end":194217,"line_start":159,"line_end":159,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194478,"byte_end":194488,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"add_button","qualname":"<Dialog>::add_button","value":"fn <F, S> (&mut self, label: S, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a button to the dialog with the given label and callback.\n","sig":null,"attributes":[{"value":"/ Adds a button to the dialog with the given label and callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194400,"byte_end":194466,"line_start":167,"line_end":167,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194747,"byte_end":194758,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"buttons_len","qualname":"<Dialog>::buttons_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of buttons on this dialog.\n","sig":null,"attributes":[{"value":"/ Returns the number of buttons on this dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194686,"byte_end":194735,"line_start":176,"line_end":176,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194862,"byte_end":194875,"line_start":182,"line_end":182,"column_start":12,"column_end":25},"name":"clear_buttons","qualname":"<Dialog>::clear_buttons","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes any button from `self`.\n","sig":null,"attributes":[{"value":"/ Removes any button from `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194815,"byte_end":194850,"line_start":181,"line_end":181,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195085,"byte_end":195098,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"remove_button","qualname":"<Dialog>::remove_button","value":"fn (&mut self, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes a button from this dialog.","sig":null,"attributes":[{"value":"/ Removes a button from this dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":194957,"byte_end":194995,"line_start":187,"line_end":187,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195000,"byte_end":195003,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195008,"byte_end":195020,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195025,"byte_end":195028,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Panics if `i >= self.buttons_len()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195033,"byte_end":195073,"line_start":191,"line_end":191,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195346,"byte_end":195353,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"h_align","qualname":"<Dialog>::h_align","value":"fn (mut self, h: HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal alignment for the buttons, if any.","sig":null,"attributes":[{"value":"/ Sets the horizontal alignment for the buttons, if any.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195192,"byte_end":195250,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195255,"byte_end":195258,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Only works if the buttons are as a row at the bottom of the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195263,"byte_end":195334,"line_start":199,"line_end":199,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195833,"byte_end":195847,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"dismiss_button","qualname":"<Dialog>::dismiss_button","value":"fn <S> (self, label: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Shortcut method to add a button that will dismiss the dialog.\n","sig":null,"attributes":[{"value":"/ Shortcut method to add a button that will dismiss the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195756,"byte_end":195821,"line_start":219,"line_end":219,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196079,"byte_end":196084,"line_start":229,"line_end":229,"column_start":12,"column_end":17},"name":"title","qualname":"<Dialog>::title","value":"fn <S> (self, label: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":195973,"byte_end":196006,"line_start":226,"line_end":226,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196011,"byte_end":196014,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If not empty, it will be visible at the top.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196019,"byte_end":196067,"line_start":228,"line_end":228,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196226,"byte_end":196235,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Dialog>::set_title","value":"fn <S> (&mut self, label: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196181,"byte_end":196214,"line_start":233,"line_end":233,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196470,"byte_end":196484,"line_start":241,"line_end":241,"column_start":12,"column_end":26},"name":"title_position","qualname":"<Dialog>::title_position","value":"fn (self, align: HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196349,"byte_end":196409,"line_start":239,"line_end":239,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196414,"byte_end":196458,"line_start":240,"line_end":240,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196699,"byte_end":196717,"line_start":247,"line_end":247,"column_start":12,"column_end":30},"name":"set_title_position","qualname":"<Dialog>::set_title_position","value":"fn (&mut self, align: HAlign) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196578,"byte_end":196638,"line_start":245,"line_end":245,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196643,"byte_end":196687,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196870,"byte_end":196877,"line_start":252,"line_end":252,"column_start":12,"column_end":19},"name":"padding","qualname":"<Dialog>::padding","value":"fn <T> (mut self, padding: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the padding in the dialog (around content and buttons).\n","sig":null,"attributes":[{"value":"/ Sets the padding in the dialog (around content and buttons).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196794,"byte_end":196858,"line_start":251,"line_end":251,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197061,"byte_end":197072,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"padding_top","qualname":"<Dialog>::padding_top","value":"fn (mut self, padding: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the top padding in the dialog (under the title).\n","sig":null,"attributes":[{"value":"/ Sets the top padding in the dialog (under the title).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":196992,"byte_end":197049,"line_start":258,"line_end":258,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197239,"byte_end":197253,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"padding_bottom","qualname":"<Dialog>::padding_bottom","value":"fn (mut self, padding: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom padding in the dialog (under buttons).\n","sig":null,"attributes":[{"value":"/ Sets the bottom padding in the dialog (under buttons).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197169,"byte_end":197227,"line_start":264,"line_end":264,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197405,"byte_end":197417,"line_start":271,"line_end":271,"column_start":12,"column_end":24},"name":"padding_left","qualname":"<Dialog>::padding_left","value":"fn (mut self, padding: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the left padding in the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the left padding in the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197353,"byte_end":197393,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197568,"byte_end":197581,"line_start":277,"line_end":277,"column_start":12,"column_end":25},"name":"padding_right","qualname":"<Dialog>::padding_right","value":"fn (mut self, padding: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the right padding in the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the right padding in the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197515,"byte_end":197556,"line_start":276,"line_end":276,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197748,"byte_end":197759,"line_start":283,"line_end":283,"column_start":12,"column_end":23},"name":"buttons_mut","qualname":"<Dialog>::buttons_mut","value":"fn (&mut self) -> impl Iterator<Item = &mut Button>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator on this buttons for this dialog.\n","sig":null,"attributes":[{"value":"/ Returns an iterator on this buttons for this dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197680,"byte_end":197736,"line_start":282,"line_end":282,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197957,"byte_end":197962,"line_start":289,"line_end":289,"column_start":12,"column_end":17},"name":"focus","qualname":"<Dialog>::focus","value":"fn (&self) -> DialogFocus","parent":null,"children":[],"decl_id":null,"docs":" Returns currently focused element\n","sig":null,"attributes":[{"value":"/ Returns currently focused element","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":197908,"byte_end":197945,"line_start":288,"line_end":288,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1448},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dummy.rs","byte_start":210704,"byte_end":210713,"line_start":7,"line_end":7,"column_start":12,"column_end":21},"name":"DummyView","qualname":"::views::dummy::DummyView","value":"","parent":null,"children":[],"decl_id":null,"docs":" Dummy view.","sig":null,"attributes":[{"value":"/ Dummy view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dummy.rs","byte_start":210622,"byte_end":210637,"line_start":4,"line_end":4,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dummy.rs","byte_start":210638,"byte_end":210641,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Doesn't print anything. Minimal size is (1,1).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dummy.rs","byte_start":210642,"byte_end":210692,"line_start":6,"line_end":6,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213102,"byte_end":213110,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"EditView","qualname":"::views::edit_view::EditView","value":"EditView {  }","parent":null,"children":[{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493}],"decl_id":null,"docs":" Input box where the user can enter and edit text.","sig":null,"attributes":[{"value":"/ Input box where the user can enter and edit text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211605,"byte_end":211658,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211659,"byte_end":211662,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211663,"byte_end":211677,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211678,"byte_end":211681,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ From the [edit example][1].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211682,"byte_end":211713,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211714,"byte_end":211717,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/gyscos/Cursive/blob/master/examples/edit.rs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211718,"byte_end":211789,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211790,"byte_end":211793,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211794,"byte_end":211805,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211806,"byte_end":211833,"line_start":34,"line_end":34,"column_start":1,"column_end":28}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211834,"byte_end":211861,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211862,"byte_end":211891,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # use cursive::views::{Dialog, EditView, TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211892,"byte_end":211947,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211948,"byte_end":211965,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":211966,"byte_end":212001,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212002,"byte_end":212005,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Create a dialog with an edit text and a button.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212006,"byte_end":212060,"line_start":41,"line_end":41,"column_start":1,"column_end":55}},{"value":"/ // The user can either hit the <Ok> button,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212061,"byte_end":212108,"line_start":42,"line_end":42,"column_start":1,"column_end":48}},{"value":"/ // or press Enter on the edit text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212109,"byte_end":212148,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ siv.add_layer(","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212149,"byte_end":212167,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/     Dialog::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212168,"byte_end":212189,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/         .title(\"Enter your name\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212190,"byte_end":212227,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/         .padding((1, 1, 1, 0))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212228,"byte_end":212262,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/         .content(","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212263,"byte_end":212284,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/             EditView::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212285,"byte_end":212316,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/                 .on_submit(show_popup)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212317,"byte_end":212359,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/                 .with_id(\"name\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212360,"byte_end":212396,"line_start":51,"line_end":51,"column_start":1,"column_end":37}},{"value":"/                 .fixed_width(20),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212397,"byte_end":212434,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/         )","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212435,"byte_end":212448,"line_start":53,"line_end":53,"column_start":1,"column_end":14}},{"value":"/         .button(\"Ok\", |s| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212449,"byte_end":212480,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/             let name = s.call_on_id(","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212481,"byte_end":212521,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/                 \"name\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212522,"byte_end":212549,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/                 |view: &mut EditView| view.get_content(),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212550,"byte_end":212611,"line_start":57,"line_end":57,"column_start":1,"column_end":62}},{"value":"/             ).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212612,"byte_end":212639,"line_start":58,"line_end":58,"column_start":1,"column_end":28}},{"value":"/             show_popup(s, &name);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212640,"byte_end":212677,"line_start":59,"line_end":59,"column_start":1,"column_end":38}},{"value":"/         }),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212678,"byte_end":212693,"line_start":60,"line_end":60,"column_start":1,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212694,"byte_end":212700,"line_start":61,"line_end":61,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212701,"byte_end":212704,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn show_popup(s: &mut Cursive, name: &str) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212705,"byte_end":212753,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/     if name.is_empty() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212754,"byte_end":212782,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         s.add_layer(Dialog::info(\"Please enter a name!\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212783,"byte_end":212845,"line_start":65,"line_end":65,"column_start":1,"column_end":63}},{"value":"/     } else {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212846,"byte_end":212862,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/         let content = format!(\"Hello {}!\", name);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212863,"byte_end":212916,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/         s.pop_layer();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212917,"byte_end":212943,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/         s.add_layer(Dialog::around(TextView::new(content))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":212944,"byte_end":213006,"line_start":69,"line_end":69,"column_start":1,"column_end":63}},{"value":"/             .button(\"Quit\", |s| s.quit()));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213007,"byte_end":213054,"line_start":70,"line_end":70,"column_start":1,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213055,"byte_end":213064,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213065,"byte_end":213070,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213071,"byte_end":213074,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213075,"byte_end":213082,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":213083,"byte_end":213090,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214184,"byte_end":214187,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<EditView>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty edit view.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty edit view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214137,"byte_end":214172,"line_start":118,"line_end":118,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214814,"byte_end":214835,"line_start":140,"line_end":140,"column_start":12,"column_end":33},"name":"set_max_content_width","qualname":"<EditView>::set_max_content_width","value":"fn (&mut self, width: Option<usize>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a maximum width for the content.","sig":null,"attributes":[{"value":"/ Sets a maximum width for the content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214609,"byte_end":214650,"line_start":135,"line_end":135,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214655,"byte_end":214658,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Input will be rejected if it would make the content exceed this width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214663,"byte_end":214737,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214742,"byte_end":214745,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Giving `None` means no maximum width is applied.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214750,"byte_end":214802,"line_start":139,"line_end":139,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215097,"byte_end":215114,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"max_content_width","qualname":"<EditView>::max_content_width","value":"fn (self, width: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a maximum width for the content.","sig":null,"attributes":[{"value":"/ Sets a maximum width for the content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214922,"byte_end":214963,"line_start":144,"line_end":144,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214968,"byte_end":214971,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Input will be rejected if it would make the content exceed this width.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214976,"byte_end":215050,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215055,"byte_end":215058,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215063,"byte_end":215085,"line_start":148,"line_end":148,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215335,"byte_end":215345,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"set_secret","qualname":"<EditView>::set_secret","value":"fn (&mut self, secret: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If `secret` is `true`, the content won't be displayed in clear.","sig":null,"attributes":[{"value":"/ If `secret` is `true`, the content won't be displayed in clear.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215216,"byte_end":215283,"line_start":153,"line_end":153,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215288,"byte_end":215291,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Only `*` will be shown.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215296,"byte_end":215323,"line_start":155,"line_end":155,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215500,"byte_end":215506,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"secret","qualname":"<EditView>::secret","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Hides the content of the view.","sig":null,"attributes":[{"value":"/ Hides the content of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215414,"byte_end":215448,"line_start":160,"line_end":160,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215453,"byte_end":215456,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Only `*` will be shown.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215461,"byte_end":215488,"line_start":162,"line_end":162,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1502},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215667,"byte_end":215677,"line_start":170,"line_end":170,"column_start":12,"column_end":22},"name":"set_filler","qualname":"<EditView>::set_filler","value":"fn <S> (&mut self, filler: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the character to fill in blank space.","sig":null,"attributes":[{"value":"/ Sets the character to fill in blank space.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215576,"byte_end":215622,"line_start":167,"line_end":167,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215627,"byte_end":215630,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Defaults to \"_\".","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215635,"byte_end":215655,"line_start":169,"line_end":169,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216011,"byte_end":216017,"line_start":184,"line_end":184,"column_start":12,"column_end":18},"name":"filler","qualname":"<EditView>::filler","value":"fn <S> (self, filler: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the character to fill in blank space.","sig":null,"attributes":[{"value":"/ Sets the character to fill in blank space.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215767,"byte_end":215813,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215818,"byte_end":215821,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215826,"byte_end":215848,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215853,"byte_end":215856,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215861,"byte_end":215875,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215880,"byte_end":215883,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215888,"byte_end":215899,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::EditView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215904,"byte_end":215939,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ let edit = EditView::new().filler(\" \");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215944,"byte_end":215987,"line_start":182,"line_end":182,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":215992,"byte_end":215999,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216204,"byte_end":216211,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"disable","qualname":"<EditView>::disable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216117,"byte_end":216140,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216145,"byte_end":216148,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216153,"byte_end":216192,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216336,"byte_end":216344,"line_start":198,"line_end":198,"column_start":12,"column_end":20},"name":"disabled","qualname":"<EditView>::disabled","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216266,"byte_end":216289,"line_start":195,"line_end":195,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216294,"byte_end":216297,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216302,"byte_end":216324,"line_start":197,"line_end":197,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216442,"byte_end":216448,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"enable","qualname":"<EditView>::enable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216405,"byte_end":216430,"line_start":202,"line_end":202,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216675,"byte_end":216684,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"set_style","qualname":"<EditView>::set_style","value":"fn (&mut self, style: ColorStyle) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the style used for this view.","sig":null,"attributes":[{"value":"/ Sets the style used for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216502,"byte_end":216540,"line_start":207,"line_end":207,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216545,"byte_end":216548,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ When the view is enabled, the style will be reversed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216553,"byte_end":216610,"line_start":209,"line_end":209,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216615,"byte_end":216618,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Defaults to `ColorStyle::Secondary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216623,"byte_end":216663,"line_start":211,"line_end":211,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216911,"byte_end":216916,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"style","qualname":"<EditView>::style","value":"fn (self, style: ColorStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the style used for this view.","sig":null,"attributes":[{"value":"/ Sets the style used for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216756,"byte_end":216794,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216799,"byte_end":216802,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ When the view is enabled, the style will be reversed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216807,"byte_end":216864,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216869,"byte_end":216872,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":216877,"byte_end":216899,"line_start":220,"line_end":220,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217507,"byte_end":217522,"line_start":235,"line_end":235,"column_start":12,"column_end":27},"name":"set_on_edit_mut","qualname":"<EditView>::set_on_edit_mut","value":"fn <F> (&mut self, callback: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called whenever the content is modified.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217005,"byte_end":217079,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217084,"byte_end":217087,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ `callback` will be called with the view","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217092,"byte_end":217135,"line_start":227,"line_end":227,"column_start":5,"column_end":48}},{"value":"/ content and the current cursor position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217140,"byte_end":217184,"line_start":228,"line_end":228,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217189,"byte_end":217192,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ *Warning*: this callback cannot be called recursively. If you somehow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217197,"byte_end":217270,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ trigger this callback again in the given closure, it will be ignored.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217275,"byte_end":217348,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217353,"byte_end":217356,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ If you don't need a mutable closure but want the possibility of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217361,"byte_end":217428,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/ recursive calls, see [`set_on_edit`](#method.set_on_edit).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217433,"byte_end":217495,"line_start":234,"line_end":234,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218163,"byte_end":218174,"line_start":252,"line_end":252,"column_start":12,"column_end":23},"name":"set_on_edit","qualname":"<EditView>::set_on_edit","value":"fn <F> (&mut self, callback: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a callback to be called whenever the content is modified.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217677,"byte_end":217743,"line_start":242,"line_end":242,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217748,"byte_end":217751,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ `callback` will be called with the view","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217756,"byte_end":217799,"line_start":244,"line_end":244,"column_start":5,"column_end":48}},{"value":"/ content and the current cursor position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217804,"byte_end":217848,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217853,"byte_end":217856,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This callback can safely trigger itself recursively if needed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217861,"byte_end":217926,"line_start":247,"line_end":247,"column_start":5,"column_end":70}},{"value":"/ (for instance if you call `on_event` on this view from the callback).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":217931,"byte_end":218004,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218009,"byte_end":218012,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ If you need a mutable closure and don't care about the recursive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218017,"byte_end":218085,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/ aspect, see [`set_on_edit_mut`](#method.set_on_edit_mut).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218090,"byte_end":218151,"line_start":251,"line_end":251,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218500,"byte_end":218511,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"on_edit_mut","qualname":"<EditView>::on_edit_mut","value":"fn <F> (self, callback: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called whenever the content is modified.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218329,"byte_end":218403,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218408,"byte_end":218411,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ Chainable variant. See [`set_on_edit_mut`](#method.set_on_edit_mut).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218416,"byte_end":218488,"line_start":261,"line_end":261,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218830,"byte_end":218837,"line_start":272,"line_end":272,"column_start":12,"column_end":19},"name":"on_edit","qualname":"<EditView>::on_edit","value":"fn <F> (self, callback: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called whenever the content is modified.","sig":null,"attributes":[{"value":"/ Sets a callback to be called whenever the content is modified.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218675,"byte_end":218741,"line_start":269,"line_end":269,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218746,"byte_end":218749,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Chainable variant. See [`set_on_edit`](#method.set_on_edit).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218754,"byte_end":218818,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219454,"byte_end":219471,"line_start":288,"line_end":288,"column_start":12,"column_end":29},"name":"set_on_submit_mut","qualname":"<EditView>::set_on_submit_mut","value":"fn <F> (&mut self, callback: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called when `<Enter>` is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":218994,"byte_end":219061,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219066,"byte_end":219069,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ `callback` will be given the content of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219074,"byte_end":219127,"line_start":281,"line_end":281,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219132,"byte_end":219135,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ *Warning*: this callback cannot be called recursively. If you somehow","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219140,"byte_end":219213,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ trigger this callback again in the given closure, it will be ignored.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219218,"byte_end":219291,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219296,"byte_end":219299,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ If you don't need a mutable closure but want the possibility of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219304,"byte_end":219371,"line_start":286,"line_end":286,"column_start":5,"column_end":72}},{"value":"/ recursive calls, see [`set_on_submit`](#method.set_on_submit).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219376,"byte_end":219442,"line_start":287,"line_end":287,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220392,"byte_end":220405,"line_start":312,"line_end":312,"column_start":12,"column_end":25},"name":"set_on_submit","qualname":"<EditView>::set_on_submit","value":"fn <F> (&mut self, callback: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be called when `<Enter>` is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":219948,"byte_end":220007,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220012,"byte_end":220015,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ `callback` will be given the content of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220020,"byte_end":220073,"line_start":305,"line_end":305,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220078,"byte_end":220081,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This callback can safely trigger itself recursively if needed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220086,"byte_end":220151,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/ (for instance if you call `on_event` on this view from the callback).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220156,"byte_end":220229,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220234,"byte_end":220237,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ If you need a mutable closure and don't care about the recursive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220242,"byte_end":220310,"line_start":310,"line_end":310,"column_start":5,"column_end":73}},{"value":"/ aspect, see [`set_on_submit_mut`](#method.set_on_submit_mut).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220315,"byte_end":220380,"line_start":311,"line_end":311,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220669,"byte_end":220682,"line_start":322,"line_end":322,"column_start":12,"column_end":25},"name":"on_submit_mut","qualname":"<EditView>::on_submit_mut","value":"fn <F> (self, callback: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a mutable callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a mutable callback to be called when `<Enter>` is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220555,"byte_end":220622,"line_start":319,"line_end":319,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220627,"byte_end":220630,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220635,"byte_end":220657,"line_start":321,"line_end":321,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220947,"byte_end":220956,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"on_submit","qualname":"<EditView>::on_submit","value":"fn <F> (self, callback: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be called when `<Enter>` is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220841,"byte_end":220900,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220905,"byte_end":220908,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":220913,"byte_end":220935,"line_start":331,"line_end":331,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221152,"byte_end":221163,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<EditView>::set_enabled","value":"fn (&mut self, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable this view.\n","sig":null,"attributes":[{"value":"/ Enable or disable this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221108,"byte_end":221140,"line_start":339,"line_end":339,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221290,"byte_end":221300,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<EditView>::is_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221235,"byte_end":221278,"line_start":344,"line_end":344,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221558,"byte_end":221569,"line_start":354,"line_end":354,"column_start":12,"column_end":23},"name":"set_content","qualname":"<EditView>::set_content","value":"fn <S> (&mut self, content: S) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Replace the entire content of the view with the given one.","sig":null,"attributes":[{"value":"/ Replace the entire content of the view with the given one.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221350,"byte_end":221412,"line_start":349,"line_end":349,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221417,"byte_end":221420,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to content change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221425,"byte_end":221478,"line_start":351,"line_end":351,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221483,"byte_end":221486,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221491,"byte_end":221546,"line_start":353,"line_end":353,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221901,"byte_end":221912,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"get_content","qualname":"<EditView>::get_content","value":"fn (&self) -> Rc<String>","parent":null,"children":[],"decl_id":null,"docs":" Get the current text.\n","sig":null,"attributes":[{"value":"/ Get the current text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221864,"byte_end":221889,"line_start":365,"line_end":365,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222138,"byte_end":222145,"line_start":375,"line_end":375,"column_start":12,"column_end":19},"name":"content","qualname":"<EditView>::content","value":"fn <S> (mut self, content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the current content to the given value.","sig":null,"attributes":[{"value":"/ Sets the current content to the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":221980,"byte_end":222028,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222033,"byte_end":222036,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ Convenient chainable method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222041,"byte_end":222073,"line_start":372,"line_end":372,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222078,"byte_end":222081,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Does not run the `on_edit` callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222086,"byte_end":222126,"line_start":374,"line_end":374,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222295,"byte_end":222305,"line_start":381,"line_end":381,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<EditView>::set_cursor","value":"fn (&mut self, cursor: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the cursor position.\n","sig":null,"attributes":[{"value":"/ Sets the cursor position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222254,"byte_end":222283,"line_start":380,"line_end":380,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222605,"byte_end":222611,"line_start":392,"line_end":392,"column_start":12,"column_end":18},"name":"insert","qualname":"<EditView>::insert","value":"fn (&mut self, ch: char) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Insert `ch` at the current cursor position.","sig":null,"attributes":[{"value":"/ Insert `ch` at the current cursor position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222412,"byte_end":222459,"line_start":387,"line_end":387,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222464,"byte_end":222467,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to content change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222472,"byte_end":222525,"line_start":389,"line_end":389,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222530,"byte_end":222533,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":222538,"byte_end":222593,"line_start":391,"line_end":391,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":223801,"byte_end":223807,"line_start":422,"line_end":422,"column_start":12,"column_end":18},"name":"remove","qualname":"<EditView>::remove","value":"fn (&mut self, len: usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Remove the character at the current cursor position.","sig":null,"attributes":[{"value":"/ Remove the character at the current cursor position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":223599,"byte_end":223655,"line_start":417,"line_end":417,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":223660,"byte_end":223663,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to content change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":223668,"byte_end":223721,"line_start":419,"line_end":419,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":223726,"byte_end":223729,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":223734,"byte_end":223789,"line_start":421,"line_end":421,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1570},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234176,"byte_end":234188,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"HideableView","qualname":"::views::hideable_view::HideableView","value":"HideableView {  }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573},{"krate":0,"index":1574}],"decl_id":null,"docs":" Wrapper around another view that can be hidden at will.","sig":null,"attributes":[{"value":"/ Wrapper around another view that can be hidden at will.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":233820,"byte_end":233879,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":233880,"byte_end":233883,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ By default, it simply forwards all calls to the inner view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":233884,"byte_end":233947,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":233948,"byte_end":233951,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ When hidden (with `HideableView::hide()`), it will appear as a zero-sized","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":233952,"byte_end":234029,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ invisible view, will not take focus and will not accept input.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234030,"byte_end":234096,"line_start":12,"line_end":12,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234097,"byte_end":234100,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ It can be made visible again with `HideableView::unhide()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234101,"byte_end":234164,"line_start":14,"line_end":14,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234386,"byte_end":234389,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<HideableView<V>>::new","value":"fn (view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new HideableView around `view`.","sig":null,"attributes":[{"value":"/ Creates a new HideableView around `view`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234282,"byte_end":234327,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234332,"byte_end":234335,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ It will be visible by default.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234340,"byte_end":234374,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234579,"byte_end":234590,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"set_visible","qualname":"<HideableView<V>>::set_visible","value":"fn (&mut self, visible: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view.\n","sig":null,"attributes":[{"value":"/ Sets the visibility for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234529,"byte_end":234567,"line_start":33,"line_end":33,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234750,"byte_end":234754,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"hide","qualname":"<HideableView<V>>::hide","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view to `false`.\n","sig":null,"attributes":[{"value":"/ Sets the visibility for this view to `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234689,"byte_end":234738,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234872,"byte_end":234878,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"name":"unhide","qualname":"<HideableView<V>>::unhide","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view to `true`.\n","sig":null,"attributes":[{"value":"/ Sets the visibility for this view to `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234812,"byte_end":234860,"line_start":44,"line_end":44,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":235031,"byte_end":235037,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"hidden","qualname":"<HideableView<V>>::hidden","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the visibility for this view to `false`.","sig":null,"attributes":[{"value":"/ Sets the visibility for this view to `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234935,"byte_end":234984,"line_start":49,"line_end":49,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234989,"byte_end":234992,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234997,"byte_end":235019,"line_start":51,"line_end":51,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1612},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236566,"byte_end":236572,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"IdView","qualname":"::views::id_view::IdView","value":"IdView {  }","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615}],"decl_id":null,"docs":" Wrapper around a view to provide interior mutability.\n","sig":null,"attributes":[{"value":"/ Wrapper around a view to provide interior mutability.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236497,"byte_end":236554,"line_start":8,"line_end":8,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":1616},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236823,"byte_end":236830,"line_start":19,"line_end":19,"column_start":10,"column_end":17},"name":"ViewRef","qualname":"::views::id_view::ViewRef","value":"OwningHandle<RcRef<RefCell<V>>, RefMut<'static, V>>","parent":null,"children":[],"decl_id":null,"docs":" Mutable reference to a view.","sig":null,"attributes":[{"value":"/ Mutable reference to a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236629,"byte_end":236661,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236662,"byte_end":236665,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This behaves like a [`RefMut`], but without being tied to a lifetime.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236666,"byte_end":236739,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236740,"byte_end":236743,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`RefMut`]: https://doc.rust-lang.org/std/cell/struct.RefMut.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236744,"byte_end":236813,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236967,"byte_end":236970,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<IdView<V>>::new","value":"fn <S> (id: S, view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps `view` in a new `IdView`.\n","sig":null,"attributes":[{"value":"/ Wraps `view` in a new `IdView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236920,"byte_end":236955,"line_start":22,"line_end":22,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237364,"byte_end":237371,"line_start":37,"line_end":37,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IdView<V>>::get_mut","value":"fn (&mut self) -> ViewRef<V>","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable access to the inner view.","sig":null,"attributes":[{"value":"/ Gets mutable access to the inner view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237126,"byte_end":237168,"line_start":30,"line_end":30,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237173,"byte_end":237176,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This returns a `ViewRef<V>`, which implement `DerefMut<Target = V>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237181,"byte_end":237253,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237258,"byte_end":237261,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237266,"byte_end":237278,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237283,"byte_end":237286,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Panics if another reference for this view already exists.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237291,"byte_end":237352,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4372},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239407,"byte_end":239412,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Layer","qualname":"::views::layer::Layer","value":"Layer {  }","parent":null,"children":[{"krate":0,"index":4374}],"decl_id":null,"docs":" Wrapper view that fills the background.","sig":null,"attributes":[{"value":"/ Wrapper view that fills the background.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239246,"byte_end":239289,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239290,"byte_end":239293,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Used as layer in the [`StackView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239294,"byte_end":239333,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239334,"byte_end":239337,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`StackView`]: struct.StackView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239338,"byte_end":239378,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239506,"byte_end":239509,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Layer<T>>::new","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view.\n","sig":null,"attributes":[{"value":"/ Wraps the given view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239469,"byte_end":239494,"line_start":15,"line_end":15,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1672},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":240142,"byte_end":240154,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"LinearLayout","qualname":"::views::linear_layout::LinearLayout","value":"LinearLayout {  }","parent":null,"children":[{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676}],"decl_id":null,"docs":" Arranges its children linearly according to its orientation.\n","sig":null,"attributes":[{"value":"/ Arranges its children linearly according to its orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":240066,"byte_end":240130,"line_start":12,"line_end":12,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242323,"byte_end":242326,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<LinearLayout>::new","value":"fn (orientation: direction::Orientation) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new layout with the given orientation.\n","sig":null,"attributes":[{"value":"/ Creates a new layout with the given orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242259,"byte_end":242311,"line_start":112,"line_end":112,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242671,"byte_end":242677,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"weight","qualname":"<LinearLayout>::weight","value":"fn (mut self, weight: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the weight of the last child added.","sig":null,"attributes":[{"value":"/ Modifies the weight of the last child added.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242524,"byte_end":242572,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242577,"byte_end":242580,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is an error to call this before adding a child (and it will panic).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242585,"byte_end":242659,"line_start":124,"line_end":124,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242875,"byte_end":242880,"line_start":134,"line_end":134,"column_start":12,"column_end":17},"name":"child","qualname":"<LinearLayout>::child","value":"fn <V> (self, view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a child to the layout.","sig":null,"attributes":[{"value":"/ Adds a child to the layout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242797,"byte_end":242828,"line_start":131,"line_end":131,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242833,"byte_end":242836,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242841,"byte_end":242863,"line_start":133,"line_end":133,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243020,"byte_end":243029,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"add_child","qualname":"<LinearLayout>::add_child","value":"fn <V> (&mut self, view: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a child to the layout.\n","sig":null,"attributes":[{"value":"/ Adds a child to the layout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242977,"byte_end":243008,"line_start":138,"line_end":138,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1716},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243292,"byte_end":243295,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"len","qualname":"<LinearLayout>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of children.\n","sig":null,"attributes":[{"value":"/ Returns the number of children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243245,"byte_end":243280,"line_start":148,"line_end":148,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243413,"byte_end":243421,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LinearLayout>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view has no children.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view has no children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243353,"byte_end":243401,"line_start":153,"line_end":153,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243534,"byte_end":243549,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"get_focus_index","qualname":"<LinearLayout>::get_focus_index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns index of focused inner view\n","sig":null,"attributes":[{"value":"/ Returns index of focused inner view","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243483,"byte_end":243522,"line_start":158,"line_end":158,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243767,"byte_end":243775,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"vertical","qualname":"<LinearLayout>::vertical","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vertical layout.\n","sig":null,"attributes":[{"value":"/ Creates a new vertical layout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243721,"byte_end":243755,"line_start":168,"line_end":168,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243907,"byte_end":243917,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<LinearLayout>::horizontal","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new horizontal layout.\n","sig":null,"attributes":[{"value":"/ Creates a new horizontal layout.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":243859,"byte_end":243895,"line_start":173,"line_end":173,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244050,"byte_end":244059,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"get_child","qualname":"<LinearLayout>::get_child","value":"fn (&self, i: usize) -> Option<&View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a child.\n","sig":null,"attributes":[{"value":"/ Returns a reference to a child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244003,"byte_end":244038,"line_start":178,"line_end":178,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244217,"byte_end":244230,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"get_child_mut","qualname":"<LinearLayout>::get_child_mut","value":"fn (&mut self, i: usize) -> Option<&mut View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a child.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to a child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244162,"byte_end":244205,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244556,"byte_end":244568,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"remove_child","qualname":"<LinearLayout>::remove_child","value":"fn (&mut self, i: usize) -> Option<Box<View>>","parent":null,"children":[],"decl_id":null,"docs":" Removes a child.","sig":null,"attributes":[{"value":"/ Removes a child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244447,"byte_end":244467,"line_start":190,"line_end":190,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244472,"byte_end":244475,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If `i` is within bounds, the removed child will be returned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":244480,"byte_end":244544,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1780},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260415,"byte_end":260418,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"Row","qualname":"::views::list_view::ListChild::Row","value":"ListChild::Row(String, Box<View>)","parent":{"krate":0,"index":1779},"children":[],"decl_id":null,"docs":" A single row, with a label and a view.\n","sig":null,"attributes":[{"value":"/ A single row, with a label and a view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260368,"byte_end":260410,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1784},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260479,"byte_end":260488,"line_start":19,"line_end":19,"column_start":5,"column_end":14},"name":"Delimiter","qualname":"::views::list_view::ListChild::Delimiter","value":"ListChild::Delimiter","parent":{"krate":0,"index":1779},"children":[],"decl_id":null,"docs":" A delimiter between groups.\n","sig":null,"attributes":[{"value":"/ A delimiter between groups.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260443,"byte_end":260474,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1779},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260352,"byte_end":260361,"line_start":15,"line_end":15,"column_start":10,"column_end":19},"name":"ListChild","qualname":"::views::list_view::ListChild","value":"ListChild::{Row, Delimiter}","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1784}],"decl_id":null,"docs":" Represents a child from a [`ListView`].","sig":null,"attributes":[{"value":"/ Represents a child from a [`ListView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260256,"byte_end":260299,"line_start":12,"line_end":12,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260300,"byte_end":260303,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ListView`]: struct.ListView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260304,"byte_end":260342,"line_start":14,"line_end":14,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1789},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260873,"byte_end":260881,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"ListView","qualname":"::views::list_view::ListView","value":"ListView {  }","parent":null,"children":[{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1793}],"decl_id":null,"docs":" Displays a list of elements.\n","sig":null,"attributes":[{"value":"/ Displays a list of elements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260829,"byte_end":260861,"line_start":38,"line_end":38,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261165,"byte_end":261168,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<ListView>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `ListView`.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty `ListView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261117,"byte_end":261153,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261412,"byte_end":261415,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"len","qualname":"<ListView>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of children, including delimiters.\n","sig":null,"attributes":[{"value":"/ Returns the number of children, including delimiters.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261343,"byte_end":261400,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261616,"byte_end":261624,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ListView>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view contains no children.","sig":null,"attributes":[{"value":"/ Returns `true` if this view contains no children.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261473,"byte_end":261526,"line_start":65,"line_end":65,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261531,"byte_end":261534,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ Returns `false` if at least a delimiter or a view is present.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261539,"byte_end":261604,"line_start":67,"line_end":67,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261737,"byte_end":261745,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"children","qualname":"<ListView>::children","value":"fn (&self) -> &[ListChild]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the children\n","sig":null,"attributes":[{"value":"/ Returns a reference to the children","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261686,"byte_end":261725,"line_start":72,"line_end":72,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261880,"byte_end":261887,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_row","qualname":"<ListView>::get_row","value":"fn (&self, id: usize) -> &ListChild","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the child at the given position.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the child at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261809,"byte_end":261868,"line_start":77,"line_end":77,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262103,"byte_end":262110,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"row_mut","qualname":"<ListView>::row_mut","value":"fn (&mut self, id: usize) -> &mut ListChild","parent":null,"children":[],"decl_id":null,"docs":" Gives mutable access to the child at the given position.","sig":null,"attributes":[{"value":"/ Gives mutable access to the child at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261960,"byte_end":262020,"line_start":82,"line_end":82,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262025,"byte_end":262028,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262033,"byte_end":262045,"line_start":84,"line_end":84,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262050,"byte_end":262053,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Panics if `id >= self.len()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262058,"byte_end":262091,"line_start":86,"line_end":86,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262246,"byte_end":262255,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"add_child","qualname":"<ListView>::add_child","value":"fn <V> (&mut self, label: &str, mut view: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a view to the end of the list.\n","sig":null,"attributes":[{"value":"/ Adds a view to the end of the list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262195,"byte_end":262234,"line_start":91,"line_end":91,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262524,"byte_end":262529,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"clear","qualname":"<ListView>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all children from this view.\n","sig":null,"attributes":[{"value":"/ Removes all children from this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262472,"byte_end":262512,"line_start":98,"line_end":98,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262695,"byte_end":262700,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"child","qualname":"<ListView>::child","value":"fn <V> (self, label: &str, view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a view to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a view to the end of the list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262609,"byte_end":262648,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262653,"byte_end":262656,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262661,"byte_end":262683,"line_start":106,"line_end":106,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262873,"byte_end":262886,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"add_delimiter","qualname":"<ListView>::add_delimiter","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of the list.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of the list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262817,"byte_end":262861,"line_start":111,"line_end":111,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263052,"byte_end":263061,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"delimiter","qualname":"<ListView>::delimiter","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the end of the list.","sig":null,"attributes":[{"value":"/ Adds a delimiter to the end of the list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":262961,"byte_end":263005,"line_start":116,"line_end":116,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263010,"byte_end":263013,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263018,"byte_end":263040,"line_start":118,"line_end":118,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263196,"byte_end":263209,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"set_on_select","qualname":"<ListView>::set_on_select","value":"fn <F> (&mut self, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263128,"byte_end":263184,"line_start":123,"line_end":123,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263453,"byte_end":263462,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"on_select","qualname":"<ListView>::on_select","value":"fn <F> (self, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263350,"byte_end":263406,"line_start":131,"line_end":131,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263411,"byte_end":263414,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263419,"byte_end":263441,"line_start":133,"line_end":133,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263714,"byte_end":263719,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"focus","qualname":"<ListView>::focus","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the currently focused item.","sig":null,"attributes":[{"value":"/ Returns the index of the currently focused item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263605,"byte_end":263657,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263662,"byte_end":263665,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Panics if the list is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":263670,"byte_end":263702,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1867},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":272719,"byte_end":272728,"line_start":16,"line_end":16,"column_start":12,"column_end":21},"name":"MenuPopup","qualname":"::views::menu_popup::MenuPopup","value":"MenuPopup {  }","parent":null,"children":[{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874}],"decl_id":null,"docs":" Popup that shows a list of items.\n","sig":null,"attributes":[{"value":"/ Popup that shows a list of items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":272670,"byte_end":272707,"line_start":15,"line_end":15,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":272999,"byte_end":273002,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<MenuPopup>::new","value":"fn (menu: Rc<MenuTree>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `MenuPopup` using the given menu tree.\n","sig":null,"attributes":[{"value":"/ Creates a new `MenuPopup` using the given menu tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":272931,"byte_end":272987,"line_start":27,"line_end":27,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":273379,"byte_end":273388,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"set_focus","qualname":"<MenuPopup>::set_focus","value":"fn (&mut self, focus: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the currently focused element.\n","sig":null,"attributes":[{"value":"/ Sets the currently focused element.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":273328,"byte_end":273367,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":273563,"byte_end":273568,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"focus","qualname":"<MenuPopup>::focus","value":"fn (self, focus: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the currently focused element.","sig":null,"attributes":[{"value":"/ Sets the currently focused element.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":273477,"byte_end":273516,"line_start":45,"line_end":45,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":273521,"byte_end":273524,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":273529,"byte_end":273551,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":274807,"byte_end":274812,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"align","qualname":"<MenuPopup>::align","value":"fn (self, align: Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":274723,"byte_end":274760,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":274765,"byte_end":274768,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":274773,"byte_end":274795,"line_start":93,"line_end":93,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":274945,"byte_end":274954,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"set_align","qualname":"<MenuPopup>::set_align","value":"fn (&mut self, align: Align) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":274896,"byte_end":274933,"line_start":98,"line_end":98,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275179,"byte_end":275189,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"on_dismiss","qualname":"<MenuPopup>::on_dismiss","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when this view is actively dismissed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when this view is actively dismissed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275021,"byte_end":275089,"line_start":103,"line_end":103,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275094,"byte_end":275097,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ (When the user hits <ESC>)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275102,"byte_end":275132,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275137,"byte_end":275140,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275145,"byte_end":275167,"line_start":107,"line_end":107,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275420,"byte_end":275434,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"set_on_dismiss","qualname":"<MenuPopup>::set_on_dismiss","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when this view is actively dismissed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when this view is actively dismissed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275297,"byte_end":275365,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275370,"byte_end":275373,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ (When the user hits <ESC>)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275378,"byte_end":275408,"line_start":114,"line_end":114,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275782,"byte_end":275791,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"on_action","qualname":"<MenuPopup>::on_action","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when a leaf is activated.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when a leaf is activated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275550,"byte_end":275606,"line_start":119,"line_end":119,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275611,"byte_end":275614,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Will also be called if a leaf from a subtree is activated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275619,"byte_end":275681,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275686,"byte_end":275689,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Usually used to hide the parent view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275694,"byte_end":275735,"line_start":123,"line_end":123,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275740,"byte_end":275743,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275748,"byte_end":275770,"line_start":125,"line_end":125,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":276095,"byte_end":276108,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"set_on_action","qualname":"<MenuPopup>::set_on_action","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when a leaf is activated.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when a leaf is activated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275898,"byte_end":275954,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275959,"byte_end":275962,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Will also be called if a leaf from a subtree is activated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":275967,"byte_end":276029,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":276034,"byte_end":276037,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Usually used to hide the parent view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":276042,"byte_end":276083,"line_start":134,"line_end":134,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1932},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286616,"byte_end":286623,"line_start":35,"line_end":35,"column_start":12,"column_end":19},"name":"Menubar","qualname":"::views::menubar::Menubar","value":"Menubar { autohide }","parent":null,"children":[{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936}],"decl_id":null,"docs":" Shows a single-line list of items, with pop-up menus when one is selected.","sig":null,"attributes":[{"value":"/ Shows a single-line list of items, with pop-up menus when one is selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286374,"byte_end":286452,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286453,"byte_end":286456,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`Cursive`] root already includes a menubar","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286457,"byte_end":286508,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ that you just need to configure.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286509,"byte_end":286545,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286546,"byte_end":286549,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`Cursive`]: ../struct.Cursive.html#method.menubar","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286550,"byte_end":286604,"line_start":34,"line_end":34,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286733,"byte_end":286741,"line_start":40,"line_end":40,"column_start":9,"column_end":17},"name":"autohide","qualname":"::views::menubar::Menubar::autohide","value":"bool","parent":{"krate":0,"index":1932},"children":[],"decl_id":null,"docs":" TODO: move this out of this view.\n","sig":null,"attributes":[{"value":"/ TODO: move this out of this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286687,"byte_end":286724,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286947,"byte_end":286950,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Menubar>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty menubar.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286902,"byte_end":286935,"line_start":50,"line_end":50,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287274,"byte_end":287288,"line_start":66,"line_end":66,"column_start":12,"column_end":26},"name":"receive_events","qualname":"<Menubar>::receive_events","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if we should be receiving events.\n","sig":null,"attributes":[{"value":"/ True if we should be receiving events.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287220,"byte_end":287262,"line_start":65,"line_end":65,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287405,"byte_end":287416,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"has_submenu","qualname":"<Menubar>::has_submenu","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if some submenus are visible.\n","sig":null,"attributes":[{"value":"/ True if some submenus are visible.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287355,"byte_end":287393,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287535,"byte_end":287542,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"visible","qualname":"<Menubar>::visible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if we should be drawn.\n","sig":null,"attributes":[{"value":"/ Returns `true` if we should be drawn.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287482,"byte_end":287523,"line_start":75,"line_end":75,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287800,"byte_end":287811,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"add_subtree","qualname":"<Menubar>::add_subtree","value":"fn <S> (&mut self, title: S, menu: MenuTree) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a new item to the menubar.","sig":null,"attributes":[{"value":"/ Adds a new item to the menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287627,"byte_end":287662,"line_start":80,"line_end":80,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287667,"byte_end":287670,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The item will use the given title, and on selection, will open a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287675,"byte_end":287743,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"/ popup-menu with the given menu tree.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287748,"byte_end":287788,"line_start":83,"line_end":83,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1945},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288042,"byte_end":288055,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"add_delimiter","qualname":"<Menubar>::add_delimiter","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a delimiter to the menubar.\n","sig":null,"attributes":[{"value":"/ Adds a delimiter to the menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":287994,"byte_end":288030,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288207,"byte_end":288215,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"add_leaf","qualname":"<Menubar>::add_leaf","value":"fn <S, F> (&mut self, title: S, cb: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a leaf node to the menubar.\n","sig":null,"attributes":[{"value":"/ Adds a leaf node to the menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288159,"byte_end":288195,"line_start":98,"line_end":98,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288482,"byte_end":288496,"line_start":109,"line_end":109,"column_start":12,"column_end":26},"name":"insert_subtree","qualname":"<Menubar>::insert_subtree","value":"fn <S> (&mut self, i: usize, title: S, menu: MenuTree) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Insert a new item at the given position.\n","sig":null,"attributes":[{"value":"/ Insert a new item at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288426,"byte_end":288470,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288792,"byte_end":288808,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"insert_delimiter","qualname":"<Menubar>::insert_delimiter","value":"fn (&mut self, i: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new delimiter at the given position.","sig":null,"attributes":[{"value":"/ Inserts a new delimiter at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288690,"byte_end":288740,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288745,"byte_end":288748,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ It will show up as `|`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288753,"byte_end":288780,"line_start":121,"line_end":121,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289018,"byte_end":289029,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"insert_leaf","qualname":"<Menubar>::insert_leaf","value":"fn <S, F> (&mut self, i: usize, title: S, cb: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new leaf node at the given position.","sig":null,"attributes":[{"value":"/ Inserts a new leaf node at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288908,"byte_end":288958,"line_start":127,"line_end":127,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288963,"byte_end":288966,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ It will be directly actionable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":288971,"byte_end":289006,"line_start":129,"line_end":129,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289293,"byte_end":289298,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"clear","qualname":"<Menubar>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all menu items from this menubar.\n","sig":null,"attributes":[{"value":"/ Removes all menu items from this menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289236,"byte_end":289281,"line_start":139,"line_end":139,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289434,"byte_end":289437,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"len","qualname":"<Menubar>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in this menubar.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in this menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289374,"byte_end":289422,"line_start":145,"line_end":145,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289547,"byte_end":289555,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Menubar>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this menubar is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this menubar is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289491,"byte_end":289535,"line_start":150,"line_end":150,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289719,"byte_end":289730,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"get_subtree","qualname":"<Menubar>::get_subtree","value":"fn (&mut self, i: usize) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Returns the item at the given position.","sig":null,"attributes":[{"value":"/ Returns the item at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289613,"byte_end":289656,"line_start":155,"line_end":155,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289661,"byte_end":289664,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `i > self.len()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289669,"byte_end":289707,"line_start":157,"line_end":157,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289878,"byte_end":289890,"line_start":163,"line_end":163,"column_start":12,"column_end":24},"name":"find_subtree","qualname":"<Menubar>::find_subtree","value":"fn (&mut self, label: &str) -> Option<&mut MenuTree>","parent":null,"children":[],"decl_id":null,"docs":" Looks for an item with the given label.\n","sig":null,"attributes":[{"value":"/ Looks for an item with the given label.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289823,"byte_end":289866,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1960},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":290120,"byte_end":290133,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"find_position","qualname":"<Menubar>::find_position","value":"fn (&mut self, label: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the item with the given label.","sig":null,"attributes":[{"value":"/ Returns the position of the item with the given label.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":289991,"byte_end":290049,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":290054,"byte_end":290057,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no such label was found.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":290062,"byte_end":290108,"line_start":169,"line_end":169,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":290281,"byte_end":290287,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"remove","qualname":"<Menubar>::remove","value":"fn (&mut self, i: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the item at the given position.\n","sig":null,"attributes":[{"value":"/ Remove the item at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":290227,"byte_end":290269,"line_start":174,"line_end":174,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1997},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299832,"byte_end":299843,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"OnEventView","qualname":"::views::on_event_view::OnEventView","value":"OnEventView {  }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000}],"decl_id":null,"docs":" A wrapper view that can react to events.","sig":null,"attributes":[{"value":"/ A wrapper view that can react to events.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298225,"byte_end":298269,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298270,"byte_end":298273,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This view registers a set of callbacks tied to specific events, to be run","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298274,"byte_end":298351,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ in certain conditions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298352,"byte_end":298378,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298379,"byte_end":298382,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ **Note**: only one callback can be registered per event. Trying to register","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298383,"byte_end":298462,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ a new one will replace any existing one for that event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298463,"byte_end":298522,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298523,"byte_end":298526,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * Some callbacks are called only for vents ignored by the wrapped view","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298527,"byte_end":298601,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/   (those registered by [`on_event`] or [`on_event_inner`])","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298602,"byte_end":298664,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/ * Others are processed first, and can control whether the child view should","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298665,"byte_end":298744,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/   be given the event (those registered by [`on_pre_event`] or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298745,"byte_end":298810,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/   [`on_pre_event_inner`]).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298811,"byte_end":298841,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298842,"byte_end":298845,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ \"Inner\" callbacks ([`on_event_inner`] and [`on_pre_event_inner`]) are given","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298846,"byte_end":298925,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ a reference to the inner wrapped view (but not to the `Cursive` root). They","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":298926,"byte_end":299005,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ can then return another callback, taking only a `&mut Cursive` root as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299006,"byte_end":299080,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ argument.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299081,"byte_end":299094,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299095,"byte_end":299098,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ \"Simple\" callbacks ([`on_event`] and [`on_pre_event`]) skip this first","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299099,"byte_end":299173,"line_start":27,"line_end":27,"column_start":1,"column_end":75}},{"value":"/ phase and are only called with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299174,"byte_end":299226,"line_start":28,"line_end":28,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299227,"byte_end":299230,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`on_event`]: struct.OnEventView.html#method.on_event","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299231,"byte_end":299288,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/ [`on_pre_event`]: struct.OnEventView.html#method.on_pre_event","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299289,"byte_end":299354,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/ [`on_event_inner`]: struct.OnEventView.html#method.on_event_inner","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299355,"byte_end":299424,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ [`on_pre_event_inner`]: struct.OnEventView.html#method.on_pre_event_inner","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299425,"byte_end":299502,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299503,"byte_end":299506,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299507,"byte_end":299521,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299522,"byte_end":299525,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299526,"byte_end":299533,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ # use cursive::event;;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299534,"byte_end":299560,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ # use cursive::views::{OnEventView, TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299561,"byte_end":299611,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/ let view = OnEventView::new(TextView::new(\"This view has an event!\"))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299612,"byte_end":299685,"line_start":40,"line_end":40,"column_start":1,"column_end":74}},{"value":"/                         .on_event('q', |s| s.quit())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299686,"byte_end":299742,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/                         .on_event(event::Key::Esc, |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299743,"byte_end":299812,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":299813,"byte_end":299820,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300422,"byte_end":300425,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<OnEventView<T>>::new","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view in a new OnEventView.\n","sig":null,"attributes":[{"value":"/ Wraps the given view in a new OnEventView.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300364,"byte_end":300410,"line_start":72,"line_end":72,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300662,"byte_end":300670,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"on_event","qualname":"<OnEventView<T>>::on_event","value":"fn <F, E> (self, event: E, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300545,"byte_end":300615,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300620,"byte_end":300623,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300628,"byte_end":300650,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301009,"byte_end":301021,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"on_pre_event","qualname":"<OnEventView<T>>::on_pre_event","value":"fn <F, E> (self, event: E, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300847,"byte_end":300905,"line_start":91,"line_end":91,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300910,"byte_end":300913,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The child will never receive this event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300918,"byte_end":300962,"line_start":93,"line_end":93,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300967,"byte_end":300970,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300975,"byte_end":300997,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301587,"byte_end":301605,"line_start":114,"line_end":114,"column_start":12,"column_end":30},"name":"on_pre_event_inner","qualname":"<OnEventView<T>>::on_pre_event_inner","value":"fn <F, E> (self, event: E, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301202,"byte_end":301260,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301265,"byte_end":301268,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ The given callback will be run before the child view sees the event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301273,"byte_end":301345,"line_start":106,"line_end":106,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301350,"byte_end":301353,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ * If the result is `None`, then the child view is given the event as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301358,"byte_end":301430,"line_start":108,"line_end":108,"column_start":5,"column_end":77}},{"value":"/   usual.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301435,"byte_end":301447,"line_start":109,"line_end":109,"column_start":5,"column_end":17}},{"value":"/ * Otherwise, it bypasses the child view and directly processes the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301452,"byte_end":301522,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301527,"byte_end":301540,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301545,"byte_end":301548,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301553,"byte_end":301575,"line_start":113,"line_end":113,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302107,"byte_end":302121,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"on_event_inner","qualname":"<OnEventView<T>>::on_event_inner","value":"fn <F, E> (self, event: E, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301809,"byte_end":301879,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301884,"byte_end":301887,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ If the child view ignores the event, `cb` will be called with the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301892,"byte_end":301961,"line_start":124,"line_end":124,"column_start":5,"column_end":74}},{"value":"/ child view as argument.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301966,"byte_end":301993,"line_start":125,"line_end":125,"column_start":5,"column_end":32}},{"value":"/ If the result is not `None`, it will be processed as well.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":301998,"byte_end":302060,"line_start":126,"line_end":126,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302065,"byte_end":302068,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302073,"byte_end":302095,"line_start":128,"line_end":128,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302403,"byte_end":302415,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"set_on_event","qualname":"<OnEventView<T>>::set_on_event","value":"fn <F, E> (&mut self, event: E, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.\n","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302321,"byte_end":302391,"line_start":137,"line_end":137,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2033},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302853,"byte_end":302869,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"set_on_pre_event","qualname":"<OnEventView<T>>::set_on_pre_event","value":"fn <F, E> (&mut self, event: E, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302726,"byte_end":302784,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302789,"byte_end":302792,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ The child will never receive this event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":302797,"byte_end":302841,"line_start":152,"line_end":152,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303606,"byte_end":303628,"line_start":174,"line_end":174,"column_start":12,"column_end":34},"name":"set_on_pre_event_inner","qualname":"<OnEventView<T>>::set_on_pre_event_inner","value":"fn <F, E> (&mut self, event: E, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is received.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is received.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303256,"byte_end":303314,"line_start":166,"line_end":166,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303319,"byte_end":303322,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The given callback will be run before the child view sees the event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303327,"byte_end":303399,"line_start":168,"line_end":168,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303404,"byte_end":303407,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ * If the result is `None`, then the child view is given the event as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303412,"byte_end":303484,"line_start":170,"line_end":170,"column_start":5,"column_end":77}},{"value":"/   usual.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303489,"byte_end":303501,"line_start":171,"line_end":171,"column_start":5,"column_end":17}},{"value":"/ * Otherwise, it bypasses the child view and directly processes the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303506,"byte_end":303576,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/   result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303581,"byte_end":303594,"line_start":173,"line_end":173,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304236,"byte_end":304254,"line_start":193,"line_end":193,"column_start":12,"column_end":30},"name":"set_on_event_inner","qualname":"<OnEventView<T>>::set_on_event_inner","value":"fn <F, E> (&mut self, event: E, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the given event is ignored by the child.","sig":null,"attributes":[{"value":"/ Registers a callback when the given event is ignored by the child.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":303973,"byte_end":304043,"line_start":188,"line_end":188,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304048,"byte_end":304051,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ If the child view ignores the event, `cb` will be called with the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304056,"byte_end":304125,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ child view as argument.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304130,"byte_end":304157,"line_start":191,"line_end":191,"column_start":5,"column_end":32}},{"value":"/ If the result is not `None`, it will be processed as well.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304162,"byte_end":304224,"line_start":192,"line_end":192,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4424},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":305644,"byte_end":305649,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"Panel","qualname":"::views::panel::Panel","value":"Panel {  }","parent":null,"children":[{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429}],"decl_id":null,"docs":" Draws a border around a wrapped view.\n","sig":null,"attributes":[{"value":"/ Draws a border around a wrapped view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":305574,"byte_end":305615,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":305963,"byte_end":305966,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Panel<V>>::new","value":"fn (view: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new panel around the given view.\n","sig":null,"attributes":[{"value":"/ Creates a new panel around the given view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":305905,"byte_end":305951,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306291,"byte_end":306296,"line_start":43,"line_end":43,"column_start":12,"column_end":17},"name":"title","qualname":"<Panel<V>>::title","value":"fn <S> (self, label: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306185,"byte_end":306218,"line_start":40,"line_end":40,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306223,"byte_end":306226,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If not empty, it will be visible at the top.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306231,"byte_end":306279,"line_start":42,"line_end":42,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306438,"byte_end":306447,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"set_title","qualname":"<Panel<V>>::set_title","value":"fn <S> (&mut self, label: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the title of the dialog.\n","sig":null,"attributes":[{"value":"/ Sets the title of the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306393,"byte_end":306426,"line_start":47,"line_end":47,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306682,"byte_end":306696,"line_start":55,"line_end":55,"column_start":12,"column_end":26},"name":"title_position","qualname":"<Panel<V>>::title_position","value":"fn (self, align: HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306561,"byte_end":306621,"line_start":53,"line_end":53,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306626,"byte_end":306670,"line_start":54,"line_end":54,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306911,"byte_end":306929,"line_start":61,"line_end":61,"column_start":12,"column_end":30},"name":"set_title_position","qualname":"<Panel<V>>::set_title_position","value":"fn (&mut self, align: HAlign) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal position of the title in the dialog.\n The default position is `HAlign::Center`\n","sig":null,"attributes":[{"value":"/ Sets the horizontal position of the title in the dialog.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306790,"byte_end":306850,"line_start":59,"line_end":59,"column_start":5,"column_end":65}},{"value":"/ The default position is `HAlign::Center`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":306855,"byte_end":306899,"line_start":60,"line_end":60,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309989,"byte_end":310000,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"ProgressBar","qualname":"::views::progress_bar::ProgressBar","value":"ProgressBar {  }","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106}],"decl_id":null,"docs":" Animated bar showing a progress value.","sig":null,"attributes":[{"value":"/ Animated bar showing a progress value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309027,"byte_end":309069,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309070,"byte_end":309073,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This bar has an internal counter, and adapts the length of the displayed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309074,"byte_end":309150,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ bar to the relative position of the counter between a minimum and maximum","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309151,"byte_end":309228,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309229,"byte_end":309240,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309241,"byte_end":309244,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ It also prints a customizable text in the center of the bar, which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309245,"byte_end":309315,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/ defaults to the progression percentage.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309316,"byte_end":309359,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309360,"byte_end":309363,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The bar defaults to the current theme's highlight color,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309364,"byte_end":309424,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/ but that can be customized.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309425,"byte_end":309456,"line_start":21,"line_end":21,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309457,"byte_end":309460,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309461,"byte_end":309474,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309475,"byte_end":309478,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309479,"byte_end":309486,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ # use cursive::views::ProgressBar;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309487,"byte_end":309525,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ let bar = ProgressBar::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309526,"byte_end":309558,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/                       .with_task(|counter| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309559,"byte_end":309607,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/                           // This closure is called in parallel.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309608,"byte_end":309676,"line_start":29,"line_end":29,"column_start":1,"column_end":69}},{"value":"/                           for _ in 0..100 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309677,"byte_end":309724,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/                               // Here we can communicate some","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309725,"byte_end":309790,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/                               // advancement back to the bar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309791,"byte_end":309856,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/                               counter.tick(1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309857,"byte_end":309907,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/                           }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309908,"byte_end":309939,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/                       });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309940,"byte_end":309969,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":309970,"byte_end":309977,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311228,"byte_end":311231,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressBar>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new progress bar.","sig":null,"attributes":[{"value":"/ Creates a new progress bar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311084,"byte_end":311115,"line_start":80,"line_end":80,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311120,"byte_end":311123,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Default values:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311128,"byte_end":311147,"line_start":82,"line_end":82,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311152,"byte_end":311155,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ * `min`: 0","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311160,"byte_end":311174,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/ * `max`: 100","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311179,"byte_end":311195,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/ * `value`: 0","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311200,"byte_end":311216,"line_start":86,"line_end":86,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311639,"byte_end":311649,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"with_value","qualname":"<ProgressBar>::with_value","value":"fn (mut self, value: Counter) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the value to follow.","sig":null,"attributes":[{"value":"/ Sets the value to follow.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311466,"byte_end":311495,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311500,"byte_end":311503,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Use this to manually control the progress to display","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311508,"byte_end":311564,"line_start":99,"line_end":99,"column_start":5,"column_end":61}},{"value":"/ by directly modifying the value pointed to by `value`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311569,"byte_end":311627,"line_start":100,"line_end":100,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312033,"byte_end":312038,"line_start":112,"line_end":112,"column_start":12,"column_end":17},"name":"start","qualname":"<ProgressBar>::start","value":"fn <F> (&mut self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Starts a function in a separate thread, and monitor the progress.","sig":null,"attributes":[{"value":"/ Starts a function in a separate thread, and monitor the progress.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311738,"byte_end":311807,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311812,"byte_end":311815,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ `f` will be given a `Counter` to increment the bar's progress.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311820,"byte_end":311886,"line_start":108,"line_end":108,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311891,"byte_end":311894,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This does not reset the value, so it can be called several times","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311899,"byte_end":311967,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ to advance the progress in multiple sessions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311972,"byte_end":312021,"line_start":111,"line_end":111,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312342,"byte_end":312351,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"with_task","qualname":"<ProgressBar>::with_task","value":"fn <F> (mut self, task: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Starts a function in a separate thread, and monitor the progress.","sig":null,"attributes":[{"value":"/ Starts a function in a separate thread, and monitor the progress.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312226,"byte_end":312295,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312300,"byte_end":312303,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312308,"byte_end":312330,"line_start":122,"line_end":122,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2117},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312965,"byte_end":312975,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"with_label","qualname":"<ProgressBar>::with_label","value":"fn <F> (mut self, label_maker: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the label generator.","sig":null,"attributes":[{"value":"/ Sets the label generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312483,"byte_end":312512,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312517,"byte_end":312520,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ The given function will be called with `(value, (min, max))`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312525,"byte_end":312590,"line_start":132,"line_end":132,"column_start":5,"column_end":70}},{"value":"/ Its output will be used as the label to print inside the progress bar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312595,"byte_end":312669,"line_start":133,"line_end":133,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312674,"byte_end":312677,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ The default one shows a percentage progress:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312682,"byte_end":312730,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312735,"byte_end":312738,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312743,"byte_end":312750,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ fn make_progress(value: usize, (min, max): (usize, usize)) -> String {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312755,"byte_end":312829,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/     let percent = 101 * (value - min) / (1 + max - min);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312834,"byte_end":312894,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/     format!(\"{} %\", percent)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312899,"byte_end":312931,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312936,"byte_end":312941,"line_start":141,"line_end":141,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":312946,"byte_end":312953,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313331,"byte_end":313334,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"min","qualname":"<ProgressBar>::min","value":"fn (mut self, min: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimum value.","sig":null,"attributes":[{"value":"/ Sets the minimum value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313151,"byte_end":313178,"line_start":150,"line_end":150,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313183,"byte_end":313186,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ When `value` equals `min`, the bar is at the minimum level.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313191,"byte_end":313254,"line_start":152,"line_end":152,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313259,"byte_end":313262,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ If `self.min > max`, `self.min` is set to `max`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313267,"byte_end":313319,"line_start":154,"line_end":154,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313645,"byte_end":313648,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"max","qualname":"<ProgressBar>::max","value":"fn (mut self, max: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum value.","sig":null,"attributes":[{"value":"/ Sets the maximum value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313465,"byte_end":313492,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313497,"byte_end":313500,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ When `value` equals `max`, the bar is at the maximum level.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313505,"byte_end":313568,"line_start":164,"line_end":164,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313573,"byte_end":313576,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If `min > self.max`, `self.max` is set to `min`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313581,"byte_end":313633,"line_start":166,"line_end":166,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2121},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313893,"byte_end":313898,"line_start":177,"line_end":177,"column_start":12,"column_end":17},"name":"range","qualname":"<ProgressBar>::range","value":"fn (self, min: usize, max: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `min` and `max` range for the value.","sig":null,"attributes":[{"value":"/ Sets the `min` and `max` range for the value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313779,"byte_end":313828,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313833,"byte_end":313836,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If `min > max`, swap the two values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":313841,"byte_end":313881,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2122},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314167,"byte_end":314176,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"set_value","qualname":"<ProgressBar>::set_value","value":"fn (&mut self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current value.","sig":null,"attributes":[{"value":"/ Sets the current value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314070,"byte_end":314097,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314102,"byte_end":314105,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Value is clamped between `min` and `max`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314110,"byte_end":314155,"line_start":187,"line_end":187,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2123},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314347,"byte_end":314356,"line_start":195,"line_end":195,"column_start":12,"column_end":21},"name":"set_color","qualname":"<ProgressBar>::set_color","value":"fn <C> (&mut self, color: C) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the color style.","sig":null,"attributes":[{"value":"/ Sets the color style.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314246,"byte_end":314271,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314276,"byte_end":314279,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The default color is `PaletteColor::Highlight`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314284,"byte_end":314335,"line_start":194,"line_end":194,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2125},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314558,"byte_end":314568,"line_start":205,"line_end":205,"column_start":12,"column_end":22},"name":"with_color","qualname":"<ProgressBar>::with_color","value":"fn <C> (self, color: C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the color style.","sig":null,"attributes":[{"value":"/ Sets the color style.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314471,"byte_end":314496,"line_start":202,"line_end":202,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314501,"byte_end":314504,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Chainable variant of `set_color`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314509,"byte_end":314546,"line_start":204,"line_end":204,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":4445},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316957,"byte_end":316967,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"RadioGroup","qualname":"::views::radio::RadioGroup","value":"RadioGroup {  }","parent":null,"children":[{"krate":0,"index":4447}],"decl_id":null,"docs":" Group to coordinate multiple radio buttons.","sig":null,"attributes":[{"value":"/ Group to coordinate multiple radio buttons.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316683,"byte_end":316730,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316731,"byte_end":316734,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ A `RadioGroup` is used to create and manage [`RadioButton`]s.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316735,"byte_end":316800,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316801,"byte_end":316804,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `RadioGroup` can be cloned; it will keep pointing to the same group.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316805,"byte_end":316879,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316880,"byte_end":316883,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`RadioButton`]: struct.RadioButton.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316884,"byte_end":316928,"line_start":27,"line_end":27,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317228,"byte_end":317231,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioGroup<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty group for radio buttons.\n","sig":null,"attributes":[{"value":"/ Creates an empty group for radio buttons.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317171,"byte_end":317216,"line_start":41,"line_end":41,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317554,"byte_end":317560,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"button","qualname":"<RadioGroup<T>>::button","value":"fn <S> (&mut self, value: T, label: S) -> RadioButton<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new button to the group.","sig":null,"attributes":[{"value":"/ Adds a new button to the group.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317423,"byte_end":317458,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317463,"byte_end":317466,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The button will display `label` next to it, and will embed `value`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317471,"byte_end":317542,"line_start":53,"line_end":53,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317978,"byte_end":317989,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"selected_id","qualname":"<RadioGroup<T>>::selected_id","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the selected button.","sig":null,"attributes":[{"value":"/ Returns the id of the selected button.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317840,"byte_end":317882,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317887,"byte_end":317890,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Buttons are indexed in the order they are created, starting from 0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317895,"byte_end":317966,"line_start":64,"line_end":64,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318127,"byte_end":318136,"line_start":70,"line_end":70,"column_start":12,"column_end":21},"name":"selection","qualname":"<RadioGroup<T>>::selection","value":"fn (&self) -> Rc<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value associated with the selected button.\n","sig":null,"attributes":[{"value":"/ Returns the value associated with the selected button.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318057,"byte_end":318115,"line_start":69,"line_end":69,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318297,"byte_end":318307,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"button_str","qualname":"<RadioGroup<String>>::button_str","value":"fn <S> (&mut self, text: S) -> RadioButton<String>","parent":null,"children":[],"decl_id":null,"docs":" Adds a button, using the label itself as value.\n","sig":null,"attributes":[{"value":"/ Adds a button, using the label itself as value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318234,"byte_end":318285,"line_start":76,"line_end":76,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2169},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318896,"byte_end":318907,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"RadioButton","qualname":"::views::radio::RadioButton","value":"RadioButton {  }","parent":null,"children":[{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174}],"decl_id":null,"docs":" Variant of `Checkbox` arranged in group.","sig":null,"attributes":[{"value":"/ Variant of `Checkbox` arranged in group.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318466,"byte_end":318510,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318511,"byte_end":318514,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ `RadioButton`s are managed by a [`RadioGroup`]. A single group can contain","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318515,"byte_end":318593,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ several radio buttons, but only one button per group can be active at a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318594,"byte_end":318669,"line_start":88,"line_end":88,"column_start":1,"column_end":76}},{"value":"/ time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318670,"byte_end":318679,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318680,"byte_end":318683,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ `RadioButton`s are not created directly, but through","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318684,"byte_end":318740,"line_start":91,"line_end":91,"column_start":1,"column_end":57}},{"value":"/ [`RadioGroup::button()`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318741,"byte_end":318770,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318771,"byte_end":318774,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [`RadioGroup`]: struct.RadioGroup.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318775,"byte_end":318817,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/ [`RadioGroup::button()`]: struct.RadioGroup.html#method.button","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318818,"byte_end":318884,"line_start":95,"line_end":95,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319348,"byte_end":319359,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"is_selected","qualname":"<RadioButton<T>>::is_selected","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this button is selected.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this button is selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319290,"byte_end":319336,"line_start":117,"line_end":117,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2179},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319515,"byte_end":319521,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"select","qualname":"<RadioButton<T>>::select","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Selects this button, un-selecting any other in the same group.\n","sig":null,"attributes":[{"value":"/ Selects this button, un-selecting any other in the same group.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319437,"byte_end":319503,"line_start":122,"line_end":122,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319712,"byte_end":319720,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"selected","qualname":"<RadioButton<T>>::selected","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Selects this button, un-selecting any other in the same group.","sig":null,"attributes":[{"value":"/ Selects this button, un-selecting any other in the same group.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319599,"byte_end":319665,"line_start":127,"line_end":127,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319670,"byte_end":319673,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319678,"byte_end":319700,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2215},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":321809,"byte_end":321819,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"ScrollView","qualname":"::views::scroll_view::ScrollView","value":"ScrollView {  }","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226}],"decl_id":null,"docs":" Wraps a view in a scrollable area.\n","sig":null,"attributes":[{"value":"/ Wraps a view in a scrollable area.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":321759,"byte_end":321797,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323163,"byte_end":323166,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<ScrollView<V>>::new","value":"fn (inner: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ScrollView around `view`.\n","sig":null,"attributes":[{"value":"/ Creates a new ScrollView around `view`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323108,"byte_end":323151,"line_start":59,"line_end":59,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323655,"byte_end":323671,"line_start":76,"line_end":76,"column_start":12,"column_end":28},"name":"content_viewport","qualname":"<ScrollView<V>>::content_viewport","value":"fn (&self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns the viewport in the inner content.\n","sig":null,"attributes":[{"value":"/ Returns the viewport in the inner content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323597,"byte_end":323643,"line_start":75,"line_end":75,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324081,"byte_end":324100,"line_start":87,"line_end":87,"column_start":12,"column_end":31},"name":"set_scroll_strategy","qualname":"<ScrollView<V>>::set_scroll_strategy","value":"fn (&mut self, strategy: ScrollStrategy) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Defines the way scrolling is adjusted on content or size change.","sig":null,"attributes":[{"value":"/ Defines the way scrolling is adjusted on content or size change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323760,"byte_end":323828,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323833,"byte_end":323836,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The scroll strategy defines how the scrolling position is adjusted","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323841,"byte_end":323911,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ when the size of the view or the content change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323916,"byte_end":323968,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323973,"byte_end":323976,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ It is reset to `ScrollStrategy::KeepRow` whenever the user scrolls","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323981,"byte_end":324051,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ manually.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324056,"byte_end":324069,"line_start":86,"line_end":86,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324337,"byte_end":324352,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"scroll_strategy","qualname":"<ScrollView<V>>::scroll_strategy","value":"fn (self, strategy: ScrollStrategy) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Defines the way scrolling is adjusted on content or size change.","sig":null,"attributes":[{"value":"/ Defines the way scrolling is adjusted on content or size change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324222,"byte_end":324290,"line_start":92,"line_end":92,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324295,"byte_end":324298,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324303,"byte_end":324325,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324518,"byte_end":324528,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<ScrollView<V>>::set_offset","value":"fn <S> (&mut self, offset: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the scroll offset to the given value\n","sig":null,"attributes":[{"value":"/ Sets the scroll offset to the given value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324461,"byte_end":324506,"line_start":99,"line_end":99,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324841,"byte_end":324853,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"set_scroll_y","qualname":"<ScrollView<V>>::set_scroll_y","value":"fn (&mut self, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll vertically.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll vertically.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324740,"byte_end":324793,"line_start":108,"line_end":108,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324798,"byte_end":324801,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324806,"byte_end":324829,"line_start":110,"line_end":110,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325064,"byte_end":325076,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"set_scroll_x","qualname":"<ScrollView<V>>::set_scroll_x","value":"fn (&mut self, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll horizontally.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll horizontally.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":324960,"byte_end":325015,"line_start":116,"line_end":116,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325020,"byte_end":325023,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325028,"byte_end":325052,"line_start":118,"line_end":118,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325319,"byte_end":325327,"line_start":129,"line_end":129,"column_start":12,"column_end":20},"name":"scroll_y","qualname":"<ScrollView<V>>::scroll_y","value":"fn (self, enabled: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll vertically.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll vertically.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325183,"byte_end":325236,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325241,"byte_end":325244,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Defaults to `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325249,"byte_end":325272,"line_start":126,"line_end":126,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325277,"byte_end":325280,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325285,"byte_end":325307,"line_start":128,"line_end":128,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325556,"byte_end":325564,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"scroll_x","qualname":"<ScrollView<V>>::scroll_x","value":"fn (self, enabled: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Controls whether this view can scroll horizontally.","sig":null,"attributes":[{"value":"/ Controls whether this view can scroll horizontally.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325417,"byte_end":325472,"line_start":133,"line_end":133,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325477,"byte_end":325480,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Defaults to `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325485,"byte_end":325509,"line_start":135,"line_end":135,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325514,"byte_end":325517,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325522,"byte_end":325544,"line_start":137,"line_end":137,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2242},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325717,"byte_end":325730,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"scroll_to_top","qualname":"<ScrollView<V>>::scroll_to_top","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the top of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the top of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325654,"byte_end":325705,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325895,"byte_end":325911,"line_start":149,"line_end":149,"column_start":12,"column_end":28},"name":"scroll_to_bottom","qualname":"<ScrollView<V>>::scroll_to_bottom","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the bottom of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the bottom of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":325829,"byte_end":325883,"line_start":148,"line_end":148,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":326164,"byte_end":326178,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"scroll_to_left","qualname":"<ScrollView<V>>::scroll_to_left","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the leftmost side of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the leftmost side of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":326091,"byte_end":326152,"line_start":155,"line_end":155,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":326351,"byte_end":326366,"line_start":162,"line_end":162,"column_start":12,"column_end":27},"name":"scroll_to_right","qualname":"<ScrollView<V>>::scroll_to_right","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Programmatically scroll to the rightmost side of the view.\n","sig":null,"attributes":[{"value":"/ Programmatically scroll to the rightmost side of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":326277,"byte_end":326339,"line_start":161,"line_end":161,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":335432,"byte_end":335442,"line_start":409,"line_end":409,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ScrollView<V>>::into_inner","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Returns the wrapped view.\n","sig":null,"attributes":[{"value":"/ Returns the wrapped view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":335391,"byte_end":335420,"line_start":408,"line_end":408,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2312},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346938,"byte_end":346948,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"SelectView","qualname":"::views::select_view::SelectView","value":"SelectView {  }","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323}],"decl_id":null,"docs":" View to select an item among a list.","sig":null,"attributes":[{"value":"/ View to select an item among a list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346005,"byte_end":346045,"line_start":19,"line_end":19,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346046,"byte_end":346049,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ It contains a list of values of type T, with associated labels.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346050,"byte_end":346117,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346118,"byte_end":346121,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346122,"byte_end":346136,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346137,"byte_end":346140,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346141,"byte_end":346152,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346153,"byte_end":346180,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346181,"byte_end":346208,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/ # use cursive::views::{SelectView, Dialog, TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346209,"byte_end":346266,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ # use cursive::align::HAlign;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346267,"byte_end":346300,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346301,"byte_end":346318,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/ let mut time_select = SelectView::new().h_align(HAlign::Center);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346319,"byte_end":346387,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ time_select.add_item(\"Short\", 1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346388,"byte_end":346425,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/ time_select.add_item(\"Medium\", 5);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346426,"byte_end":346464,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ time_select.add_item(\"Long\", 10);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346465,"byte_end":346502,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346503,"byte_end":346506,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ time_select.set_on_submit(|s, time| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346507,"byte_end":346548,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/     s.pop_layer();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346549,"byte_end":346571,"line_start":37,"line_end":37,"column_start":1,"column_end":23}},{"value":"/     let text = format!(\"You will wait for {} minutes...\", time);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346572,"byte_end":346640,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/     s.add_layer(Dialog::around(TextView::new(text))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346641,"byte_end":346696,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/                     .button(\"Quit\", |s| s.quit()));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346697,"byte_end":346752,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346753,"byte_end":346760,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346761,"byte_end":346764,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346765,"byte_end":346800,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ siv.add_layer(Dialog::around(time_select)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346801,"byte_end":346846,"line_start":44,"line_end":44,"column_start":1,"column_end":46}},{"value":"/                      .title(\"How long is your wait?\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346847,"byte_end":346906,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346907,"byte_end":346914,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346915,"byte_end":346918,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":346919,"byte_end":346926,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348207,"byte_end":348210,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectView<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty SelectView.\n","sig":null,"attributes":[{"value":"/ Creates a new empty SelectView.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348160,"byte_end":348195,"line_start":90,"line_end":90,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348798,"byte_end":348810,"line_start":110,"line_end":110,"column_start":12,"column_end":24},"name":"set_autojump","qualname":"<SelectView<T>>::set_autojump","value":"fn (&mut self, autojump: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"auto-jump\" property for this view.","sig":null,"attributes":[{"value":"/ Sets the \"auto-jump\" property for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348603,"byte_end":348651,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348656,"byte_end":348659,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If enabled, when a key is pressed, the selection will jump to the next","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348664,"byte_end":348738,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ item beginning with the pressed letter.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348743,"byte_end":348786,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349115,"byte_end":349123,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"autojump","qualname":"<SelectView<T>>::autojump","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the \"auto-jump\" property for this view.","sig":null,"attributes":[{"value":"/ Sets the \"auto-jump\" property for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348885,"byte_end":348933,"line_start":114,"line_end":114,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348938,"byte_end":348941,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ If enabled, when a key is pressed, the selection will jump to the next","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348946,"byte_end":349020,"line_start":116,"line_end":116,"column_start":5,"column_end":79}},{"value":"/ item beginning with the pressed letter.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349025,"byte_end":349068,"line_start":117,"line_end":117,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349073,"byte_end":349076,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349081,"byte_end":349103,"line_start":119,"line_end":119,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2333},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349284,"byte_end":349289,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"popup","qualname":"<SelectView<T>>::popup","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turns `self` into a popup select view.","sig":null,"attributes":[{"value":"/ Turns `self` into a popup select view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349195,"byte_end":349237,"line_start":124,"line_end":124,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349242,"byte_end":349245,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349250,"byte_end":349272,"line_start":126,"line_end":126,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349412,"byte_end":349421,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"set_popup","qualname":"<SelectView<T>>::set_popup","value":"fn (&mut self, popup: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Turns `self` into a popup select view.\n","sig":null,"attributes":[{"value":"/ Turns `self` into a popup select view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349358,"byte_end":349400,"line_start":131,"line_end":131,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349574,"byte_end":349581,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"disable","qualname":"<SelectView<T>>::disable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349487,"byte_end":349510,"line_start":136,"line_end":136,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349515,"byte_end":349518,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349523,"byte_end":349562,"line_start":138,"line_end":138,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2337},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349706,"byte_end":349714,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"disabled","qualname":"<SelectView<T>>::disabled","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349636,"byte_end":349659,"line_start":143,"line_end":143,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349664,"byte_end":349667,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349672,"byte_end":349694,"line_start":145,"line_end":145,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349812,"byte_end":349818,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"enable","qualname":"<SelectView<T>>::enable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349775,"byte_end":349800,"line_start":150,"line_end":150,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349916,"byte_end":349927,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<SelectView<T>>::set_enabled","value":"fn (&mut self, enabled: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable this view.\n","sig":null,"attributes":[{"value":"/ Enable or disable this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349872,"byte_end":349904,"line_start":155,"line_end":155,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350054,"byte_end":350064,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<SelectView<T>>::is_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":349999,"byte_end":350042,"line_start":160,"line_end":160,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2341},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350182,"byte_end":350195,"line_start":166,"line_end":166,"column_start":12,"column_end":25},"name":"set_on_select","qualname":"<SelectView<T>>::set_on_select","value":"fn <F> (&mut self, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350114,"byte_end":350170,"line_start":165,"line_end":165,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350434,"byte_end":350443,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"on_select","qualname":"<SelectView<T>>::on_select","value":"fn <F> (self, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when an item is selected.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when an item is selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350331,"byte_end":350387,"line_start":173,"line_end":173,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350392,"byte_end":350395,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350400,"byte_end":350422,"line_start":175,"line_end":175,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2346},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350868,"byte_end":350881,"line_start":190,"line_end":190,"column_start":12,"column_end":25},"name":"set_on_submit","qualname":"<SelectView<T>>::set_on_submit","value":"fn <F, R, V> (&mut self, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when `<Enter>` is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350581,"byte_end":350638,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350643,"byte_end":350646,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Also happens if the user clicks an item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350651,"byte_end":350695,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350700,"byte_end":350703,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The item currently selected will be given to the callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350708,"byte_end":350770,"line_start":187,"line_end":187,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350775,"byte_end":350778,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Here, `V` can be `T` itself, or a type that can be borrowed from `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":350783,"byte_end":350856,"line_start":189,"line_end":189,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351346,"byte_end":351355,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"on_submit","qualname":"<SelectView<T>>::on_submit","value":"fn <F, V> (self, cb: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be used when `<Enter>` is pressed.","sig":null,"attributes":[{"value":"/ Sets a callback to be used when `<Enter>` is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351110,"byte_end":351167,"line_start":200,"line_end":200,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351172,"byte_end":351175,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Also happens if the user clicks an item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351180,"byte_end":351224,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351229,"byte_end":351232,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ The item currently selected will be given to the callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351237,"byte_end":351299,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351304,"byte_end":351307,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351312,"byte_end":351334,"line_start":206,"line_end":206,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351575,"byte_end":351580,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"align","qualname":"<SelectView<T>>::align","value":"fn (mut self, align: Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351526,"byte_end":351563,"line_start":215,"line_end":215,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351784,"byte_end":351791,"line_start":224,"line_end":224,"column_start":12,"column_end":19},"name":"v_align","qualname":"<SelectView<T>>::v_align","value":"fn (mut self, v: VAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the vertical alignment for this view.\n (If the view is given too much space vertically.)\n","sig":null,"attributes":[{"value":"/ Sets the vertical alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351668,"byte_end":351714,"line_start":222,"line_end":222,"column_start":5,"column_end":51}},{"value":"/ (If the view is given too much space vertically.)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351719,"byte_end":351772,"line_start":223,"line_end":223,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351934,"byte_end":351941,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"h_align","qualname":"<SelectView<T>>::h_align","value":"fn (mut self, h: HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the horizontal alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":351874,"byte_end":351922,"line_start":230,"line_end":230,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352142,"byte_end":352151,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"selection","qualname":"<SelectView<T>>::selection","value":"fn (&self) -> Option<Rc<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the currently selected item.","sig":null,"attributes":[{"value":"/ Returns the value of the currently selected item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352024,"byte_end":352077,"line_start":237,"line_end":237,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352082,"byte_end":352085,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the list is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352090,"byte_end":352130,"line_start":239,"line_end":239,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352403,"byte_end":352408,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectView<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all items from this view.\n","sig":null,"attributes":[{"value":"/ Removes all items from this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352354,"byte_end":352391,"line_start":249,"line_end":249,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352556,"byte_end":352564,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"add_item","qualname":"<SelectView<T>>::add_item","value":"fn <S> (&mut self, label: S, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a item to the list, with given label and value.\n","sig":null,"attributes":[{"value":"/ Adds a item to the list, with given label and value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352488,"byte_end":352544,"line_start":255,"line_end":255,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352978,"byte_end":352986,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"get_item","qualname":"<SelectView<T>>::get_item","value":"fn (&self, i: usize) -> Option<(&str, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Gets an item at given idx or None.","sig":null,"attributes":[{"value":"/ Gets an item at given idx or None.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352683,"byte_end":352721,"line_start":260,"line_end":260,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352726,"byte_end":352729,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352734,"byte_end":352741,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352746,"byte_end":352771,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/ use cursive::views::{SelectView, TextView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352776,"byte_end":352823,"line_start":264,"line_end":264,"column_start":5,"column_end":52}},{"value":"/ let select = SelectView::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352828,"byte_end":352862,"line_start":265,"line_end":265,"column_start":5,"column_end":39}},{"value":"/     .item(\"Short\", 1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352867,"byte_end":352893,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(select.get_item(0), Some((\"Short\", &1)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352898,"byte_end":352954,"line_start":267,"line_end":267,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":352959,"byte_end":352966,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353192,"byte_end":353204,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"get_item_mut","qualname":"<SelectView<T>>::get_item_mut","value":"fn (&mut self, i: usize) -> Option<(&mut String, &mut T)>","parent":null,"children":[],"decl_id":null,"docs":" Gets a mut item at given idx or None.\n","sig":null,"attributes":[{"value":"/ Gets a mut item at given idx or None.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353139,"byte_end":353180,"line_start":275,"line_end":275,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353707,"byte_end":353711,"line_start":293,"line_end":293,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectView<T>>::iter","value":"fn (&self) -> impl Iterator<Item = (&str, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Iterate on the items in this view.","sig":null,"attributes":[{"value":"/ Iterate on the items in this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353588,"byte_end":353626,"line_start":290,"line_end":290,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353631,"byte_end":353634,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator with each item and their labels.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353639,"byte_end":353695,"line_start":292,"line_end":292,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354054,"byte_end":354065,"line_start":304,"line_end":304,"column_start":12,"column_end":23},"name":"remove_item","qualname":"<SelectView<T>>::remove_item","value":"fn (&mut self, id: usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Removes an item from the list.","sig":null,"attributes":[{"value":"/ Removes an item from the list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353868,"byte_end":353902,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353907,"byte_end":353910,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353915,"byte_end":353974,"line_start":301,"line_end":301,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353979,"byte_end":353982,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":353987,"byte_end":354042,"line_start":303,"line_end":303,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354433,"byte_end":354444,"line_start":316,"line_end":316,"column_start":12,"column_end":23},"name":"insert_item","qualname":"<SelectView<T>>::insert_item","value":"fn <S> (&mut self, index: usize, label: S, value: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts an item at position `index`, shifting all elements after it to\n the right.\n","sig":null,"attributes":[{"value":"/ Inserts an item at position `index`, shifting all elements after it to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354328,"byte_end":354402,"line_start":314,"line_end":314,"column_start":5,"column_end":79}},{"value":"/ the right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354407,"byte_end":354421,"line_start":315,"line_end":315,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2371},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354656,"byte_end":354660,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"item","qualname":"<SelectView<T>>::item","value":"fn <S> (self, label: S, value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Chainable variant of add_item\n","sig":null,"attributes":[{"value":"/ Chainable variant of add_item","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354611,"byte_end":354644,"line_start":323,"line_end":323,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354826,"byte_end":354833,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"name":"add_all","qualname":"<SelectView<T>>::add_all","value":"fn <S, I> (&mut self, iter: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds all items from from an iterator.\n","sig":null,"attributes":[{"value":"/ Adds all items from from an iterator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":354773,"byte_end":354814,"line_start":328,"line_end":328,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2377},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355112,"byte_end":355120,"line_start":342,"line_end":342,"column_start":12,"column_end":20},"name":"with_all","qualname":"<SelectView<T>>::with_all","value":"fn <S, I> (self, iter: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds all items from from an iterator.","sig":null,"attributes":[{"value":"/ Adds all items from from an iterator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355024,"byte_end":355065,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355070,"byte_end":355073,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355078,"byte_end":355100,"line_start":341,"line_end":341,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355827,"byte_end":355838,"line_start":364,"line_end":364,"column_start":12,"column_end":23},"name":"selected_id","qualname":"<SelectView<T>>::selected_id","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the item currently selected.","sig":null,"attributes":[{"value":"/ Returns the id of the item currently selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355712,"byte_end":355762,"line_start":361,"line_end":361,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355767,"byte_end":355770,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the list is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355775,"byte_end":355815,"line_start":363,"line_end":363,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356043,"byte_end":356046,"line_start":373,"line_end":373,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectView<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of items in this list.\n","sig":null,"attributes":[{"value":"/ Returns the number of items in this list.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":355986,"byte_end":356031,"line_start":372,"line_end":372,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356157,"byte_end":356165,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectView<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this list has no item.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this list has no item.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356101,"byte_end":356145,"line_start":377,"line_end":377,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356485,"byte_end":356498,"line_start":391,"line_end":391,"column_start":12,"column_end":25},"name":"set_selection","qualname":"<SelectView<T>>::set_selection","value":"fn (&mut self, i: usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Moves the selection to the given position.","sig":null,"attributes":[{"value":"/ Moves the selection to the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356287,"byte_end":356333,"line_start":386,"line_end":386,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356338,"byte_end":356341,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356346,"byte_end":356405,"line_start":388,"line_end":388,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356410,"byte_end":356413,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356418,"byte_end":356473,"line_start":390,"line_end":390,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357053,"byte_end":357061,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"selected","qualname":"<SelectView<T>>::selected","value":"fn (self, i: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the selection to the given position.","sig":null,"attributes":[{"value":"/ Sets the selection to the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356907,"byte_end":356952,"line_start":405,"line_end":405,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356957,"byte_end":356960,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356965,"byte_end":356987,"line_start":407,"line_end":407,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":356992,"byte_end":356995,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Does not apply `on_select` callbacks.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357000,"byte_end":357041,"line_start":409,"line_end":409,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357646,"byte_end":357655,"line_start":431,"line_end":431,"column_start":12,"column_end":21},"name":"select_up","qualname":"<SelectView<T>>::select_up","value":"fn (&mut self, n: usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Moves the selection up by the given number of rows.","sig":null,"attributes":[{"value":"/ Moves the selection up by the given number of rows.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357166,"byte_end":357221,"line_start":416,"line_end":416,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357226,"byte_end":357229,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357234,"byte_end":357293,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357298,"byte_end":357301,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357306,"byte_end":357361,"line_start":420,"line_end":420,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357366,"byte_end":357369,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357374,"byte_end":357385,"line_start":422,"line_end":422,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357390,"byte_end":357417,"line_start":423,"line_end":423,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::SelectView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357422,"byte_end":357459,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # fn main() {}","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357464,"byte_end":357482,"line_start":425,"line_end":425,"column_start":5,"column_end":23}},{"value":"/ fn select_up(siv: &mut Cursive, view: &mut SelectView<()>) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357487,"byte_end":357551,"line_start":426,"line_end":426,"column_start":5,"column_end":69}},{"value":"/     let cb = view.select_up(1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357556,"byte_end":357591,"line_start":427,"line_end":427,"column_start":5,"column_end":40}},{"value":"/     cb(siv);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357596,"byte_end":357612,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357617,"byte_end":357622,"line_start":429,"line_end":429,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357627,"byte_end":357634,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357999,"byte_end":358010,"line_start":441,"line_end":441,"column_start":12,"column_end":23},"name":"select_down","qualname":"<SelectView<T>>::select_down","value":"fn (&mut self, n: usize) -> Callback","parent":null,"children":[],"decl_id":null,"docs":" Moves the selection down by the given number of rows.","sig":null,"attributes":[{"value":"/ Moves the selection down by the given number of rows.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357790,"byte_end":357847,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357852,"byte_end":357855,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Returns a callback in response to the selection change.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357860,"byte_end":357919,"line_start":438,"line_end":438,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357924,"byte_end":357927,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ You should run this callback with a `&mut Cursive`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":357932,"byte_end":357987,"line_start":440,"line_end":440,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":364946,"byte_end":364958,"line_start":625,"line_end":625,"column_start":12,"column_end":24},"name":"add_item_str","qualname":"<SelectView<String>>::add_item_str","value":"fn <S> (&mut self, label: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to use the label as value.\n","sig":null,"attributes":[{"value":"/ Convenient method to use the label as value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":364886,"byte_end":364934,"line_start":624,"line_end":624,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365138,"byte_end":365146,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"item_str","qualname":"<SelectView<String>>::item_str","value":"fn <S> (self, label: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Chainable variant of add_item_str\n","sig":null,"attributes":[{"value":"/ Chainable variant of add_item_str","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365089,"byte_end":365126,"line_start":630,"line_end":630,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365306,"byte_end":365321,"line_start":636,"line_end":636,"column_start":12,"column_end":27},"name":"insert_item_str","qualname":"<SelectView<String>>::insert_item_str","value":"fn <S> (&mut self, index: usize, label: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to use the label as value.\n","sig":null,"attributes":[{"value":"/ Convenient method to use the label as value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365246,"byte_end":365294,"line_start":635,"line_end":635,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365755,"byte_end":365766,"line_start":653,"line_end":653,"column_start":12,"column_end":23},"name":"add_all_str","qualname":"<SelectView<String>>::add_all_str","value":"fn <S, I> (&mut self, iter: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds all strings from an iterator.","sig":null,"attributes":[{"value":"/ Adds all strings from an iterator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365501,"byte_end":365539,"line_start":644,"line_end":644,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365544,"byte_end":365547,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365552,"byte_end":365566,"line_start":646,"line_end":646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365571,"byte_end":365574,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365579,"byte_end":365586,"line_start":648,"line_end":648,"column_start":5,"column_end":12}},{"value":"/ # use cursive::views::SelectView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365591,"byte_end":365628,"line_start":649,"line_end":649,"column_start":5,"column_end":42}},{"value":"/ let mut select_view = SelectView::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365633,"byte_end":365677,"line_start":650,"line_end":650,"column_start":5,"column_end":49}},{"value":"/ select_view.add_all_str(vec![\"a\", \"b\", \"c\"]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365682,"byte_end":365731,"line_start":651,"line_end":651,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365736,"byte_end":365743,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":366033,"byte_end":366045,"line_start":666,"line_end":666,"column_start":12,"column_end":24},"name":"with_all_str","qualname":"<SelectView<String>>::with_all_str","value":"fn <S, I> (self, iter: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds all strings from an iterator.","sig":null,"attributes":[{"value":"/ Adds all strings from an iterator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365948,"byte_end":365986,"line_start":663,"line_end":663,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365991,"byte_end":365994,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":365999,"byte_end":366021,"line_start":665,"line_end":665,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2455},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369800,"byte_end":369810,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"ShadowView","qualname":"::views::shadow_view::ShadowView","value":"ShadowView {  }","parent":null,"children":[{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459}],"decl_id":null,"docs":" Wrapper view that adds a shadow.","sig":null,"attributes":[{"value":"/ Wrapper view that adds a shadow.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369701,"byte_end":369737,"line_start":7,"line_end":7,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369738,"byte_end":369741,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ It reserves a 1 pixel border on each side.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369742,"byte_end":369788,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369956,"byte_end":369959,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<ShadowView<T>>::new","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view.\n","sig":null,"attributes":[{"value":"/ Wraps the given view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369919,"byte_end":369944,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370405,"byte_end":370417,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"left_padding","qualname":"<ShadowView<T>>::left_padding","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set, adds an empty column to the left of the view.","sig":null,"attributes":[{"value":"/ If set, adds an empty column to the left of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370303,"byte_end":370360,"line_start":34,"line_end":34,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370365,"byte_end":370368,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Default to true.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370373,"byte_end":370393,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370608,"byte_end":370619,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"top_padding","qualname":"<ShadowView<T>>::top_padding","value":"fn (mut self, value: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set, adds an empty row at the top of the view.","sig":null,"attributes":[{"value":"/ If set, adds an empty row at the top of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370510,"byte_end":370563,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370568,"byte_end":370571,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Default to true.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370576,"byte_end":370596,"line_start":44,"line_end":44,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2478},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372422,"byte_end":372431,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"SizedView","qualname":"::views::sized_view::SizedView","value":"SizedView { view, size }","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481}],"decl_id":null,"docs":" Wrapper around a view that remembers its size.\n","sig":null,"attributes":[{"value":"/ Wrapper around a view that remembers its size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372360,"byte_end":372410,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2480},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372467,"byte_end":372471,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"view","qualname":"::views::sized_view::SizedView::view","value":"T","parent":{"krate":0,"index":2478},"children":[],"decl_id":null,"docs":" Wrapped view.\n","sig":null,"attributes":[{"value":"/ Wrapped view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372441,"byte_end":372458,"line_start":7,"line_end":7,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2481},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372533,"byte_end":372537,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"size","qualname":"::views::sized_view::SizedView::size","value":"xy::XY<usize>","parent":{"krate":0,"index":2478},"children":[],"decl_id":null,"docs":" Cached size from the last layout() call.\n","sig":null,"attributes":[{"value":"/ Cached size from the last layout() call.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372480,"byte_end":372524,"line_start":9,"line_end":9,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372612,"byte_end":372615,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"new","qualname":"<SizedView<T>>::new","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given view.\n","sig":null,"attributes":[{"value":"/ Wraps the given view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372575,"byte_end":372600,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2507},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373214,"byte_end":373224,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"SliderView","qualname":"::views::slider_view::SliderView","value":"SliderView {  }","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513}],"decl_id":null,"docs":" A horizontal or vertical slider.\n","sig":null,"attributes":[{"value":"/ A horizontal or vertical slider.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373166,"byte_end":373202,"line_start":10,"line_end":10,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373612,"byte_end":373615,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<SliderView>::new","value":"fn (orientation: Orientation, max_value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `SliderView` in the given orientation.","sig":null,"attributes":[{"value":"/ Creates a new `SliderView` in the given orientation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373445,"byte_end":373501,"line_start":21,"line_end":21,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373506,"byte_end":373509,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The view will have a fixed length of `max_value`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373514,"byte_end":373567,"line_start":23,"line_end":23,"column_start":5,"column_end":58}},{"value":"/ with one tick per block.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373572,"byte_end":373600,"line_start":24,"line_end":24,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373920,"byte_end":373928,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"vertical","qualname":"<SliderView>::vertical","value":"fn (max_value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new vertical `SliderView`.\n","sig":null,"attributes":[{"value":"/ Creates a new vertical `SliderView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373868,"byte_end":373908,"line_start":36,"line_end":36,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374074,"byte_end":374084,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<SliderView>::horizontal","value":"fn (max_value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new horizontal `SliderView`.\n","sig":null,"attributes":[{"value":"/ Creates a new horizontal `SliderView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374020,"byte_end":374062,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374316,"byte_end":374325,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"set_value","qualname":"<SliderView>::set_value","value":"fn (&mut self, value: usize) -> EventResult","parent":null,"children":[],"decl_id":null,"docs":" Sets the current value.","sig":null,"attributes":[{"value":"/ Sets the current value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374178,"byte_end":374205,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374210,"byte_end":374213,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Returns an event result with a possible callback,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374218,"byte_end":374271,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/ if `on_change` was set..","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374276,"byte_end":374304,"line_start":49,"line_end":49,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374514,"byte_end":374519,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"value","qualname":"<SliderView>::value","value":"fn (self, value: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the current value.","sig":null,"attributes":[{"value":"/ Sets the current value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374440,"byte_end":374467,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374472,"byte_end":374475,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374480,"byte_end":374502,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374698,"byte_end":374707,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"on_change","qualname":"<SliderView>::on_change","value":"fn <F> (mut self, callback: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when the slider is moved.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be called when the slider is moved.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374628,"byte_end":374686,"line_start":64,"line_end":64,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374955,"byte_end":374963,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"on_enter","qualname":"<SliderView>::on_enter","value":"fn <F> (mut self, callback: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called when the <Enter> key is pressed.\n","sig":null,"attributes":[{"value":"/ Sets a callback to be called when the <Enter> key is pressed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":374878,"byte_end":374943,"line_start":73,"line_end":73,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":2561},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379421,"byte_end":379430,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"StackView","qualname":"::views::stack_view::StackView","value":"StackView {  }","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2563},{"krate":0,"index":2564}],"decl_id":null,"docs":" Simple stack of views.\n Only the top-most view is active and can receive input.\n","sig":null,"attributes":[{"value":"/ Simple stack of views.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379323,"byte_end":379349,"line_start":12,"line_end":12,"column_start":1,"column_end":27}},{"value":"/ Only the top-most view is active and can receive input.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379350,"byte_end":379409,"line_start":13,"line_end":13,"column_start":1,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4479},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379886,"byte_end":379894,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"FromBack","qualname":"::views::stack_view::LayerPosition::FromBack","value":"LayerPosition::FromBack(usize)","parent":{"krate":0,"index":4478},"children":[],"decl_id":null,"docs":" Starts from the back (bottom) of the stack.\n","sig":null,"attributes":[{"value":"/ Starts from the back (bottom) of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379834,"byte_end":379881,"line_start":31,"line_end":31,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4482},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379957,"byte_end":379966,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"FromFront","qualname":"::views::stack_view::LayerPosition::FromFront","value":"LayerPosition::FromFront(usize)","parent":{"krate":0,"index":4478},"children":[],"decl_id":null,"docs":" Starts from the front (top) of the stack.\n","sig":null,"attributes":[{"value":"/ Starts from the front (top) of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379907,"byte_end":379952,"line_start":33,"line_end":33,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":4478},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379814,"byte_end":379827,"line_start":30,"line_end":30,"column_start":10,"column_end":23},"name":"LayerPosition","qualname":"::views::stack_view::LayerPosition","value":"LayerPosition::{FromBack, FromFront}","parent":null,"children":[{"krate":0,"index":4479},{"krate":0,"index":4482}],"decl_id":null,"docs":" Identifies a layer in a `StackView`.\n","sig":null,"attributes":[{"value":"/ Identifies a layer in a `StackView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379719,"byte_end":379759,"line_start":28,"line_end":28,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":384848,"byte_end":384851,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<StackView>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty StackView\n","sig":null,"attributes":[{"value":"/ Creates a new empty StackView","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":384803,"byte_end":384836,"line_start":187,"line_end":187,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385134,"byte_end":385154,"line_start":199,"line_end":199,"column_start":12,"column_end":32},"name":"add_fullscreen_layer","qualname":"<StackView>::add_fullscreen_layer","value":"fn <T> (&mut self, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new full-screen layer on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a new full-screen layer on top of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385019,"byte_end":385072,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385077,"byte_end":385080,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Fullscreen layers have no shadow.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385085,"byte_end":385122,"line_start":198,"line_end":198,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385563,"byte_end":385572,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"add_layer","qualname":"<StackView>::add_layer","value":"fn <T> (&mut self, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds new view on top of the stack in the center of the screen.\n","sig":null,"attributes":[{"value":"/ Adds new view on top of the stack in the center of the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385485,"byte_end":385551,"line_start":212,"line_end":212,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385815,"byte_end":385820,"line_start":223,"line_end":223,"column_start":12,"column_end":17},"name":"layer","qualname":"<StackView>::layer","value":"fn <T> (self, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds new view on top of the stack in the center of the screen.","sig":null,"attributes":[{"value":"/ Adds new view on top of the stack in the center of the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385702,"byte_end":385768,"line_start":220,"line_end":220,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385773,"byte_end":385776,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385781,"byte_end":385803,"line_start":222,"line_end":222,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386012,"byte_end":386015,"line_start":231,"line_end":231,"column_start":12,"column_end":15},"name":"get","qualname":"<StackView>::get","value":"fn (&self, pos: LayerPosition) -> Option<&View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the layer at the given position.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the layer at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":385941,"byte_end":386000,"line_start":230,"line_end":230,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386255,"byte_end":386262,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StackView>::get_mut","value":"fn (&mut self, pos: LayerPosition) -> Option<&mut View>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the layer at the given position.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the layer at the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386176,"byte_end":386243,"line_start":236,"line_end":236,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387255,"byte_end":387273,"line_start":265,"line_end":265,"column_start":12,"column_end":30},"name":"find_layer_from_id","qualname":"<StackView>::find_layer_from_id","value":"fn (&mut self, id: &str) -> Option<LayerPosition>","parent":null,"children":[],"decl_id":null,"docs":" Looks for the layer containing a view with the given ID.","sig":null,"attributes":[{"value":"/ Looks for the layer containing a view with the given ID.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386469,"byte_end":386529,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386534,"byte_end":386537,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Returns `Some(pos)` if `self.get(pos)` has the given ID,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386542,"byte_end":386602,"line_start":246,"line_end":246,"column_start":5,"column_end":65}},{"value":"/ or is a parent of a view with this ID.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386607,"byte_end":386649,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386654,"byte_end":386657,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the given ID is not found.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386662,"byte_end":386710,"line_start":249,"line_end":249,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386715,"byte_end":386718,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386723,"byte_end":386737,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386742,"byte_end":386745,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386750,"byte_end":386761,"line_start":253,"line_end":253,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::{TextView, StackView, Dialog, LayerPosition};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386766,"byte_end":386837,"line_start":254,"line_end":254,"column_start":5,"column_end":76}},{"value":"/ # use cursive::view::Identifiable;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386842,"byte_end":386880,"line_start":255,"line_end":255,"column_start":5,"column_end":43}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386885,"byte_end":386902,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/ let mut stack = StackView::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386907,"byte_end":386944,"line_start":257,"line_end":257,"column_start":5,"column_end":42}},{"value":"/ stack.add_layer(TextView::new(\"Back\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386949,"byte_end":386992,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/ stack.add_layer(Dialog::around(TextView::new(\"Middle\").with_id(\"text\")));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":386997,"byte_end":387074,"line_start":259,"line_end":259,"column_start":5,"column_end":82}},{"value":"/ stack.add_layer(TextView::new(\"Front\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387079,"byte_end":387123,"line_start":260,"line_end":260,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387128,"byte_end":387131,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stack.find_layer_from_id(\"text\"), Some(LayerPosition::FromBack(1)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387136,"byte_end":387219,"line_start":262,"line_end":262,"column_start":5,"column_end":88}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387224,"byte_end":387231,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387236,"byte_end":387243,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387800,"byte_end":387816,"line_start":284,"line_end":284,"column_start":12,"column_end":28},"name":"fullscreen_layer","qualname":"<StackView>::fullscreen_layer","value":"fn <T> (self, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a new full-screen layer on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a new full-screen layer on top of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387700,"byte_end":387753,"line_start":281,"line_end":281,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387758,"byte_end":387761,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387766,"byte_end":387788,"line_start":283,"line_end":283,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388048,"byte_end":388065,"line_start":294,"line_end":294,"column_start":12,"column_end":29},"name":"transparent_layer","qualname":"<StackView>::transparent_layer","value":"fn <T> (self, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a new transparent layer on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a new transparent layer on top of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":387948,"byte_end":388001,"line_start":291,"line_end":291,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388006,"byte_end":388009,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388014,"byte_end":388036,"line_start":293,"line_end":293,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388246,"byte_end":388258,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"add_layer_at","qualname":"<StackView>::add_layer_at","value":"fn <T> (&mut self, position: Position, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a view on top of the stack.\n","sig":null,"attributes":[{"value":"/ Adds a view on top of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388198,"byte_end":388234,"line_start":301,"line_end":301,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388940,"byte_end":388961,"line_start":321,"line_end":321,"column_start":12,"column_end":33},"name":"add_transparent_layer","qualname":"<StackView>::add_transparent_layer","value":"fn <T> (&mut self, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a transparent view on top of the stack in the center of the screen.\n","sig":null,"attributes":[{"value":"/ Adds a transparent view on top of the stack in the center of the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":388852,"byte_end":388928,"line_start":320,"line_end":320,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389163,"byte_end":389187,"line_start":329,"line_end":329,"column_start":12,"column_end":36},"name":"add_transparent_layer_at","qualname":"<StackView>::add_transparent_layer_at","value":"fn <T> (&mut self, position: Position, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a transparent view on top of the stack.\n","sig":null,"attributes":[{"value":"/ Adds a transparent view on top of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389103,"byte_end":389151,"line_start":328,"line_end":328,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389615,"byte_end":389623,"line_start":345,"line_end":345,"column_start":12,"column_end":20},"name":"layer_at","qualname":"<StackView>::layer_at","value":"fn <T> (self, position: Position, view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a view on top of the stack.","sig":null,"attributes":[{"value":"/ Adds a view on top of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389532,"byte_end":389568,"line_start":342,"line_end":342,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389573,"byte_end":389576,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389581,"byte_end":389603,"line_start":344,"line_end":344,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389819,"byte_end":389828,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"name":"pop_layer","qualname":"<StackView>::pop_layer","value":"fn (&mut self) -> Option<Box<View>>","parent":null,"children":[],"decl_id":null,"docs":" Remove the top-most layer.\n","sig":null,"attributes":[{"value":"/ Remove the top-most layer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":389777,"byte_end":389807,"line_start":352,"line_end":352,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390116,"byte_end":390122,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"offset","qualname":"<StackView>::offset","value":"fn (&self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Computes the offset of the current top view.\n","sig":null,"attributes":[{"value":"/ Computes the offset of the current top view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390056,"byte_end":390104,"line_start":362,"line_end":362,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390505,"byte_end":390516,"line_start":377,"line_end":377,"column_start":12,"column_end":23},"name":"layer_sizes","qualname":"<StackView>::layer_sizes","value":"fn (&self) -> Vec<Vec2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size for each layer in this view.\n","sig":null,"attributes":[{"value":"/ Returns the size for each layer in this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390444,"byte_end":390493,"line_start":376,"line_end":376,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390995,"byte_end":391005,"line_start":392,"line_end":392,"column_start":12,"column_end":22},"name":"move_layer","qualname":"<StackView>::move_layer","value":"fn (&mut self, from: LayerPosition, to: LayerPosition) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves a layer to a new position in the stack.","sig":null,"attributes":[{"value":"/ Moves a layer to a new position in the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390818,"byte_end":390867,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390872,"byte_end":390875,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ This only affects the elevation of a layer (whether it is drawn over","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390880,"byte_end":390952,"line_start":390,"line_end":390,"column_start":5,"column_end":77}},{"value":"/ or under other views).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":390957,"byte_end":390983,"line_start":391,"line_end":391,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391373,"byte_end":391386,"line_start":403,"line_end":403,"column_start":12,"column_end":25},"name":"move_to_front","qualname":"<StackView>::move_to_front","value":"fn (&mut self, layer: LayerPosition) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Brings the given view to the front of the stack.\n","sig":null,"attributes":[{"value":"/ Brings the given view to the front of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391309,"byte_end":391361,"line_start":402,"line_end":402,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391557,"byte_end":391569,"line_start":408,"line_end":408,"column_start":12,"column_end":24},"name":"move_to_back","qualname":"<StackView>::move_to_back","value":"fn (&mut self, layer: LayerPosition) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Pushes the given view to the back of the stack.\n","sig":null,"attributes":[{"value":"/ Pushes the given view to the back of the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391494,"byte_end":391545,"line_start":407,"line_end":407,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391833,"byte_end":391849,"line_start":416,"line_end":416,"column_start":12,"column_end":28},"name":"reposition_layer","qualname":"<StackView>::reposition_layer","value":"fn (&mut self, layer: LayerPosition, position: Position) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves a layer to a new position on the screen.","sig":null,"attributes":[{"value":"/ Moves a layer to a new position on the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391676,"byte_end":391726,"line_start":412,"line_end":412,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391731,"byte_end":391734,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Has no effect on fullscreen layers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391739,"byte_end":391777,"line_start":414,"line_end":414,"column_start":5,"column_end":43}},{"value":"/ Has no effect if layer is not found","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":391782,"byte_end":391821,"line_start":415,"line_end":415,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":392562,"byte_end":392569,"line_start":438,"line_end":438,"column_start":12,"column_end":19},"name":"draw_bg","qualname":"<StackView>::draw_bg","value":"fn (&self, printer: &Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Background drawing","sig":null,"attributes":[{"value":"/ Background drawing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":392329,"byte_end":392351,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":392356,"byte_end":392359,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ Drawing functions are split into forground and background to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":392364,"byte_end":392428,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ ease inserting layers under the stackview but above it's background","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":392433,"byte_end":392504,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ you probably just want to call draw()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":392509,"byte_end":392550,"line_start":437,"line_end":437,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":393281,"byte_end":393288,"line_start":457,"line_end":457,"column_start":12,"column_end":19},"name":"draw_fg","qualname":"<StackView>::draw_fg","value":"fn (&self, printer: &Printer) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forground drawing","sig":null,"attributes":[{"value":"/ Forground drawing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":393049,"byte_end":393070,"line_start":452,"line_end":452,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":393075,"byte_end":393078,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Drawing functions are split into forground and background to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":393083,"byte_end":393147,"line_start":454,"line_end":454,"column_start":5,"column_end":69}},{"value":"/ ease inserting layers under the stackview but above it's background","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":393152,"byte_end":393223,"line_start":455,"line_end":455,"column_start":5,"column_end":76}},{"value":"/ you probably just want to call draw()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":393228,"byte_end":393269,"line_start":456,"line_end":456,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2709},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401185,"byte_end":401193,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"TextArea","qualname":"::views::text_area::TextArea","value":"TextArea {  }","parent":null,"children":[{"krate":0,"index":2710},{"krate":0,"index":2711},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716}],"decl_id":null,"docs":" Multi-lines text editor.","sig":null,"attributes":[{"value":"/ Multi-lines text editor.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":400994,"byte_end":401022,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401023,"byte_end":401026,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A `TextArea` will attempt to grow vertically and horizontally","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401027,"byte_end":401092,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/ dependent on the content.  Wrap it in a `BoxView` to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401093,"byte_end":401149,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ constrain its size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401150,"byte_end":401173,"line_start":17,"line_end":17,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402032,"byte_end":402035,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<TextArea>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty TextArea.\n","sig":null,"attributes":[{"value":"/ Creates a new, empty TextArea.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401986,"byte_end":402020,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402381,"byte_end":402392,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"get_content","qualname":"<TextArea>::get_content","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the content of the view.\n","sig":null,"attributes":[{"value":"/ Retrieves the content of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402331,"byte_end":402369,"line_start":63,"line_end":63,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402586,"byte_end":402592,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"cursor","qualname":"<TextArea>::cursor","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the position of the cursor in the content string.\n","sig":null,"attributes":[{"value":"/ Returns the position of the cursor in the content string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402513,"byte_end":402574,"line_start":72,"line_end":72,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402836,"byte_end":402846,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<TextArea>::set_cursor","value":"fn (&mut self, cursor: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Moves the cursor to the given position.","sig":null,"attributes":[{"value":"/ Moves the cursor to the given position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402642,"byte_end":402685,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402690,"byte_end":402693,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402698,"byte_end":402710,"line_start":79,"line_end":79,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402715,"byte_end":402718,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This method panics if `cursor` is not the beginning of a character in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402723,"byte_end":402796,"line_start":81,"line_end":81,"column_start":5,"column_end":78}},{"value":"/ the content string.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":402801,"byte_end":402824,"line_start":82,"line_end":82,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403045,"byte_end":403056,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"set_content","qualname":"<TextArea>::set_content","value":"fn <S> (&mut self, content: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the content of the view.\n","sig":null,"attributes":[{"value":"/ Sets the content of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403000,"byte_end":403033,"line_start":90,"line_end":90,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403738,"byte_end":403745,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"content","qualname":"<TextArea>::content","value":"fn <S> (self, content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the content of the view.","sig":null,"attributes":[{"value":"/ Sets the content of the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403658,"byte_end":403691,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403696,"byte_end":403699,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403704,"byte_end":403726,"line_start":111,"line_end":111,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403935,"byte_end":403942,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"disable","qualname":"<TextArea>::disable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403848,"byte_end":403871,"line_start":116,"line_end":116,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403876,"byte_end":403879,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ A disabled view cannot be selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403884,"byte_end":403923,"line_start":118,"line_end":118,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404067,"byte_end":404075,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"disabled","qualname":"<TextArea>::disabled","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables this view.","sig":null,"attributes":[{"value":"/ Disables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":403997,"byte_end":404020,"line_start":123,"line_end":123,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404025,"byte_end":404028,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404033,"byte_end":404055,"line_start":125,"line_end":125,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404173,"byte_end":404179,"line_start":131,"line_end":131,"column_start":12,"column_end":18},"name":"enable","qualname":"<TextArea>::enable","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.\n","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404136,"byte_end":404161,"line_start":130,"line_end":130,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404305,"byte_end":404312,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"enabled","qualname":"<TextArea>::enabled","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Re-enables this view.","sig":null,"attributes":[{"value":"/ Re-enables this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404233,"byte_end":404258,"line_start":135,"line_end":135,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404263,"byte_end":404266,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404271,"byte_end":404293,"line_start":137,"line_end":137,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2735},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404427,"byte_end":404437,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<TextArea>::is_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this view is enabled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this view is enabled.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":404372,"byte_end":404415,"line_start":142,"line_end":142,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":4501},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422012,"byte_end":422023,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"TextContent","qualname":"::views::text_view::TextContent","value":"TextContent {  }","parent":null,"children":[{"krate":0,"index":4502}],"decl_id":null,"docs":" Provides access to the content of a [`TextView`].","sig":null,"attributes":[{"value":"/ Provides access to the content of a [`TextView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421466,"byte_end":421519,"line_start":15,"line_end":15,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421520,"byte_end":421523,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Cloning this object will still point to the same content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421524,"byte_end":421585,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421586,"byte_end":421589,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`TextView`]: struct.TextView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421590,"byte_end":421628,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421629,"byte_end":421632,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421633,"byte_end":421647,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421648,"byte_end":421651,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421652,"byte_end":421663,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use cursive::views::{TextView, TextContent};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421664,"byte_end":421714,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ let mut content = TextContent::new(\"content\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421715,"byte_end":421765,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ let view = TextView::new_with_content(content.clone());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421766,"byte_end":421825,"line_start":26,"line_end":26,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421826,"byte_end":421829,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Later, possibly in a different thread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421830,"byte_end":421874,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/ content.set_content(\"new content\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421875,"byte_end":421914,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ assert!(content.get_content().source().contains(\"new\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421915,"byte_end":421975,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":421976,"byte_end":421983,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422201,"byte_end":422204,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<TextContent>::new","value":"fn <S> (content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new text content around the given value.","sig":null,"attributes":[{"value":"/ Creates a new text content around the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422095,"byte_end":422149,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422154,"byte_end":422157,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Parses the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422162,"byte_end":422189,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2801},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422716,"byte_end":422730,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"TextContentRef","qualname":"::views::text_view::TextContentRef","value":"TextContentRef {  }","parent":null,"children":[{"krate":0,"index":2802}],"decl_id":null,"docs":" A reference to the text content.","sig":null,"attributes":[{"value":"/ A reference to the text content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422491,"byte_end":422527,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422528,"byte_end":422531,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ This can be deref'ed into a [`StyledString`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422532,"byte_end":422581,"line_start":58,"line_end":58,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422582,"byte_end":422585,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [`StyledString`]: ../utils/markup/type.StyledString.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422586,"byte_end":422646,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422647,"byte_end":422650,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ This keeps the content locked. Do not store this!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422651,"byte_end":422704,"line_start":62,"line_end":62,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423080,"byte_end":423091,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"set_content","qualname":"<TextContent>::set_content","value":"fn <S> (&mut self, content: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the content with the given value.\n","sig":null,"attributes":[{"value":"/ Replaces the content with the given value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423022,"byte_end":423068,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423288,"byte_end":423294,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"append","qualname":"<TextContent>::append","value":"fn <S> (&mut self, content: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append `content` to the end of a `TextView`.\n","sig":null,"attributes":[{"value":"/ Append `content` to the end of a `TextView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423228,"byte_end":423276,"line_start":87,"line_end":87,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2813},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423585,"byte_end":423596,"line_start":99,"line_end":99,"column_start":12,"column_end":23},"name":"get_content","qualname":"<TextContent>::get_content","value":"fn (&self) -> TextContentRef","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the content.","sig":null,"attributes":[{"value":"/ Returns a reference to the content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423428,"byte_end":423467,"line_start":95,"line_end":95,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423472,"byte_end":423475,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This locks the data while the returned value is alive,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423480,"byte_end":423538,"line_start":97,"line_end":97,"column_start":5,"column_end":63}},{"value":"/ so don't keep it too long.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423543,"byte_end":423573,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2824},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425181,"byte_end":425189,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"name":"TextView","qualname":"::views::text_view::TextView","value":"TextView {  }","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2829},{"krate":0,"index":2830},{"krate":0,"index":2831}],"decl_id":null,"docs":" A simple view showing a fixed text.","sig":null,"attributes":[{"value":"/ A simple view showing a fixed text.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424933,"byte_end":424972,"line_start":151,"line_end":151,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424973,"byte_end":424976,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424977,"byte_end":424991,"line_start":153,"line_end":153,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424992,"byte_end":424995,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424996,"byte_end":425007,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425008,"byte_end":425035,"line_start":156,"line_end":156,"column_start":1,"column_end":28}},{"value":"/ # use cursive::views::TextView;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425036,"byte_end":425071,"line_start":157,"line_end":157,"column_start":1,"column_end":36}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425072,"byte_end":425107,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425108,"byte_end":425111,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ siv.add_layer(TextView::new(\"Hello world!\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425112,"byte_end":425161,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425162,"byte_end":425169,"line_start":161,"line_end":161,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425567,"byte_end":425570,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<TextView>::new","value":"fn <S> (content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TextView with the given content.\n","sig":null,"attributes":[{"value":"/ Creates a new TextView with the given content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425505,"byte_end":425555,"line_start":179,"line_end":179,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426293,"byte_end":426309,"line_start":203,"line_end":203,"column_start":12,"column_end":28},"name":"new_with_content","qualname":"<TextView>::new_with_content","value":"fn (content: TextContent) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TextView using the given `Arc<Mutex<String>>`.","sig":null,"attributes":[{"value":"/ Creates a new TextView using the given `Arc<Mutex<String>>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425710,"byte_end":425774,"line_start":187,"line_end":187,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425779,"byte_end":425782,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ If you kept a clone of the given content, you'll be able to update it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425787,"byte_end":425860,"line_start":189,"line_end":189,"column_start":5,"column_end":78}},{"value":"/ remotely.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425865,"byte_end":425878,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425883,"byte_end":425886,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425891,"byte_end":425905,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425910,"byte_end":425913,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425918,"byte_end":425929,"line_start":194,"line_end":194,"column_start":5,"column_end":16}},{"value":"/ # use cursive::views::{TextView, TextContent};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425934,"byte_end":425984,"line_start":195,"line_end":195,"column_start":5,"column_end":55}},{"value":"/ let mut content = TextContent::new(\"content\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425989,"byte_end":426039,"line_start":196,"line_end":196,"column_start":5,"column_end":55}},{"value":"/ let view = TextView::new_with_content(content.clone());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426044,"byte_end":426103,"line_start":197,"line_end":197,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426108,"byte_end":426111,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ // Later, possibly in a different thread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426116,"byte_end":426160,"line_start":199,"line_end":199,"column_start":5,"column_end":49}},{"value":"/ content.set_content(\"new content\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426165,"byte_end":426204,"line_start":200,"line_end":200,"column_start":5,"column_end":44}},{"value":"/ assert!(content.get_content().source().contains(\"new\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426209,"byte_end":426269,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426274,"byte_end":426281,"line_start":202,"line_end":202,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426657,"byte_end":426662,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"empty","qualname":"<TextView>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `TextView`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `TextView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426610,"byte_end":426645,"line_start":215,"line_end":215,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426767,"byte_end":426777,"line_start":221,"line_end":221,"column_start":12,"column_end":22},"name":"set_effect","qualname":"<TextView>::set_effect","value":"fn (&mut self, effect: Effect) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the effect for the entire content.\n","sig":null,"attributes":[{"value":"/ Sets the effect for the entire content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426712,"byte_end":426755,"line_start":220,"line_end":220,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426938,"byte_end":426944,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"effect","qualname":"<TextView>::effect","value":"fn (self, effect: Effect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the effect for the entire content.","sig":null,"attributes":[{"value":"/ Sets the effect for the entire content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426848,"byte_end":426891,"line_start":225,"line_end":225,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426896,"byte_end":426899,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":426904,"byte_end":426926,"line_start":227,"line_end":227,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427153,"byte_end":427160,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"no_wrap","qualname":"<TextView>::no_wrap","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Disables content wrap for this view.","sig":null,"attributes":[{"value":"/ Disables content wrap for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427032,"byte_end":427072,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427077,"byte_end":427080,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This may be useful if you want horizontal scrolling.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427085,"byte_end":427141,"line_start":234,"line_end":234,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427369,"byte_end":427385,"line_start":242,"line_end":242,"column_start":12,"column_end":28},"name":"set_content_wrap","qualname":"<TextView>::set_content_wrap","value":"fn (&mut self, wrap: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Controls content wrap for this view.","sig":null,"attributes":[{"value":"/ Controls content wrap for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427237,"byte_end":427277,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427282,"byte_end":427285,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ If `true` (the default), text will wrap long lines when needed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427290,"byte_end":427357,"line_start":241,"line_end":241,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427508,"byte_end":427515,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"h_align","qualname":"<TextView>::h_align","value":"fn (mut self, h: HAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the horizontal alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the horizontal alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427448,"byte_end":427496,"line_start":246,"line_end":246,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427656,"byte_end":427663,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"v_align","qualname":"<TextView>::v_align","value":"fn (mut self, v: VAlign) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the vertical alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the vertical alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427598,"byte_end":427644,"line_start":253,"line_end":253,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427795,"byte_end":427800,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"align","qualname":"<TextView>::align","value":"fn (mut self, a: Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the alignment for this view.\n","sig":null,"attributes":[{"value":"/ Sets the alignment for this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427746,"byte_end":427783,"line_start":260,"line_end":260,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427956,"byte_end":427962,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"center","qualname":"<TextView>::center","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Center the text horizontally and vertically inside the view.\n","sig":null,"attributes":[{"value":"/ Center the text horizontally and vertically inside the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":427880,"byte_end":427944,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428126,"byte_end":428133,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"content","qualname":"<TextView>::content","value":"fn <S> (self, content: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the text in this view.","sig":null,"attributes":[{"value":"/ Replace the text in this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428045,"byte_end":428079,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428084,"byte_end":428087,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Chainable variant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428092,"byte_end":428114,"line_start":275,"line_end":275,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428313,"byte_end":428324,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"set_content","qualname":"<TextView>::set_content","value":"fn <S> (&mut self, content: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the text in this view.\n","sig":null,"attributes":[{"value":"/ Replace the text in this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428267,"byte_end":428301,"line_start":283,"line_end":283,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428559,"byte_end":428565,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"append","qualname":"<TextView>::append","value":"fn <S> (&mut self, content: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append `content` to the end of a `TextView`.\n","sig":null,"attributes":[{"value":"/ Append `content` to the end of a `TextView`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428499,"byte_end":428547,"line_start":292,"line_end":292,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428800,"byte_end":428811,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"get_content","qualname":"<TextView>::get_content","value":"fn (&self) -> TextContentRef","parent":null,"children":[],"decl_id":null,"docs":" Returns the current text in this view.\n","sig":null,"attributes":[{"value":"/ Returns the current text in this view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428746,"byte_end":428788,"line_start":301,"line_end":301,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428988,"byte_end":429006,"line_start":307,"line_end":307,"column_start":12,"column_end":30},"name":"get_shared_content","qualname":"<TextView>::get_shared_content","value":"fn (&mut self) -> TextContent","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the content, allowing content mutation.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the content, allowing content mutation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":428903,"byte_end":428976,"line_start":306,"line_end":306,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2874},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":431947,"byte_end":431958,"line_start":8,"line_end":8,"column_start":12,"column_end":23},"name":"TrackedView","qualname":"::views::tracked_view::TrackedView","value":"TrackedView { view }","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877}],"decl_id":null,"docs":" Wrapper around a view that remembers its position.\n","sig":null,"attributes":[{"value":"/ Wrapper around a view that remembers its position.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":431881,"byte_end":431935,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2876},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432000,"byte_end":432004,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"name":"view","qualname":"::views::tracked_view::TrackedView::view","value":"T","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":" Wrapped view.\n","sig":null,"attributes":[{"value":"/ Wrapped view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":431974,"byte_end":431991,"line_start":9,"line_end":9,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432182,"byte_end":432188,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"offset","qualname":"<TrackedView<T>>::offset","value":"fn (&self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Return the last offset at which the view was drawn.\n","sig":null,"attributes":[{"value":"/ Return the last offset at which the view was drawn.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432115,"byte_end":432170,"line_start":16,"line_end":16,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432301,"byte_end":432304,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<TrackedView<T>>::new","value":"fn (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `TrackedView` around `view`.\n","sig":null,"attributes":[{"value":"/ Creates a new `TrackedView` around `view`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432243,"byte_end":432289,"line_start":21,"line_end":21,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432492,"byte_end":432499,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"with_id","qualname":"<TrackedView<T>>::with_id","value":"fn (self, id: &str) -> IdView<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps itself in a `IdView` for easy retrieval.\n","sig":null,"attributes":[{"value":"/ Wraps itself in a `IdView` for easy retrieval.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432430,"byte_end":432480,"line_start":29,"line_end":29,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2894},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":432964,"byte_end":432971,"line_start":7,"line_end":7,"column_start":12,"column_end":19},"name":"ViewBox","qualname":"::views::view_box::ViewBox","value":"ViewBox {  }","parent":null,"children":[{"krate":0,"index":2895}],"decl_id":null,"docs":" A boxed `View`.","sig":null,"attributes":[{"value":"/ A boxed `View`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":432894,"byte_end":432913,"line_start":4,"line_end":4,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":432914,"byte_end":432917,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It derefs to the wrapped view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":432918,"byte_end":432952,"line_start":6,"line_end":6,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433085,"byte_end":433088,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<ViewBox>::new","value":"fn (view: Box<View>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ViewBox` around the given boxed view.\n","sig":null,"attributes":[{"value":"/ Creates a new `ViewBox` around the given boxed view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433017,"byte_end":433073,"line_start":12,"line_end":12,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2898},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433186,"byte_end":433191,"line_start":18,"line_end":18,"column_start":12,"column_end":17},"name":"boxed","qualname":"<ViewBox>::boxed","value":"fn <T> (view: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Box the given view\n","sig":null,"attributes":[{"value":"/ Box the given view","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433152,"byte_end":433174,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433353,"byte_end":433359,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ViewBox>::unwrap","value":"fn (self) -> Box<View>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner boxed view.\n","sig":null,"attributes":[{"value":"/ Returns the inner boxed view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433308,"byte_end":433341,"line_start":25,"line_end":25,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2982},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434620,"byte_end":434627,"line_start":24,"line_end":24,"column_start":12,"column_end":19},"name":"Cursive","qualname":"::cursive::Cursive","value":"Cursive {  }","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987},{"krate":0,"index":2988},{"krate":0,"index":2989},{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2996}],"decl_id":null,"docs":" Central part of the cursive library.","sig":null,"attributes":[{"value":"/ Central part of the cursive library.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434319,"byte_end":434359,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434360,"byte_end":434363,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ It initializes ncurses on creation and cleans up on drop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434364,"byte_end":434425,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ To use it, you should populate it with views, layouts and callbacks,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434426,"byte_end":434498,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ then start the event loop with run().","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434499,"byte_end":434540,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434541,"byte_end":434544,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ It uses a list of screen, with one screen active at a time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":434545,"byte_end":434608,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":3006},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435524,"byte_end":435532,"line_start":63,"line_end":63,"column_start":10,"column_end":18},"name":"ScreenId","qualname":"::cursive::ScreenId","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Identifies a screen in the cursive root.\n","sig":null,"attributes":[{"value":"/ Identifies a screen in the cursive root.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435470,"byte_end":435514,"line_start":62,"line_end":62,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":3007},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435782,"byte_end":435788,"line_start":72,"line_end":72,"column_start":11,"column_end":17},"name":"CbFunc","qualname":"::cursive::CbFunc","value":"CbFunc: Send","parent":null,"children":[{"krate":0,"index":3008}],"decl_id":null,"docs":" Asynchronous callback function trait.","sig":null,"attributes":[{"value":"/ Asynchronous callback function trait.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435543,"byte_end":435584,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435585,"byte_end":435588,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Every `FnOnce(&mut Cursive) -> () + Send` automatically","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435589,"byte_end":435648,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ implements this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435649,"byte_end":435669,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435670,"byte_end":435673,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ This is a workaround only because `Box<FnOnce()>` is not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435674,"byte_end":435734,"line_start":70,"line_end":70,"column_start":1,"column_end":61}},{"value":"/ working and `FnBox` is unstable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435735,"byte_end":435771,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3008},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435832,"byte_end":435840,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"call_box","qualname":"::cursive::CbFunc::call_box","value":"fn (self: Box<Self>, &mut Cursive) -> ()","parent":{"krate":0,"index":3007},"children":[],"decl_id":null,"docs":" Calls the function.\n","sig":null,"attributes":[{"value":"/ Calls the function.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435801,"byte_end":435824,"line_start":73,"line_end":73,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":436858,"byte_end":436861,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursive>::new","value":"fn <F> (backend_init: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cursive root, and initialize the back-end.\n","sig":null,"attributes":[{"value":"/ Creates a new Cursive root, and initialize the back-end.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":436786,"byte_end":436846,"line_start":124,"line_end":124,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3017},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":437900,"byte_end":437907,"line_start":159,"line_end":159,"column_start":12,"column_end":19},"name":"ncurses","qualname":"<Cursive>::ncurses","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cursive root using a ncurses backend.\n","sig":null,"attributes":[{"value":"/ Creates a new Cursive root using a ncurses backend.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":437793,"byte_end":437848,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"cfg(feature = \"ncurses-backend\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":437853,"byte_end":437888,"line_start":158,"line_end":158,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3018},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438695,"byte_end":438700,"line_start":184,"line_end":184,"column_start":12,"column_end":17},"name":"dummy","qualname":"<Cursive>::dummy","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Cursive root using a dummy backend.","sig":null,"attributes":[{"value":"/ Creates a new Cursive root using a dummy backend.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438559,"byte_end":438612,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438617,"byte_end":438620,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Nothing will be output. This is mostly here for tests.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438625,"byte_end":438683,"line_start":183,"line_end":183,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439576,"byte_end":439583,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"cb_sink","qualname":"<Cursive>::cb_sink","value":"fn (&self) -> &Sender<Box<CbFunc>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a sink for asynchronous callbacks.","sig":null,"attributes":[{"value":"/ Returns a sink for asynchronous callbacks.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438773,"byte_end":438819,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438824,"byte_end":438827,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns the sender part of a channel, that allows to send","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438832,"byte_end":438893,"line_start":190,"line_end":190,"column_start":5,"column_end":66}},{"value":"/ callbacks to `self` from other threads.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438898,"byte_end":438941,"line_start":191,"line_end":191,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438946,"byte_end":438949,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Callbacks will be executed in the order","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":438954,"byte_end":438997,"line_start":193,"line_end":193,"column_start":5,"column_end":48}},{"value":"/ of arrival on the next event cycle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439002,"byte_end":439041,"line_start":194,"line_end":194,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439046,"byte_end":439049,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Note that you currently need to call [`set_fps`] to force cursive to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439054,"byte_end":439126,"line_start":196,"line_end":196,"column_start":5,"column_end":77}},{"value":"/ regularly check for messages.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439131,"byte_end":439164,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439169,"byte_end":439172,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439177,"byte_end":439191,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439196,"byte_end":439199,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439204,"byte_end":439215,"line_start":201,"line_end":201,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439220,"byte_end":439247,"line_start":202,"line_end":202,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439252,"byte_end":439273,"line_start":203,"line_end":203,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439278,"byte_end":439295,"line_start":204,"line_end":204,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439300,"byte_end":439335,"line_start":205,"line_end":205,"column_start":5,"column_end":40}},{"value":"/ siv.set_fps(10);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439340,"byte_end":439360,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439365,"byte_end":439368,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ // quit() will be called during the next event cycle","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439373,"byte_end":439429,"line_start":208,"line_end":208,"column_start":5,"column_end":61}},{"value":"/ siv.cb_sink().send(Box::new(|s: &mut Cursive| s.quit()));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439434,"byte_end":439495,"line_start":209,"line_end":209,"column_start":5,"column_end":66}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439500,"byte_end":439507,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439512,"byte_end":439519,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439524,"byte_end":439527,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [`set_fps`]: #method.set_fps","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439532,"byte_end":439564,"line_start":213,"line_end":213,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439686,"byte_end":439700,"line_start":219,"line_end":219,"column_start":12,"column_end":26},"name":"select_menubar","qualname":"<Cursive>::select_menubar","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Selects the menubar.\n","sig":null,"attributes":[{"value":"/ Selects the menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439650,"byte_end":439674,"line_start":218,"line_end":218,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439998,"byte_end":440015,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"set_autohide_menu","qualname":"<Cursive>::set_autohide_menu","value":"fn (&mut self, autohide: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the menubar autohide feature.","sig":null,"attributes":[{"value":"/ Sets the menubar autohide feature.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439788,"byte_end":439826,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439831,"byte_end":439834,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ * When enabled (default), the menu is only visible when selected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439839,"byte_end":439908,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ * When disabled, the menu is always visible and reserves the top row.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":439913,"byte_end":439986,"line_start":226,"line_end":226,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3022},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441957,"byte_end":441964,"line_start":281,"line_end":281,"column_start":12,"column_end":19},"name":"menubar","qualname":"<Cursive>::menubar","value":"fn (&mut self) -> &mut views::Menubar","parent":null,"children":[],"decl_id":null,"docs":" Access the menu tree used by the menubar.","sig":null,"attributes":[{"value":"/ Access the menu tree used by the menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440098,"byte_end":440143,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440148,"byte_end":440151,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This allows to add menu items to the menubar.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440156,"byte_end":440205,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440210,"byte_end":440213,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440218,"byte_end":440232,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440237,"byte_end":440240,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440245,"byte_end":440256,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440261,"byte_end":440288,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440293,"byte_end":440298,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ # use cursive::{Cursive, event};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440303,"byte_end":440339,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ # use cursive::views::{Dialog};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440344,"byte_end":440379,"line_start":241,"line_end":241,"column_start":5,"column_end":40}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440384,"byte_end":440413,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/ # use cursive::menu::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440418,"byte_end":440445,"line_start":243,"line_end":243,"column_start":5,"column_end":32}},{"value":"/ #","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440450,"byte_end":440455,"line_start":244,"line_end":244,"column_start":5,"column_end":10}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440460,"byte_end":440477,"line_start":245,"line_end":245,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440482,"byte_end":440517,"line_start":246,"line_end":246,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440522,"byte_end":440525,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ siv.menubar()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440530,"byte_end":440547,"line_start":248,"line_end":248,"column_start":5,"column_end":22}},{"value":"/    .add_subtree(\"File\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440552,"byte_end":440579,"line_start":249,"line_end":249,"column_start":5,"column_end":32}},{"value":"/         MenuTree::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440584,"byte_end":440611,"line_start":250,"line_end":250,"column_start":5,"column_end":32}},{"value":"/             .leaf(\"New\", |s| s.add_layer(Dialog::info(\"New file!\")))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440616,"byte_end":440688,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/             .subtree(\"Recent\", MenuTree::new().with(|tree| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440693,"byte_end":440757,"line_start":252,"line_end":252,"column_start":5,"column_end":69}},{"value":"/                 for i in 1..100 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440762,"byte_end":440799,"line_start":253,"line_end":253,"column_start":5,"column_end":42}},{"value":"/                     tree.add_leaf(format!(\"Item {}\", i), |_| ())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440804,"byte_end":440872,"line_start":254,"line_end":254,"column_start":5,"column_end":73}},{"value":"/                 }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440877,"byte_end":440898,"line_start":255,"line_end":255,"column_start":5,"column_end":26}},{"value":"/             }))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440903,"byte_end":440922,"line_start":256,"line_end":256,"column_start":5,"column_end":24}},{"value":"/             .delimiter()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440927,"byte_end":440955,"line_start":257,"line_end":257,"column_start":5,"column_end":33}},{"value":"/             .with(|tree| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440960,"byte_end":440990,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/                 for i in 1..10 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":440995,"byte_end":441031,"line_start":259,"line_end":259,"column_start":5,"column_end":41}},{"value":"/                     tree.add_leaf(format!(\"Option {}\", i), |_| ());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441036,"byte_end":441107,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/                 }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441112,"byte_end":441133,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/             })","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441138,"byte_end":441156,"line_start":262,"line_end":262,"column_start":5,"column_end":23}},{"value":"/             .delimiter()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441161,"byte_end":441189,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/             .leaf(\"Quit\", |s| s.quit()))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441194,"byte_end":441238,"line_start":264,"line_end":264,"column_start":5,"column_end":49}},{"value":"/    .add_subtree(\"Help\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441243,"byte_end":441270,"line_start":265,"line_end":265,"column_start":5,"column_end":32}},{"value":"/         MenuTree::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441275,"byte_end":441302,"line_start":266,"line_end":266,"column_start":5,"column_end":32}},{"value":"/             .subtree(\"Help\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441307,"byte_end":441339,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"/                      MenuTree::new()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441344,"byte_end":441384,"line_start":268,"line_end":268,"column_start":5,"column_end":45}},{"value":"/                          .leaf(\"General\", |s| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441389,"byte_end":441440,"line_start":269,"line_end":269,"column_start":5,"column_end":56}},{"value":"/                              s.add_layer(Dialog::info(\"Help message!\"))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441445,"byte_end":441520,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/                          })","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441525,"byte_end":441556,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/                          .leaf(\"Online\", |s| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441561,"byte_end":441611,"line_start":272,"line_end":272,"column_start":5,"column_end":55}},{"value":"/                              s.add_layer(Dialog::info(\"Online help?\"))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441616,"byte_end":441690,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/                          }))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441695,"byte_end":441727,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/             .leaf(\"About\",","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441732,"byte_end":441762,"line_start":275,"line_end":275,"column_start":5,"column_end":35}},{"value":"/                   |s| s.add_layer(Dialog::info(\"Cursive v0.0.0\"))));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441767,"byte_end":441839,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441844,"byte_end":441847,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback(event::Key::Esc, |s| s.select_menubar());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441852,"byte_end":441921,"line_start":278,"line_end":278,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441926,"byte_end":441933,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":441938,"byte_end":441945,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442087,"byte_end":442100,"line_start":286,"line_end":286,"column_start":12,"column_end":25},"name":"current_theme","qualname":"<Cursive>::current_theme","value":"fn (&self) -> &theme::Theme","parent":null,"children":[],"decl_id":null,"docs":" Returns the currently used theme.\n","sig":null,"attributes":[{"value":"/ Returns the currently used theme.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442038,"byte_end":442075,"line_start":285,"line_end":285,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442197,"byte_end":442206,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"set_theme","qualname":"<Cursive>::set_theme","value":"fn (&mut self, theme: theme::Theme) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the current theme.\n","sig":null,"attributes":[{"value":"/ Sets the current theme.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442158,"byte_end":442185,"line_start":290,"line_end":290,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442393,"byte_end":442398,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"clear","qualname":"<Cursive>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the screen.","sig":null,"attributes":[{"value":"/ Clears the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442302,"byte_end":442324,"line_start":296,"line_end":296,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442329,"byte_end":442332,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Users rarely have to call this directly.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442337,"byte_end":442381,"line_start":298,"line_end":298,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442623,"byte_end":442638,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"load_theme_file","qualname":"<Cursive>::load_theme_file","value":"fn <P> (&mut self, filename: P) -> Result<(), theme::Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme from the given file.","sig":null,"attributes":[{"value":"/ Loads a theme from the given file.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442513,"byte_end":442551,"line_start":304,"line_end":304,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442556,"byte_end":442559,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ `filename` must point to a valid toml file.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442564,"byte_end":442611,"line_start":306,"line_end":306,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442915,"byte_end":442924,"line_start":316,"line_end":316,"column_start":12,"column_end":21},"name":"load_toml","qualname":"<Cursive>::load_toml","value":"fn (&mut self, content: &str) -> Result<(), theme::Error>","parent":null,"children":[],"decl_id":null,"docs":" Loads a theme from the given string content.","sig":null,"attributes":[{"value":"/ Loads a theme from the given string content.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442811,"byte_end":442859,"line_start":313,"line_end":313,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442864,"byte_end":442867,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ Content must be valid toml.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":442872,"byte_end":442903,"line_start":315,"line_end":315,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443427,"byte_end":443434,"line_start":330,"line_end":330,"column_start":12,"column_end":19},"name":"set_fps","qualname":"<Cursive>::set_fps","value":"fn (&mut self, fps: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the refresh rate, in frames per second.","sig":null,"attributes":[{"value":"/ Sets the refresh rate, in frames per second.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443061,"byte_end":443109,"line_start":320,"line_end":320,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443114,"byte_end":443117,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Regularly redraws everything, even when no input is given.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443122,"byte_end":443184,"line_start":322,"line_end":322,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443189,"byte_end":443192,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ You currently need this to regularly check","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443197,"byte_end":443243,"line_start":324,"line_end":324,"column_start":5,"column_end":51}},{"value":"/ for events sent using [`cb_sink`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443248,"byte_end":443286,"line_start":325,"line_end":325,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443291,"byte_end":443294,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Between 0 and 1000. Call with `fps = 0` to disable (default value).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443299,"byte_end":443370,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443375,"byte_end":443378,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`cb_sink`]: #method.cb_sink","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443383,"byte_end":443415,"line_start":329,"line_end":329,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443606,"byte_end":443612,"line_start":336,"line_end":336,"column_start":12,"column_end":18},"name":"screen","qualname":"<Cursive>::screen","value":"fn (&self) -> &views::StackView","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the currently active screen.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the currently active screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443539,"byte_end":443594,"line_start":335,"line_end":335,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443792,"byte_end":443802,"line_start":342,"line_end":342,"column_start":12,"column_end":22},"name":"screen_mut","qualname":"<Cursive>::screen_mut","value":"fn (&mut self) -> &mut views::StackView","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the currently active screen.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the currently active screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443717,"byte_end":443780,"line_start":341,"line_end":341,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443981,"byte_end":443994,"line_start":348,"line_end":348,"column_start":12,"column_end":25},"name":"active_screen","qualname":"<Cursive>::active_screen","value":"fn (&self) -> ScreenId","parent":null,"children":[],"decl_id":null,"docs":" Returns the id of the currently active screen.\n","sig":null,"attributes":[{"value":"/ Returns the id of the currently active screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":443919,"byte_end":443969,"line_start":347,"line_end":347,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444108,"byte_end":444118,"line_start":353,"line_end":353,"column_start":12,"column_end":22},"name":"add_screen","qualname":"<Cursive>::add_screen","value":"fn (&mut self) -> ScreenId","parent":null,"children":[],"decl_id":null,"docs":" Adds a new screen, and returns its ID.\n","sig":null,"attributes":[{"value":"/ Adds a new screen, and returns its ID.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444054,"byte_end":444096,"line_start":352,"line_end":352,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444336,"byte_end":444353,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"add_active_screen","qualname":"<Cursive>::add_active_screen","value":"fn (&mut self) -> ScreenId","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to create a new screen, and set it as active.\n","sig":null,"attributes":[{"value":"/ Convenient method to create a new screen, and set it as active.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444257,"byte_end":444324,"line_start":359,"line_end":359,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3037},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444540,"byte_end":444550,"line_start":367,"line_end":367,"column_start":12,"column_end":22},"name":"set_screen","qualname":"<Cursive>::set_screen","value":"fn (&mut self, screen_id: ScreenId) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the active screen. Panics if no such screen exist.\n","sig":null,"attributes":[{"value":"/ Sets the active screen. Panics if no such screen exist.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444469,"byte_end":444528,"line_start":366,"line_end":366,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445825,"byte_end":445832,"line_start":411,"line_end":411,"column_start":12,"column_end":19},"name":"call_on","qualname":"<Cursive>::call_on","value":"fn <V, F, R> (&mut self, sel: &view::Selector, callback: F) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Tries to find the view pointed to by the given selector.","sig":null,"attributes":[{"value":"/ Tries to find the view pointed to by the given selector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444894,"byte_end":444954,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444959,"byte_end":444962,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Runs a closure on the view once it's found, and return the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":444967,"byte_end":445029,"line_start":381,"line_end":381,"column_start":5,"column_end":67}},{"value":"/ result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445034,"byte_end":445045,"line_start":382,"line_end":382,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445050,"byte_end":445053,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ If the view is not found, or if it is not of the asked type,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445058,"byte_end":445122,"line_start":384,"line_end":384,"column_start":5,"column_end":69}},{"value":"/ returns None.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445127,"byte_end":445144,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445149,"byte_end":445152,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445157,"byte_end":445171,"line_start":387,"line_end":387,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445176,"byte_end":445179,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445184,"byte_end":445195,"line_start":389,"line_end":389,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445200,"byte_end":445227,"line_start":390,"line_end":390,"column_start":5,"column_end":32}},{"value":"/ # use cursive::{Cursive, views, view};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445232,"byte_end":445274,"line_start":391,"line_end":391,"column_start":5,"column_end":47}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445279,"byte_end":445308,"line_start":392,"line_end":392,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445313,"byte_end":445330,"line_start":393,"line_end":393,"column_start":5,"column_end":22}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445335,"byte_end":445350,"line_start":394,"line_end":394,"column_start":5,"column_end":20}},{"value":"/     let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445355,"byte_end":445394,"line_start":395,"line_end":395,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445399,"byte_end":445402,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/     siv.add_layer(views::TextView::new(\"Text #1\").with_id(\"text\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445407,"byte_end":445478,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445483,"byte_end":445486,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     siv.add_global_callback('p', |s| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445491,"byte_end":445533,"line_start":399,"line_end":399,"column_start":5,"column_end":47}},{"value":"/         s.call_on(","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445538,"byte_end":445560,"line_start":400,"line_end":400,"column_start":5,"column_end":27}},{"value":"/             &view::Selector::Id(\"text\"),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445565,"byte_end":445609,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/             |view: &mut views::TextView| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445614,"byte_end":445660,"line_start":402,"line_end":402,"column_start":5,"column_end":51}},{"value":"/                 view.set_content(\"Text #2\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445665,"byte_end":445713,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/             },","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445718,"byte_end":445736,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/         );","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445741,"byte_end":445755,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445760,"byte_end":445771,"line_start":406,"line_end":406,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445776,"byte_end":445779,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445784,"byte_end":445789,"line_start":408,"line_end":408,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445794,"byte_end":445801,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":445806,"byte_end":445813,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446744,"byte_end":446754,"line_start":444,"line_end":444,"column_start":12,"column_end":22},"name":"call_on_id","qualname":"<Cursive>::call_on_id","value":"fn <V, F, R> (&mut self, id: &str, callback: F) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Tries to find the view identified by the given id.","sig":null,"attributes":[{"value":"/ Tries to find the view identified by the given id.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446047,"byte_end":446101,"line_start":421,"line_end":421,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446106,"byte_end":446109,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Convenient method to use `call_on` with a `view::Selector::Id`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446114,"byte_end":446181,"line_start":423,"line_end":423,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446186,"byte_end":446189,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446194,"byte_end":446208,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446213,"byte_end":446216,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446221,"byte_end":446232,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446237,"byte_end":446264,"line_start":428,"line_end":428,"column_start":5,"column_end":32}},{"value":"/ # use cursive::{Cursive, views};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446269,"byte_end":446305,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/ # use cursive::traits::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446310,"byte_end":446339,"line_start":430,"line_end":430,"column_start":5,"column_end":34}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446344,"byte_end":446361,"line_start":431,"line_end":431,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446366,"byte_end":446401,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446406,"byte_end":446409,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ siv.add_layer(views::TextView::new(\"Text #1\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446414,"byte_end":446463,"line_start":434,"line_end":434,"column_start":5,"column_end":54}},{"value":"/                               .with_id(\"text\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446468,"byte_end":446520,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446525,"byte_end":446528,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback('p', |s| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446533,"byte_end":446571,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/     s.call_on_id(\"text\", |view: &mut views::TextView| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446576,"byte_end":446635,"line_start":438,"line_end":438,"column_start":5,"column_end":64}},{"value":"/         view.set_content(\"Text #2\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446640,"byte_end":446680,"line_start":439,"line_end":439,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446685,"byte_end":446696,"line_start":440,"line_end":440,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446701,"byte_end":446708,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446713,"byte_end":446720,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446725,"byte_end":446732,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448710,"byte_end":448717,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"find_id","qualname":"<Cursive>::find_id","value":"fn <V> (&mut self, id: &str) -> Option<views::ViewRef<V>>","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to find a view wrapped in [`IdView`].","sig":null,"attributes":[{"value":"/ Convenient method to find a view wrapped in [`IdView`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":446949,"byte_end":447008,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447013,"byte_end":447016,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This looks for a `IdView<V>` with the given ID, and return","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447021,"byte_end":447083,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/ a [`ViewRef`] to the wrapped view. The `ViewRef` implements","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447088,"byte_end":447151,"line_start":455,"line_end":455,"column_start":5,"column_end":68}},{"value":"/ `DerefMut<Target=T>`, so you can treat it just like a `&mut T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447156,"byte_end":447223,"line_start":456,"line_end":456,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447228,"byte_end":447231,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447236,"byte_end":447250,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447255,"byte_end":447258,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447263,"byte_end":447274,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447279,"byte_end":447306,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::{TextView, ViewRef};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447311,"byte_end":447357,"line_start":462,"line_end":462,"column_start":5,"column_end":51}},{"value":"/ # let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447362,"byte_end":447399,"line_start":463,"line_end":463,"column_start":5,"column_end":42}},{"value":"/ use cursive::traits::Identifiable;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447404,"byte_end":447442,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447447,"byte_end":447450,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ siv.add_layer(TextView::new(\"foo\").with_id(\"id\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447455,"byte_end":447509,"line_start":466,"line_end":466,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447514,"byte_end":447517,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ // Could be called in a callback","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447522,"byte_end":447558,"line_start":468,"line_end":468,"column_start":5,"column_end":41}},{"value":"/ let mut view: ViewRef<TextView> = siv.find_id(\"id\").unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447563,"byte_end":447628,"line_start":469,"line_end":469,"column_start":5,"column_end":70}},{"value":"/ view.set_content(\"bar\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447633,"byte_end":447661,"line_start":470,"line_end":470,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447666,"byte_end":447673,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447678,"byte_end":447681,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that you must specify the exact type for the view you're after; for example, using the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447686,"byte_end":447781,"line_start":473,"line_end":473,"column_start":5,"column_end":100}},{"value":"/ wrong item type in a `SelectView` will not find anything:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447786,"byte_end":447847,"line_start":474,"line_end":474,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447852,"byte_end":447855,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447860,"byte_end":447871,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447876,"byte_end":447903,"line_start":477,"line_end":477,"column_start":5,"column_end":32}},{"value":"/ # use cursive::views::{SelectView};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447908,"byte_end":447947,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447952,"byte_end":447989,"line_start":479,"line_end":479,"column_start":5,"column_end":42}},{"value":"/ use cursive::traits::Identifiable;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":447994,"byte_end":448032,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448037,"byte_end":448040,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let select = SelectView::new().item(\"zero\", 0u32).item(\"one\", 1u32);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448045,"byte_end":448117,"line_start":482,"line_end":482,"column_start":5,"column_end":77}},{"value":"/ siv.add_layer(select.with_id(\"select\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448122,"byte_end":448166,"line_start":483,"line_end":483,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448171,"byte_end":448174,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ // Specifying a wrong type will not return anything.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448179,"byte_end":448235,"line_start":485,"line_end":485,"column_start":5,"column_end":61}},{"value":"/ assert!(siv.find_id::<SelectView<String>>(\"select\").is_none());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448240,"byte_end":448307,"line_start":486,"line_end":486,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448312,"byte_end":448315,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ // Omitting the type will use the default type, in this case `String`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448320,"byte_end":448394,"line_start":488,"line_end":488,"column_start":5,"column_end":79}},{"value":"/ assert!(siv.find_id::<SelectView>(\"select\").is_none());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448399,"byte_end":448458,"line_start":489,"line_end":489,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448463,"byte_end":448466,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ // But with the correct type, it works fine.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448471,"byte_end":448519,"line_start":491,"line_end":491,"column_start":5,"column_end":53}},{"value":"/ assert!(siv.find_id::<SelectView<u32>>(\"select\").is_some());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448524,"byte_end":448588,"line_start":492,"line_end":492,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448593,"byte_end":448600,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448605,"byte_end":448608,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ [`IdView`]: views/struct.IdView.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448613,"byte_end":448653,"line_start":495,"line_end":495,"column_start":5,"column_end":45}},{"value":"/ [`ViewRef`]: views/type.ViewRef.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448658,"byte_end":448698,"line_start":496,"line_end":496,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449020,"byte_end":449028,"line_start":507,"line_end":507,"column_start":12,"column_end":20},"name":"focus_id","qualname":"<Cursive>::focus_id","value":"fn (&mut self, id: &str) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the focus to the view identified by `id`.","sig":null,"attributes":[{"value":"/ Moves the focus to the view identified by `id`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448878,"byte_end":448929,"line_start":504,"line_end":504,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448934,"byte_end":448937,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ Convenient method to call `focus` with a `view::Selector::Id`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":448942,"byte_end":449008,"line_start":506,"line_end":506,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449189,"byte_end":449194,"line_start":512,"line_end":512,"column_start":12,"column_end":17},"name":"focus","qualname":"<Cursive>::focus","value":"fn (&mut self, sel: &view::Selector) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Moves the focus to the view identified by `sel`.\n","sig":null,"attributes":[{"value":"/ Moves the focus to the view identified by `sel`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449125,"byte_end":449177,"line_start":511,"line_end":511,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449677,"byte_end":449696,"line_start":531,"line_end":531,"column_start":12,"column_end":31},"name":"add_global_callback","qualname":"<Cursive>::add_global_callback","value":"fn <F, E> (&mut self, event: E, cb: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a global callback.","sig":null,"attributes":[{"value":"/ Adds a global callback.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449301,"byte_end":449328,"line_start":516,"line_end":516,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449333,"byte_end":449336,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Will be triggered on the given key press when no view catches it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449341,"byte_end":449410,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449415,"byte_end":449418,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449423,"byte_end":449437,"line_start":520,"line_end":520,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449442,"byte_end":449445,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449450,"byte_end":449461,"line_start":522,"line_end":522,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449466,"byte_end":449493,"line_start":523,"line_end":523,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449498,"byte_end":449519,"line_start":524,"line_end":524,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449524,"byte_end":449541,"line_start":525,"line_end":525,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449546,"byte_end":449581,"line_start":526,"line_end":526,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449586,"byte_end":449589,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback('q', |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449594,"byte_end":449641,"line_start":528,"line_end":528,"column_start":5,"column_end":52}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449646,"byte_end":449653,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449658,"byte_end":449665,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450317,"byte_end":450339,"line_start":555,"line_end":555,"column_start":12,"column_end":34},"name":"clear_global_callbacks","qualname":"<Cursive>::clear_global_callbacks","value":"fn <E> (&mut self, event: E) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes any callback tied to the given event.","sig":null,"attributes":[{"value":"/ Removes any callback tied to the given event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":449960,"byte_end":450009,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450014,"byte_end":450017,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450022,"byte_end":450036,"line_start":543,"line_end":543,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450041,"byte_end":450044,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450049,"byte_end":450060,"line_start":545,"line_end":545,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450065,"byte_end":450092,"line_start":546,"line_end":546,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450097,"byte_end":450118,"line_start":547,"line_end":547,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450123,"byte_end":450140,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450145,"byte_end":450180,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450185,"byte_end":450188,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ siv.add_global_callback('q', |s| s.quit());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450193,"byte_end":450240,"line_start":551,"line_end":551,"column_start":5,"column_end":52}},{"value":"/ siv.clear_global_callbacks('q');","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450245,"byte_end":450281,"line_start":552,"line_end":552,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450286,"byte_end":450293,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450298,"byte_end":450305,"line_start":554,"line_end":554,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450809,"byte_end":450818,"line_start":576,"line_end":576,"column_start":12,"column_end":21},"name":"add_layer","qualname":"<Cursive>::add_layer","value":"fn <T> (&mut self, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add a layer to the current screen.","sig":null,"attributes":[{"value":"/ Add a layer to the current screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450495,"byte_end":450533,"line_start":563,"line_end":563,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450538,"byte_end":450541,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450546,"byte_end":450560,"line_start":565,"line_end":565,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450565,"byte_end":450568,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450573,"byte_end":450584,"line_start":567,"line_end":567,"column_start":5,"column_end":16}},{"value":"/ # extern crate cursive;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450589,"byte_end":450616,"line_start":568,"line_end":568,"column_start":5,"column_end":32}},{"value":"/ # use cursive::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450621,"byte_end":450642,"line_start":569,"line_end":569,"column_start":5,"column_end":26}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450647,"byte_end":450664,"line_start":570,"line_end":570,"column_start":5,"column_end":22}},{"value":"/ let mut siv = Cursive::dummy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450669,"byte_end":450704,"line_start":571,"line_end":571,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450709,"byte_end":450712,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ siv.add_layer(views::TextView::new(\"Hello world!\"));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450717,"byte_end":450773,"line_start":573,"line_end":573,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450778,"byte_end":450785,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450790,"byte_end":450797,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":451055,"byte_end":451075,"line_start":586,"line_end":586,"column_start":12,"column_end":32},"name":"add_fullscreen_layer","qualname":"<Cursive>::add_fullscreen_layer","value":"fn <T> (&mut self, view: T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a new full-screen layer to the current screen.","sig":null,"attributes":[{"value":"/ Adds a new full-screen layer to the current screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450938,"byte_end":450993,"line_start":583,"line_end":583,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":450998,"byte_end":451001,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Fullscreen layers have no shadow.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":451006,"byte_end":451043,"line_start":585,"line_end":585,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":451282,"byte_end":451291,"line_start":594,"line_end":594,"column_start":12,"column_end":21},"name":"pop_layer","qualname":"<Cursive>::pop_layer","value":"fn (&mut self) -> Option<Box<View>>","parent":null,"children":[],"decl_id":null,"docs":" Convenient method to remove a layer from the current screen.\n","sig":null,"attributes":[{"value":"/ Convenient method to remove a layer from the current screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":451206,"byte_end":451270,"line_start":593,"line_end":593,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3060},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":451438,"byte_end":451454,"line_start":599,"line_end":599,"column_start":12,"column_end":28},"name":"reposition_layer","qualname":"<Cursive>::reposition_layer","value":"fn (&mut self, layer: LayerPosition, position: Position) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Convenient stub forwarding layer repositioning.\n","sig":null,"attributes":[{"value":"/ Convenient stub forwarding layer repositioning.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":451375,"byte_end":451426,"line_start":598,"line_end":598,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":453912,"byte_end":453920,"line_start":674,"line_end":674,"column_start":12,"column_end":20},"name":"on_event","qualname":"<Cursive>::on_event","value":"fn (&mut self, event: Event) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Processes an event.","sig":null,"attributes":[{"value":"/ Processes an event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":453681,"byte_end":453704,"line_start":669,"line_end":669,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":453709,"byte_end":453712,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ * If the menubar is active, it will be handled the event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":453717,"byte_end":453778,"line_start":671,"line_end":671,"column_start":5,"column_end":66}},{"value":"/ * The view tree will be handled the event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":453783,"byte_end":453829,"line_start":672,"line_end":672,"column_start":5,"column_end":51}},{"value":"/ * If ignored, global_callbacks will be checked for this event.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":453834,"byte_end":453900,"line_start":673,"line_end":673,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":455236,"byte_end":455247,"line_start":716,"line_end":716,"column_start":12,"column_end":23},"name":"screen_size","qualname":"<Cursive>::screen_size","value":"fn (&self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the screen, in characters.\n","sig":null,"attributes":[{"value":"/ Returns the size of the screen, in characters.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":455174,"byte_end":455224,"line_start":715,"line_end":715,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456707,"byte_end":456717,"line_start":762,"line_end":762,"column_start":12,"column_end":22},"name":"is_running","qualname":"<Cursive>::is_running","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` until [`quit(&mut self)`] is called.","sig":null,"attributes":[{"value":"/ Returns `true` until [`quit(&mut self)`] is called.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456590,"byte_end":456645,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456650,"byte_end":456653,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ [`quit(&mut self)`]: #method.quit","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456658,"byte_end":456695,"line_start":761,"line_end":761,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457180,"byte_end":457183,"line_start":778,"line_end":778,"column_start":12,"column_end":15},"name":"run","qualname":"<Cursive>::run","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Runs the event loop.","sig":null,"attributes":[{"value":"/ Runs the event loop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456767,"byte_end":456791,"line_start":766,"line_end":766,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456796,"byte_end":456799,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ It will wait for user input (key presses)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456804,"byte_end":456849,"line_start":768,"line_end":768,"column_start":5,"column_end":50}},{"value":"/ and trigger callbacks accordingly.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456854,"byte_end":456892,"line_start":769,"line_end":769,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456897,"byte_end":456900,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ Calls [`step(&mut self)`] until [`quit(&mut self)`] is called.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456905,"byte_end":456971,"line_start":771,"line_end":771,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456976,"byte_end":456979,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ After this function returns, you can call","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":456984,"byte_end":457029,"line_start":773,"line_end":773,"column_start":5,"column_end":50}},{"value":"/ it again and it will start a new loop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457034,"byte_end":457076,"line_start":774,"line_end":774,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457081,"byte_end":457084,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ [`step(&mut self)`]: #method.step","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457089,"byte_end":457126,"line_start":776,"line_end":776,"column_start":5,"column_end":42}},{"value":"/ [`quit(&mut self)`]: #method.quit","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457131,"byte_end":457168,"line_start":777,"line_end":777,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457585,"byte_end":457589,"line_start":793,"line_end":793,"column_start":12,"column_end":16},"name":"step","qualname":"<Cursive>::step","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a single step from the event loop.","sig":null,"attributes":[{"value":"/ Performs a single step from the event loop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457344,"byte_end":457391,"line_start":787,"line_end":787,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457396,"byte_end":457399,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Useful if you need tighter control on the event loop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457404,"byte_end":457461,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ Otherwise, [`run(&mut self)`] might be more convenient.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457466,"byte_end":457525,"line_start":790,"line_end":790,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457530,"byte_end":457533,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ [`run(&mut self)`]: #method.run","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":457538,"byte_end":457573,"line_start":792,"line_end":792,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":458826,"byte_end":458830,"line_start":834,"line_end":834,"column_start":12,"column_end":16},"name":"quit","qualname":"<Cursive>::quit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stops the event loop.\n","sig":null,"attributes":[{"value":"/ Stops the event loop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":458789,"byte_end":458814,"line_start":833,"line_end":833,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":3094},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459594,"byte_end":459601,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Printer","qualname":"::printer::Printer","value":"Printer { offset, output_size, size, content_offset, focused, theme }","parent":null,"children":[{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099},{"krate":0,"index":3100},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103}],"decl_id":null,"docs":" Convenient interface to draw on a subset of the screen.","sig":null,"attributes":[{"value":"/ Convenient interface to draw on a subset of the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459362,"byte_end":459421,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459422,"byte_end":459425,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The area it can print on is defined by `offset` and `size`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459426,"byte_end":459489,"line_start":16,"line_end":16,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459490,"byte_end":459493,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The part of the content it will print is defined by `content_offset`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459494,"byte_end":459566,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ and `size`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459567,"byte_end":459582,"line_start":19,"line_end":19,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":3097},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459763,"byte_end":459769,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"offset","qualname":"::printer::Printer::offset","value":"xy::XY<usize>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" Offset into the window this printer should start drawing at.","sig":null,"attributes":[{"value":"/ Offset into the window this printer should start drawing at.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459616,"byte_end":459680,"line_start":21,"line_end":21,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459685,"byte_end":459688,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ A print request at `x` will really print at `x + offset`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459693,"byte_end":459754,"line_start":23,"line_end":23,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3098},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459900,"byte_end":459911,"line_start":29,"line_end":29,"column_start":9,"column_end":20},"name":"output_size","qualname":"::printer::Printer::output_size","value":"xy::XY<usize>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" Size of the area we are allowed to draw on.","sig":null,"attributes":[{"value":"/ Size of the area we are allowed to draw on.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459782,"byte_end":459829,"line_start":26,"line_end":26,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459834,"byte_end":459837,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Anything outside of this should be discarded.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459842,"byte_end":459891,"line_start":28,"line_end":28,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3099},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460071,"byte_end":460075,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"size","qualname":"::printer::Printer::size","value":"xy::XY<usize>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" Size allocated to the view.","sig":null,"attributes":[{"value":"/ Size allocated to the view.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459924,"byte_end":459955,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459960,"byte_end":459963,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This should be the same value as the one given in the last call to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":459968,"byte_end":460038,"line_start":33,"line_end":33,"column_start":5,"column_end":75}},{"value":"/ `View::layout`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460043,"byte_end":460062,"line_start":34,"line_end":34,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3100},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460219,"byte_end":460233,"line_start":40,"line_end":40,"column_start":9,"column_end":23},"name":"content_offset","qualname":"::printer::Printer::content_offset","value":"xy::XY<usize>","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" Offset into the view for this printer.","sig":null,"attributes":[{"value":"/ Offset into the view for this printer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460088,"byte_end":460130,"line_start":37,"line_end":37,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460135,"byte_end":460138,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ A print request `x`, will really print at `x - content_offset`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460143,"byte_end":460210,"line_start":39,"line_end":39,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460312,"byte_end":460319,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"name":"focused","qualname":"::printer::Printer::focused","value":"bool","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" Whether the view to draw is currently focused or not.\n","sig":null,"attributes":[{"value":"/ Whether the view to draw is currently focused or not.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460246,"byte_end":460303,"line_start":42,"line_end":42,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3102},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460365,"byte_end":460370,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"theme","qualname":"::printer::Printer::theme","value":"&'a theme::Theme","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" Currently used theme\n","sig":null,"attributes":[{"value":"/ Currently used theme","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460332,"byte_end":460356,"line_start":45,"line_end":45,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460980,"byte_end":460983,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"new","qualname":"<Printer>::new","value":"fn <T> (size: T, theme: &'a Theme, backend: &'b Backend) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new printer on the given window.","sig":null,"attributes":[{"value":"/ Creates a new printer on the given window.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460856,"byte_end":460902,"line_start":67,"line_end":67,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460907,"byte_end":460910,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ But nobody needs to know that.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460915,"byte_end":460949,"line_start":69,"line_end":69,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461481,"byte_end":461486,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"clear","qualname":"<Printer>::clear","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the screen.","sig":null,"attributes":[{"value":"/ Clear the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461336,"byte_end":461357,"line_start":86,"line_end":86,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461362,"byte_end":461365,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ It will discard anything drawn before.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461370,"byte_end":461412,"line_start":88,"line_end":88,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461417,"byte_end":461420,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Users rarely need to call this directly.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461425,"byte_end":461469,"line_start":90,"line_end":90,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461808,"byte_end":461813,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"print","qualname":"<Printer>::print","value":"fn <S> (&self, start: S, text: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints some text at the given position relative to the window.\n","sig":null,"attributes":[{"value":"/ Prints some text at the given position relative to the window.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":461730,"byte_end":461796,"line_start":98,"line_end":98,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":464430,"byte_end":464441,"line_start":164,"line_end":164,"column_start":12,"column_end":23},"name":"print_vline","qualname":"<Printer>::print_vline","value":"fn <T> (&self, start: T, height: usize, c: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints a vertical line using the given character.\n","sig":null,"attributes":[{"value":"/ Prints a vertical line using the given character.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":464365,"byte_end":464418,"line_start":163,"line_end":163,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":465629,"byte_end":465639,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"print_line","qualname":"<Printer>::print_line","value":"fn <T> (&self, orientation: Orientation, start: T, length: usize, c: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints a line using the given character.\n","sig":null,"attributes":[{"value":"/ Prints a line using the given character.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":465573,"byte_end":465617,"line_start":200,"line_end":200,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":466003,"byte_end":466014,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"print_hline","qualname":"<Printer>::print_hline","value":"fn <T> (&self, start: T, width: usize, c: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints a horizontal line using the given character.\n","sig":null,"attributes":[{"value":"/ Prints a horizontal line using the given character.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":465936,"byte_end":465991,"line_start":210,"line_end":210,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467655,"byte_end":467665,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"with_color","qualname":"<Printer>::with_color","value":"fn <F> (&self, c: ColorStyle, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a colored printer,\n that will apply the given color on prints.","sig":null,"attributes":[{"value":"/ Call the given closure with a colored printer,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467093,"byte_end":467143,"line_start":244,"line_end":244,"column_start":5,"column_end":55}},{"value":"/ that will apply the given color on prints.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467148,"byte_end":467194,"line_start":245,"line_end":245,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467199,"byte_end":467202,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467207,"byte_end":467221,"line_start":247,"line_end":247,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467226,"byte_end":467229,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467234,"byte_end":467245,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Printer;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467250,"byte_end":467277,"line_start":250,"line_end":250,"column_start":5,"column_end":32}},{"value":"/ # use cursive::theme;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467282,"byte_end":467307,"line_start":251,"line_end":251,"column_start":5,"column_end":30}},{"value":"/ # use cursive::backend;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467312,"byte_end":467339,"line_start":252,"line_end":252,"column_start":5,"column_end":32}},{"value":"/ # let b = backend::dummy::Backend::init();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467344,"byte_end":467390,"line_start":253,"line_end":253,"column_start":5,"column_end":51}},{"value":"/ # let t = theme::load_default();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467395,"byte_end":467431,"line_start":254,"line_end":254,"column_start":5,"column_end":41}},{"value":"/ # let printer = Printer::new((6,4), &t, &*b);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467436,"byte_end":467485,"line_start":255,"line_end":255,"column_start":5,"column_end":54}},{"value":"/ printer.with_color(theme::ColorStyle::highlight(), |printer| {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467490,"byte_end":467556,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/     printer.print((0,0), \"This text is highlighted!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467561,"byte_end":467619,"line_start":257,"line_end":257,"column_start":5,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467624,"byte_end":467631,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467636,"byte_end":467643,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467993,"byte_end":468003,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"with_style","qualname":"<Printer>::with_style","value":"fn <F, T> (&self, style: T, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a styled printer,\n that will apply the given style on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a styled printer,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467881,"byte_end":467930,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/ that will apply the given style on prints.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":467935,"byte_end":467981,"line_start":270,"line_end":270,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":468553,"byte_end":468564,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"with_effect","qualname":"<Printer>::with_effect","value":"fn <F> (&self, effect: Effect, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a modified printer\n that will apply the given effect on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a modified printer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":468439,"byte_end":468489,"line_start":290,"line_end":290,"column_start":5,"column_end":55}},{"value":"/ that will apply the given effect on prints.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":468494,"byte_end":468541,"line_start":291,"line_end":291,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":468867,"byte_end":468877,"line_start":303,"line_end":303,"column_start":12,"column_end":22},"name":"with_theme","qualname":"<Printer>::with_theme","value":"fn <F> (&self, theme: &Theme, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a modified printer\n that will apply the given theme on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a modified printer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":468754,"byte_end":468804,"line_start":301,"line_end":301,"column_start":5,"column_end":55}},{"value":"/ that will apply the given theme on prints.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":468809,"byte_end":468855,"line_start":302,"line_end":302,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469395,"byte_end":469407,"line_start":321,"line_end":321,"column_start":12,"column_end":24},"name":"with_effects","qualname":"<Printer>::with_effects","value":"fn <F> (&self, effects: EnumSet<Effect>, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the given closure with a modified printer\n that will apply each given effect on prints.\n","sig":null,"attributes":[{"value":"/ Call the given closure with a modified printer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469280,"byte_end":469330,"line_start":319,"line_end":319,"column_start":5,"column_end":55}},{"value":"/ that will apply each given effect on prints.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469335,"byte_end":469383,"line_start":320,"line_end":320,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470309,"byte_end":470318,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"print_box","qualname":"<Printer>::print_box","value":"fn <T, S> (&self, start: T, size: S, invert: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints a rectangular box.","sig":null,"attributes":[{"value":"/ Prints a rectangular box.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469785,"byte_end":469814,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469819,"byte_end":469822,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ If `invert` is `true`, and the theme uses `Outset` borders, then the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469827,"byte_end":469899,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ box will use an \"inset\" style instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469904,"byte_end":469946,"line_start":339,"line_end":339,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469951,"byte_end":469954,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469959,"byte_end":469973,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469978,"byte_end":469981,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":469986,"byte_end":469997,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ # use cursive::Printer;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470002,"byte_end":470029,"line_start":344,"line_end":344,"column_start":5,"column_end":32}},{"value":"/ # use cursive::theme;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470034,"byte_end":470059,"line_start":345,"line_end":345,"column_start":5,"column_end":30}},{"value":"/ # use cursive::backend;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470064,"byte_end":470091,"line_start":346,"line_end":346,"column_start":5,"column_end":32}},{"value":"/ # let b = backend::dummy::Backend::init();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470096,"byte_end":470142,"line_start":347,"line_end":347,"column_start":5,"column_end":51}},{"value":"/ # let t = theme::load_default();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470147,"byte_end":470183,"line_start":348,"line_end":348,"column_start":5,"column_end":41}},{"value":"/ # let printer = Printer::new((6,4), &t, &*b);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470188,"byte_end":470237,"line_start":349,"line_end":349,"column_start":5,"column_end":54}},{"value":"/ printer.print_box((0,0), (6,4), false);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470242,"byte_end":470285,"line_start":350,"line_end":350,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":470290,"byte_end":470297,"line_start":351,"line_end":351,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471471,"byte_end":471487,"line_start":384,"line_end":384,"column_start":12,"column_end":28},"name":"with_high_border","qualname":"<Printer>::with_high_border","value":"fn <F> (&self, invert: bool, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Runs the given function using a color depending on the theme.","sig":null,"attributes":[{"value":"/ Runs the given function using a color depending on the theme.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471158,"byte_end":471223,"line_start":378,"line_end":378,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471228,"byte_end":471231,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ * If the theme's borders is `None`, return without calling `f`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471236,"byte_end":471303,"line_start":380,"line_end":380,"column_start":5,"column_end":72}},{"value":"/ * If the theme's borders is \"outset\" and `invert` is `false`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471308,"byte_end":471373,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/   use `ColorStyle::Tertiary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471378,"byte_end":471411,"line_start":382,"line_end":382,"column_start":5,"column_end":38}},{"value":"/ * Otherwise, use `ColorStyle::Primary`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471416,"byte_end":471459,"line_start":383,"line_end":383,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472135,"byte_end":472150,"line_start":403,"line_end":403,"column_start":12,"column_end":27},"name":"with_low_border","qualname":"<Printer>::with_low_border","value":"fn <F> (&self, invert: bool, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Runs the given function using a color depending on the theme.","sig":null,"attributes":[{"value":"/ Runs the given function using a color depending on the theme.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471819,"byte_end":471884,"line_start":397,"line_end":397,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471889,"byte_end":471892,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ * If the theme's borders is `None`, return without calling `f`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471897,"byte_end":471964,"line_start":399,"line_end":399,"column_start":5,"column_end":72}},{"value":"/ * If the theme's borders is \"outset\" and `invert` is `true`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":471969,"byte_end":472033,"line_start":400,"line_end":400,"column_start":5,"column_end":69}},{"value":"/   use `ColorStyle::tertiary()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472038,"byte_end":472073,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/ * Otherwise, use `ColorStyle::primary()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472078,"byte_end":472123,"line_start":402,"line_end":402,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472833,"byte_end":472847,"line_start":423,"line_end":423,"column_start":12,"column_end":26},"name":"with_selection","qualname":"<Printer>::with_selection","value":"fn <F> (&self, selection: bool, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Apply a selection style and call the given function.","sig":null,"attributes":[{"value":"/ Apply a selection style and call the given function.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472481,"byte_end":472537,"line_start":416,"line_end":416,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472542,"byte_end":472545,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ * If `selection` is `false`, simply uses `ColorStyle::primary()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472550,"byte_end":472619,"line_start":418,"line_end":418,"column_start":5,"column_end":74}},{"value":"/ * If `selection` is `true`:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472624,"byte_end":472655,"line_start":419,"line_end":419,"column_start":5,"column_end":36}},{"value":"/     * If the printer currently has the focus,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472660,"byte_end":472709,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/       uses `ColorStyle::highlight()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472714,"byte_end":472755,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/     * Otherwise, uses `ColorStyle::highlight_inactive()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":472760,"byte_end":472821,"line_start":422,"line_end":422,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":473317,"byte_end":473329,"line_start":439,"line_end":439,"column_start":12,"column_end":24},"name":"print_hdelim","qualname":"<Printer>::print_hdelim","value":"fn <T> (&self, start: T, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints a horizontal delimiter with side border `├` and `┤`.\n","sig":null,"attributes":[{"value":"/ Prints a horizontal delimiter with side border `├` and `┤`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":473238,"byte_end":473305,"line_start":438,"line_end":438,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":473746,"byte_end":473752,"line_start":452,"line_end":452,"column_start":12,"column_end":18},"name":"offset","qualname":"<Printer>::offset","value":"fn <S> (&self, offset: S) -> Printer","parent":null,"children":[],"decl_id":null,"docs":" Returns a sub-printer with the given offset.","sig":null,"attributes":[{"value":"/ Returns a sub-printer with the given offset.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":473615,"byte_end":473663,"line_start":449,"line_end":449,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":473668,"byte_end":473671,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ It will print in an area slightly to the bottom/right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":473676,"byte_end":473734,"line_start":451,"line_end":451,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474546,"byte_end":474553,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"focused","qualname":"<Printer>::focused","value":"fn (&self, focused: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer inheriting the given focus.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer inheriting the given focus.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474341,"byte_end":474398,"line_start":472,"line_end":472,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474403,"byte_end":474406,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ If `self` is focused and `focused == true`, the child will be focused.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474411,"byte_end":474485,"line_start":474,"line_end":474,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474490,"byte_end":474493,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Otherwise, he will be unfocused.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474498,"byte_end":474534,"line_start":476,"line_end":476,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474889,"byte_end":474896,"line_start":488,"line_end":488,"column_start":12,"column_end":19},"name":"cropped","qualname":"<Printer>::cropped","value":"fn <S> (&self, size: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a cropped area.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a cropped area.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474674,"byte_end":474724,"line_start":483,"line_end":483,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474729,"byte_end":474732,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The new printer size will be the minimum of `size` and its current size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474737,"byte_end":474813,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474818,"byte_end":474821,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ Any size reduction happens at the bottom-right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":474826,"byte_end":474877,"line_start":487,"line_end":487,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475314,"byte_end":475322,"line_start":502,"line_end":502,"column_start":12,"column_end":20},"name":"shrinked","qualname":"<Printer>::shrinked","value":"fn <S> (&self, borders: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a shrinked area.","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a shrinked area.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475159,"byte_end":475210,"line_start":499,"line_end":499,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475215,"byte_end":475218,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ The printer size will be reduced by the given border from the bottom-right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475223,"byte_end":475302,"line_start":501,"line_end":501,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475523,"byte_end":475537,"line_start":510,"line_end":510,"column_start":12,"column_end":26},"name":"content_offset","qualname":"<Printer>::content_offset","value":"fn <S> (&self, offset: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new sub-printer with a content offset.\n","sig":null,"attributes":[{"value":"/ Returns a new sub-printer with a content offset.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475459,"byte_end":475511,"line_start":509,"line_end":509,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475987,"byte_end":475997,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"inner_size","qualname":"<Printer>::inner_size","value":"fn <S> (&self, size: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a sub-printer with a different inner size.","sig":null,"attributes":[{"value":"/ Returns a sub-printer with a different inner size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475718,"byte_end":475772,"line_start":519,"line_end":519,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475777,"byte_end":475780,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ This will not change the actual output size, but will appear bigger to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475785,"byte_end":475859,"line_start":521,"line_end":521,"column_start":5,"column_end":79}},{"value":"/ users of this printer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475864,"byte_end":475890,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475895,"byte_end":475898,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ Useful to give to children who think they're big, but really aren't.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":475903,"byte_end":475975,"line_start":524,"line_end":524,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":3165},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476202,"byte_end":476206,"line_start":2,"line_end":2,"column_start":11,"column_end":15},"name":"With","qualname":"::with::With","value":"With: Sized","parent":null,"children":[{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3171}],"decl_id":null,"docs":" Generic trait to enable chainable API\n","sig":null,"attributes":[{"value":"/ Generic trait to enable chainable API","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476150,"byte_end":476191,"line_start":1,"line_end":1,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476266,"byte_end":476270,"line_start":4,"line_end":4,"column_start":8,"column_end":12},"name":"with","qualname":"::with::With::with","value":"fn <F> (mut self, f: F) -> Self","parent":{"krate":0,"index":3165},"children":[],"decl_id":null,"docs":" Calls the given closure on `self`.\n","sig":null,"attributes":[{"value":"/ Calls the given closure on `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476220,"byte_end":476258,"line_start":3,"line_end":3,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476411,"byte_end":476419,"line_start":10,"line_end":10,"column_start":8,"column_end":16},"name":"try_with","qualname":"::with::With::try_with","value":"fn <E, F> (mut self, f: F) -> Result<Self, E>","parent":{"krate":0,"index":3165},"children":[],"decl_id":null,"docs":" Calls the given closure on `self`.\n","sig":null,"attributes":[{"value":"/ Calls the given closure on `self`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476365,"byte_end":476403,"line_start":9,"line_end":9,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476634,"byte_end":476641,"line_start":19,"line_end":19,"column_start":8,"column_end":15},"name":"with_if","qualname":"::with::With::with_if","value":"fn <F> (mut self, condition: bool, f: F) -> Self","parent":{"krate":0,"index":3165},"children":[],"decl_id":null,"docs":" Calls the given closure if `condition == true`.\n","sig":null,"attributes":[{"value":"/ Calls the given closure if `condition == true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476575,"byte_end":476626,"line_start":18,"line_end":18,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4521},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477001,"byte_end":477003,"line_start":6,"line_end":6,"column_start":12,"column_end":14},"name":"XY","qualname":"::xy::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":4523},{"krate":0,"index":4524}],"decl_id":null,"docs":" A generic structure with a value for each axis.\n","sig":null,"attributes":[{"value":"/ A generic structure with a value for each axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":476887,"byte_end":476938,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4523},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477038,"byte_end":477039,"line_start":8,"line_end":8,"column_start":9,"column_end":10},"name":"x","qualname":"::xy::XY::x","value":"T","parent":{"krate":0,"index":4521},"children":[],"decl_id":null,"docs":" X-axis value\n","sig":null,"attributes":[{"value":"/ X-axis value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477013,"byte_end":477029,"line_start":7,"line_end":7,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4524},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477073,"byte_end":477074,"line_start":10,"line_end":10,"column_start":9,"column_end":10},"name":"y","qualname":"::xy::XY::y","value":"T","parent":{"krate":0,"index":4521},"children":[],"decl_id":null,"docs":" Y-axis value\n","sig":null,"attributes":[{"value":"/ Y-axis value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477048,"byte_end":477064,"line_start":9,"line_end":9,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477380,"byte_end":477383,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<XY<T>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` from the given values.\n","sig":null,"attributes":[{"value":"/ Creates a new `XY` from the given values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477323,"byte_end":477368,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477478,"byte_end":477482,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"swap","qualname":"<XY<T>>::swap","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swaps the x and y values.\n","sig":null,"attributes":[{"value":"/ Swaps the x and y values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477437,"byte_end":477466,"line_start":28,"line_end":28,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477585,"byte_end":477589,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"fold","qualname":"<XY<T>>::fold","value":"fn <U, F> (self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Returns `f(self.x, self.y)`\n","sig":null,"attributes":[{"value":"/ Returns `f(self.x, self.y)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477542,"byte_end":477573,"line_start":33,"line_end":33,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3190},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477762,"byte_end":477765,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"map","qualname":"<XY<T>>::map","value":"fn <U, F> (self, f: F) -> XY<U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` by applying `f` to `x` and `y`.\n","sig":null,"attributes":[{"value":"/ Creates a new `XY` by applying `f` to `x` and `y`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477696,"byte_end":477750,"line_start":41,"line_end":41,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477990,"byte_end":477996,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"map_if","qualname":"<XY<T>>::map_if","value":"fn <F> (self, condition: XY<bool>, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies `f` on axis where `condition` is true.","sig":null,"attributes":[{"value":"/ Applies `f` on axis where `condition` is true.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477881,"byte_end":477931,"line_start":49,"line_end":49,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477936,"byte_end":477939,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Carries over `self` otherwise.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477944,"byte_end":477978,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478260,"byte_end":478266,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"run_if","qualname":"<XY<T>>::run_if","value":"fn <F, U> (self, condition: XY<bool>, f: F) -> XY<Option<U>>","parent":null,"children":[],"decl_id":null,"docs":" Applies `f` on axis where `condition` is true.","sig":null,"attributes":[{"value":"/ Applies `f` on axis where `condition` is true.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478156,"byte_end":478206,"line_start":59,"line_end":59,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478211,"byte_end":478214,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns `None` otherwise.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478219,"byte_end":478248,"line_start":61,"line_end":61,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478528,"byte_end":478533,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"map_x","qualname":"<XY<T>>::map_x","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` by applying `f` to `x`, and carrying `y` over.\n","sig":null,"attributes":[{"value":"/ Creates a new `XY` by applying `f` to `x`, and carrying `y` over.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478447,"byte_end":478516,"line_start":69,"line_end":69,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478727,"byte_end":478732,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"map_y","qualname":"<XY<T>>::map_y","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `XY` by applying `f` to `y`, and carrying `x` over.\n","sig":null,"attributes":[{"value":"/ Creates a new `XY` by applying `f` to `y`, and carrying `x` over.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478646,"byte_end":478715,"line_start":77,"line_end":77,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3204},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478890,"byte_end":478894,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"pair","qualname":"<XY<T>>::pair","value":"fn (self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Destructure self into a pair.\n","sig":null,"attributes":[{"value":"/ Destructure self into a pair.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478845,"byte_end":478878,"line_start":85,"line_end":85,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479016,"byte_end":479022,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<XY<T>>::as_ref","value":"fn (&self) -> XY<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a `XY` with references to this one's values.\n","sig":null,"attributes":[{"value":"/ Return a `XY` with references to this one's values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":478949,"byte_end":479004,"line_start":90,"line_end":90,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3206},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479164,"byte_end":479168,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"iter","qualname":"<XY<T>>::iter","value":"fn (&self) -> iter::Chain<iter::Once<&T>, iter::Once<&T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator that returns references to `x`, then `y`.\n","sig":null,"attributes":[{"value":"/ Creates an iterator that returns references to `x`, then `y`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479087,"byte_end":479152,"line_start":95,"line_end":95,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479358,"byte_end":479361,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"get","qualname":"<XY<T>>::get","value":"fn (&self, o: Orientation) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the value on the given axis.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the value on the given axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479291,"byte_end":479346,"line_start":100,"line_end":100,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3208},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479601,"byte_end":479608,"line_start":109,"line_end":109,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<XY<T>>::get_mut","value":"fn (&mut self, o: Orientation) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the value on the given axis.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the value on the given axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479526,"byte_end":479589,"line_start":108,"line_end":108,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479869,"byte_end":479872,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"zip","qualname":"<XY<T>>::zip","value":"fn <U> (self, other: XY<U>) -> XY<(T, U)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self` and `other`.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self` and `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479789,"byte_end":479857,"line_start":116,"line_end":116,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3211},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480058,"byte_end":480062,"line_start":122,"line_end":122,"column_start":12,"column_end":16},"name":"zip3","qualname":"<XY<T>>::zip3","value":"fn <U, V> (self, a: XY<U>, b: XY<V>) -> XY<(T, U, V)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self`, `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self`, `a` and `b`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":479977,"byte_end":480046,"line_start":121,"line_end":121,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3214},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480267,"byte_end":480271,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"zip4","qualname":"<XY<T>>::zip4","value":"fn <U, V, W> (self, a: XY<U>, b: XY<V>, c: XY<W>) -> XY<(T, U, V, W)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self`, `a`, `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self`, `a`, `b` and `c`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480181,"byte_end":480255,"line_start":126,"line_end":126,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480522,"byte_end":480526,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"zip5","qualname":"<XY<T>>::zip5","value":"fn <U, V, W, Z> (self, a: XY<U>, b: XY<V>, c: XY<W>, d: XY<Z>) -> XY<(T, U, V, W, Z)>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` of tuples made by zipping `self`, `a`, `b`, `c` and `d`.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` of tuples made by zipping `self`, `a`, `b`, `c` and `d`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480431,"byte_end":480510,"line_start":133,"line_end":133,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3223},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480798,"byte_end":480805,"line_start":141,"line_end":141,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<XY<T>>::zip_map","value":"fn <U, V, F> (self, other: XY<U>, f: F) -> XY<V>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` by calling `f` on `self` and `other` for each axis.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` by calling `f` on `self` and `other` for each axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480712,"byte_end":480786,"line_start":140,"line_end":140,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481039,"byte_end":481043,"line_start":149,"line_end":149,"column_start":12,"column_end":16},"name":"keep","qualname":"<XY<T>>::keep","value":"fn (self, keep: XY<bool>) -> XY<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" For each axis, keep the element from `self` if `keep` is `true`.\n","sig":null,"attributes":[{"value":"/ For each axis, keep the element from `self` if `keep` is `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":480959,"byte_end":481027,"line_start":148,"line_end":148,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481215,"byte_end":481224,"line_start":156,"line_end":156,"column_start":12,"column_end":21},"name":"with_axis","qualname":"<XY<T>>::with_axis","value":"fn (&self, o: Orientation, value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` with the axis `o` set to `value`.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` with the axis `o` set to `value`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481147,"byte_end":481203,"line_start":155,"line_end":155,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481448,"byte_end":481462,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"with_axis_from","qualname":"<XY<T>>::with_axis_from","value":"fn (&self, o: Orientation, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` with the axis `o` set to the value from `other`.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` with the axis `o` set to the value from `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481365,"byte_end":481436,"line_start":162,"line_end":162,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3232},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481676,"byte_end":481689,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"set_axis_from","qualname":"<XY<T>>::set_axis_from","value":"fn (&mut self, o: Orientation, other: &Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the axis `o` on `self` to the value from `other`.\n","sig":null,"attributes":[{"value":"/ Sets the axis `o` on `self` to the value from `other`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481606,"byte_end":481664,"line_start":169,"line_end":169,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481882,"byte_end":481891,"line_start":177,"line_end":177,"column_start":12,"column_end":21},"name":"unwrap_or","qualname":"<XY<Option<T>>>::unwrap_or","value":"fn (self, other: XY<T>) -> XY<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `XY` by calling `unwrap_or` on each axis.\n","sig":null,"attributes":[{"value":"/ Returns a new `XY` by calling `unwrap_or` on each axis.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481811,"byte_end":481870,"line_start":176,"line_end":176,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482061,"byte_end":482064,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"any","qualname":"<XY<bool>>::any","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any of `x` or `y` is `true`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any of `x` or `y` is `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481999,"byte_end":482049,"line_start":183,"line_end":183,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482215,"byte_end":482219,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"both","qualname":"<XY<bool>>::both","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if both `x` and `y` are `true`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if both `x` and `y` are `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482153,"byte_end":482203,"line_start":189,"line_end":189,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482390,"byte_end":482396,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"select","qualname":"<XY<bool>>::select","value":"fn <T> (self, other: XY<T>) -> XY<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" For each axis, keeps elements from `other` if `self` is `true`.\n","sig":null,"attributes":[{"value":"/ For each axis, keeps elements from `other` if `self` is `true`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482311,"byte_end":482378,"line_start":195,"line_end":195,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482607,"byte_end":482616,"line_start":201,"line_end":201,"column_start":12,"column_end":21},"name":"select_or","qualname":"<XY<bool>>::select_or","value":"fn <T> (self, if_true: XY<T>, if_false: XY<T>) -> XY<T>","parent":null,"children":[],"decl_id":null,"docs":" For each axis, selects `if_true` if `self` is true, else `if_false`.\n","sig":null,"attributes":[{"value":"/ For each axis, selects `if_true` if `self` is true, else `if_false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482523,"byte_end":482595,"line_start":200,"line_end":200,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482783,"byte_end":482786,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"and","qualname":"<XY<bool>>::and","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a term-by-term AND operation.\n","sig":null,"attributes":[{"value":"/ Returns a term-by-term AND operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482730,"byte_end":482771,"line_start":205,"line_end":205,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482922,"byte_end":482924,"line_start":211,"line_end":211,"column_start":12,"column_end":14},"name":"or","qualname":"<XY<bool>>::or","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a term-by-term OR operation.\n","sig":null,"attributes":[{"value":"/ Returns a term-by-term OR operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":482870,"byte_end":482910,"line_start":210,"line_end":210,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3252},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483100,"byte_end":483109,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"both_from","qualname":"<XY<T>>::both_from","value":"fn (value: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `XY` with both `x` and `y` set to `value`.\n","sig":null,"attributes":[{"value":"/ Creates a `XY` with both `x` and `y` set to `value`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483032,"byte_end":483088,"line_start":217,"line_end":217,"column_start":5,"column_end":61}}]},{"kind":"Mod","id":{"krate":0,"index":3269},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"backend","qualname":"::backend","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","parent":null,"children":[{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3274},{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3290},{"krate":0,"index":3318},{"krate":0,"index":3417},{"krate":0,"index":3422}],"decl_id":null,"docs":" Define backends using common libraries.","sig":null,"attributes":[{"value":"! Define backends using common libraries.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485403,"byte_end":485446,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485447,"byte_end":485450,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Cursive doesn't print anything by itself: it delegates this job to a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485451,"byte_end":485523,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"! backend library, which handles all actual input and output.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485524,"byte_end":485587,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485588,"byte_end":485591,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module defines the `Backend` trait, as well as a few implementations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485592,"byte_end":485669,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"! using some common libraries. Each of those included backends needs a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485670,"byte_end":485742,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"! corresonding feature to be enabled.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485743,"byte_end":485782,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":3290},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dummy","qualname":"::backend::dummy","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","parent":null,"children":[{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298},{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3303},{"krate":0,"index":3305}],"decl_id":null,"docs":" Dummy backend\n","sig":null,"attributes":[{"value":"! Dummy backend","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":490501,"byte_end":490518,"line_start":1,"line_end":1,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3300},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":490656,"byte_end":490663,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"Backend","qualname":"::backend::dummy::Backend","value":"Backend {  }","parent":null,"children":[{"krate":0,"index":3301},{"krate":0,"index":3302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":490781,"byte_end":490785,"line_start":17,"line_end":17,"column_start":12,"column_end":16},"name":"init","qualname":"<Backend>::init","value":"fn () -> Box<backend::Backend>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3318},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"curses","qualname":"::backend::curses","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3328},{"krate":0,"index":3329},{"krate":0,"index":3410},{"krate":0,"index":3411},{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3416}],"decl_id":null,"docs":" Common module for the ncurses and pancurses backends.","sig":null,"attributes":[{"value":"! Common module for the ncurses and pancurses backends.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":511683,"byte_end":511740,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":511741,"byte_end":511744,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Requires either of `ncurses-backend` or `pancurses-backend`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":511745,"byte_end":511809,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"cfg(any(feature = \"ncurses-backend\", feature = \"pancurses-backend\"))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":511810,"byte_end":511882,"line_start":4,"line_end":4,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":3329},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"n","qualname":"::backend::curses::n","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3355},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3362},{"krate":0,"index":3363},{"krate":0,"index":3368},{"krate":0,"index":3372},{"krate":0,"index":3383},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3407},{"krate":0,"index":3409}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ncurses-backend\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":512024,"byte_end":512059,"line_start":14,"line_end":14,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3363},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":516534,"byte_end":516541,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"Backend","qualname":"::backend::curses::n::Backend","value":"Backend {  }","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3367}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":521738,"byte_end":521742,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"init","qualname":"<Backend>::init","value":"fn () -> Box<backend::Backend>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3418},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486115,"byte_end":486119,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Peek","qualname":"::backend::InputRequest::Peek","value":"InputRequest::Peek","parent":{"krate":0,"index":3417},"children":[],"decl_id":null,"docs":" The backend should respond immediately with an answer, possibly empty.\n","sig":null,"attributes":[{"value":"/ The backend should respond immediately with an answer, possibly empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486036,"byte_end":486110,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3420},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486184,"byte_end":486189,"line_start":30,"line_end":30,"column_start":5,"column_end":10},"name":"Block","qualname":"::backend::InputRequest::Block","value":"InputRequest::Block","parent":{"krate":0,"index":3417},"children":[],"decl_id":null,"docs":" The backend should block until input is available.\n","sig":null,"attributes":[{"value":"/ The backend should block until input is available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486125,"byte_end":486179,"line_start":29,"line_end":29,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":3417},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486017,"byte_end":486029,"line_start":26,"line_end":26,"column_start":10,"column_end":22},"name":"InputRequest","qualname":"::backend::InputRequest","value":"InputRequest::{Peek, Block}","parent":null,"children":[{"krate":0,"index":3418},{"krate":0,"index":3420}],"decl_id":null,"docs":" A request for input, sent to the backend.\n","sig":null,"attributes":[{"value":"/ A request for input, sent to the backend.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485962,"byte_end":486007,"line_start":25,"line_end":25,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":3422},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486261,"byte_end":486268,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"Backend","qualname":"::backend::Backend","value":"Backend","parent":null,"children":[{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433}],"decl_id":null,"docs":" Trait defining the required methods to be a backend.\n","sig":null,"attributes":[{"value":"/ Trait defining the required methods to be a backend.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486194,"byte_end":486250,"line_start":33,"line_end":33,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486439,"byte_end":486445,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"finish","qualname":"::backend::Backend::finish","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Prepares to close the backend.","sig":null,"attributes":[{"value":"/ Prepares to close the backend.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486336,"byte_end":486370,"line_start":37,"line_end":37,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486375,"byte_end":486378,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This should clear any state in the terminal.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486383,"byte_end":486431,"line_start":39,"line_end":39,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486622,"byte_end":486640,"line_start":45,"line_end":45,"column_start":8,"column_end":26},"name":"start_input_thread","qualname":"::backend::Backend::start_input_thread","value":"fn (&mut self, event_sink: Sender<Option<Event>>, input_request: Receiver<InputRequest>) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Starts a thread to collect input and send it to the given channel.","sig":null,"attributes":[{"value":"/ Starts a thread to collect input and send it to the given channel.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486463,"byte_end":486533,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486538,"byte_end":486541,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ `event_trigger` will receive a value before any event is needed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486546,"byte_end":486614,"line_start":44,"line_end":44,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487070,"byte_end":487083,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"prepare_input","qualname":"::backend::Backend::prepare_input","value":"fn (&mut self, input_request: InputRequest) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Prepares the backend to collect input.","sig":null,"attributes":[{"value":"/ Prepares the backend to collect input.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486872,"byte_end":486914,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486919,"byte_end":486922,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is only required for non-thread-safe backends like BearLibTerminal","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":486927,"byte_end":487002,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ where we cannot collect input in a separate thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487007,"byte_end":487062,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487301,"byte_end":487308,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"refresh","qualname":"::backend::Backend::refresh","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Refresh the screen.\n","sig":null,"attributes":[{"value":"/ Refresh the screen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487270,"byte_end":487293,"line_start":64,"line_end":64,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487391,"byte_end":487401,"line_start":68,"line_end":68,"column_start":8,"column_end":18},"name":"has_colors","qualname":"::backend::Backend::has_colors","value":"fn (&self) -> bool","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Should return `true` if this backend supports colors.\n","sig":null,"attributes":[{"value":"/ Should return `true` if this backend supports colors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487326,"byte_end":487383,"line_start":67,"line_end":67,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487459,"byte_end":487470,"line_start":71,"line_end":71,"column_start":8,"column_end":19},"name":"screen_size","qualname":"::backend::Backend::screen_size","value":"fn (&self) -> Vec2","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Returns the screen size.\n","sig":null,"attributes":[{"value":"/ Returns the screen size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487423,"byte_end":487451,"line_start":70,"line_end":70,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487533,"byte_end":487541,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"print_at","qualname":"::backend::Backend::print_at","value":"fn (&self, pos: Vec2, text: &str) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Main method used for printing\n","sig":null,"attributes":[{"value":"/ Main method used for printing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487492,"byte_end":487525,"line_start":73,"line_end":73,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487629,"byte_end":487634,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"clear","qualname":"::backend::Backend::clear","value":"fn (&self, color: theme::Color) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Clears the screen with the given color.\n","sig":null,"attributes":[{"value":"/ Clears the screen with the given color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487578,"byte_end":487621,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487770,"byte_end":487779,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"set_color","qualname":"::backend::Backend::set_color","value":"fn (&self, colors: theme::ColorPair) -> theme::ColorPair","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Starts using a new color.","sig":null,"attributes":[{"value":"/ Starts using a new color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487669,"byte_end":487698,"line_start":79,"line_end":79,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487703,"byte_end":487706,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This should return the previously active color.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487711,"byte_end":487762,"line_start":81,"line_end":81,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487876,"byte_end":487886,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"set_effect","qualname":"::backend::Backend::set_effect","value":"fn (&self, effect: theme::Effect) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Enables the given effect.\n","sig":null,"attributes":[{"value":"/ Enables the given effect.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487839,"byte_end":487868,"line_start":84,"line_end":84,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487961,"byte_end":487973,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"unset_effect","qualname":"::backend::Backend::unset_effect","value":"fn (&self, effect: theme::Effect) -> ()","parent":{"krate":0,"index":3422},"children":[],"decl_id":null,"docs":" Disables the given effect.\n","sig":null,"attributes":[{"value":"/ Disables the given effect.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":487923,"byte_end":487953,"line_start":87,"line_end":87,"column_start":5,"column_end":35}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4628,"byte_end":4636,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5438,"byte_end":5446,"line_start":65,"line_end":65,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5614,"byte_end":5622,"line_start":72,"line_end":72,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5750,"byte_end":5758,"line_start":78,"line_end":78,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5891,"byte_end":5899,"line_start":84,"line_end":84,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6310,"byte_end":6321,"line_start":99,"line_end":99,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9160,"byte_end":9163,"line_start":232,"line_end":232,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10706,"byte_end":10716,"line_start":295,"line_end":295,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13256,"byte_end":13261,"line_start":376,"line_end":376,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14616,"byte_end":14621,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14707,"byte_end":14712,"line_start":433,"line_end":433,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":20380,"byte_end":20381,"line_start":106,"line_end":106,"column_start":31,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":24125,"byte_end":24126,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":25355,"byte_end":25356,"line_start":32,"line_end":32,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26756,"byte_end":26763,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27618,"byte_end":27625,"line_start":54,"line_end":54,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27818,"byte_end":27825,"line_start":62,"line_end":62,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28030,"byte_end":28037,"line_start":68,"line_end":68,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28236,"byte_end":28243,"line_start":75,"line_end":75,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28437,"byte_end":28444,"line_start":83,"line_end":83,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28780,"byte_end":28787,"line_start":98,"line_end":98,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":29109,"byte_end":29116,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":29400,"byte_end":29407,"line_start":126,"line_end":126,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29787,"byte_end":29795,"line_start":8,"line_end":8,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31565,"byte_end":31571,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33219,"byte_end":33228,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35080,"byte_end":35094,"line_start":22,"line_end":22,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40286,"byte_end":40294,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":43252,"byte_end":43253,"line_start":77,"line_end":77,"column_start":27,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44722,"byte_end":44723,"line_start":50,"line_end":50,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45933,"byte_end":45947,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46023,"byte_end":46033,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55257,"byte_end":55258,"line_start":14,"line_end":14,"column_start":30,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55466,"byte_end":55467,"line_start":9,"line_end":9,"column_start":27,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55586,"byte_end":55589,"line_start":18,"line_end":18,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56108,"byte_end":56115,"line_start":10,"line_end":10,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64928,"byte_end":64944,"line_start":21,"line_end":21,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65128,"byte_end":65144,"line_start":28,"line_end":28,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65323,"byte_end":65336,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65980,"byte_end":65993,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66705,"byte_end":66708,"line_start":17,"line_end":17,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/chunk.rs","byte_start":68275,"byte_end":68280,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/chunk_iterator.rs","byte_start":71189,"byte_end":71202,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/chunk_iterator.rs","byte_start":71661,"byte_end":71674,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77242,"byte_end":77255,"line_start":35,"line_end":35,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77976,"byte_end":77989,"line_start":62,"line_end":62,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86086,"byte_end":86089,"line_start":13,"line_end":13,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87379,"byte_end":87386,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment_merge_iterator.rs","byte_start":88698,"byte_end":88718,"line_start":8,"line_end":8,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment_merge_iterator.rs","byte_start":88876,"byte_end":88896,"line_start":17,"line_end":17,"column_start":22,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90662,"byte_end":90675,"line_start":28,"line_end":28,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91954,"byte_end":91968,"line_start":13,"line_end":13,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92498,"byte_end":92512,"line_start":30,"line_end":30,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93926,"byte_end":93939,"line_start":52,"line_end":52,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94250,"byte_end":94264,"line_start":70,"line_end":70,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94489,"byte_end":94499,"line_start":85,"line_end":85,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94708,"byte_end":94721,"line_start":100,"line_end":100,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94877,"byte_end":94887,"line_start":110,"line_end":110,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95793,"byte_end":95803,"line_start":145,"line_end":145,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95952,"byte_end":95965,"line_start":154,"line_end":154,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96172,"byte_end":96185,"line_start":164,"line_end":164,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98872,"byte_end":98882,"line_start":261,"line_end":261,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99270,"byte_end":99281,"line_start":277,"line_end":277,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99605,"byte_end":99616,"line_start":293,"line_end":293,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100730,"byte_end":100740,"line_start":338,"line_end":338,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102739,"byte_end":102744,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104122,"byte_end":104128,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104718,"byte_end":104724,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106033,"byte_end":106044,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108292,"byte_end":108301,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110227,"byte_end":110235,"line_start":169,"line_end":169,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111034,"byte_end":111042,"line_start":199,"line_end":199,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112579,"byte_end":112587,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113848,"byte_end":113856,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":780},{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118454,"byte_end":118458,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118644,"byte_end":118648,"line_start":24,"line_end":24,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118793,"byte_end":118797,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":131074,"byte_end":131085,"line_start":16,"line_end":16,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131943,"byte_end":131952,"line_start":38,"line_end":38,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133067,"byte_end":133072,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137694,"byte_end":137703,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138638,"byte_end":138648,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140768,"byte_end":140778,"line_start":88,"line_end":88,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140899,"byte_end":140909,"line_start":94,"line_end":94,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141034,"byte_end":141044,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141169,"byte_end":141179,"line_start":106,"line_end":106,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141619,"byte_end":141628,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":894}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141919,"byte_end":141928,"line_start":136,"line_end":136,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":142036,"byte_end":142045,"line_start":142,"line_end":142,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143785,"byte_end":143792,"line_start":49,"line_end":49,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":909},{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144013,"byte_end":144020,"line_start":58,"line_end":58,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144149,"byte_end":144156,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":146982,"byte_end":146989,"line_start":146,"line_end":146,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150450,"byte_end":150462,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151124,"byte_end":151129,"line_start":20,"line_end":20,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151194,"byte_end":151199,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152075,"byte_end":152080,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152255,"byte_end":152260,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152429,"byte_end":152434,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152549,"byte_end":152554,"line_start":86,"line_end":86,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152673,"byte_end":152678,"line_start":92,"line_end":92,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128864,"byte_end":128869,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129048,"byte_end":129053,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129796,"byte_end":129801,"line_start":226,"line_end":226,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129905,"byte_end":129910,"line_start":232,"line_end":232,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153232,"byte_end":153234,"line_start":20,"line_end":20,"column_start":36,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153650,"byte_end":153652,"line_start":35,"line_end":35,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155192,"byte_end":155194,"line_start":92,"line_end":92,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156703,"byte_end":156705,"line_start":138,"line_end":138,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157532,"byte_end":157534,"line_start":166,"line_end":166,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157987,"byte_end":157989,"line_start":183,"line_end":183,"column_start":33,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158162,"byte_end":158164,"line_start":193,"line_end":193,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158351,"byte_end":158353,"line_start":203,"line_end":203,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158480,"byte_end":158482,"line_start":209,"line_end":209,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158607,"byte_end":158609,"line_start":215,"line_end":215,"column_start":25,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158734,"byte_end":158736,"line_start":221,"line_end":221,"column_start":27,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158883,"byte_end":158885,"line_start":228,"line_end":228,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159079,"byte_end":159081,"line_start":240,"line_end":240,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159297,"byte_end":159299,"line_start":252,"line_end":252,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159436,"byte_end":159438,"line_start":260,"line_end":260,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159578,"byte_end":159580,"line_start":268,"line_end":268,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159763,"byte_end":159765,"line_start":278,"line_end":278,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1088},{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163757,"byte_end":163764,"line_start":41,"line_end":41,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":4330},{"krate":0,"index":4331}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":169020,"byte_end":169027,"line_start":208,"line_end":208,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4336},{"krate":0,"index":4339},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174281,"byte_end":174287,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1174},{"krate":0,"index":1176},{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176855,"byte_end":176861,"line_start":139,"line_end":139,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179705,"byte_end":179711,"line_start":26,"line_end":26,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180309,"byte_end":180315,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1273}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185498,"byte_end":185504,"line_start":241,"line_end":241,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":186883,"byte_end":186891,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4342},{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188990,"byte_end":188998,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190694,"byte_end":190705,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191897,"byte_end":191903,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1391},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":206268,"byte_end":206274,"line_start":521,"line_end":521,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dummy.rs","byte_start":210730,"byte_end":210739,"line_start":9,"line_end":9,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214122,"byte_end":214130,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":226680,"byte_end":226688,"line_start":503,"line_end":503,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234260,"byte_end":234272,"line_start":21,"line_end":21,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":4370},{"krate":0,"index":4371}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":235229,"byte_end":235241,"line_start":63,"line_end":63,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236904,"byte_end":236910,"line_start":21,"line_end":21,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237679,"byte_end":237685,"line_start":47,"line_end":47,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1633},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239454,"byte_end":239459,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":4378},{"krate":0,"index":4379}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239626,"byte_end":239631,"line_start":23,"line_end":23,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4380},{"krate":0,"index":4381},{"krate":0,"index":4384},{"krate":0,"index":4387},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":240469,"byte_end":240474,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":241040,"byte_end":241053,"line_start":58,"line_end":58,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":241368,"byte_end":241381,"line_start":72,"line_end":72,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242240,"byte_end":242252,"line_start":111,"line_end":111,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1732},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":249029,"byte_end":249041,"line_start":336,"line_end":336,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1753},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260498,"byte_end":260507,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261102,"byte_end":261110,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1817},{"krate":0,"index":1822},{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":266796,"byte_end":266804,"line_start":252,"line_end":252,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1841}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":272915,"byte_end":272924,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1889},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1896},{"krate":0,"index":1900},{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":278486,"byte_end":278495,"line_start":204,"line_end":204,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286888,"byte_end":286895,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":293379,"byte_end":293386,"line_start":263,"line_end":263,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300079,"byte_end":300085,"line_start":56,"line_end":56,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300343,"byte_end":300354,"line_start":71,"line_end":71,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2017},{"krate":0,"index":2021},{"krate":0,"index":2025},{"krate":0,"index":2029},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":4414},{"krate":0,"index":4415}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304661,"byte_end":304672,"line_start":210,"line_end":210,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4420},{"krate":0,"index":4423},{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":305890,"byte_end":305895,"line_start":27,"line_end":27,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2067},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2079}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":307820,"byte_end":307825,"line_start":91,"line_end":91,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":4439},{"krate":0,"index":4442},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311066,"byte_end":311077,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2125}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314955,"byte_end":314966,"line_start":227,"line_end":227,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2130}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316570,"byte_end":316581,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2155}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317071,"byte_end":317081,"line_start":34,"line_end":34,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317151,"byte_end":317161,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2164},{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318209,"byte_end":318219,"line_start":75,"line_end":75,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319017,"byte_end":319028,"line_start":103,"line_end":103,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":320358,"byte_end":320369,"line_start":156,"line_end":156,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2190}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323069,"byte_end":323079,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":4456},{"krate":0,"index":4457}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":335537,"byte_end":335547,"line_start":416,"line_end":416,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2273},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2281},{"krate":0,"index":2282}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348051,"byte_end":348061,"line_start":83,"line_end":83,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2326}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348140,"byte_end":348150,"line_start":89,"line_end":89,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2343},{"krate":0,"index":2346},{"krate":0,"index":2351},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2371},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2401},{"krate":0,"index":2405},{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":364861,"byte_end":364871,"line_start":623,"line_end":623,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2410},{"krate":0,"index":2412},{"krate":0,"index":2415},{"krate":0,"index":2417},{"krate":0,"index":2420}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":366229,"byte_end":366239,"line_start":675,"line_end":675,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2426},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":369441,"byte_end":369445,"line_start":780,"line_end":780,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2444}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369899,"byte_end":369909,"line_start":16,"line_end":16,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":4458},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370774,"byte_end":370784,"line_start":53,"line_end":53,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4467},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372556,"byte_end":372565,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2484},{"krate":0,"index":4468},{"krate":0,"index":4469}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372789,"byte_end":372798,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4470},{"krate":0,"index":4471},{"krate":0,"index":4474},{"krate":0,"index":4477},{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373428,"byte_end":373438,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2521},{"krate":0,"index":2523},{"krate":0,"index":2525},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":375924,"byte_end":375934,"line_start":114,"line_end":114,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379983,"byte_end":379992,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2572}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":380735,"byte_end":380747,"line_start":67,"line_end":67,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":381267,"byte_end":381279,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2592},{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":382128,"byte_end":382140,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":384787,"byte_end":384796,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2627},{"krate":0,"index":2630},{"krate":0,"index":2632},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2639},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":394016,"byte_end":394037,"line_start":482,"line_end":482,"column_start":5,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":394367,"byte_end":394388,"line_start":496,"line_end":496,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":394801,"byte_end":394810,"line_start":516,"line_end":516,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401971,"byte_end":401979,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2743},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":414203,"byte_end":414211,"line_start":444,"line_end":444,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2769},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422077,"byte_end":422088,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422872,"byte_end":422886,"line_start":70,"line_end":70,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2804},{"krate":0,"index":2805}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423004,"byte_end":423015,"line_start":78,"line_end":78,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2807},{"krate":0,"index":2810},{"krate":0,"index":2813},{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424298,"byte_end":424314,"line_start":130,"line_end":130,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2823}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425490,"byte_end":425498,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2850},{"krate":0,"index":2852},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2858}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":430198,"byte_end":430206,"line_start":348,"line_end":348,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432094,"byte_end":432105,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":4505},{"krate":0,"index":4506}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432638,"byte_end":432649,"line_start":37,"line_end":37,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4507},{"krate":0,"index":4508},{"krate":0,"index":4511},{"krate":0,"index":4514},{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433003,"byte_end":433010,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2900}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433423,"byte_end":433430,"line_start":31,"line_end":31,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2902},{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433536,"byte_end":433543,"line_start":39,"line_end":39,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433643,"byte_end":433650,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2911}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435930,"byte_end":435931,"line_start":77,"line_end":77,"column_start":55,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":436697,"byte_end":436704,"line_start":117,"line_end":117,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":436772,"byte_end":436779,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3025},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3042},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":458897,"byte_end":458904,"line_start":839,"line_end":839,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460481,"byte_end":460488,"line_start":52,"line_end":52,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460834,"byte_end":460841,"line_start":66,"line_end":66,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3128},{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3135},{"krate":0,"index":3140},{"krate":0,"index":3142},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3148},{"krate":0,"index":3151},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3158},{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476837,"byte_end":476838,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477107,"byte_end":477109,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477311,"byte_end":477313,"line_start":22,"line_end":22,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":3193},{"krate":0,"index":3196},{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3218},{"krate":0,"index":3223},{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481135,"byte_end":481137,"line_start":154,"line_end":154,"column_start":16,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481791,"byte_end":481793,"line_start":175,"line_end":175,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3235}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481984,"byte_end":481986,"line_start":182,"line_end":182,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":3241},{"krate":0,"index":3244},{"krate":0,"index":3246},{"krate":0,"index":3248}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483020,"byte_end":483022,"line_start":216,"line_end":216,"column_start":15,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3252}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483194,"byte_end":483196,"line_start":223,"line_end":223,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483307,"byte_end":483309,"line_start":229,"line_end":229,"column_start":37,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3259}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":490760,"byte_end":490767,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":491053,"byte_end":491060,"line_start":29,"line_end":29,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":517079,"byte_end":517090,"line_start":46,"line_end":46,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":521717,"byte_end":521724,"line_start":184,"line_end":184,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":525299,"byte_end":525306,"line_start":290,"line_end":290,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2725,"byte_end":2731,"line_start":100,"line_end":100,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":17}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2742,"byte_end":2747,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2770,"byte_end":2774,"line_start":104,"line_end":104,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":85}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2798,"byte_end":2803,"line_start":107,"line_end":107,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":393}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":55751,"byte_end":55756,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":408}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/mod.rs","byte_start":60779,"byte_end":60785,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":409}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/mod.rs","byte_start":60795,"byte_end":60800,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":465}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":55766,"byte_end":55772,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":589}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/mod.rs","byte_start":55794,"byte_end":55798,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":626}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2814,"byte_end":2819,"line_start":109,"line_end":109,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":716}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2829,"byte_end":2838,"line_start":110,"line_end":110,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":728}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2848,"byte_end":2852,"line_start":111,"line_end":111,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":758}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2862,"byte_end":2866,"line_start":112,"line_end":112,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":805}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2876,"byte_end":2881,"line_start":113,"line_end":113,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":841}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2891,"byte_end":2894,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":990}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":2904,"byte_end":2909,"line_start":115,"line_end":115,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1091}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/lib.rs","byte_start":3044,"byte_end":3051,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3269}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485907,"byte_end":485912,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":3290}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/mod.rs","byte_start":485936,"byte_end":485942,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3318}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/mod.rs","byte_start":512068,"byte_end":512069,"line_start":15,"line_end":15,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":3329}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":4628,"byte_end":4636,"line_start":32,"line_end":32,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5438,"byte_end":5446,"line_start":65,"line_end":65,"column_start":16,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5614,"byte_end":5622,"line_start":72,"line_end":72,"column_start":42,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5750,"byte_end":5758,"line_start":78,"line_end":78,"column_start":45,"column_end":53},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":5891,"byte_end":5899,"line_start":84,"line_end":84,"column_start":38,"column_end":46},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3442},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":6310,"byte_end":6321,"line_start":99,"line_end":99,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":9160,"byte_end":9163,"line_start":232,"line_end":232,"column_start":6,"column_end":9},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":10706,"byte_end":10716,"line_start":295,"line_end":295,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":13256,"byte_end":13261,"line_start":376,"line_end":376,"column_start":6,"column_end":11},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14616,"byte_end":14621,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3576},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/event.rs","byte_start":14707,"byte_end":14712,"line_start":433,"line_end":433,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3576},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_wrapper.rs","byte_start":20380,"byte_end":20381,"line_start":106,"line_end":106,"column_start":31,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":129},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/any.rs","byte_start":24125,"byte_end":24126,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":150},"to":{"krate":0,"index":145}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/finder.rs","byte_start":25355,"byte_end":25356,"line_start":32,"line_end":32,"column_start":26,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":171},"to":{"krate":0,"index":161}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":26756,"byte_end":26763,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27618,"byte_end":27625,"line_start":54,"line_end":54,"column_start":45,"column_end":52},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":27818,"byte_end":27825,"line_start":62,"line_end":62,"column_start":37,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28030,"byte_end":28037,"line_start":68,"line_end":68,"column_start":41,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28236,"byte_end":28243,"line_start":75,"line_end":75,"column_start":49,"column_end":56},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28437,"byte_end":28444,"line_start":83,"line_end":83,"column_start":35,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":28780,"byte_end":28787,"line_start":98,"line_end":98,"column_start":35,"column_end":42},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":29109,"byte_end":29116,"line_start":113,"line_end":113,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/margins.rs","byte_start":29400,"byte_end":29407,"line_start":126,"line_end":126,"column_start":21,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3634},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":29787,"byte_end":29795,"line_start":8,"line_end":8,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/position.rs","byte_start":31565,"byte_end":31571,"line_start":65,"line_end":65,"column_start":6,"column_end":12},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_cache.rs","byte_start":33219,"byte_end":33228,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/size_constraint.rs","byte_start":35080,"byte_end":35094,"line_start":22,"line_end":22,"column_start":6,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3671},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36397,"byte_end":36400,"line_start":12,"line_end":12,"column_start":17,"column_end":20},"kind":"SuperTrait","from":{"krate":2,"index":2395},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view.rs","byte_start":36403,"byte_end":36410,"line_start":12,"line_end":12,"column_start":23,"column_end":30},"kind":"SuperTrait","from":{"krate":0,"index":145},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/view_path.rs","byte_start":40286,"byte_end":40294,"line_start":10,"line_end":10,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41020,"byte_end":41024,"line_start":8,"line_end":8,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":267},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":41027,"byte_end":41032,"line_start":8,"line_end":8,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/boxable.rs","byte_start":43252,"byte_end":43253,"line_start":77,"line_end":77,"column_start":27,"column_end":28},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":314},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43411,"byte_end":43415,"line_start":7,"line_end":7,"column_start":25,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":267},"to":{"krate":0,"index":318}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":43418,"byte_end":43423,"line_start":7,"line_end":7,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":318}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/identifiable.rs","byte_start":44722,"byte_end":44723,"line_start":50,"line_end":50,"column_start":32,"column_end":33},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":322},"to":{"krate":0,"index":318}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":45933,"byte_end":45947,"line_start":49,"line_end":49,"column_start":18,"column_end":32},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3703},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scroll.rs","byte_start":46023,"byte_end":46033,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55088,"byte_end":55092,"line_start":7,"line_end":7,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":267},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55095,"byte_end":55100,"line_start":7,"line_end":7,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/scrollable.rs","byte_start":55257,"byte_end":55258,"line_start":14,"line_end":14,"column_start":30,"column_end":31},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":363},"to":{"krate":0,"index":360}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55466,"byte_end":55467,"line_start":9,"line_end":9,"column_start":27,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":366}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/view/into_boxed_view.rs","byte_start":55586,"byte_end":55589,"line_start":18,"line_end":18,"column_start":24,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":5,"index":82},"to":{"krate":0,"index":366}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/counter.rs","byte_start":56108,"byte_end":56115,"line_start":10,"line_end":10,"column_start":6,"column_end":13},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":64928,"byte_end":64944,"line_start":21,"line_end":21,"column_start":10,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65128,"byte_end":65144,"line_start":28,"line_end":28,"column_start":26,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":420},"to":{"krate":0,"index":628}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65323,"byte_end":65336,"line_start":40,"line_end":40,"column_start":10,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/lines_iterator.rs","byte_start":65980,"byte_end":65993,"line_start":61,"line_end":61,"column_start":23,"column_end":36},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":416},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/simple/row.rs","byte_start":66705,"byte_end":66708,"line_start":17,"line_end":17,"column_start":6,"column_end":9},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3717},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/chunk.rs","byte_start":68275,"byte_end":68280,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/chunk_iterator.rs","byte_start":71189,"byte_end":71202,"line_start":22,"line_end":22,"column_start":9,"column_end":22},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/chunk_iterator.rs","byte_start":71661,"byte_end":71674,"line_start":37,"line_end":37,"column_start":22,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77242,"byte_end":77255,"line_start":35,"line_end":35,"column_start":9,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/lines_iterator.rs","byte_start":77976,"byte_end":77989,"line_start":62,"line_end":62,"column_start":22,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":505},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/row.rs","byte_start":86086,"byte_end":86089,"line_start":13,"line_end":13,"column_start":6,"column_end":9},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment.rs","byte_start":87379,"byte_end":87386,"line_start":18,"line_end":18,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment_merge_iterator.rs","byte_start":88698,"byte_end":88718,"line_start":8,"line_end":8,"column_start":9,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/lines/spans/segment_merge_iterator.rs","byte_start":88876,"byte_end":88896,"line_start":17,"line_end":17,"column_start":22,"column_end":42},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":575},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/markup/mod.rs","byte_start":90662,"byte_end":90675,"line_start":28,"line_end":28,"column_start":6,"column_end":19},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":91954,"byte_end":91968,"line_start":13,"line_end":13,"column_start":15,"column_end":29},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/reader.rs","byte_start":92498,"byte_end":92512,"line_start":30,"line_end":30,"column_start":24,"column_end":38},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":615},"to":{"krate":1,"index":2932}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":93926,"byte_end":93939,"line_start":52,"line_end":52,"column_start":21,"column_end":34},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94250,"byte_end":94264,"line_start":70,"line_end":70,"column_start":29,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":634},"to":{"krate":0,"index":628}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94489,"byte_end":94499,"line_start":85,"line_end":85,"column_start":29,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3811},"to":{"krate":0,"index":628}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94708,"byte_end":94721,"line_start":100,"line_end":100,"column_start":24,"column_end":37},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":94877,"byte_end":94887,"line_start":110,"line_end":110,"column_start":13,"column_end":23},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95793,"byte_end":95803,"line_start":145,"line_end":145,"column_start":23,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":95952,"byte_end":95965,"line_start":154,"line_end":154,"column_start":6,"column_end":19},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":96172,"byte_end":96185,"line_start":164,"line_end":164,"column_start":9,"column_end":22},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":98872,"byte_end":98882,"line_start":261,"line_end":261,"column_start":44,"column_end":54},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3811},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99270,"byte_end":99281,"line_start":277,"line_end":277,"column_start":31,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3835},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":99605,"byte_end":99616,"line_start":293,"line_end":293,"column_start":9,"column_end":20},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/utils/span.rs","byte_start":100730,"byte_end":100740,"line_start":338,"line_end":338,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":102739,"byte_end":102744,"line_start":12,"line_end":12,"column_start":6,"column_end":11},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104122,"byte_end":104128,"line_start":66,"line_end":66,"column_start":6,"column_end":12},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/align.rs","byte_start":104718,"byte_end":104724,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":106033,"byte_end":106044,"line_start":30,"line_end":30,"column_start":6,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":108292,"byte_end":108301,"line_start":98,"line_end":98,"column_start":6,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":110227,"byte_end":110235,"line_start":169,"line_end":169,"column_start":6,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/direction.rs","byte_start":111034,"byte_end":111042,"line_start":199,"line_end":199,"column_start":6,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":112579,"byte_end":112587,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/menu.rs","byte_start":113848,"byte_end":113856,"line_start":86,"line_end":86,"column_start":6,"column_end":14},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118454,"byte_end":118458,"line_start":14,"line_end":14,"column_start":21,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4005},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118644,"byte_end":118648,"line_start":24,"line_end":24,"column_start":20,"column_end":24},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4005},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/rect.rs","byte_start":118793,"byte_end":118797,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/border_style.rs","byte_start":131074,"byte_end":131085,"line_start":16,"line_end":16,"column_start":45,"column_end":56},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4020},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":131943,"byte_end":131952,"line_start":38,"line_end":38,"column_start":19,"column_end":28},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4041},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color.rs","byte_start":133067,"byte_end":133072,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_pair.rs","byte_start":137694,"byte_end":137703,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":138638,"byte_end":138648,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140768,"byte_end":140778,"line_start":88,"line_end":88,"column_start":22,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4124},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":140899,"byte_end":140909,"line_start":94,"line_end":94,"column_start":29,"column_end":39},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4124},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141034,"byte_end":141044,"line_start":100,"line_end":100,"column_start":26,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4124},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141169,"byte_end":141179,"line_start":106,"line_end":106,"column_start":29,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4124},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141619,"byte_end":141628,"line_start":126,"line_end":126,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":141919,"byte_end":141928,"line_start":136,"line_end":136,"column_start":22,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/color_style.rs","byte_start":142036,"byte_end":142045,"line_start":142,"line_end":142,"column_start":29,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":143785,"byte_end":143792,"line_start":49,"line_end":49,"column_start":30,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4219},"to":{"krate":2,"index":2155}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144013,"byte_end":144020,"line_start":58,"line_end":58,"column_start":33,"column_end":40},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4219},"to":{"krate":2,"index":2159}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":144149,"byte_end":144156,"line_start":64,"line_end":64,"column_start":6,"column_end":13},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":146982,"byte_end":146989,"line_start":146,"line_end":146,"column_start":18,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4219},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/palette.rs","byte_start":150450,"byte_end":150462,"line_start":253,"line_end":253,"column_start":6,"column_end":18},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151124,"byte_end":151129,"line_start":20,"line_end":20,"column_start":18,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":4298},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":151194,"byte_end":151199,"line_start":26,"line_end":26,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152075,"byte_end":152080,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4298},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152255,"byte_end":152260,"line_start":71,"line_end":71,"column_start":27,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":4298},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152429,"byte_end":152434,"line_start":80,"line_end":80,"column_start":22,"column_end":27},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":4298},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152549,"byte_end":152554,"line_start":86,"line_end":86,"column_start":29,"column_end":34},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4298},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/style.rs","byte_start":152673,"byte_end":152678,"line_start":92,"line_end":92,"column_start":26,"column_end":31},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4298},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":128864,"byte_end":128869,"line_start":191,"line_end":191,"column_start":18,"column_end":23},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4313},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129048,"byte_end":129053,"line_start":201,"line_end":201,"column_start":6,"column_end":11},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129796,"byte_end":129801,"line_start":226,"line_end":226,"column_start":26,"column_end":31},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4321},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/theme/mod.rs","byte_start":129905,"byte_end":129910,"line_start":232,"line_end":232,"column_start":32,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4321},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153232,"byte_end":153234,"line_start":20,"line_end":20,"column_start":36,"column_end":38},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":153650,"byte_end":153652,"line_start":35,"line_end":35,"column_start":6,"column_end":8},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":155192,"byte_end":155194,"line_start":92,"line_end":92,"column_start":14,"column_end":16},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":156703,"byte_end":156705,"line_start":138,"line_end":138,"column_start":40,"column_end":42},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157532,"byte_end":157534,"line_start":166,"line_end":166,"column_start":23,"column_end":25},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":157987,"byte_end":157989,"line_start":183,"line_end":183,"column_start":33,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158162,"byte_end":158164,"line_start":193,"line_end":193,"column_start":21,"column_end":23},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158351,"byte_end":158353,"line_start":203,"line_end":203,"column_start":27,"column_end":29},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158480,"byte_end":158482,"line_start":209,"line_end":209,"column_start":27,"column_end":29},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158607,"byte_end":158609,"line_start":215,"line_end":215,"column_start":25,"column_end":27},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158734,"byte_end":158736,"line_start":221,"line_end":221,"column_start":27,"column_end":29},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":158883,"byte_end":158885,"line_start":228,"line_end":228,"column_start":23,"column_end":25},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159079,"byte_end":159081,"line_start":240,"line_end":240,"column_start":23,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159297,"byte_end":159299,"line_start":252,"line_end":252,"column_start":45,"column_end":47},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159436,"byte_end":159438,"line_start":260,"line_end":260,"column_start":21,"column_end":23},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159578,"byte_end":159580,"line_start":268,"line_end":268,"column_start":24,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1978}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/vec.rs","byte_start":159763,"byte_end":159765,"line_start":278,"line_end":278,"column_start":24,"column_end":26},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1983}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":163757,"byte_end":163764,"line_start":41,"line_end":41,"column_start":15,"column_end":22},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/box_view.rs","byte_start":169020,"byte_end":169027,"line_start":208,"line_end":208,"column_start":31,"column_end":38},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1101},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":174281,"byte_end":174287,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/button.rs","byte_start":176855,"byte_end":176861,"line_start":139,"line_end":139,"column_start":15,"column_end":21},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1151},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":179705,"byte_end":179711,"line_start":26,"line_end":26,"column_start":25,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":180309,"byte_end":180315,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/canvas.rs","byte_start":185498,"byte_end":185504,"line_start":241,"line_end":241,"column_start":27,"column_end":33},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1200},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":186883,"byte_end":186891,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1303},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/checkbox.rs","byte_start":188990,"byte_end":188998,"line_start":107,"line_end":107,"column_start":15,"column_end":23},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1303},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":190694,"byte_end":190705,"line_start":32,"line_end":32,"column_start":6,"column_end":17},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":191897,"byte_end":191903,"line_start":85,"line_end":85,"column_start":6,"column_end":12},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dialog.rs","byte_start":206268,"byte_end":206274,"line_start":521,"line_end":521,"column_start":15,"column_end":21},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1366},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/dummy.rs","byte_start":210730,"byte_end":210739,"line_start":9,"line_end":9,"column_start":15,"column_end":24},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1448},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":214122,"byte_end":214130,"line_start":117,"line_end":117,"column_start":6,"column_end":14},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/edit_view.rs","byte_start":226680,"byte_end":226688,"line_start":503,"line_end":503,"column_start":15,"column_end":23},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1482},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":234260,"byte_end":234272,"line_start":21,"line_end":21,"column_start":9,"column_end":21},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/hideable_view.rs","byte_start":235229,"byte_end":235241,"line_start":63,"line_end":63,"column_start":31,"column_end":43},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1570},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":236904,"byte_end":236910,"line_start":21,"line_end":21,"column_start":15,"column_end":21},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/id_view.rs","byte_start":237679,"byte_end":237685,"line_start":47,"line_end":47,"column_start":41,"column_end":47},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1612},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239454,"byte_end":239459,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/layer.rs","byte_start":239626,"byte_end":239631,"line_start":23,"line_end":23,"column_start":31,"column_end":36},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4372},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":240469,"byte_end":240474,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":241040,"byte_end":241053,"line_start":58,"line_end":58,"column_start":9,"column_end":22},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":241368,"byte_end":241381,"line_start":72,"line_end":72,"column_start":9,"column_end":22},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1684},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":242240,"byte_end":242252,"line_start":111,"line_end":111,"column_start":6,"column_end":18},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/linear_layout.rs","byte_start":249029,"byte_end":249041,"line_start":336,"line_end":336,"column_start":15,"column_end":27},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":1672},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":260498,"byte_end":260507,"line_start":22,"line_end":22,"column_start":6,"column_end":15},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":261102,"byte_end":261110,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/list_view.rs","byte_start":266796,"byte_end":266804,"line_start":252,"line_end":252,"column_start":15,"column_end":23},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1789},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":272915,"byte_end":272924,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menu_popup.rs","byte_start":278486,"byte_end":278495,"line_start":204,"line_end":204,"column_start":15,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1867},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":286888,"byte_end":286895,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/menubar.rs","byte_start":293379,"byte_end":293386,"line_start":263,"line_end":263,"column_start":15,"column_end":22},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1932},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300079,"byte_end":300085,"line_start":56,"line_end":56,"column_start":19,"column_end":25},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2003},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":300343,"byte_end":300354,"line_start":71,"line_end":71,"column_start":15,"column_end":26},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/on_event_view.rs","byte_start":304661,"byte_end":304672,"line_start":210,"line_end":210,"column_start":31,"column_end":42},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1997},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":305890,"byte_end":305895,"line_start":27,"line_end":27,"column_start":15,"column_end":20},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/panel.rs","byte_start":307820,"byte_end":307825,"line_start":91,"line_end":91,"column_start":31,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4424},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":311066,"byte_end":311077,"line_start":79,"line_end":79,"column_start":6,"column_end":17},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/progress_bar.rs","byte_start":314955,"byte_end":314966,"line_start":227,"line_end":227,"column_start":15,"column_end":26},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2101},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":316570,"byte_end":316581,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317071,"byte_end":317081,"line_start":34,"line_end":34,"column_start":21,"column_end":31},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4445},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":317151,"byte_end":317161,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":318209,"byte_end":318219,"line_start":75,"line_end":75,"column_start":6,"column_end":16},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":319017,"byte_end":319028,"line_start":103,"line_end":103,"column_start":9,"column_end":20},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/radio.rs","byte_start":320358,"byte_end":320369,"line_start":156,"line_end":156,"column_start":27,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2169},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":323069,"byte_end":323079,"line_start":55,"line_end":55,"column_start":9,"column_end":19},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/scroll_view.rs","byte_start":335537,"byte_end":335547,"line_start":416,"line_end":416,"column_start":18,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2215},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348051,"byte_end":348061,"line_start":83,"line_end":83,"column_start":30,"column_end":40},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2312},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":348140,"byte_end":348150,"line_start":89,"line_end":89,"column_start":18,"column_end":28},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":364861,"byte_end":364871,"line_start":623,"line_end":623,"column_start":6,"column_end":16},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":366229,"byte_end":366239,"line_start":675,"line_end":675,"column_start":27,"column_end":37},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2312},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/select_view.rs","byte_start":369441,"byte_end":369445,"line_start":780,"line_end":780,"column_start":9,"column_end":13},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":369899,"byte_end":369909,"line_start":16,"line_end":16,"column_start":15,"column_end":25},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/shadow_view.rs","byte_start":370774,"byte_end":370784,"line_start":53,"line_end":53,"column_start":31,"column_end":41},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2455},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372556,"byte_end":372565,"line_start":13,"line_end":13,"column_start":9,"column_end":18},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/sized_view.rs","byte_start":372789,"byte_end":372798,"line_start":25,"line_end":25,"column_start":31,"column_end":40},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2478},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":373428,"byte_end":373438,"line_start":20,"line_end":20,"column_start":6,"column_end":16},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/slider_view.rs","byte_start":375924,"byte_end":375934,"line_start":114,"line_end":114,"column_start":15,"column_end":25},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2507},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":379983,"byte_end":379992,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":380735,"byte_end":380747,"line_start":67,"line_end":67,"column_start":15,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":381267,"byte_end":381279,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":382128,"byte_end":382140,"line_start":108,"line_end":108,"column_start":24,"column_end":36},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2576},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":384787,"byte_end":384796,"line_start":186,"line_end":186,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":394016,"byte_end":394037,"line_start":482,"line_end":482,"column_start":5,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":394367,"byte_end":394388,"line_start":496,"line_end":496,"column_start":9,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2653},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/stack_view.rs","byte_start":394801,"byte_end":394810,"line_start":516,"line_end":516,"column_start":15,"column_end":24},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2561},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":401971,"byte_end":401979,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_area.rs","byte_start":414203,"byte_end":414211,"line_start":444,"line_end":444,"column_start":15,"column_end":23},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2709},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422077,"byte_end":422088,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":422872,"byte_end":422886,"line_start":70,"line_end":70,"column_start":16,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2801},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":423004,"byte_end":423015,"line_start":78,"line_end":78,"column_start":6,"column_end":17},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":424298,"byte_end":424314,"line_start":130,"line_end":130,"column_start":6,"column_end":22},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":425490,"byte_end":425498,"line_start":178,"line_end":178,"column_start":6,"column_end":14},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/text_view.rs","byte_start":430198,"byte_end":430206,"line_start":348,"line_end":348,"column_start":15,"column_end":23},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2824},"to":{"krate":0,"index":267}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432094,"byte_end":432105,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/tracked_view.rs","byte_start":432638,"byte_end":432649,"line_start":37,"line_end":37,"column_start":31,"column_end":42},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2874},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433003,"byte_end":433010,"line_start":11,"line_end":11,"column_start":6,"column_end":13},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433423,"byte_end":433430,"line_start":31,"line_end":31,"column_start":16,"column_end":23},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2894},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433536,"byte_end":433543,"line_start":39,"line_end":39,"column_start":19,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2894},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/views/view_box.rs","byte_start":433643,"byte_end":433650,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2894},"to":{"krate":0,"index":99}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435790,"byte_end":435794,"line_start":72,"line_end":72,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1903},"to":{"krate":0,"index":3007}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":435930,"byte_end":435931,"line_start":77,"line_end":77,"column_start":55,"column_end":56},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3010},"to":{"krate":0,"index":3007}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":436697,"byte_end":436704,"line_start":117,"line_end":117,"column_start":18,"column_end":25},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":436772,"byte_end":436779,"line_start":123,"line_end":123,"column_start":6,"column_end":13},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2982},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/cursive.rs","byte_start":458897,"byte_end":458904,"line_start":839,"line_end":839,"column_start":15,"column_end":22},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2982},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460481,"byte_end":460488,"line_start":52,"line_end":52,"column_start":24,"column_end":31},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3094},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/printer.rs","byte_start":460834,"byte_end":460841,"line_start":66,"line_end":66,"column_start":14,"column_end":21},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476208,"byte_end":476213,"line_start":2,"line_end":2,"column_start":17,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":3165}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/with.rs","byte_start":476837,"byte_end":476838,"line_start":30,"line_end":30,"column_start":25,"column_end":26},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3174},"to":{"krate":0,"index":3165}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477107,"byte_end":477109,"line_start":13,"line_end":13,"column_start":26,"column_end":28},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":4875}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":477311,"byte_end":477313,"line_start":22,"line_end":22,"column_start":9,"column_end":11},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481135,"byte_end":481137,"line_start":154,"line_end":154,"column_start":16,"column_end":18},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481791,"byte_end":481793,"line_start":175,"line_end":175,"column_start":9,"column_end":11},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":481984,"byte_end":481986,"line_start":182,"line_end":182,"column_start":6,"column_end":8},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483020,"byte_end":483022,"line_start":216,"line_end":216,"column_start":15,"column_end":17},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483194,"byte_end":483196,"line_start":223,"line_end":223,"column_start":26,"column_end":28},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/xy.rs","byte_start":483307,"byte_end":483309,"line_start":229,"line_end":229,"column_start":37,"column_end":39},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4521},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":490760,"byte_end":490767,"line_start":16,"line_end":16,"column_start":6,"column_end":13},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/dummy.rs","byte_start":491053,"byte_end":491060,"line_start":29,"line_end":29,"column_start":27,"column_end":34},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3300},"to":{"krate":0,"index":3422}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":517079,"byte_end":517090,"line_start":46,"line_end":46,"column_start":6,"column_end":17},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":521717,"byte_end":521724,"line_start":184,"line_end":184,"column_start":6,"column_end":13},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/cursive-0.9.2/src/backend/curses/n.rs","byte_start":525299,"byte_end":525306,"line_start":290,"line_end":290,"column_start":27,"column_end":34},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3363},"to":{"krate":0,"index":3422}}]}