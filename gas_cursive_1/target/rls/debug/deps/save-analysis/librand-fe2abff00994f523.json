{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5","program":"/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rand","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"cloudabi\"","--cfg","feature=\"default\"","--cfg","feature=\"fuchsia-zircon\"","--cfg","feature=\"libc\"","--cfg","feature=\"std\"","--cfg","feature=\"winapi\"","-C","metadata=fe2abff00994f523","-C","extra-filename=-fe2abff00994f523","--out-dir","/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","--extern","libc=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/liblibc-db7bb442240c65fc.rmeta","--extern","rand_core=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/librand_core-18b20316bcfc385f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/librand-fe2abff00994f523.rmeta"},"prelude":{"crate_id":{"name":"rand","disambiguator":[12770867073998145274,15381033126195001761]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":15,"id":{"name":"rand_core","disambiguator":[11929260456822064901,9483971370527615094]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","num":16,"id":{"name":"rand_core","disambiguator":[3696222371436855056,8102528365619791797]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","num":17,"id":{"name":"libc","disambiguator":[13742126743162842846,10810135314539812706]}}],"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":475,"byte_end":42064,"line_start":11,"line_end":1252,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":16,"index":121},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11362,"byte_end":11369,"line_start":266,"line_end":266,"column_start":21,"column_end":28},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":126},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11371,"byte_end":11380,"line_start":266,"line_end":266,"column_start":30,"column_end":39},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":127},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11382,"byte_end":11393,"line_start":266,"line_end":266,"column_start":41,"column_end":52},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":155},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11416,"byte_end":11425,"line_start":267,"line_end":267,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":177},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11427,"byte_end":11432,"line_start":267,"line_end":267,"column_start":32,"column_end":37},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":917},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11498,"byte_end":11508,"line_start":270,"line_end":270,"column_start":45,"column_end":55},"alias_span":null,"name":"thread_rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48998,"byte_end":49010,"line_start":171,"line_end":171,"column_start":37,"column_end":49},"alias_span":null,"name":"Alphanumeric","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49050,"byte_end":49057,"line_start":172,"line_end":172,"column_start":39,"column_end":46},"alias_span":null,"name":"Uniform","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1485},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49096,"byte_end":49108,"line_start":173,"line_end":173,"column_start":38,"column_end":50},"alias_span":null,"name":"OpenClosed01","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1492},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49110,"byte_end":49116,"line_start":173,"line_end":173,"column_start":52,"column_end":58},"alias_span":null,"name":"Open01","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49199,"byte_end":49206,"line_start":175,"line_end":175,"column_start":24,"column_end":31},"alias_span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49210,"byte_end":49215,"line_start":175,"line_end":175,"column_start":35,"column_end":40},"name":"Range","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1333},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49276,"byte_end":49281,"line_start":177,"line_end":177,"column_start":38,"column_end":43},"alias_span":null,"name":"Gamma","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1372},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49283,"byte_end":49293,"line_start":177,"line_end":177,"column_start":45,"column_end":55},"alias_span":null,"name":"ChiSquared","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1390},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49295,"byte_end":49302,"line_start":177,"line_end":177,"column_start":57,"column_end":64},"alias_span":null,"name":"FisherF","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1399},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49304,"byte_end":49312,"line_start":177,"line_end":177,"column_start":66,"column_end":74},"alias_span":null,"name":"StudentT","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1414},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49375,"byte_end":49381,"line_start":179,"line_end":179,"column_start":39,"column_end":45},"alias_span":null,"name":"Normal","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1422},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49383,"byte_end":49392,"line_start":179,"line_end":179,"column_start":47,"column_end":56},"alias_span":null,"name":"LogNormal","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1407},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49394,"byte_end":49408,"line_start":179,"line_end":179,"column_start":58,"column_end":72},"alias_span":null,"name":"StandardNormal","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49476,"byte_end":49479,"line_start":181,"line_end":181,"column_start":44,"column_end":47},"alias_span":null,"name":"Exp","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1429},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49481,"byte_end":49485,"line_start":181,"line_end":181,"column_start":49,"column_end":53},"alias_span":null,"name":"Exp1","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1443},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49547,"byte_end":49553,"line_start":183,"line_end":183,"column_start":38,"column_end":44},"alias_span":null,"name":"Pareto","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1451},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49617,"byte_end":49624,"line_start":185,"line_end":185,"column_start":39,"column_end":46},"alias_span":null,"name":"Poisson","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1462},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49689,"byte_end":49697,"line_start":187,"line_end":187,"column_start":40,"column_end":48},"alias_span":null,"name":"Binomial","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1470},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49739,"byte_end":49748,"line_start":188,"line_end":188,"column_start":41,"column_end":50},"alias_span":null,"name":"Bernoulli","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1477},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49811,"byte_end":49817,"line_start":190,"line_end":190,"column_start":38,"column_end":44},"alias_span":null,"name":"Cauchy","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51340,"byte_end":51347,"line_start":242,"line_end":242,"column_start":37,"column_end":44},"alias_span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51351,"byte_end":51356,"line_start":242,"line_end":242,"column_start":48,"column_end":53},"name":"Range","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51394,"byte_end":51407,"line_start":243,"line_end":243,"column_start":37,"column_end":50},"alias_span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51411,"byte_end":51422,"line_start":243,"line_end":243,"column_start":54,"column_end":65},"name":"SampleRange","value":"","parent":{"krate":0,"index":308}},{"kind":"Use","ref_id":{"krate":0,"index":349},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186841,"byte_end":186853,"line_start":24,"line_end":24,"column_start":42,"column_end":54},"alias_span":null,"name":"Distribution","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186888,"byte_end":186896,"line_start":25,"line_end":25,"column_start":34,"column_end":42},"alias_span":null,"name":"SmallRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":2112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186898,"byte_end":186904,"line_start":25,"line_end":25,"column_start":44,"column_end":50},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":2119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186961,"byte_end":186970,"line_start":26,"line_end":26,"column_start":55,"column_end":64},"alias_span":null,"name":"ThreadRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1078},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186999,"byte_end":187002,"line_start":27,"line_end":27,"column_start":28,"column_end":31},"alias_span":null,"name":"Rng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":16,"index":121},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":187004,"byte_end":187011,"line_start":27,"line_end":27,"column_start":33,"column_end":40},"alias_span":null,"name":"RngCore","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":16,"index":126},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":187013,"byte_end":187022,"line_start":27,"line_end":27,"column_start":42,"column_end":51},"alias_span":null,"name":"CryptoRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":16,"index":127},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":187024,"byte_end":187035,"line_start":27,"line_end":27,"column_start":53,"column_end":64},"alias_span":null,"name":"SeedableRng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1127},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":187087,"byte_end":187098,"line_start":28,"line_end":28,"column_start":50,"column_end":61},"alias_span":null,"name":"FromEntropy","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":187100,"byte_end":187106,"line_start":28,"line_end":28,"column_start":63,"column_end":69},"alias_span":null,"name":"random","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":917},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":187108,"byte_end":187118,"line_start":28,"line_end":28,"column_start":71,"column_end":81},"alias_span":null,"name":"thread_rng","value":"","parent":{"krate":0,"index":387}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203188,"byte_end":203197,"line_start":326,"line_end":326,"column_start":23,"column_end":32},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1952},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203220,"byte_end":203228,"line_start":327,"line_end":327,"column_start":22,"column_end":30},"alias_span":null,"name":"Hc128Rng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1965},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203251,"byte_end":203259,"line_start":328,"line_end":328,"column_start":22,"column_end":30},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1980},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203284,"byte_end":203294,"line_start":329,"line_end":329,"column_start":24,"column_end":34},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":1995},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203320,"byte_end":203331,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":402}},{"kind":"Use","ref_id":{"krate":0,"index":2011},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","byte_start":299570,"byte_end":299577,"line_start":16,"line_end":16,"column_start":43,"column_end":50},"alias_span":null,"name":"ReadRng","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2017},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","byte_start":299604,"byte_end":299616,"line_start":17,"line_end":17,"column_start":26,"column_end":38},"alias_span":null,"name":"ReseedingRng","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":799},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297482,"byte_end":297491,"line_start":177,"line_end":177,"column_start":24,"column_end":33},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2075},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297493,"byte_end":297503,"line_start":177,"line_end":177,"column_start":35,"column_end":45},"alias_span":null,"name":"TimerError","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297551,"byte_end":297561,"line_start":178,"line_end":178,"column_start":46,"column_end":56},"alias_span":null,"name":"EntropyRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297585,"byte_end":297593,"line_start":180,"line_end":180,"column_start":22,"column_end":30},"alias_span":null,"name":"SmallRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297614,"byte_end":297620,"line_start":181,"line_end":181,"column_start":20,"column_end":26},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297666,"byte_end":297675,"line_start":182,"line_end":182,"column_start":45,"column_end":54},"alias_span":null,"name":"ThreadRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":2130},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":298945,"byte_end":298950,"line_start":218,"line_end":218,"column_start":19,"column_end":24},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":675}},{"kind":"Use","ref_id":{"krate":0,"index":677},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11861,"byte_end":11865,"line_start":282,"line_end":282,"column_start":61,"column_end":65},"alias_span":null,"name":"read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2017},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11905,"byte_end":11917,"line_start":283,"line_end":283,"column_start":39,"column_end":51},"alias_span":null,"name":"ReseedingRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2037},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11992,"byte_end":12002,"line_start":286,"line_end":286,"column_start":52,"column_end":62},"alias_span":null,"name":"EntropyRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2130},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12675,"byte_end":12680,"line_start":306,"line_end":306,"column_start":15,"column_end":20},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12713,"byte_end":12722,"line_start":308,"line_end":308,"column_start":31,"column_end":40},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1965},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12724,"byte_end":12732,"line_start":308,"line_end":308,"column_start":42,"column_end":50},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1980},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12734,"byte_end":12744,"line_start":308,"line_end":308,"column_start":52,"column_end":62},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1995},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12746,"byte_end":12757,"line_start":308,"line_end":308,"column_start":64,"column_end":75},"alias_span":null,"name":"XorShiftRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12789,"byte_end":12795,"line_start":309,"line_end":309,"column_start":30,"column_end":36},"alias_span":null,"name":"StdRng","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":799},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12871,"byte_end":12880,"line_start":315,"line_end":315,"column_start":20,"column_end":29},"alias_span":null,"name":"JitterRng","value":"","parent":{"krate":0,"index":1052}},{"kind":"Use","ref_id":{"krate":0,"index":2075},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12882,"byte_end":12892,"line_start":315,"line_end":315,"column_start":31,"column_end":41},"alias_span":null,"name":"TimerError","value":"","parent":{"krate":0,"index":1052}},{"kind":"Use","ref_id":{"krate":0,"index":2130},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13584,"byte_end":13589,"line_start":336,"line_end":336,"column_start":19,"column_end":24},"alias_span":null,"name":"OsRng","value":"","parent":{"krate":0,"index":1056}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13708,"byte_end":13717,"line_start":342,"line_end":342,"column_start":19,"column_end":28},"alias_span":null,"name":"ChaChaRng","value":"","parent":{"krate":0,"index":1058}},{"kind":"Use","ref_id":{"krate":0,"index":1965},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13814,"byte_end":13822,"line_start":347,"line_end":347,"column_start":20,"column_end":28},"alias_span":null,"name":"IsaacRng","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":1980},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13824,"byte_end":13834,"line_start":347,"line_end":347,"column_start":30,"column_end":40},"alias_span":null,"name":"Isaac64Rng","value":"","parent":{"krate":0,"index":1060}},{"kind":"Use","ref_id":{"krate":0,"index":2119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13891,"byte_end":13900,"line_start":350,"line_end":350,"column_start":52,"column_end":61},"alias_span":null,"name":"ThreadRng","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":475,"byte_end":42064,"line_start":11,"line_end":1252,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":387},{"krate":0,"index":402},{"krate":0,"index":675},{"krate":0,"index":1020},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1078},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":2151},{"krate":0,"index":2154},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2163},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":1116},{"krate":0,"index":2338},{"krate":0,"index":2333},{"krate":0,"index":2328},{"krate":0,"index":2323},{"krate":0,"index":2318},{"krate":0,"index":2313},{"krate":0,"index":2308},{"krate":0,"index":2303},{"krate":0,"index":2298},{"krate":0,"index":2293},{"krate":0,"index":2288},{"krate":0,"index":2283},{"krate":0,"index":2278},{"krate":0,"index":2273},{"krate":0,"index":2268},{"krate":0,"index":2263},{"krate":0,"index":2258},{"krate":0,"index":2253},{"krate":0,"index":2248},{"krate":0,"index":2243},{"krate":0,"index":2238},{"krate":0,"index":2233},{"krate":0,"index":2228},{"krate":0,"index":2223},{"krate":0,"index":2218},{"krate":0,"index":2213},{"krate":0,"index":2208},{"krate":0,"index":2203},{"krate":0,"index":2198},{"krate":0,"index":2193},{"krate":0,"index":2188},{"krate":0,"index":2183},{"krate":0,"index":2178},{"krate":0,"index":2373},{"krate":0,"index":2368},{"krate":0,"index":2363},{"krate":0,"index":2358},{"krate":0,"index":2353},{"krate":0,"index":2348},{"krate":0,"index":2343},{"krate":0,"index":2378},{"krate":0,"index":2383},{"krate":0,"index":1117},{"krate":0,"index":2387},{"krate":0,"index":2390},{"krate":0,"index":1122},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1137}],"decl_id":null,"docs":" Utilities for random number generation","sig":null,"attributes":[{"value":"! Utilities for random number generation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":475,"byte_end":517,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":518,"byte_end":521,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Rand provides utilities to generate random numbers, to convert them to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":522,"byte_end":596,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"! useful types and distributions, and some randomness-related algorithms.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":597,"byte_end":672,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":673,"byte_end":676,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! # Basic usage","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":677,"byte_end":694,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":695,"byte_end":698,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! To get you started quickly, the easiest and highest-level way to get","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":699,"byte_end":771,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"! a random value is to use [`random()`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":772,"byte_end":814,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":815,"byte_end":818,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":819,"byte_end":826,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"! let x: u8 = rand::random();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":827,"byte_end":858,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"! println!(\"{}\", x);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":859,"byte_end":881,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":882,"byte_end":885,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! let y = rand::random::<f64>();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":886,"byte_end":920,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"! println!(\"{}\", y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":921,"byte_end":943,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":944,"byte_end":947,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! if rand::random() { // generates a boolean","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":948,"byte_end":994,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"!     println!(\"Heads!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":995,"byte_end":1022,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1023,"byte_end":1028,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1029,"byte_end":1036,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1037,"byte_end":1040,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! This supports generating most common types but is not very flexible, thus","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1041,"byte_end":1118,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"! you probably want to learn a bit more about the Rand library.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1119,"byte_end":1184,"line_start":34,"line_end":34,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1185,"byte_end":1188,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1189,"byte_end":1192,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! # The two-step process to get a random value","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1193,"byte_end":1241,"line_start":37,"line_end":37,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1242,"byte_end":1245,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Generating random values is typically a two-step process:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1246,"byte_end":1307,"line_start":39,"line_end":39,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1308,"byte_end":1311,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! - get some *random data* (an integer or bit/byte sequence) from a random","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1312,"byte_end":1388,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"!   number generator (RNG);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1389,"byte_end":1418,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"! - use some function to transform that *data* into the type of value you want","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1419,"byte_end":1499,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"!   (this function is an implementation of some *distribution* describing the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1500,"byte_end":1579,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"!   kind of value produced).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1580,"byte_end":1610,"line_start":45,"line_end":45,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1611,"byte_end":1614,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! Rand represents the first step with the [`RngCore`] trait and the second","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1615,"byte_end":1691,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"! step via a combination of the [`Rng`] extension trait and the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1692,"byte_end":1757,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"! [`distributions` module].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1758,"byte_end":1787,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"! In practice you probably won't use [`RngCore`] directly unless you are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1788,"byte_end":1862,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"! implementing a random number generator (RNG).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1863,"byte_end":1912,"line_start":51,"line_end":51,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1913,"byte_end":1916,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! There are many kinds of RNGs, with different trade-offs. You can read more","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1917,"byte_end":1995,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"! about them in the [`rngs` module] and even more in the [`prng` module],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":1996,"byte_end":2071,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"! however, often you can just use [`thread_rng()`]. This function","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2072,"byte_end":2139,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"! automatically initializes an RNG in thread-local memory, then returns a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2140,"byte_end":2215,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"! reference to it. It is fast, good quality, and secure (unpredictable).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2216,"byte_end":2290,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2291,"byte_end":2294,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! To turn the output of the RNG into something usable, you usually want to use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2295,"byte_end":2375,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"! the methods from the [`Rng`] trait. Some of the most useful methods are:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2376,"byte_end":2452,"line_start":60,"line_end":60,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2453,"byte_end":2456,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! - [`gen`] generates a random value appropriate for the type (just like","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2457,"byte_end":2531,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"!   [`random()`]). For integers this is normally the full representable range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2532,"byte_end":2611,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"!   (e.g. from `0u32` to `std::u32::MAX`), for floats this is between 0 and 1,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2612,"byte_end":2692,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"!   and some other types are supported, including arrays and tuples. See the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2693,"byte_end":2771,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"!   [`Standard`] distribution which provides the implementations.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2772,"byte_end":2839,"line_start":66,"line_end":66,"column_start":1,"column_end":68}},{"value":"! - [`gen_range`] samples from a specific range of values; this is like","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2840,"byte_end":2913,"line_start":67,"line_end":67,"column_start":1,"column_end":74}},{"value":"!   [`gen`] but with specific upper and lower bounds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2914,"byte_end":2969,"line_start":68,"line_end":68,"column_start":1,"column_end":56}},{"value":"! - [`sample`] samples directly from some distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":2970,"byte_end":3027,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3028,"byte_end":3031,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! [`random()`] is defined using just the above: `thread_rng().gen()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3032,"byte_end":3103,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3104,"byte_end":3107,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"! ## Distributions","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3108,"byte_end":3128,"line_start":73,"line_end":73,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3129,"byte_end":3132,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! What are distributions, you ask? Specifying only the type and range of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3133,"byte_end":3207,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"! values (known as the *sample space*) is not enough; samples must also have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3208,"byte_end":3286,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"! a *probability distribution*, describing the relative probability of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3287,"byte_end":3359,"line_start":77,"line_end":77,"column_start":1,"column_end":73}},{"value":"! sampling each value in that space.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3360,"byte_end":3398,"line_start":78,"line_end":78,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3399,"byte_end":3402,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! In many cases a *uniform* distribution is used, meaning roughly that each","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3403,"byte_end":3480,"line_start":80,"line_end":80,"column_start":1,"column_end":78}},{"value":"! value is equally likely (or for \"continuous\" types like floats, that each","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3481,"byte_end":3558,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"! equal-sized sub-range has the same probability of containing a sample).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3559,"byte_end":3634,"line_start":82,"line_end":82,"column_start":1,"column_end":76}},{"value":"! [`gen`] and [`gen_range`] both use statistically uniform distributions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3635,"byte_end":3710,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3711,"byte_end":3714,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"! The [`distributions` module] provides implementations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3715,"byte_end":3772,"line_start":85,"line_end":85,"column_start":1,"column_end":58}},{"value":"! of some other distributions, including Normal, Log-Normal and Exponential.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3773,"byte_end":3851,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"! ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3852,"byte_end":3856,"line_start":87,"line_end":87,"column_start":1,"column_end":5}},{"value":"! It is worth noting that the functionality already mentioned is implemented","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3857,"byte_end":3935,"line_start":88,"line_end":88,"column_start":1,"column_end":79}},{"value":"! with distributions: [`gen`] samples values using the [`Standard`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":3936,"byte_end":4005,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"! distribution, while [`gen_range`] uses [`Uniform`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4006,"byte_end":4061,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4062,"byte_end":4065,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ## Importing (prelude)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4066,"byte_end":4092,"line_start":92,"line_end":92,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4093,"byte_end":4096,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! The most convenient way to import items from Rand is to use the [prelude].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4097,"byte_end":4175,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"! This includes the most important parts of Rand, but only those unlikely to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4176,"byte_end":4254,"line_start":95,"line_end":95,"column_start":1,"column_end":79}},{"value":"! cause name conflicts.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4255,"byte_end":4280,"line_start":96,"line_end":96,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4281,"byte_end":4284,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! Note that Rand 0.5 has significantly changed the module organization and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4285,"byte_end":4361,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"! contents relative to previous versions. Where possible old names have been","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4362,"byte_end":4440,"line_start":99,"line_end":99,"column_start":1,"column_end":79}},{"value":"! kept (but are hidden in the documentation), however these will be removed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4441,"byte_end":4518,"line_start":100,"line_end":100,"column_start":1,"column_end":78}},{"value":"! in the future. We therefore recommend migrating to use the prelude or the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4519,"byte_end":4596,"line_start":101,"line_end":101,"column_start":1,"column_end":78}},{"value":"! new module organization in your imports.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4597,"byte_end":4641,"line_start":102,"line_end":102,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4642,"byte_end":4645,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4646,"byte_end":4649,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4650,"byte_end":4665,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4666,"byte_end":4669,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4670,"byte_end":4677,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4678,"byte_end":4703,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4704,"byte_end":4707,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! // thread_rng is often the most convenient source of randomness:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4708,"byte_end":4776,"line_start":110,"line_end":110,"column_start":1,"column_end":69}},{"value":"! let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4777,"byte_end":4808,"line_start":111,"line_end":111,"column_start":1,"column_end":32}},{"value":"! ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4809,"byte_end":4813,"line_start":112,"line_end":112,"column_start":1,"column_end":5}},{"value":"! if rng.gen() { // random bool","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4814,"byte_end":4847,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"!     let x: f64 = rng.gen(); // random number in range [0, 1)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4848,"byte_end":4912,"line_start":114,"line_end":114,"column_start":1,"column_end":65}},{"value":"!     println!(\"x is: {}\", x);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4913,"byte_end":4945,"line_start":115,"line_end":115,"column_start":1,"column_end":33}},{"value":"!     let ch = rng.gen::<char>(); // using type annotation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":4946,"byte_end":5006,"line_start":116,"line_end":116,"column_start":1,"column_end":61}},{"value":"!     println!(\"char is: {}\", ch);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5007,"byte_end":5043,"line_start":117,"line_end":117,"column_start":1,"column_end":37}},{"value":"!     println!(\"Number from 0 to 9: {}\", rng.gen_range(0, 10));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5044,"byte_end":5109,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5110,"byte_end":5115,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5116,"byte_end":5123,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5124,"byte_end":5127,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5128,"byte_end":5131,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"! # More functionality","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5132,"byte_end":5156,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5157,"byte_end":5160,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! The [`Rng`] trait includes a few more methods not mentioned above:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5161,"byte_end":5231,"line_start":125,"line_end":125,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5232,"byte_end":5235,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! - [`Rng::sample_iter`] allows iterating over values from a chosen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5236,"byte_end":5305,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"!   distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5306,"byte_end":5325,"line_start":128,"line_end":128,"column_start":1,"column_end":20}},{"value":"! - [`Rng::gen_bool`] generates boolean \"events\" with a given probability.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5326,"byte_end":5402,"line_start":129,"line_end":129,"column_start":1,"column_end":77}},{"value":"! - [`Rng::fill`] and [`Rng::try_fill`] are fast alternatives to fill a slice","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5403,"byte_end":5482,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"!   of integers.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5483,"byte_end":5501,"line_start":131,"line_end":131,"column_start":1,"column_end":19}},{"value":"! - [`Rng::shuffle`] randomly shuffles elements in a slice.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5502,"byte_end":5563,"line_start":132,"line_end":132,"column_start":1,"column_end":62}},{"value":"! - [`Rng::choose`] picks one element at random from a slice.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5564,"byte_end":5627,"line_start":133,"line_end":133,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5628,"byte_end":5631,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"! For more slice/sequence related functionality, look in the [`seq` module].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5632,"byte_end":5710,"line_start":135,"line_end":135,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5711,"byte_end":5714,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! There is also [`distributions::WeightedChoice`], which can be used to pick","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5715,"byte_end":5793,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"! elements at random with some probability. But it does not work well at the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5794,"byte_end":5872,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"! moment and is going through a redesign.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5873,"byte_end":5916,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5917,"byte_end":5920,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5921,"byte_end":5924,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! # Error handling","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5925,"byte_end":5945,"line_start":142,"line_end":142,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5946,"byte_end":5949,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"! Error handling in Rand is a compromise between simplicity and necessity.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":5950,"byte_end":6026,"line_start":144,"line_end":144,"column_start":1,"column_end":77}},{"value":"! Most RNGs and sampling functions will never produce errors, and making these","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6027,"byte_end":6107,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"! able to handle errors would add significant overhead (to code complexity","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6108,"byte_end":6184,"line_start":146,"line_end":146,"column_start":1,"column_end":77}},{"value":"! and ergonomics of usage at least, and potentially also performance,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6185,"byte_end":6256,"line_start":147,"line_end":147,"column_start":1,"column_end":72}},{"value":"! depending on the approach).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6257,"byte_end":6288,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! However, external RNGs can fail, and being able to handle this is important.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6289,"byte_end":6369,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6370,"byte_end":6373,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! It has therefore been decided that *most* methods should not return a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6374,"byte_end":6447,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"! `Result` type, with as exceptions [`Rng::try_fill`],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6448,"byte_end":6504,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"! [`RngCore::try_fill_bytes`], and [`SeedableRng::from_rng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6505,"byte_end":6568,"line_start":153,"line_end":153,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6569,"byte_end":6572,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! Note that it is the RNG that panics when it fails but is not used through a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6573,"byte_end":6652,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"! method that can report errors. Currently Rand contains only three RNGs that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6653,"byte_end":6732,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"! can return an error (and thus may panic), and documents this property:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6733,"byte_end":6807,"line_start":157,"line_end":157,"column_start":1,"column_end":75}},{"value":"! [`OsRng`], [`EntropyRng`] and [`ReadRng`]. Other RNGs, like [`ThreadRng`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6808,"byte_end":6885,"line_start":158,"line_end":158,"column_start":1,"column_end":78}},{"value":"! and [`StdRng`], can be used with all methods without concern.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6886,"byte_end":6951,"line_start":159,"line_end":159,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6952,"byte_end":6955,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! One further problem is that if Rand is unable to get any external randomness","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":6956,"byte_end":7036,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"! when initializing an RNG with [`EntropyRng`], it will panic in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7037,"byte_end":7103,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"! [`FromEntropy::from_entropy`], and notably in [`thread_rng()`]. Except by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7104,"byte_end":7181,"line_start":163,"line_end":163,"column_start":1,"column_end":78}},{"value":"! compromising security, this problem is as unsolvable as running out of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7182,"byte_end":7256,"line_start":164,"line_end":164,"column_start":1,"column_end":75}},{"value":"! memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7257,"byte_end":7268,"line_start":165,"line_end":165,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7269,"byte_end":7272,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7273,"byte_end":7276,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"! # Distinction between Rand and `rand_core`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7277,"byte_end":7323,"line_start":168,"line_end":168,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7324,"byte_end":7327,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! The [`rand_core`] crate provides the necessary traits and functionality for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7328,"byte_end":7407,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"! implementing RNGs; this includes the [`RngCore`] and [`SeedableRng`] traits","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7408,"byte_end":7487,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"! and the [`Error`] type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7488,"byte_end":7515,"line_start":172,"line_end":172,"column_start":1,"column_end":28}},{"value":"! Crates implementing RNGs should depend on [`rand_core`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7516,"byte_end":7576,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7577,"byte_end":7580,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! Applications and libraries consuming random values are encouraged to use the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7581,"byte_end":7661,"line_start":175,"line_end":175,"column_start":1,"column_end":81}},{"value":"! Rand crate, which re-exports the common parts of [`rand_core`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7662,"byte_end":7729,"line_start":176,"line_end":176,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7730,"byte_end":7733,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7734,"byte_end":7737,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"! # More examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7738,"byte_end":7757,"line_start":179,"line_end":179,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7758,"byte_end":7761,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! For some inspiration, see the examples:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7762,"byte_end":7805,"line_start":181,"line_end":181,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7806,"byte_end":7809,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! - [Monte Carlo estimation of π](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7810,"byte_end":7847,"line_start":183,"line_end":183,"column_start":1,"column_end":37}},{"value":"!   https://github.com/rust-lang-nursery/rand/blob/master/examples/monte-carlo.rs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7848,"byte_end":7932,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"! - [Monty Hall Problem](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7933,"byte_end":7960,"line_start":185,"line_end":185,"column_start":1,"column_end":28}},{"value":"!    https://github.com/rust-lang-nursery/rand/blob/master/examples/monty-hall.rs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":7961,"byte_end":8045,"line_start":186,"line_end":186,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8046,"byte_end":8049,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8050,"byte_end":8053,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! [`distributions` module]: distributions/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8054,"byte_end":8108,"line_start":189,"line_end":189,"column_start":1,"column_end":55}},{"value":"! [`distributions::WeightedChoice`]: distributions/struct.WeightedChoice.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8109,"byte_end":8188,"line_start":190,"line_end":190,"column_start":1,"column_end":80}},{"value":"! [`FromEntropy::from_entropy`]: trait.FromEntropy.html#tymethod.from_entropy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8189,"byte_end":8268,"line_start":191,"line_end":191,"column_start":1,"column_end":80}},{"value":"! [`EntropyRng`]: rngs/struct.EntropyRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8269,"byte_end":8316,"line_start":192,"line_end":192,"column_start":1,"column_end":48}},{"value":"! [`Error`]: struct.Error.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8317,"byte_end":8349,"line_start":193,"line_end":193,"column_start":1,"column_end":33}},{"value":"! [`gen_range`]: trait.Rng.html#method.gen_range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8350,"byte_end":8400,"line_start":194,"line_end":194,"column_start":1,"column_end":51}},{"value":"! [`gen`]: trait.Rng.html#method.gen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8401,"byte_end":8439,"line_start":195,"line_end":195,"column_start":1,"column_end":39}},{"value":"! [`OsRng`]: rngs/struct.OsRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8440,"byte_end":8477,"line_start":196,"line_end":196,"column_start":1,"column_end":38}},{"value":"! [prelude]: prelude/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8478,"byte_end":8511,"line_start":197,"line_end":197,"column_start":1,"column_end":34}},{"value":"! [`rand_core`]: https://crates.io/crates/rand_core","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8512,"byte_end":8565,"line_start":198,"line_end":198,"column_start":1,"column_end":54}},{"value":"! [`random()`]: fn.random.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8566,"byte_end":8598,"line_start":199,"line_end":199,"column_start":1,"column_end":33}},{"value":"! [`ReadRng`]: rngs/adapter/struct.ReadRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8599,"byte_end":8648,"line_start":200,"line_end":200,"column_start":1,"column_end":50}},{"value":"! [`Rng::choose`]: trait.Rng.html#method.choose","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8649,"byte_end":8698,"line_start":201,"line_end":201,"column_start":1,"column_end":50}},{"value":"! [`Rng::fill`]: trait.Rng.html#method.fill","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8699,"byte_end":8744,"line_start":202,"line_end":202,"column_start":1,"column_end":46}},{"value":"! [`Rng::gen_bool`]: trait.Rng.html#method.gen_bool","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8745,"byte_end":8798,"line_start":203,"line_end":203,"column_start":1,"column_end":54}},{"value":"! [`Rng::gen`]: trait.Rng.html#method.gen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8799,"byte_end":8842,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"! [`Rng::sample_iter`]: trait.Rng.html#method.sample_iter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8843,"byte_end":8902,"line_start":205,"line_end":205,"column_start":1,"column_end":60}},{"value":"! [`Rng::shuffle`]: trait.Rng.html#method.shuffle","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8903,"byte_end":8954,"line_start":206,"line_end":206,"column_start":1,"column_end":52}},{"value":"! [`RngCore`]: trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8955,"byte_end":8990,"line_start":207,"line_end":207,"column_start":1,"column_end":36}},{"value":"! [`RngCore::try_fill_bytes`]: trait.RngCore.html#method.try_fill_bytes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":8991,"byte_end":9064,"line_start":208,"line_end":208,"column_start":1,"column_end":74}},{"value":"! [`rngs` module]: rngs/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9065,"byte_end":9101,"line_start":209,"line_end":209,"column_start":1,"column_end":37}},{"value":"! [`prng` module]: prng/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9102,"byte_end":9138,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"! [`Rng`]: trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9139,"byte_end":9166,"line_start":211,"line_end":211,"column_start":1,"column_end":28}},{"value":"! [`Rng::try_fill`]: trait.Rng.html#method.try_fill","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9167,"byte_end":9220,"line_start":212,"line_end":212,"column_start":1,"column_end":54}},{"value":"! [`sample`]: trait.Rng.html#method.sample","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9221,"byte_end":9265,"line_start":213,"line_end":213,"column_start":1,"column_end":45}},{"value":"! [`SeedableRng`]: trait.SeedableRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9266,"byte_end":9309,"line_start":214,"line_end":214,"column_start":1,"column_end":44}},{"value":"! [`SeedableRng::from_rng`]: trait.SeedableRng.html#method.from_rng","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9310,"byte_end":9379,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"! [`seq` module]: seq/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9380,"byte_end":9414,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"! [`SmallRng`]: rngs/struct.SmallRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9415,"byte_end":9458,"line_start":217,"line_end":217,"column_start":1,"column_end":44}},{"value":"! [`StdRng`]: rngs/struct.StdRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9459,"byte_end":9498,"line_start":218,"line_end":218,"column_start":1,"column_end":40}},{"value":"! [`thread_rng()`]: fn.thread_rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9499,"byte_end":9539,"line_start":219,"line_end":219,"column_start":1,"column_end":41}},{"value":"! [`ThreadRng`]: rngs/struct.ThreadRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9540,"byte_end":9585,"line_start":220,"line_end":220,"column_start":1,"column_end":46}},{"value":"! [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9586,"byte_end":9638,"line_start":221,"line_end":221,"column_start":1,"column_end":53}},{"value":"! [`Uniform`]: distributions/struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9639,"byte_end":9689,"line_start":222,"line_end":222,"column_start":1,"column_end":51}},{"value":"deny(missing_docs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9898,"byte_end":9920,"line_start":229,"line_end":229,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":9921,"byte_end":9960,"line_start":230,"line_end":230,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"distributions","qualname":"::distributions","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":87},{"krate":0,"index":126},{"krate":0,"index":149},{"krate":0,"index":167},{"krate":0,"index":177},{"krate":0,"index":188},{"krate":0,"index":200},{"krate":0,"index":209},{"krate":0,"index":218},{"krate":0,"index":228},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":286},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":349},{"krate":0,"index":356},{"krate":0,"index":1898},{"krate":0,"index":1906},{"krate":0,"index":362},{"krate":0,"index":1912},{"krate":0,"index":1917},{"krate":0,"index":1916},{"krate":0,"index":1914},{"krate":0,"index":370},{"krate":0,"index":1919},{"krate":0,"index":1929},{"krate":0,"index":1926},{"krate":0,"index":1923},{"krate":0,"index":1931},{"krate":0,"index":1936},{"krate":0,"index":374},{"krate":0,"index":378},{"krate":0,"index":383}],"decl_id":null,"docs":" Generating random samples from probability distributions.","sig":null,"attributes":[{"value":"! Generating random samples from probability distributions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42541,"byte_end":42602,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42603,"byte_end":42606,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! This module is the home of the [`Distribution`] trait and several of its","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42607,"byte_end":42683,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! implementations. It is the workhorse behind some of the convenient","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42684,"byte_end":42754,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! functionality of the [`Rng`] trait, including [`gen`], [`gen_range`] and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42755,"byte_end":42831,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"! of course [`sample`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42832,"byte_end":42857,"line_start":16,"line_end":16,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42858,"byte_end":42861,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! Abstractly, a [probability distribution] describes the probability of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42862,"byte_end":42935,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"! occurance of each value in its sample space.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42936,"byte_end":42984,"line_start":19,"line_end":19,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42985,"byte_end":42988,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! More concretely, an implementation of `Distribution<T>` for type `X` is an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":42989,"byte_end":43067,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"! algorithm for choosing values from the sample space (a subset of `T`)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43068,"byte_end":43141,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"! according to the distribution `X` represents, using an external source of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43142,"byte_end":43219,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"! randomness (an RNG supplied to the `sample` function).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43220,"byte_end":43278,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43279,"byte_end":43282,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! A type `X` may implement `Distribution<T>` for multiple types `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43283,"byte_end":43353,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"! Any type implementing [`Distribution`] is stateless (i.e. immutable),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43354,"byte_end":43427,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"! but it may have internal parameters set at construction time (for example,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43428,"byte_end":43506,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"! [`Uniform`] allows specification of its sample space as a range within `T`).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43507,"byte_end":43587,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43588,"byte_end":43591,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43592,"byte_end":43595,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! # The `Standard` distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43596,"byte_end":43629,"line_start":32,"line_end":32,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43630,"byte_end":43633,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! The [`Standard`] distribution is important to mention. This is the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43634,"byte_end":43704,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"! distribution used by [`Rng::gen()`] and represents the \"default\" way to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43705,"byte_end":43780,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"! produce a random value for many different types, including most primitive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43781,"byte_end":43858,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"! types, tuples, arrays, and a few derived types. See the documentation of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43859,"byte_end":43935,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"! [`Standard`] for more details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43936,"byte_end":43970,"line_start":38,"line_end":38,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43971,"byte_end":43974,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"! Implementing `Distribution<T>` for [`Standard`] for user types `T` makes it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":43975,"byte_end":44054,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"! possible to generate type `T` with [`Rng::gen()`], and by extension also","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44055,"byte_end":44131,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"! with the [`random()`] function.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44132,"byte_end":44167,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44168,"byte_end":44171,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44172,"byte_end":44175,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # Distribution to sample from a `Uniform` range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44176,"byte_end":44227,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44228,"byte_end":44231,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! The [`Uniform`] distribution is more flexible than [`Standard`], but also","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44232,"byte_end":44309,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"! more specialised: it supports fewer target types, but allows the sample","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44310,"byte_end":44385,"line_start":48,"line_end":48,"column_start":1,"column_end":76}},{"value":"! space to be specified as an arbitrary range within its target type `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44386,"byte_end":44461,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"! Both [`Standard`] and [`Uniform`] are in some sense uniform distributions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44462,"byte_end":44540,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44541,"byte_end":44544,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! Values may be sampled from this distribution using [`Rng::gen_range`] or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44545,"byte_end":44621,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"! by creating a distribution object with [`Uniform::new`],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44622,"byte_end":44682,"line_start":53,"line_end":53,"column_start":1,"column_end":61}},{"value":"! [`Uniform::new_inclusive`] or `From<Range>`. When the range limits are not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44683,"byte_end":44761,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"! known at compile time it is typically faster to reuse an existing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44762,"byte_end":44831,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"! distribution object than to call [`Rng::gen_range`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44832,"byte_end":44888,"line_start":56,"line_end":56,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44889,"byte_end":44892,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! User types `T` may also implement `Distribution<T>` for [`Uniform`],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44893,"byte_end":44965,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"! although this is less straightforward than for [`Standard`] (see the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":44966,"byte_end":45038,"line_start":59,"line_end":59,"column_start":1,"column_end":73}},{"value":"! documentation in the [`uniform` module]. Doing so enables generation of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45039,"byte_end":45114,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"! values of type `T` with  [`Rng::gen_range`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45115,"byte_end":45163,"line_start":61,"line_end":61,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45164,"byte_end":45167,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45168,"byte_end":45171,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"! # Other distributions","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45172,"byte_end":45197,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45198,"byte_end":45201,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"! There are surprisingly many ways to uniformly generate random floats. A","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45202,"byte_end":45277,"line_start":66,"line_end":66,"column_start":1,"column_end":76}},{"value":"! range between 0 and 1 is standard, but the exact bounds (open vs closed)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45278,"byte_end":45354,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"! and accuracy differ. In addition to the [`Standard`] distribution Rand offers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45355,"byte_end":45436,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"! [`Open01`] and [`OpenClosed01`]. See [Floating point implementation] for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45437,"byte_end":45513,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"! more details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45514,"byte_end":45531,"line_start":70,"line_end":70,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45532,"byte_end":45535,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"! [`Alphanumeric`] is a simple distribution to sample random letters and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45536,"byte_end":45610,"line_start":72,"line_end":72,"column_start":1,"column_end":75}},{"value":"! numbers of the `char` type; in contrast [`Standard`] may sample any valid","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45611,"byte_end":45688,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"! `char`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45689,"byte_end":45700,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45701,"byte_end":45704,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45705,"byte_end":45708,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! # Non-uniform probability distributions","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45709,"byte_end":45752,"line_start":77,"line_end":77,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45753,"byte_end":45756,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"! Rand currently provides the following probability distributions:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45757,"byte_end":45825,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45826,"byte_end":45829,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! - Related to real-valued quantities that grow linearly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45830,"byte_end":45888,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"!   (e.g. errors, offsets):","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45889,"byte_end":45918,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"!   - [`Normal`] distribution, and [`StandardNormal`] as a primitive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45919,"byte_end":45989,"line_start":83,"line_end":83,"column_start":1,"column_end":71}},{"value":"!   - [`Cauchy`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":45990,"byte_end":46021,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"! - Related to Bernoulli trials (yes/no events, with a given probability):","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46022,"byte_end":46098,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"!   - [`Binomial`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46099,"byte_end":46132,"line_start":86,"line_end":86,"column_start":1,"column_end":34}},{"value":"!   - [`Bernoulli`] distribution, similar to [`Rng::gen_bool`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46133,"byte_end":46198,"line_start":87,"line_end":87,"column_start":1,"column_end":66}},{"value":"! - Related to positive real-valued quantities that grow exponentially","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46199,"byte_end":46271,"line_start":88,"line_end":88,"column_start":1,"column_end":73}},{"value":"!   (e.g. prices, incomes, populations):","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46272,"byte_end":46314,"line_start":89,"line_end":89,"column_start":1,"column_end":43}},{"value":"!   - [`LogNormal`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46315,"byte_end":46349,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"! - Related to the occurrence of independent events at a given rate:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46350,"byte_end":46420,"line_start":91,"line_end":91,"column_start":1,"column_end":71}},{"value":"!   - [`Poisson`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46421,"byte_end":46453,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"!   - [`Exp`]onential distribution, and [`Exp1`] as a primitive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46454,"byte_end":46519,"line_start":93,"line_end":93,"column_start":1,"column_end":66}},{"value":"! - Gamma and derived distributions:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46520,"byte_end":46558,"line_start":94,"line_end":94,"column_start":1,"column_end":39}},{"value":"!   - [`Gamma`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46559,"byte_end":46589,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"!   - [`ChiSquared`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46590,"byte_end":46625,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"!   - [`StudentT`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46626,"byte_end":46659,"line_start":97,"line_end":97,"column_start":1,"column_end":34}},{"value":"!   - [`FisherF`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46660,"byte_end":46692,"line_start":98,"line_end":98,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46693,"byte_end":46696,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46697,"byte_end":46700,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46701,"byte_end":46715,"line_start":101,"line_end":101,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46716,"byte_end":46719,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! Sampling from a distribution:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46720,"byte_end":46753,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46754,"byte_end":46757,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46758,"byte_end":46765,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"! use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46766,"byte_end":46798,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"! use rand::distributions::Exp;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46799,"byte_end":46832,"line_start":107,"line_end":107,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46833,"byte_end":46836,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"! let exp = Exp::new(2.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46837,"byte_end":46865,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"! let v = thread_rng().sample(exp);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46866,"byte_end":46903,"line_start":110,"line_end":110,"column_start":1,"column_end":38}},{"value":"! println!(\"{} is from an Exp(2) distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46904,"byte_end":46957,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46958,"byte_end":46965,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46966,"byte_end":46969,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! Implementing the [`Standard`] distribution for a user type:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":46970,"byte_end":47033,"line_start":114,"line_end":114,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47034,"byte_end":47037,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47038,"byte_end":47045,"line_start":116,"line_end":116,"column_start":1,"column_end":8}},{"value":"! # #![allow(dead_code)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47046,"byte_end":47072,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"! use rand::Rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47073,"byte_end":47091,"line_start":118,"line_end":118,"column_start":1,"column_end":19}},{"value":"! use rand::distributions::{Distribution, Standard};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47092,"byte_end":47146,"line_start":119,"line_end":119,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47147,"byte_end":47150,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"! struct MyF32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47151,"byte_end":47169,"line_start":121,"line_end":121,"column_start":1,"column_end":19}},{"value":"!     x: f32,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47170,"byte_end":47185,"line_start":122,"line_end":122,"column_start":1,"column_end":16}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47186,"byte_end":47191,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47192,"byte_end":47195,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"! impl Distribution<MyF32> for Standard {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47196,"byte_end":47239,"line_start":125,"line_end":125,"column_start":1,"column_end":44}},{"value":"!     fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> MyF32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47240,"byte_end":47305,"line_start":126,"line_end":126,"column_start":1,"column_end":66}},{"value":"!         MyF32 { x: rng.gen() }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47306,"byte_end":47340,"line_start":127,"line_end":127,"column_start":1,"column_end":35}},{"value":"!     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47341,"byte_end":47350,"line_start":128,"line_end":128,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47351,"byte_end":47356,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47357,"byte_end":47364,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47365,"byte_end":47368,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47369,"byte_end":47372,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! [probability distribution]: https://en.wikipedia.org/wiki/Probability_distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47373,"byte_end":47459,"line_start":133,"line_end":133,"column_start":1,"column_end":87}},{"value":"! [`Distribution`]: trait.Distribution.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47460,"byte_end":47505,"line_start":134,"line_end":134,"column_start":1,"column_end":46}},{"value":"! [`gen_range`]: ../trait.Rng.html#method.gen_range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47506,"byte_end":47559,"line_start":135,"line_end":135,"column_start":1,"column_end":54}},{"value":"! [`gen`]: ../trait.Rng.html#method.gen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47560,"byte_end":47601,"line_start":136,"line_end":136,"column_start":1,"column_end":42}},{"value":"! [`sample`]: ../trait.Rng.html#method.sample","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47602,"byte_end":47649,"line_start":137,"line_end":137,"column_start":1,"column_end":48}},{"value":"! [`new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47650,"byte_end":47713,"line_start":138,"line_end":138,"column_start":1,"column_end":64}},{"value":"! [`random()`]: ../fn.random.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47714,"byte_end":47749,"line_start":139,"line_end":139,"column_start":1,"column_end":36}},{"value":"! [`Rng::gen_bool`]: ../trait.Rng.html#method.gen_bool","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47750,"byte_end":47806,"line_start":140,"line_end":140,"column_start":1,"column_end":57}},{"value":"! [`Rng::gen_range`]: ../trait.Rng.html#method.gen_range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47807,"byte_end":47865,"line_start":141,"line_end":141,"column_start":1,"column_end":59}},{"value":"! [`Rng::gen()`]: ../trait.Rng.html#method.gen","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47866,"byte_end":47914,"line_start":142,"line_end":142,"column_start":1,"column_end":49}},{"value":"! [`Rng`]: ../trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47915,"byte_end":47945,"line_start":143,"line_end":143,"column_start":1,"column_end":31}},{"value":"! [`uniform` module]: uniform/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47946,"byte_end":47988,"line_start":144,"line_end":144,"column_start":1,"column_end":43}},{"value":"! [Floating point implementation]: struct.Standard.html#floating-point-implementation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":47989,"byte_end":48076,"line_start":145,"line_end":145,"column_start":1,"column_end":88}},{"value":"! [`Alphanumeric`]: struct.Alphanumeric.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48094,"byte_end":48140,"line_start":147,"line_end":147,"column_start":1,"column_end":47}},{"value":"! [`Bernoulli`]: struct.Bernoulli.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48141,"byte_end":48181,"line_start":148,"line_end":148,"column_start":1,"column_end":41}},{"value":"! [`Binomial`]: struct.Binomial.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48182,"byte_end":48220,"line_start":149,"line_end":149,"column_start":1,"column_end":39}},{"value":"! [`Cauchy`]: struct.Cauchy.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48221,"byte_end":48255,"line_start":150,"line_end":150,"column_start":1,"column_end":35}},{"value":"! [`ChiSquared`]: struct.ChiSquared.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48256,"byte_end":48298,"line_start":151,"line_end":151,"column_start":1,"column_end":43}},{"value":"! [`Exp`]: struct.Exp.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48299,"byte_end":48327,"line_start":152,"line_end":152,"column_start":1,"column_end":29}},{"value":"! [`Exp1`]: struct.Exp1.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48328,"byte_end":48358,"line_start":153,"line_end":153,"column_start":1,"column_end":31}},{"value":"! [`FisherF`]: struct.FisherF.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48359,"byte_end":48395,"line_start":154,"line_end":154,"column_start":1,"column_end":37}},{"value":"! [`Gamma`]: struct.Gamma.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48396,"byte_end":48428,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"! [`LogNormal`]: struct.LogNormal.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48429,"byte_end":48469,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"! [`Normal`]: struct.Normal.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48470,"byte_end":48504,"line_start":157,"line_end":157,"column_start":1,"column_end":35}},{"value":"! [`Open01`]: struct.Open01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48505,"byte_end":48539,"line_start":158,"line_end":158,"column_start":1,"column_end":35}},{"value":"! [`OpenClosed01`]: struct.OpenClosed01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48540,"byte_end":48586,"line_start":159,"line_end":159,"column_start":1,"column_end":47}},{"value":"! [`Pareto`]: struct.Pareto.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48587,"byte_end":48621,"line_start":160,"line_end":160,"column_start":1,"column_end":35}},{"value":"! [`Poisson`]: struct.Poisson.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48622,"byte_end":48658,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"! [`Standard`]: struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48659,"byte_end":48697,"line_start":162,"line_end":162,"column_start":1,"column_end":39}},{"value":"! [`StandardNormal`]: struct.StandardNormal.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48698,"byte_end":48748,"line_start":163,"line_end":163,"column_start":1,"column_end":51}},{"value":"! [`StudentT`]: struct.StudentT.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48749,"byte_end":48787,"line_start":164,"line_end":164,"column_start":1,"column_end":39}},{"value":"! [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48788,"byte_end":48824,"line_start":165,"line_end":165,"column_start":1,"column_end":37}},{"value":"! [`Uniform::new`]: struct.Uniform.html#method.new","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48825,"byte_end":48877,"line_start":166,"line_end":166,"column_start":1,"column_end":53}},{"value":"! [`Uniform::new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":48878,"byte_end":48950,"line_start":167,"line_end":167,"column_start":1,"column_end":73}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"uniform","qualname":"::distributions::uniform","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":1142},{"krate":0,"index":1150},{"krate":0,"index":1148},{"krate":0,"index":1145},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":66},{"krate":0,"index":1153},{"krate":0,"index":1163},{"krate":0,"index":1161},{"krate":0,"index":1158},{"krate":0,"index":69},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":75},{"krate":0,"index":1275},{"krate":0,"index":76},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1291},{"krate":0,"index":1289},{"krate":0,"index":1286},{"krate":0,"index":77},{"krate":0,"index":1294},{"krate":0,"index":1296},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1314},{"krate":0,"index":1320},{"krate":0,"index":1319},{"krate":0,"index":1317},{"krate":0,"index":1322},{"krate":0,"index":1331},{"krate":0,"index":1330},{"krate":0,"index":1328},{"krate":0,"index":78},{"krate":0,"index":80}],"decl_id":null,"docs":" A distribution uniformly sampling numbers within a given range.","sig":null,"attributes":[{"value":"! A distribution uniformly sampling numbers within a given range.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71679,"byte_end":71746,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71747,"byte_end":71750,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! [`Uniform`] is the standard distribution to sample uniformly from a range;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71751,"byte_end":71829,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"! e.g. `Uniform::new_inclusive(1, 6)` can sample integers from 1 to 6, like a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71830,"byte_end":71909,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! standard die. [`Rng::gen_range`] supports any type supported by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71910,"byte_end":71977,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"! [`Uniform`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71978,"byte_end":71994,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71995,"byte_end":71998,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! This distribution is provided with support for several primitive types","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":71999,"byte_end":72073,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"! (all integer and floating-point types) as well as `std::time::Duration`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72074,"byte_end":72150,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"! and supports extension to user-defined types via a type-specific *back-end*","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72151,"byte_end":72230,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"! implementation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72231,"byte_end":72250,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72251,"byte_end":72254,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! The types [`UniformInt`], [`UniformFloat`] and [`UniformDuration`] are the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72255,"byte_end":72333,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"! back-ends supporting sampling from primitive integer and floating-point","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72334,"byte_end":72409,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"! ranges as well as from `std::time::Duration`; these types do not normally","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72410,"byte_end":72487,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"! need to be used directly (unless implementing a derived back-end).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72488,"byte_end":72558,"line_start":26,"line_end":26,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72559,"byte_end":72562,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! # Example usage","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72563,"byte_end":72582,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72583,"byte_end":72586,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72587,"byte_end":72594,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"! use rand::{Rng, thread_rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72595,"byte_end":72627,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"! use rand::distributions::Uniform;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72628,"byte_end":72665,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"! ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72666,"byte_end":72670,"line_start":33,"line_end":33,"column_start":1,"column_end":5}},{"value":"! let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72671,"byte_end":72702,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"! let side = Uniform::new(-10.0, 10.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72703,"byte_end":72744,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"! ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72745,"byte_end":72749,"line_start":36,"line_end":36,"column_start":1,"column_end":5}},{"value":"! // sample between 1 and 10 points","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72750,"byte_end":72787,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"! for _ in 0..rng.gen_range(1, 11) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72788,"byte_end":72826,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"!     // sample a point from the square with sides -10 - 10 in two dimensions","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72827,"byte_end":72906,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"!     let (x, y) = (rng.sample(side), rng.sample(side));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72907,"byte_end":72965,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"!     println!(\"Point: {}, {}\", x, y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":72966,"byte_end":73006,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73007,"byte_end":73012,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73013,"byte_end":73020,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73021,"byte_end":73024,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! # Extending `Uniform` to support a custom type","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73025,"byte_end":73075,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73076,"byte_end":73079,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! To extend [`Uniform`] to support your own types, write a back-end which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73080,"byte_end":73155,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"! implements the [`UniformSampler`] trait, then implement the [`SampleUniform`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73156,"byte_end":73237,"line_start":48,"line_end":48,"column_start":1,"column_end":82}},{"value":"! helper trait to \"register\" your back-end. See the `MyF32` example below.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73238,"byte_end":73314,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73315,"byte_end":73318,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! At a minimum, the back-end needs to store any parameters needed for sampling","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73319,"byte_end":73399,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"! (e.g. the target range) and implement `new`, `new_inclusive` and `sample`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73400,"byte_end":73478,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"! Those methods should include an assert to check the range is valid (i.e.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73479,"byte_end":73555,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"! `low < high`). The example below merely wraps another back-end.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73556,"byte_end":73623,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73624,"byte_end":73627,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73628,"byte_end":73635,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73636,"byte_end":73661,"line_start":57,"line_end":57,"column_start":1,"column_end":26}},{"value":"! use rand::distributions::uniform::{Uniform, SampleUniform,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73662,"byte_end":73724,"line_start":58,"line_end":58,"column_start":1,"column_end":63}},{"value":"!         UniformSampler, UniformFloat};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73725,"byte_end":73767,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73768,"byte_end":73771,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! struct MyF32(f32);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73772,"byte_end":73794,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73795,"byte_end":73798,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! #[derive(Clone, Copy, Debug)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73799,"byte_end":73832,"line_start":63,"line_end":63,"column_start":1,"column_end":34}},{"value":"! struct UniformMyF32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73833,"byte_end":73858,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"!     inner: UniformFloat<f32>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73859,"byte_end":73892,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73893,"byte_end":73898,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73899,"byte_end":73902,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! impl UniformSampler for UniformMyF32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73903,"byte_end":73945,"line_start":68,"line_end":68,"column_start":1,"column_end":43}},{"value":"!     type X = MyF32;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73946,"byte_end":73969,"line_start":69,"line_end":69,"column_start":1,"column_end":24}},{"value":"!     fn new(low: Self::X, high: Self::X) -> Self {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":73970,"byte_end":74023,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"!         UniformMyF32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74024,"byte_end":74050,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"!             inner: UniformFloat::<f32>::new(low.0, high.0),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74051,"byte_end":74114,"line_start":72,"line_end":72,"column_start":1,"column_end":64}},{"value":"!         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74115,"byte_end":74128,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"!     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74129,"byte_end":74138,"line_start":74,"line_end":74,"column_start":1,"column_end":10}},{"value":"!     fn new_inclusive(low: Self::X, high: Self::X) -> Self {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74139,"byte_end":74202,"line_start":75,"line_end":75,"column_start":1,"column_end":64}},{"value":"!         UniformSampler::new(low, high)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74203,"byte_end":74245,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"!     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74246,"byte_end":74255,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"!     fn sample<R: Rng + ?Sized>(&self, rng: &mut R) -> Self::X {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74256,"byte_end":74323,"line_start":78,"line_end":78,"column_start":1,"column_end":68}},{"value":"!         MyF32(self.inner.sample(rng))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74324,"byte_end":74365,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74366,"byte_end":74375,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74376,"byte_end":74381,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74382,"byte_end":74385,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! impl SampleUniform for MyF32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74386,"byte_end":74420,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"!     type Sampler = UniformMyF32;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74421,"byte_end":74457,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"! }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74458,"byte_end":74463,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74464,"byte_end":74467,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"! let (low, high) = (MyF32(17.0f32), MyF32(22.0f32));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74468,"byte_end":74523,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"! let uniform = Uniform::new(low, high);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74524,"byte_end":74566,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"! let x = uniform.sample(&mut thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74567,"byte_end":74613,"line_start":89,"line_end":89,"column_start":1,"column_end":47}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74614,"byte_end":74621,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74622,"byte_end":74625,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74626,"byte_end":74662,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"! [`Rng::gen_range`]: ../../trait.Rng.html#method.gen_range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74663,"byte_end":74724,"line_start":93,"line_end":93,"column_start":1,"column_end":62}},{"value":"! [`SampleUniform`]: trait.SampleUniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74725,"byte_end":74772,"line_start":94,"line_end":94,"column_start":1,"column_end":48}},{"value":"! [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74773,"byte_end":74822,"line_start":95,"line_end":95,"column_start":1,"column_end":50}},{"value":"! [`UniformInt`]: struct.UniformInt.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74823,"byte_end":74865,"line_start":96,"line_end":96,"column_start":1,"column_end":43}},{"value":"! [`UniformFloat`]: struct.UniformFloat.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74866,"byte_end":74912,"line_start":97,"line_end":97,"column_start":1,"column_end":47}},{"value":"! [`UniformDuration`]: struct.UniformDuration.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":74913,"byte_end":74965,"line_start":98,"line_end":98,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":1142},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76985,"byte_end":76992,"line_start":151,"line_end":151,"column_start":12,"column_end":19},"name":"Uniform","qualname":"::distributions::uniform::Uniform","value":"Uniform {  }","parent":null,"children":[{"krate":0,"index":1144}],"decl_id":null,"docs":" Sample values uniformly between two bounds.","sig":null,"attributes":[{"value":"/ Sample values uniformly between two bounds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75097,"byte_end":75144,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75145,"byte_end":75148,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [`Uniform::new`] and [`Uniform::new_inclusive`] construct a uniform","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75149,"byte_end":75220,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ distribution sampling from the given range; these functions may do extra","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75221,"byte_end":75297,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ work up front to make sampling of multiple values faster.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75298,"byte_end":75359,"line_start":111,"line_end":111,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75360,"byte_end":75363,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ When sampling from a constant range, many calculations can happen at","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75364,"byte_end":75436,"line_start":113,"line_end":113,"column_start":1,"column_end":73}},{"value":"/ compile-time and all methods should be fast; for floating-point ranges and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75437,"byte_end":75515,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"/ the full range of integer types this should have comparable performance to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75516,"byte_end":75594,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ the `Standard` distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75595,"byte_end":75627,"line_start":116,"line_end":116,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75628,"byte_end":75631,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ Steps are taken to avoid bias which might be present in naive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75632,"byte_end":75697,"line_start":118,"line_end":118,"column_start":1,"column_end":66}},{"value":"/ implementations; for example `rng.gen::<u8>() % 170` samples from the range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75698,"byte_end":75777,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ `[0, 169]` but is twice as likely to select numbers less than 85 than other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75778,"byte_end":75857,"line_start":120,"line_end":120,"column_start":1,"column_end":80}},{"value":"/ values. Further, the implementations here give more weight to the high-bits","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75858,"byte_end":75937,"line_start":121,"line_end":121,"column_start":1,"column_end":80}},{"value":"/ generated by the RNG than the low bits, since with some RNGs the low-bits","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":75938,"byte_end":76015,"line_start":122,"line_end":122,"column_start":1,"column_end":78}},{"value":"/ are of lower quality than the high bits.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76016,"byte_end":76060,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76061,"byte_end":76064,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Implementations should attempt to sample in `[low, high)` for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76065,"byte_end":76130,"line_start":125,"line_end":125,"column_start":1,"column_end":66}},{"value":"/ `Uniform::new(low, high)`, i.e., excluding `high`, but this may be very","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76131,"byte_end":76206,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ difficult. All the primitive integer types satisfy this property, and the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76207,"byte_end":76284,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ float types normally satisfy it, but rounding may mean `high` can occur.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76285,"byte_end":76361,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76362,"byte_end":76365,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76366,"byte_end":76379,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76380,"byte_end":76383,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76384,"byte_end":76391,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Distribution, Uniform};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76392,"byte_end":76445,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76446,"byte_end":76449,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76450,"byte_end":76465,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/     let between = Uniform::from(10..10000);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76466,"byte_end":76513,"line_start":136,"line_end":136,"column_start":1,"column_end":48}},{"value":"/     let mut rng = rand::thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76514,"byte_end":76555,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/     let mut sum = 0;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76556,"byte_end":76580,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/     for _ in 0..1000 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76581,"byte_end":76607,"line_start":139,"line_end":139,"column_start":1,"column_end":27}},{"value":"/         sum += between.sample(&mut rng);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76608,"byte_end":76652,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76653,"byte_end":76662,"line_start":141,"line_end":141,"column_start":1,"column_end":10}},{"value":"/     println!(\"{}\", sum);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76663,"byte_end":76691,"line_start":142,"line_end":142,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76692,"byte_end":76697,"line_start":143,"line_end":143,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76698,"byte_end":76705,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76706,"byte_end":76709,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [`Uniform::new`]: struct.Uniform.html#method.new","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76710,"byte_end":76762,"line_start":146,"line_end":146,"column_start":1,"column_end":53}},{"value":"/ [`Uniform::new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76763,"byte_end":76835,"line_start":147,"line_end":147,"column_start":1,"column_end":73}},{"value":"/ [`new`]: struct.Uniform.html#method.new","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76836,"byte_end":76879,"line_start":148,"line_end":148,"column_start":1,"column_end":44}},{"value":"/ [`new_inclusive`]: struct.Uniform.html#method.new_inclusive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":76880,"byte_end":76943,"line_start":149,"line_end":149,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77242,"byte_end":77245,"line_start":158,"line_end":158,"column_start":12,"column_end":15},"name":"new","qualname":"<Uniform<X>>::new","value":"fn (low: X, high: X) -> Uniform<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the half\n open range `[low, high)` (excluding `high`). Panics if `low >= high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uniform` instance which samples uniformly from the half","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77079,"byte_end":77152,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ open range `[low, high)` (excluding `high`). Panics if `low >= high`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77157,"byte_end":77230,"line_start":157,"line_end":157,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77496,"byte_end":77509,"line_start":164,"line_end":164,"column_start":12,"column_end":25},"name":"new_inclusive","qualname":"<Uniform<X>>::new_inclusive","value":"fn (low: X, high: X) -> Uniform<X>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Uniform` instance which samples uniformly from the closed\n range `[low, high]` (inclusive). Panics if `low > high`.\n","sig":null,"attributes":[{"value":"/ Create a new `Uniform` instance which samples uniformly from the closed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77344,"byte_end":77419,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ range `[low, high]` (inclusive). Panics if `low > high`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77424,"byte_end":77484,"line_start":163,"line_end":163,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78139,"byte_end":78152,"line_start":184,"line_end":184,"column_start":11,"column_end":24},"name":"SampleUniform","qualname":"::distributions::uniform::SampleUniform","value":"SampleUniform: Sized","parent":null,"children":[{"krate":0,"index":57}],"decl_id":null,"docs":" Helper trait for creating objects using the correct implementation of\n [`UniformSampler`] for the sampling type.","sig":null,"attributes":[{"value":"/ Helper trait for creating objects using the correct implementation of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77770,"byte_end":77843,"line_start":175,"line_end":175,"column_start":1,"column_end":74}},{"value":"/ [`UniformSampler`] for the sampling type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77844,"byte_end":77889,"line_start":176,"line_end":176,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77890,"byte_end":77893,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] on how to implement [`Uniform`] range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77894,"byte_end":77966,"line_start":178,"line_end":178,"column_start":1,"column_end":73}},{"value":"/ sampling for a custom type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77967,"byte_end":77998,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77999,"byte_end":78002,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78003,"byte_end":78052,"line_start":181,"line_end":181,"column_start":1,"column_end":50}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78053,"byte_end":78091,"line_start":182,"line_end":182,"column_start":1,"column_end":39}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78092,"byte_end":78128,"line_start":183,"line_end":183,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78236,"byte_end":78243,"line_start":186,"line_end":186,"column_start":10,"column_end":17},"name":"Sampler","qualname":"::distributions::uniform::SampleUniform::Sampler","value":"type Sampler: UniformSampler<X = Self>;","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" The `UniformSampler` implementation supporting type `X`.\n","sig":null,"attributes":[{"value":"/ The `UniformSampler` implementation supporting type `X`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78166,"byte_end":78226,"line_start":185,"line_end":185,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":58},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78753,"byte_end":78767,"line_start":200,"line_end":200,"column_start":11,"column_end":25},"name":"UniformSampler","qualname":"::distributions::uniform::UniformSampler","value":"UniformSampler: Sized","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":64}],"decl_id":null,"docs":" Helper trait handling actual uniform sampling.","sig":null,"attributes":[{"value":"/ Helper trait handling actual uniform sampling.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78274,"byte_end":78324,"line_start":189,"line_end":189,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78325,"byte_end":78328,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ See the [module documentation] on how to implement [`Uniform`] range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78329,"byte_end":78401,"line_start":191,"line_end":191,"column_start":1,"column_end":73}},{"value":"/ sampling for a custom type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78402,"byte_end":78433,"line_start":192,"line_end":192,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78434,"byte_end":78437,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ Implementation of [`sample_single`] is optional, and is only useful when","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78438,"byte_end":78514,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ the implementation can be faster than `Self::new(low, high).sample(rng)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78515,"byte_end":78592,"line_start":195,"line_end":195,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78593,"byte_end":78596,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [module documentation]: index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78597,"byte_end":78635,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78636,"byte_end":78672,"line_start":198,"line_end":198,"column_start":1,"column_end":37}},{"value":"/ [`sample_single`]: trait.UniformSampler.html#method.sample_single","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78673,"byte_end":78742,"line_start":199,"line_end":199,"column_start":1,"column_end":70}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78835,"byte_end":78836,"line_start":202,"line_end":202,"column_start":10,"column_end":11},"name":"X","qualname":"::distributions::uniform::UniformSampler::X","value":"type X;","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The type sampled by this implementation.\n","sig":null,"attributes":[{"value":"/ The type sampled by this implementation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78781,"byte_end":78825,"line_start":201,"line_end":201,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79099,"byte_end":79102,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"new","qualname":"::distributions::uniform::UniformSampler::new","value":"fn (low: Self::X, high: Self::X) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Construct self, with inclusive lower bound and exclusive upper bound\n `[low, high)`.","sig":null,"attributes":[{"value":"/ Construct self, with inclusive lower bound and exclusive upper bound","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78843,"byte_end":78915,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/ `[low, high)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78920,"byte_end":78938,"line_start":205,"line_end":205,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78943,"byte_end":78946,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78951,"byte_end":79014,"line_start":207,"line_end":207,"column_start":5,"column_end":68}},{"value":"/ `Uniform::new`, which asserts that `low < high` before calling this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79019,"byte_end":79091,"line_start":208,"line_end":208,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79382,"byte_end":79395,"line_start":216,"line_end":216,"column_start":8,"column_end":21},"name":"new_inclusive","qualname":"::distributions::uniform::UniformSampler::new_inclusive","value":"fn (low: Self::X, high: Self::X) -> Self","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Construct self, with inclusive bounds `[low, high]`.","sig":null,"attributes":[{"value":"/ Construct self, with inclusive bounds `[low, high]`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79146,"byte_end":79202,"line_start":211,"line_end":211,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79207,"byte_end":79210,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79215,"byte_end":79278,"line_start":213,"line_end":213,"column_start":5,"column_end":68}},{"value":"/ `Uniform::new_inclusive`, which asserts that `low <= high` before","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79283,"byte_end":79352,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ calling this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79357,"byte_end":79374,"line_start":215,"line_end":215,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79466,"byte_end":79472,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::uniform::UniformSampler::sample","value":"fn <R> (&self, rng: &mut R) -> Self::X","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Sample a value.\n","sig":null,"attributes":[{"value":"/ Sample a value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79439,"byte_end":79458,"line_start":218,"line_end":218,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80084,"byte_end":80097,"line_start":232,"line_end":232,"column_start":8,"column_end":21},"name":"sample_single","qualname":"::distributions::uniform::UniformSampler::sample_single","value":"fn <R> (low: Self::X, high: Self::X, rng: &mut R) -> Self::X","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" Sample a single value uniformly from a range with inclusive lower bound\n and exclusive upper bound `[low, high)`.","sig":null,"attributes":[{"value":"/ Sample a single value uniformly from a range with inclusive lower bound","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79527,"byte_end":79602,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ and exclusive upper bound `[low, high)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79607,"byte_end":79651,"line_start":222,"line_end":222,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79656,"byte_end":79659,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Usually users should not call this directly but instead use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79664,"byte_end":79727,"line_start":224,"line_end":224,"column_start":5,"column_end":68}},{"value":"/ `Uniform::sample_single`, which asserts that `low < high` before calling","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79732,"byte_end":79808,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79813,"byte_end":79822,"line_start":226,"line_end":226,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79827,"byte_end":79830,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Via this method, implementations can provide a method optimized for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79835,"byte_end":79906,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ sampling only a single value from the specified range. The default","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79911,"byte_end":79981,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ implementation simply calls `UniformSampler::new` then `sample` on the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":79986,"byte_end":80060,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80065,"byte_end":80076,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82759,"byte_end":82769,"line_start":291,"line_end":291,"column_start":12,"column_end":22},"name":"UniformInt","qualname":"::distributions::uniform::UniformInt","value":"UniformInt {  }","parent":null,"children":[{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for integer types.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for integer types.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80566,"byte_end":80633,"line_start":251,"line_end":251,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80634,"byte_end":80637,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80638,"byte_end":80717,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80718,"byte_end":80775,"line_start":254,"line_end":254,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80776,"byte_end":80779,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80780,"byte_end":80806,"line_start":256,"line_end":256,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80807,"byte_end":80810,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ For a closed range, the number of possible numbers we should generate is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80811,"byte_end":80887,"line_start":258,"line_end":258,"column_start":1,"column_end":77}},{"value":"/ `range = (high - low + 1)`. It is not possible to end up with a uniform","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80888,"byte_end":80963,"line_start":259,"line_end":259,"column_start":1,"column_end":76}},{"value":"/ distribution if we map *all* the random integers that can be generated to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80964,"byte_end":81041,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"/ this range. We have to map integers from a `zone` that is a multiple of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81042,"byte_end":81121,"line_start":261,"line_end":261,"column_start":1,"column_end":80}},{"value":"/ range. The rest of the integers, that cause a bias, are rejected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81122,"byte_end":81191,"line_start":262,"line_end":262,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81192,"byte_end":81195,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ The problem with `range` is that to cover the full range of the type, it has","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81196,"byte_end":81276,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"/ to store `unsigned_max + 1`, which can't be represented. But if the range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81277,"byte_end":81354,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/ covers the full range of the type, no modulus is needed. A range of size 0","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81355,"byte_end":81433,"line_start":266,"line_end":266,"column_start":1,"column_end":79}},{"value":"/ can't exist, so we use that to represent this special case. Wrapping","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81434,"byte_end":81506,"line_start":267,"line_end":267,"column_start":1,"column_end":73}},{"value":"/ arithmetic even makes representing `unsigned_max + 1` as 0 simple.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81507,"byte_end":81577,"line_start":268,"line_end":268,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81578,"byte_end":81581,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ We don't calculate `zone` directly, but first calculate the number of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81582,"byte_end":81655,"line_start":270,"line_end":270,"column_start":1,"column_end":74}},{"value":"/ integers to reject. To handle `unsigned_max + 1` not fitting in the type,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81656,"byte_end":81733,"line_start":271,"line_end":271,"column_start":1,"column_end":78}},{"value":"/ we use:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81734,"byte_end":81745,"line_start":272,"line_end":272,"column_start":1,"column_end":12}},{"value":"/ `ints_to_reject = (unsigned_max + 1) % range;`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81746,"byte_end":81796,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ `ints_to_reject = (unsigned_max - range + 1) % range;`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81797,"byte_end":81855,"line_start":274,"line_end":274,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81856,"byte_end":81859,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The smallest integer PRNGs generate is `u32`. That is why for small integer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81860,"byte_end":81939,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/ sizes (`i8`/`u8` and `i16`/`u16`) there is an optimization: don't pick the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":81940,"byte_end":82018,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ largest zone that can fit in the small type, but pick the largest zone that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82019,"byte_end":82098,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ can fit in an `u32`. `ints_to_reject` is always less than half the size of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82099,"byte_end":82177,"line_start":279,"line_end":279,"column_start":1,"column_end":79}},{"value":"/ the small integer. This means the first bit of `zone` is always 1, and so","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82178,"byte_end":82255,"line_start":280,"line_end":280,"column_start":1,"column_end":78}},{"value":"/ are all the other preceding bits of a larger integer. The easiest way to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82256,"byte_end":82332,"line_start":281,"line_end":281,"column_start":1,"column_end":77}},{"value":"/ grow the `zone` for the larger type is to simply sign extend it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82333,"byte_end":82401,"line_start":282,"line_end":282,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82402,"byte_end":82405,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ An alternative to using a modulus is widening multiply: After a widening","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82406,"byte_end":82482,"line_start":284,"line_end":284,"column_start":1,"column_end":77}},{"value":"/ multiply by `range`, the result is in the high word. Then comparing the low","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82483,"byte_end":82562,"line_start":285,"line_end":285,"column_start":1,"column_end":80}},{"value":"/ word against `zone` makes sure our distribution is uniform.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82563,"byte_end":82626,"line_start":286,"line_end":286,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82627,"byte_end":82630,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82631,"byte_end":82680,"line_start":288,"line_end":288,"column_start":1,"column_end":50}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":82681,"byte_end":82717,"line_start":289,"line_end":289,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":87787,"byte_end":87793,"line_start":414,"line_end":414,"column_start":10,"column_end":16},"name":"Output","qualname":"::distributions::uniform::WideningMultiply::Output","value":"type Output;","parent":{"krate":0,"index":70},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1282},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91439,"byte_end":91451,"line_start":521,"line_end":521,"column_start":12,"column_end":24},"name":"UniformFloat","qualname":"::distributions::uniform::UniformFloat","value":"UniformFloat {  }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for floating-point types.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for floating-point types.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90213,"byte_end":90287,"line_start":495,"line_end":495,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90288,"byte_end":90291,"line_start":496,"line_end":496,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own type, this type","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90292,"byte_end":90371,"line_start":497,"line_end":497,"column_start":1,"column_end":80}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90372,"byte_end":90429,"line_start":498,"line_end":498,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90430,"byte_end":90433,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ # Implementation notes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90434,"byte_end":90460,"line_start":500,"line_end":500,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90461,"byte_end":90464,"line_start":501,"line_end":501,"column_start":1,"column_end":4}},{"value":"/ Instead of generating a float in the `[0, 1)` range using [`Standard`], the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90465,"byte_end":90544,"line_start":502,"line_end":502,"column_start":1,"column_end":80}},{"value":"/ `UniformFloat` implementation converts the output of an PRNG itself. This","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90545,"byte_end":90622,"line_start":503,"line_end":503,"column_start":1,"column_end":78}},{"value":"/ way one or two steps can be optimized out.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90623,"byte_end":90669,"line_start":504,"line_end":504,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90670,"byte_end":90673,"line_start":505,"line_end":505,"column_start":1,"column_end":4}},{"value":"/ The floats are first converted to a value in the `[1, 2)` interval using a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90674,"byte_end":90752,"line_start":506,"line_end":506,"column_start":1,"column_end":79}},{"value":"/ transmute-based method, and then mapped to the expected range with a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90753,"byte_end":90825,"line_start":507,"line_end":507,"column_start":1,"column_end":73}},{"value":"/ multiply and addition. Values produced this way have what equals 22 bits of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90826,"byte_end":90905,"line_start":508,"line_end":508,"column_start":1,"column_end":80}},{"value":"/ random digits for an `f32`, and 52 for an `f64`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90906,"byte_end":90958,"line_start":509,"line_end":509,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90959,"byte_end":90962,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ Currently there is no difference between [`new`] and [`new_inclusive`],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":90963,"byte_end":91038,"line_start":511,"line_end":511,"column_start":1,"column_end":76}},{"value":"/ because the boundaries of a floats range are a bit of a fuzzy concept due to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91039,"byte_end":91119,"line_start":512,"line_end":512,"column_start":1,"column_end":81}},{"value":"/ rounding errors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91120,"byte_end":91140,"line_start":513,"line_end":513,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91141,"byte_end":91144,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91145,"byte_end":91194,"line_start":515,"line_end":515,"column_start":1,"column_end":50}},{"value":"/ [`new`]: trait.UniformSampler.html#tymethod.new","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91195,"byte_end":91246,"line_start":516,"line_end":516,"column_start":1,"column_end":52}},{"value":"/ [`new_inclusive`]: trait.UniformSampler.html#tymethod.new_inclusive","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91247,"byte_end":91318,"line_start":517,"line_end":517,"column_start":1,"column_end":72}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91319,"byte_end":91355,"line_start":518,"line_end":518,"column_start":1,"column_end":37}},{"value":"/ [`Standard`]: ../struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":91356,"byte_end":91397,"line_start":519,"line_end":519,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1314},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94447,"byte_end":94462,"line_start":600,"line_end":600,"column_start":12,"column_end":27},"name":"UniformDuration","qualname":"::distributions::uniform::UniformDuration","value":"UniformDuration {  }","parent":null,"children":[{"krate":0,"index":1315},{"krate":0,"index":1316}],"decl_id":null,"docs":" The back-end implementing [`UniformSampler`] for `Duration`.","sig":null,"attributes":[{"value":"/ The back-end implementing [`UniformSampler`] for `Duration`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94083,"byte_end":94147,"line_start":591,"line_end":591,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94148,"byte_end":94151,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ Unless you are implementing [`UniformSampler`] for your own types, this type","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94152,"byte_end":94232,"line_start":593,"line_end":593,"column_start":1,"column_end":81}},{"value":"/ should not be used directly, use [`Uniform`] instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94233,"byte_end":94290,"line_start":594,"line_end":594,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94291,"byte_end":94294,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ [`UniformSampler`]: trait.UniformSampler.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94295,"byte_end":94344,"line_start":596,"line_end":596,"column_start":1,"column_end":50}},{"value":"/ [`Uniform`]: struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94345,"byte_end":94381,"line_start":597,"line_end":597,"column_start":1,"column_end":37}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94382,"byte_end":94405,"line_start":598,"line_end":598,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":87},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gamma","qualname":"::distributions::gamma","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":1333},{"krate":0,"index":1338},{"krate":0,"index":1337},{"krate":0,"index":1335},{"krate":0,"index":1340},{"krate":0,"index":1353},{"krate":0,"index":1352},{"krate":0,"index":1350},{"krate":0,"index":1355},{"krate":0,"index":1361},{"krate":0,"index":1360},{"krate":0,"index":1358},{"krate":0,"index":1363},{"krate":0,"index":1370},{"krate":0,"index":1369},{"krate":0,"index":1367},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":1372},{"krate":0,"index":1377},{"krate":0,"index":1376},{"krate":0,"index":1374},{"krate":0,"index":1379},{"krate":0,"index":1388},{"krate":0,"index":1387},{"krate":0,"index":1385},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":1390},{"krate":0,"index":1397},{"krate":0,"index":1396},{"krate":0,"index":1394},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":1399},{"krate":0,"index":1405},{"krate":0,"index":1404},{"krate":0,"index":1402},{"krate":0,"index":121},{"krate":0,"index":123}],"decl_id":null,"docs":" The Gamma and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49837,"byte_end":49858,"line_start":193,"line_end":193,"column_start":1,"column_end":22}},{"value":"! The Gamma and derived distributions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102564,"byte_end":102604,"line_start":11,"line_end":11,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1333},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103866,"byte_end":103871,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Gamma","qualname":"::distributions::gamma::Gamma","value":"Gamma {  }","parent":null,"children":[{"krate":0,"index":1334}],"decl_id":null,"docs":" The Gamma distribution `Gamma(shape, scale)` distribution.","sig":null,"attributes":[{"value":"/ The Gamma distribution `Gamma(shape, scale)` distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102761,"byte_end":102823,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102824,"byte_end":102827,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The density function of this distribution is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102828,"byte_end":102876,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102877,"byte_end":102880,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102881,"byte_end":102892,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ f(x) =  x^(k - 1) * exp(-x / θ) / (Γ(k) * θ^k)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102893,"byte_end":102946,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102947,"byte_end":102954,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102955,"byte_end":102958,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ where `Γ` is the Gamma function, `k` is the shape and `θ` is the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":102959,"byte_end":103029,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ scale and both `k` and `θ` are strictly positive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103030,"byte_end":103084,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103085,"byte_end":103088,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The algorithm used is that described by Marsaglia & Tsang 2000[^1],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103089,"byte_end":103160,"line_start":31,"line_end":31,"column_start":1,"column_end":72}},{"value":"/ falling back to directly sampling from an Exponential for `shape","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103161,"byte_end":103229,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ == 1`, and using the boosting technique described in that paper for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103230,"byte_end":103301,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `shape < 1`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103302,"byte_end":103318,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103319,"byte_end":103322,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103323,"byte_end":103336,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103337,"byte_end":103340,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103341,"byte_end":103348,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Distribution, Gamma};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103349,"byte_end":103400,"line_start":39,"line_end":39,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103401,"byte_end":103404,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let gamma = Gamma::new(2.0, 5.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103405,"byte_end":103442,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ let v = gamma.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103443,"byte_end":103493,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ println!(\"{} is from a Gamma(2, 5) distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103494,"byte_end":103551,"line_start":43,"line_end":43,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103552,"byte_end":103559,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103560,"byte_end":103563,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [^1]: George Marsaglia and Wai Wan Tsang. 2000. \"A Simple Method for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103564,"byte_end":103636,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/       Generating Gamma Variables\" *ACM Trans. Math. Softw.* 26, 3","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103637,"byte_end":103706,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/       (September 2000), 363-372.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103707,"byte_end":103743,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/       DOI:[10.1145/358407.358414](https://doi.acm.org/10.1145/358407.358414)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":103744,"byte_end":103824,"line_start":49,"line_end":49,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105156,"byte_end":105159,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Gamma>::new","value":"fn (shape: f64, scale: f64) -> Gamma","parent":null,"children":[],"decl_id":null,"docs":" Construct an object representing the `Gamma(shape, scale)`\n distribution.","sig":null,"attributes":[{"value":"/ Construct an object representing the `Gamma(shape, scale)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":104990,"byte_end":105052,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/ distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105057,"byte_end":105074,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105079,"byte_end":105082,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Panics if `shape <= 0` or `scale <= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105087,"byte_end":105130,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105135,"byte_end":105144,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1372},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107777,"byte_end":107787,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"ChiSquared","qualname":"::distributions::gamma::ChiSquared","value":"ChiSquared {  }","parent":null,"children":[{"krate":0,"index":1373}],"decl_id":null,"docs":" The chi-squared distribution `χ²(k)`, where `k` is the degrees of\n freedom.","sig":null,"attributes":[{"value":"/ The chi-squared distribution `χ²(k)`, where `k` is the degrees of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107189,"byte_end":107260,"line_start":171,"line_end":171,"column_start":1,"column_end":70}},{"value":"/ freedom.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107261,"byte_end":107273,"line_start":172,"line_end":172,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107274,"byte_end":107277,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ For `k > 0` integral, this distribution is the sum of the squares","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107278,"byte_end":107347,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/ of `k` independent standard normal random variables. For other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107348,"byte_end":107414,"line_start":175,"line_end":175,"column_start":1,"column_end":67}},{"value":"/ `k`, this uses the equivalent characterisation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107415,"byte_end":107465,"line_start":176,"line_end":176,"column_start":1,"column_end":51}},{"value":"/ `χ²(k) = Gamma(k/2, 2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107466,"byte_end":107496,"line_start":177,"line_end":177,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107497,"byte_end":107500,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107501,"byte_end":107514,"line_start":179,"line_end":179,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107515,"byte_end":107518,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107519,"byte_end":107526,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{ChiSquared, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107527,"byte_end":107583,"line_start":182,"line_end":182,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107584,"byte_end":107587,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ let chi = ChiSquared::new(11.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107588,"byte_end":107624,"line_start":184,"line_end":184,"column_start":1,"column_end":37}},{"value":"/ let v = chi.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107625,"byte_end":107673,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"/ println!(\"{} is from a χ²(11) distribution\", v)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107674,"byte_end":107727,"line_start":186,"line_end":186,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":107728,"byte_end":107735,"line_start":187,"line_end":187,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108253,"byte_end":108256,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<ChiSquared>::new","value":"fn (k: f64) -> ChiSquared","parent":null,"children":[],"decl_id":null,"docs":" Create a new chi-squared distribution with degrees-of-freedom\n `k`. Panics if `k < 0`.\n","sig":null,"attributes":[{"value":"/ Create a new chi-squared distribution with degrees-of-freedom","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108144,"byte_end":108209,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ `k`. Panics if `k < 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108214,"byte_end":108241,"line_start":204,"line_end":204,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1390},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109360,"byte_end":109367,"line_start":244,"line_end":244,"column_start":12,"column_end":19},"name":"FisherF","qualname":"::distributions::gamma::FisherF","value":"FisherF {  }","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393}],"decl_id":null,"docs":" The Fisher F distribution `F(m, n)`.","sig":null,"attributes":[{"value":"/ The Fisher F distribution `F(m, n)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108890,"byte_end":108930,"line_start":228,"line_end":228,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108931,"byte_end":108934,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ This distribution is equivalent to the ratio of two normalised","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108935,"byte_end":109001,"line_start":230,"line_end":230,"column_start":1,"column_end":67}},{"value":"/ chi-squared distributions, that is, `F(m,n) = (χ²(m)/m) /","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109002,"byte_end":109065,"line_start":231,"line_end":231,"column_start":1,"column_end":62}},{"value":"/ (χ²(n)/n)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109066,"byte_end":109083,"line_start":232,"line_end":232,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109084,"byte_end":109087,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109088,"byte_end":109101,"line_start":234,"line_end":234,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109102,"byte_end":109105,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109106,"byte_end":109113,"line_start":236,"line_end":236,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{FisherF, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109114,"byte_end":109167,"line_start":237,"line_end":237,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109168,"byte_end":109171,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ let f = FisherF::new(2.0, 32.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109172,"byte_end":109208,"line_start":239,"line_end":239,"column_start":1,"column_end":37}},{"value":"/ let v = f.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109209,"byte_end":109255,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/ println!(\"{} is from an F(2, 32) distribution\", v)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109256,"byte_end":109310,"line_start":241,"line_end":241,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109311,"byte_end":109318,"line_start":242,"line_end":242,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109702,"byte_end":109705,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"new","qualname":"<FisherF>::new","value":"fn (m: f64, n: f64) -> FisherF","parent":null,"children":[],"decl_id":null,"docs":" Create a new `FisherF` distribution, with the given\n parameter. Panics if either `m` or `n` are not positive.\n","sig":null,"attributes":[{"value":"/ Create a new `FisherF` distribution, with the given","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109570,"byte_end":109625,"line_start":253,"line_end":253,"column_start":5,"column_end":60}},{"value":"/ parameter. Panics if either `m` or `n` are not positive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109630,"byte_end":109690,"line_start":254,"line_end":254,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1399},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110534,"byte_end":110542,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"StudentT","qualname":"::distributions::gamma::StudentT","value":"StudentT {  }","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"decl_id":null,"docs":" The Student t distribution, `t(nu)`, where `nu` is the degrees of\n freedom.","sig":null,"attributes":[{"value":"/ The Student t distribution, `t(nu)`, where `nu` is the degrees of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110182,"byte_end":110251,"line_start":272,"line_end":272,"column_start":1,"column_end":70}},{"value":"/ freedom.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110252,"byte_end":110264,"line_start":273,"line_end":273,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110265,"byte_end":110268,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110269,"byte_end":110282,"line_start":275,"line_end":275,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110283,"byte_end":110286,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110287,"byte_end":110294,"line_start":277,"line_end":277,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{StudentT, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110295,"byte_end":110349,"line_start":278,"line_end":278,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110350,"byte_end":110353,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ let t = StudentT::new(11.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110354,"byte_end":110386,"line_start":280,"line_end":280,"column_start":1,"column_end":33}},{"value":"/ let v = t.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110387,"byte_end":110433,"line_start":281,"line_end":281,"column_start":1,"column_end":47}},{"value":"/ println!(\"{} is from a t(11) distribution\", v)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110434,"byte_end":110484,"line_start":282,"line_end":282,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110485,"byte_end":110492,"line_start":283,"line_end":283,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110710,"byte_end":110713,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"new","qualname":"<StudentT>::new","value":"fn (n: f64) -> StudentT","parent":null,"children":[],"decl_id":null,"docs":" Create a new Student t distribution with `n` degrees of\n freedom. Panics if `n <= 0`.\n","sig":null,"attributes":[{"value":"/ Create a new Student t distribution with `n` degrees of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110602,"byte_end":110661,"line_start":291,"line_end":291,"column_start":5,"column_end":64}},{"value":"/ freedom. Panics if `n <= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110666,"byte_end":110698,"line_start":292,"line_end":292,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":126},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"normal","qualname":"::distributions::normal","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":1407},{"krate":0,"index":1412},{"krate":0,"index":1411},{"krate":0,"index":1409},{"krate":0,"index":133},{"krate":0,"index":1414},{"krate":0,"index":1420},{"krate":0,"index":1419},{"krate":0,"index":1417},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":1422},{"krate":0,"index":1427},{"krate":0,"index":1426},{"krate":0,"index":1424},{"krate":0,"index":144},{"krate":0,"index":146}],"decl_id":null,"docs":" The normal and derived distributions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49889,"byte_end":49910,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"! The normal and derived distributions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":112773,"byte_end":112814,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113667,"byte_end":113681,"line_start":38,"line_end":38,"column_start":12,"column_end":26},"name":"StandardNormal","qualname":"::distributions::normal::StandardNormal","value":"","parent":null,"children":[],"decl_id":null,"docs":" Samples floating-point numbers according to the normal distribution\n `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to\n `Normal::new(0.0, 1.0)` but faster.","sig":null,"attributes":[{"value":"/ Samples floating-point numbers according to the normal distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":112896,"byte_end":112967,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":112968,"byte_end":113044,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ `Normal::new(0.0, 1.0)` but faster.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113045,"byte_end":113084,"line_start":18,"line_end":18,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113085,"byte_end":113088,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ See `Normal` for the general normal distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113089,"byte_end":113142,"line_start":20,"line_end":20,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113143,"byte_end":113146,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Implemented via the ZIGNOR variant[^1] of the Ziggurat method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113147,"byte_end":113213,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113214,"byte_end":113217,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [^1]: Jurgen A. Doornik (2005). [*An Improved Ziggurat Method to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113218,"byte_end":113286,"line_start":24,"line_end":24,"column_start":1,"column_end":69}},{"value":"/       Generate Normal Random Samples*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113287,"byte_end":113330,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/       https://www.doornik.com/research/ziggurat.pdf).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113331,"byte_end":113388,"line_start":26,"line_end":26,"column_start":1,"column_end":58}},{"value":"/       Nuffield College, Oxford","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113389,"byte_end":113423,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113424,"byte_end":113427,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113428,"byte_end":113441,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113442,"byte_end":113449,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113450,"byte_end":113475,"line_start":31,"line_end":31,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::StandardNormal;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113476,"byte_end":113520,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113521,"byte_end":113524,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let val: f64 = SmallRng::from_entropy().sample(StandardNormal);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113525,"byte_end":113592,"line_start":34,"line_end":34,"column_start":1,"column_end":68}},{"value":"/ println!(\"{}\", val);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113593,"byte_end":113617,"line_start":35,"line_end":35,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113618,"byte_end":113625,"line_start":36,"line_end":36,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1414},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115325,"byte_end":115331,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"Normal","qualname":"::distributions::normal::Normal","value":"Normal {  }","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416}],"decl_id":null,"docs":" The normal distribution `N(mean, std_dev**2)`.","sig":null,"attributes":[{"value":"/ The normal distribution `N(mean, std_dev**2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":114853,"byte_end":114903,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":114904,"byte_end":114907,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This uses the ZIGNOR variant of the Ziggurat method, see `StandardNormal`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":114908,"byte_end":114985,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ for more details.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":114986,"byte_end":115007,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115008,"byte_end":115011,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115012,"byte_end":115025,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115026,"byte_end":115029,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115030,"byte_end":115037,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Normal, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115038,"byte_end":115090,"line_start":83,"line_end":83,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115091,"byte_end":115094,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ // mean 2, standard deviation 3","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115095,"byte_end":115130,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/ let normal = Normal::new(2.0, 3.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115131,"byte_end":115170,"line_start":86,"line_end":86,"column_start":1,"column_end":40}},{"value":"/ let v = normal.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115171,"byte_end":115222,"line_start":87,"line_end":87,"column_start":1,"column_end":52}},{"value":"/ println!(\"{} is from a N(2, 9) distribution\", v)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115223,"byte_end":115275,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115276,"byte_end":115283,"line_start":89,"line_end":89,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115573,"byte_end":115576,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<Normal>::new","value":"fn (mean: f64, std_dev: f64) -> Normal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Normal` distribution with the given mean and\n standard deviation.","sig":null,"attributes":[{"value":"/ Construct a new `Normal` distribution with the given mean and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115388,"byte_end":115453,"line_start":97,"line_end":97,"column_start":5,"column_end":70}},{"value":"/ standard deviation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115458,"byte_end":115481,"line_start":98,"line_end":98,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115486,"byte_end":115489,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115494,"byte_end":115506,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115511,"byte_end":115514,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Panics if `std_dev < 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115519,"byte_end":115547,"line_start":102,"line_end":102,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115552,"byte_end":115561,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1422},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116438,"byte_end":116447,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"LogNormal","qualname":"::distributions::normal::LogNormal","value":"LogNormal {  }","parent":null,"children":[{"krate":0,"index":1423}],"decl_id":null,"docs":" The log-normal distribution `ln N(mean, std_dev**2)`.","sig":null,"attributes":[{"value":"/ The log-normal distribution `ln N(mean, std_dev**2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115948,"byte_end":116005,"line_start":120,"line_end":120,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116006,"byte_end":116009,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ If `X` is log-normal distributed, then `ln(X)` is `N(mean, std_dev**2)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116010,"byte_end":116085,"line_start":122,"line_end":122,"column_start":1,"column_end":76}},{"value":"/ distributed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116086,"byte_end":116102,"line_start":123,"line_end":123,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116103,"byte_end":116106,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116107,"byte_end":116120,"line_start":125,"line_end":125,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116121,"byte_end":116124,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116125,"byte_end":116132,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{LogNormal, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116133,"byte_end":116188,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116189,"byte_end":116192,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ // mean 2, standard deviation 3","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116193,"byte_end":116228,"line_start":130,"line_end":130,"column_start":1,"column_end":36}},{"value":"/ let log_normal = LogNormal::new(2.0, 3.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116229,"byte_end":116275,"line_start":131,"line_end":131,"column_start":1,"column_end":47}},{"value":"/ let v = log_normal.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116276,"byte_end":116331,"line_start":132,"line_end":132,"column_start":1,"column_end":56}},{"value":"/ println!(\"{} is from an ln N(2, 9) distribution\", v)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116332,"byte_end":116388,"line_start":133,"line_end":133,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116389,"byte_end":116396,"line_start":134,"line_end":134,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116679,"byte_end":116682,"line_start":148,"line_end":148,"column_start":12,"column_end":15},"name":"new","qualname":"<LogNormal>::new","value":"fn (mean: f64, std_dev: f64) -> LogNormal","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `LogNormal` distribution with the given mean\n and standard deviation.","sig":null,"attributes":[{"value":"/ Construct a new `LogNormal` distribution with the given mean","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116491,"byte_end":116555,"line_start":141,"line_end":141,"column_start":5,"column_end":69}},{"value":"/ and standard deviation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116560,"byte_end":116587,"line_start":142,"line_end":142,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116592,"byte_end":116595,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116600,"byte_end":116612,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116617,"byte_end":116620,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics if `std_dev < 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116625,"byte_end":116653,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116658,"byte_end":116667,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":149},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"exponential","qualname":"::distributions::exponential","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":1429},{"krate":0,"index":1434},{"krate":0,"index":1433},{"krate":0,"index":1431},{"krate":0,"index":156},{"krate":0,"index":1436},{"krate":0,"index":1441},{"krate":0,"index":1440},{"krate":0,"index":1438},{"krate":0,"index":162},{"krate":0,"index":164}],"decl_id":null,"docs":" The exponential distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49942,"byte_end":49963,"line_start":197,"line_end":197,"column_start":1,"column_end":22}},{"value":"! The exponential distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118201,"byte_end":118234,"line_start":11,"line_end":11,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1429},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119206,"byte_end":119210,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"Exp1","qualname":"::distributions::exponential::Exp1","value":"","parent":null,"children":[],"decl_id":null,"docs":" Samples floating-point numbers according to the exponential distribution,\n with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or\n sampling with `-rng.gen::<f64>().ln()`, but faster.","sig":null,"attributes":[{"value":"/ Samples floating-point numbers according to the exponential distribution,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118310,"byte_end":118387,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118388,"byte_end":118462,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ sampling with `-rng.gen::<f64>().ln()`, but faster.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118463,"byte_end":118518,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118519,"byte_end":118522,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ See `Exp` for the general exponential distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118523,"byte_end":118578,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118579,"byte_end":118582,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Implemented via the ZIGNOR variant[^1] of the Ziggurat method. The exact","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118583,"byte_end":118659,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ description in the paper was adjusted to use tables for the exponential","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118660,"byte_end":118735,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ distribution rather than normal.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118736,"byte_end":118772,"line_start":24,"line_end":24,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118773,"byte_end":118776,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [^1]: Jurgen A. Doornik (2005). [*An Improved Ziggurat Method to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118777,"byte_end":118845,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/       Generate Normal Random Samples*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118846,"byte_end":118889,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/       https://www.doornik.com/research/ziggurat.pdf).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118890,"byte_end":118947,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/       Nuffield College, Oxford","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118948,"byte_end":118982,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118983,"byte_end":118986,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":118987,"byte_end":119000,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119001,"byte_end":119008,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119009,"byte_end":119034,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::Exp1;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119035,"byte_end":119069,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119070,"byte_end":119073,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let val: f64 = SmallRng::from_entropy().sample(Exp1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119074,"byte_end":119131,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/ println!(\"{}\", val);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119132,"byte_end":119156,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119157,"byte_end":119164,"line_start":38,"line_end":38,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120211,"byte_end":120214,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"Exp","qualname":"::distributions::exponential::Exp","value":"Exp {  }","parent":null,"children":[{"krate":0,"index":1437}],"decl_id":null,"docs":" The exponential distribution `Exp(lambda)`.","sig":null,"attributes":[{"value":"/ The exponential distribution `Exp(lambda)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119799,"byte_end":119846,"line_start":62,"line_end":62,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119847,"byte_end":119850,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This distribution has density function: `f(x) = lambda * exp(-lambda * x)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119851,"byte_end":119929,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ for `x > 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119930,"byte_end":119946,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119947,"byte_end":119950,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119951,"byte_end":119964,"line_start":67,"line_end":67,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119965,"byte_end":119968,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119969,"byte_end":119976,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Exp, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119977,"byte_end":120026,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120027,"byte_end":120030,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let exp = Exp::new(2.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120031,"byte_end":120059,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/ let v = exp.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120060,"byte_end":120108,"line_start":73,"line_end":73,"column_start":1,"column_end":49}},{"value":"/ println!(\"{} is from a Exp(2) distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120109,"byte_end":120161,"line_start":74,"line_end":74,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120162,"byte_end":120169,"line_start":75,"line_end":75,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120455,"byte_end":120458,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Exp>::new","value":"fn (lambda: f64) -> Exp","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Exp` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Exp` with the given shape parameter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120330,"byte_end":120386,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ `lambda`. Panics if `lambda <= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120391,"byte_end":120429,"line_start":84,"line_end":84,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120434,"byte_end":120443,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pareto","qualname":"::distributions::pareto","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":1443},{"krate":0,"index":1449},{"krate":0,"index":1448},{"krate":0,"index":1446},{"krate":0,"index":172},{"krate":0,"index":174}],"decl_id":null,"docs":" The Pareto distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50000,"byte_end":50021,"line_start":199,"line_end":199,"column_start":1,"column_end":22}},{"value":"! The Pareto distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121734,"byte_end":121762,"line_start":11,"line_end":11,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1443},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122135,"byte_end":122141,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Pareto","qualname":"::distributions::pareto::Pareto","value":"Pareto {  }","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445}],"decl_id":null,"docs":" Samples floating-point numbers according to the Pareto distribution","sig":null,"attributes":[{"value":"/ Samples floating-point numbers according to the Pareto distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121823,"byte_end":121894,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121895,"byte_end":121898,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121899,"byte_end":121912,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121913,"byte_end":121920,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121921,"byte_end":121946,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::Pareto;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121947,"byte_end":121983,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121984,"byte_end":121987,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let val: f64 = SmallRng::from_entropy().sample(Pareto::new(1., 2.));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":121988,"byte_end":122060,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ println!(\"{}\", val);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122061,"byte_end":122085,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122086,"byte_end":122093,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122512,"byte_end":122515,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Pareto>::new","value":"fn (scale: f64, shape: f64) -> Pareto","parent":null,"children":[],"decl_id":null,"docs":" Construct a new Pareto distribution with given `scale` and `shape`.","sig":null,"attributes":[{"value":"/ Construct a new Pareto distribution with given `scale` and `shape`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122205,"byte_end":122276,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122281,"byte_end":122284,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ In the literature, `scale` is commonly written as x<sub>m</sub> or k and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122289,"byte_end":122365,"line_start":35,"line_end":35,"column_start":5,"column_end":81}},{"value":"/ `shape` is often written as α.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122370,"byte_end":122405,"line_start":36,"line_end":36,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122410,"byte_end":122413,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122418,"byte_end":122430,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122435,"byte_end":122438,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ `scale` and `shape` have to be non-zero and positive.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122443,"byte_end":122500,"line_start":40,"line_end":40,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":177},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"poisson","qualname":"::distributions::poisson","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":1451},{"krate":0,"index":1460},{"krate":0,"index":1459},{"krate":0,"index":1457},{"krate":0,"index":183},{"krate":0,"index":185}],"decl_id":null,"docs":" The Poisson distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50053,"byte_end":50076,"line_start":201,"line_end":201,"column_start":1,"column_end":24}},{"value":"! The Poisson distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":123789,"byte_end":123818,"line_start":11,"line_end":11,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1451},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124344,"byte_end":124351,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Poisson","qualname":"::distributions::poisson::Poisson","value":"Poisson {  }","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"decl_id":null,"docs":" The Poisson distribution `Poisson(lambda)`.","sig":null,"attributes":[{"value":"/ The Poisson distribution `Poisson(lambda)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":123914,"byte_end":123961,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":123962,"byte_end":123965,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This distribution has a density function:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":123966,"byte_end":124011,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ `f(k) = lambda^k * exp(-lambda) / k!` for `k >= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124012,"byte_end":124067,"line_start":20,"line_end":20,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124068,"byte_end":124071,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124072,"byte_end":124085,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124086,"byte_end":124089,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124090,"byte_end":124097,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Poisson, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124098,"byte_end":124151,"line_start":25,"line_end":25,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124152,"byte_end":124155,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let poi = Poisson::new(2.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124156,"byte_end":124188,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/ let v = poi.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124189,"byte_end":124237,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ println!(\"{} is from a Poisson(2) distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124238,"byte_end":124294,"line_start":29,"line_end":29,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124295,"byte_end":124302,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124621,"byte_end":124624,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Poisson>::new","value":"fn (lambda: f64) -> Poisson","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Poisson` with the given shape parameter\n `lambda`. Panics if `lambda <= 0`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Poisson` with the given shape parameter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124506,"byte_end":124566,"line_start":42,"line_end":42,"column_start":5,"column_end":65}},{"value":"/ `lambda`. Panics if `lambda <= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124571,"byte_end":124609,"line_start":43,"line_end":43,"column_start":5,"column_end":43}}]},{"kind":"Mod","id":{"krate":0,"index":188},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binomial","qualname":"::distributions::binomial","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":1462},{"krate":0,"index":1468},{"krate":0,"index":1467},{"krate":0,"index":1465},{"krate":0,"index":195},{"krate":0,"index":197}],"decl_id":null,"docs":" The binomial distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50109,"byte_end":50132,"line_start":203,"line_end":203,"column_start":1,"column_end":24}},{"value":"! The binomial distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":128994,"byte_end":129024,"line_start":11,"line_end":11,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1462},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129565,"byte_end":129573,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"Binomial","qualname":"::distributions::binomial::Binomial","value":"Binomial {  }","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464}],"decl_id":null,"docs":" The binomial distribution `Binomial(n, p)`.","sig":null,"attributes":[{"value":"/ The binomial distribution `Binomial(n, p)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129131,"byte_end":129178,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129179,"byte_end":129182,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This distribution has density function:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129183,"byte_end":129226,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/ `f(k) = n!/(k! (n-k)!) p^k (1-p)^(n-k)` for `k >= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129227,"byte_end":129284,"line_start":20,"line_end":20,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129285,"byte_end":129288,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129289,"byte_end":129302,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129303,"byte_end":129306,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129307,"byte_end":129314,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Binomial, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129315,"byte_end":129369,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129370,"byte_end":129373,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bin = Binomial::new(20, 0.3);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129374,"byte_end":129411,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/ let v = bin.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129412,"byte_end":129460,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ println!(\"{} is from a binomial distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129461,"byte_end":129515,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129516,"byte_end":129523,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129866,"byte_end":129869,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<Binomial>::new","value":"fn (n: u64, p: f64) -> Binomial","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Binomial` with the given shape parameters `n` (number\n of trials) and `p` (probability of success).","sig":null,"attributes":[{"value":"/ Construct a new `Binomial` with the given shape parameters `n` (number","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129681,"byte_end":129755,"line_start":40,"line_end":40,"column_start":5,"column_end":79}},{"value":"/ of trials) and `p` (probability of success).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129760,"byte_end":129808,"line_start":41,"line_end":41,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129813,"byte_end":129816,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Panics if `p < 0` or `p > 1`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129821,"byte_end":129854,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":200},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bernoulli","qualname":"::distributions::bernoulli","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":1470},{"krate":0,"index":1475},{"krate":0,"index":1474},{"krate":0,"index":1472},{"krate":0,"index":203},{"krate":0,"index":206}],"decl_id":null,"docs":" The Bernoulli distribution.\n","sig":null,"attributes":[{"value":"! The Bernoulli distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":134947,"byte_end":134978,"line_start":10,"line_end":10,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1470},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135592,"byte_end":135601,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"Bernoulli","qualname":"::distributions::bernoulli::Bernoulli","value":"Bernoulli {  }","parent":null,"children":[{"krate":0,"index":1471}],"decl_id":null,"docs":" The Bernoulli distribution.","sig":null,"attributes":[{"value":"/ The Bernoulli distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135023,"byte_end":135054,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135055,"byte_end":135058,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is a special case of the Binomial distribution where `n = 1`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135059,"byte_end":135129,"line_start":17,"line_end":17,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135130,"byte_end":135133,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135134,"byte_end":135147,"line_start":19,"line_end":19,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135148,"byte_end":135151,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135152,"byte_end":135163,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"/ use rand::distributions::{Bernoulli, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135164,"byte_end":135219,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135220,"byte_end":135223,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let d = Bernoulli::new(0.3);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135224,"byte_end":135256,"line_start":24,"line_end":24,"column_start":1,"column_end":33}},{"value":"/ let v = d.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135257,"byte_end":135303,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/ println!(\"{} is from a Bernoulli distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135304,"byte_end":135359,"line_start":26,"line_end":26,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135360,"byte_end":135367,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135368,"byte_end":135371,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Precision","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135372,"byte_end":135387,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135388,"byte_end":135391,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This `Bernoulli` distribution uses 64 bits from the RNG (a `u64`),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135392,"byte_end":135462,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ so only probabilities that are multiples of 2<sup>-64</sup> can be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135463,"byte_end":135533,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ represented.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135534,"byte_end":135550,"line_start":33,"line_end":33,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136292,"byte_end":136295,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Bernoulli>::new","value":"fn (p: f64) -> Bernoulli","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Bernoulli` with the given probability of success `p`.","sig":null,"attributes":[{"value":"/ Construct a new `Bernoulli` with the given probability of success `p`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135709,"byte_end":135783,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135788,"byte_end":135791,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135796,"byte_end":135808,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135813,"byte_end":135816,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ If `p < 0` or `p > 1`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135821,"byte_end":135847,"line_start":45,"line_end":45,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135852,"byte_end":135855,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Precision","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135860,"byte_end":135875,"line_start":47,"line_end":47,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135880,"byte_end":135883,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ For `p = 1.0`, the resulting distribution will always generate true.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135888,"byte_end":135960,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ For `p = 0.0`, the resulting distribution will always generate false.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135965,"byte_end":136038,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136043,"byte_end":136046,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ This method is accurate for any input `p` in the range `[0, 1]` which is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136051,"byte_end":136127,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ a multiple of 2<sup>-64</sup>. (Note that not all multiples of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136132,"byte_end":136198,"line_start":53,"line_end":53,"column_start":5,"column_end":71}},{"value":"/ 2<sup>-64</sup> in `[0, 1]` can be represented as a `f64`.)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136203,"byte_end":136266,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136271,"byte_end":136280,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":209},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cauchy","qualname":"::distributions::cauchy","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":1477},{"krate":0,"index":1483},{"krate":0,"index":1482},{"krate":0,"index":1480},{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":" The Cauchy distribution.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50200,"byte_end":50223,"line_start":206,"line_end":206,"column_start":1,"column_end":24}},{"value":"! The Cauchy distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138701,"byte_end":138729,"line_start":11,"line_end":11,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1477},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139247,"byte_end":139253,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Cauchy","qualname":"::distributions::cauchy::Cauchy","value":"Cauchy {  }","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479}],"decl_id":null,"docs":" The Cauchy distribution `Cauchy(median, scale)`.","sig":null,"attributes":[{"value":"/ The Cauchy distribution `Cauchy(median, scale)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138800,"byte_end":138852,"line_start":17,"line_end":17,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138853,"byte_end":138856,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This distribution has a density function:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138857,"byte_end":138902,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ `f(x) = 1 / (pi * scale * (1 + ((x - median) / scale)^2))`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138903,"byte_end":138965,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138966,"byte_end":138969,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138970,"byte_end":138983,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138984,"byte_end":138987,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138988,"byte_end":138995,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Cauchy, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":138996,"byte_end":139048,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139049,"byte_end":139052,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let cau = Cauchy::new(2.0, 5.0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139053,"byte_end":139089,"line_start":27,"line_end":27,"column_start":1,"column_end":37}},{"value":"/ let v = cau.sample(&mut rand::thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139090,"byte_end":139138,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ println!(\"{} is from a Cauchy(2, 5) distribution\", v);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139139,"byte_end":139197,"line_start":29,"line_end":29,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139198,"byte_end":139205,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139478,"byte_end":139481,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<Cauchy>::new","value":"fn (median: f64, scale: f64) -> Cauchy","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Cauchy` with the given shape parameters\n `median` the peak location and `scale` the scale factor.\n Panics if `scale <= 0`.\n","sig":null,"attributes":[{"value":"/ Construct a new `Cauchy` with the given shape parameters","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139309,"byte_end":139369,"line_start":38,"line_end":38,"column_start":5,"column_end":65}},{"value":"/ `median` the peak location and `scale` the scale factor.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139374,"byte_end":139434,"line_start":39,"line_end":39,"column_start":5,"column_end":65}},{"value":"/ Panics if `scale <= 0`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139439,"byte_end":139466,"line_start":40,"line_end":40,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1485},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143116,"byte_end":143128,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"OpenClosed01","qualname":"::distributions::float::OpenClosed01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the half-open\n interval `(0, 1]`, i.e. including 1 but not 0.","sig":null,"attributes":[{"value":"/ A distribution to sample floating point numbers uniformly in the half-open","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142194,"byte_end":142272,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ interval `(0, 1]`, i.e. including 1 but not 0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142273,"byte_end":142323,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142324,"byte_end":142327,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε/2`. For `f32`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142328,"byte_end":142402,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ the 23 most significant random bits of a `u32` are used and for `f64` the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142403,"byte_end":142480,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ 53 most significant bits of a `u64` are used. The conversion uses the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142481,"byte_end":142554,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ multiplicative method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142555,"byte_end":142581,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142582,"byte_end":142585,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ See also: [`Standard`] which samples from `[0, 1)`, [`Open01`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142586,"byte_end":142652,"line_start":25,"line_end":25,"column_start":1,"column_end":67}},{"value":"/ which samples from `(0, 1)` and [`Uniform`] which samples from arbitrary","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142653,"byte_end":142729,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ ranges.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142730,"byte_end":142741,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142742,"byte_end":142745,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142746,"byte_end":142759,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142760,"byte_end":142767,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142768,"byte_end":142800,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::OpenClosed01;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142801,"byte_end":142843,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142844,"byte_end":142847,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = thread_rng().sample(OpenClosed01);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142848,"byte_end":142901,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/ println!(\"f32 from (0, 1): {}\", val);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142902,"byte_end":142943,"line_start":35,"line_end":35,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142944,"byte_end":142951,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142952,"byte_end":142955,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Standard`]: struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142956,"byte_end":142994,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/ [`Open01`]: struct.Open01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":142995,"byte_end":143029,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`Uniform`]: uniform/struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143030,"byte_end":143074,"line_start":40,"line_end":40,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1492},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":144028,"byte_end":144034,"line_start":68,"line_end":68,"column_start":12,"column_end":18},"name":"Open01","qualname":"::distributions::float::Open01","value":"","parent":null,"children":[],"decl_id":null,"docs":" A distribution to sample floating point numbers uniformly in the open\n interval `(0, 1)`, i.e. not including either endpoint.","sig":null,"attributes":[{"value":"/ A distribution to sample floating point numbers uniformly in the open","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143131,"byte_end":143204,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ interval `(0, 1)`, i.e. not including either endpoint.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143205,"byte_end":143263,"line_start":45,"line_end":45,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143264,"byte_end":143267,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε + ε/2`. For `f32`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143268,"byte_end":143347,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/ the 22 most significant random bits of an `u32` are used, for `f64` 52 from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143348,"byte_end":143427,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ an `u64`. The conversion uses a transmute-based method.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143428,"byte_end":143487,"line_start":49,"line_end":49,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143488,"byte_end":143491,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See also: [`Standard`] which samples from `[0, 1)`, [`OpenClosed01`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143492,"byte_end":143564,"line_start":51,"line_end":51,"column_start":1,"column_end":73}},{"value":"/ which samples from `(0, 1]` and [`Uniform`] which samples from arbitrary","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143565,"byte_end":143641,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ ranges.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143642,"byte_end":143653,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143654,"byte_end":143657,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143658,"byte_end":143671,"line_start":55,"line_end":55,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143672,"byte_end":143679,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143680,"byte_end":143712,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Open01;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143713,"byte_end":143749,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143750,"byte_end":143753,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = thread_rng().sample(Open01);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143754,"byte_end":143801,"line_start":60,"line_end":60,"column_start":1,"column_end":48}},{"value":"/ println!(\"f32 from (0, 1): {}\", val);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143802,"byte_end":143843,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143844,"byte_end":143851,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143852,"byte_end":143855,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ [`Standard`]: struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143856,"byte_end":143894,"line_start":64,"line_end":64,"column_start":1,"column_end":39}},{"value":"/ [`OpenClosed01`]: struct.OpenClosed01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143895,"byte_end":143941,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/ [`Uniform`]: uniform/struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":143942,"byte_end":143986,"line_start":66,"line_end":66,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":225},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/float.rs","byte_start":144076,"byte_end":144077,"line_start":72,"line_end":72,"column_start":10,"column_end":11},"name":"F","qualname":"::distributions::float::IntoFloat::F","value":"type F;","parent":{"krate":0,"index":224},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155544,"byte_end":155556,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"Alphanumeric","qualname":"::distributions::other::Alphanumeric","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sample a `char`, uniformly distributed over ASCII letters and numbers:\n a-z, A-Z and 0-9.\n \n # Example","sig":null,"attributes":[{"value":"/ Sample a `char`, uniformly distributed over ASCII letters and numbers:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155073,"byte_end":155147,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ a-z, A-Z and 0-9.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155148,"byte_end":155169,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155170,"byte_end":155174,"line_start":23,"line_end":23,"column_start":1,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155175,"byte_end":155188,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155189,"byte_end":155192,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155193,"byte_end":155200,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::iter;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155201,"byte_end":155219,"line_start":27,"line_end":27,"column_start":1,"column_end":19}},{"value":"/ use rand::{Rng, thread_rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155220,"byte_end":155252,"line_start":28,"line_end":28,"column_start":1,"column_end":33}},{"value":"/ use rand::distributions::Alphanumeric;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155253,"byte_end":155295,"line_start":29,"line_end":29,"column_start":1,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155296,"byte_end":155300,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155301,"byte_end":155332,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ let chars: String = iter::repeat(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155333,"byte_end":155373,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/         .map(|()| rng.sample(Alphanumeric))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155374,"byte_end":155421,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .take(7)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155422,"byte_end":155442,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155443,"byte_end":155466,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ println!(\"Random chars: {}\", chars);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155467,"byte_end":155507,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155508,"byte_end":155515,"line_start":37,"line_end":37,"column_start":1,"column_end":8}}]},{"kind":"Trait","id":{"krate":0,"index":300},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50572,"byte_end":50578,"line_start":221,"line_end":221,"column_start":11,"column_end":17},"name":"Sample","qualname":"::distributions::Sample","value":"Sample<Support>","parent":null,"children":[{"krate":0,"index":302}],"decl_id":null,"docs":" Types that can be used to create a random instance of `Support`.\n","sig":null,"attributes":[{"value":"/ Types that can be used to create a random instance of `Support`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50431,"byte_end":50499,"line_start":219,"line_end":219,"column_start":1,"column_end":69}},{"value":"deprecated(since = \"0.5.0\", note = \"use Distribution instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50500,"byte_end":50561,"line_start":220,"line_end":220,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50692,"byte_end":50698,"line_start":224,"line_end":224,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Sample::sample","value":"fn <R> (&mut self, rng: &mut R) -> Support","parent":{"krate":0,"index":300},"children":[],"decl_id":null,"docs":" Generate a random value of `Support`, using `rng` as the\n source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `Support`, using `rng` as the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50594,"byte_end":50654,"line_start":222,"line_end":222,"column_start":5,"column_end":65}},{"value":"/ source of randomness.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50659,"byte_end":50684,"line_start":223,"line_end":223,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":304},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51042,"byte_end":51059,"line_start":234,"line_end":234,"column_start":11,"column_end":28},"name":"IndependentSample","qualname":"::distributions::IndependentSample","value":"IndependentSample<Support>: Sample<Support>","parent":null,"children":[{"krate":0,"index":306}],"decl_id":null,"docs":" `Sample`s that do not require keeping track of state.","sig":null,"attributes":[{"value":"/ `Sample`s that do not require keeping track of state.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50746,"byte_end":50803,"line_start":227,"line_end":227,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50804,"byte_end":50807,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ Since no state is recorded, each sample is (statistically)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50808,"byte_end":50870,"line_start":229,"line_end":229,"column_start":1,"column_end":63}},{"value":"/ independent of all others, assuming the `Rng` used has this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50871,"byte_end":50934,"line_start":230,"line_end":230,"column_start":1,"column_end":64}},{"value":"/ property.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50935,"byte_end":50948,"line_start":231,"line_end":231,"column_start":1,"column_end":14}},{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50949,"byte_end":50969,"line_start":232,"line_end":232,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note = \"use Distribution instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50970,"byte_end":51031,"line_start":233,"line_end":233,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51128,"byte_end":51138,"line_start":236,"line_end":236,"column_start":8,"column_end":18},"name":"ind_sample","qualname":"::distributions::IndependentSample::ind_sample","value":"fn <R> (&self, &mut R) -> Support","parent":{"krate":0,"index":304},"children":[],"decl_id":null,"docs":" Generate a random value.\n","sig":null,"attributes":[{"value":"/ Generate a random value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51092,"byte_end":51120,"line_start":235,"line_end":235,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":308},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51296,"byte_end":51301,"line_start":241,"line_end":241,"column_start":9,"column_end":14},"name":"range","qualname":"::distributions::range","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"decl_id":null,"docs":" DEPRECATED: Use `distributions::uniform` instead.\n","sig":null,"attributes":[{"value":"/ DEPRECATED: Use `distributions::uniform` instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51177,"byte_end":51230,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"deprecated(since = \"0.5.0\", note = \"use uniform instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51231,"byte_end":51287,"line_start":240,"line_end":240,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":349},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53959,"byte_end":53971,"line_start":315,"line_end":315,"column_start":11,"column_end":23},"name":"Distribution","qualname":"::distributions::Distribution","value":"Distribution<T>","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":353}],"decl_id":null,"docs":" Types (distributions) that can be used to create a random instance of `T`.","sig":null,"attributes":[{"value":"/ Types (distributions) that can be used to create a random instance of `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53262,"byte_end":53340,"line_start":302,"line_end":302,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53341,"byte_end":53344,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ It is possible to sample from a distribution through both the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53345,"byte_end":53410,"line_start":304,"line_end":304,"column_start":1,"column_end":66}},{"value":"/ `Distribution` and [`Rng`] traits, via `distr.sample(&mut rng)` and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53411,"byte_end":53482,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ `rng.sample(distr)`. They also both offer the [`sample_iter`] method, which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53483,"byte_end":53562,"line_start":306,"line_end":306,"column_start":1,"column_end":80}},{"value":"/ produces an iterator that samples from the distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53563,"byte_end":53623,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53624,"byte_end":53627,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ All implementations are expected to be immutable; this has the significant","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53628,"byte_end":53706,"line_start":309,"line_end":309,"column_start":1,"column_end":79}},{"value":"/ advantage of not needing to consider thread safety, and for most","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53707,"byte_end":53775,"line_start":310,"line_end":310,"column_start":1,"column_end":69}},{"value":"/ distributions efficient state-less sampling algorithms are available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53776,"byte_end":53849,"line_start":311,"line_end":311,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53850,"byte_end":53853,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ [`Rng`]: ../trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53854,"byte_end":53884,"line_start":313,"line_end":313,"column_start":1,"column_end":31}},{"value":"/ [`sample_iter`]: trait.Distribution.html#method.sample_iter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53885,"byte_end":53948,"line_start":314,"line_end":314,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54065,"byte_end":54071,"line_start":317,"line_end":317,"column_start":8,"column_end":14},"name":"sample","qualname":"::distributions::Distribution::sample","value":"fn <R> (&self, rng: &mut R) -> T","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" Generate a random value of `T`, using `rng` as the source of randomness.\n","sig":null,"attributes":[{"value":"/ Generate a random value of `T`, using `rng` as the source of randomness.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":53981,"byte_end":54057,"line_start":316,"line_end":316,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54920,"byte_end":54931,"line_start":343,"line_end":343,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::distributions::Distribution::sample_iter","value":"fn <'a, R> (&'a self, rng: &'a mut R) -> DistIter<'a, Self, R, T>","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" Create an iterator that generates random values of `T`, using `rng` as\n the source of randomness.","sig":null,"attributes":[{"value":"/ Create an iterator that generates random values of `T`, using `rng` as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54120,"byte_end":54194,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ the source of randomness.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54199,"byte_end":54228,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54233,"byte_end":54236,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54241,"byte_end":54254,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54259,"byte_end":54262,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54267,"byte_end":54274,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use rand::thread_rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54279,"byte_end":54304,"line_start":325,"line_end":325,"column_start":5,"column_end":30}},{"value":"/ use rand::distributions::{Distribution, Alphanumeric, Uniform, Standard};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54309,"byte_end":54386,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54391,"byte_end":54394,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54399,"byte_end":54430,"line_start":328,"line_end":328,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54435,"byte_end":54438,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Vec of 16 x f32:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54443,"byte_end":54466,"line_start":330,"line_end":330,"column_start":5,"column_end":28}},{"value":"/ let v: Vec<f32> = Standard.sample_iter(&mut rng).take(16).collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54471,"byte_end":54543,"line_start":331,"line_end":331,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54548,"byte_end":54551,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ // String:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54556,"byte_end":54570,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/ let s: String = Alphanumeric.sample_iter(&mut rng).take(7).collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54575,"byte_end":54648,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54653,"byte_end":54656,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ // Dice-rolling:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54661,"byte_end":54681,"line_start":336,"line_end":336,"column_start":5,"column_end":25}},{"value":"/ let die_range = Uniform::new_inclusive(1, 6);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54686,"byte_end":54735,"line_start":337,"line_end":337,"column_start":5,"column_end":54}},{"value":"/ let mut roll_die = die_range.sample_iter(&mut rng);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54740,"byte_end":54795,"line_start":338,"line_end":338,"column_start":5,"column_end":60}},{"value":"/ while roll_die.next().unwrap() != 6 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54800,"byte_end":54841,"line_start":339,"line_end":339,"column_start":5,"column_end":46}},{"value":"/     println!(\"Not a 6; rolling again!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54846,"byte_end":54890,"line_start":340,"line_end":340,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54895,"byte_end":54900,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":54905,"byte_end":54912,"line_start":342,"line_end":342,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55704,"byte_end":55712,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"DistIter","qualname":"::distributions::DistIter","value":"DistIter {  }","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1905}],"decl_id":null,"docs":" An iterator that generates random values of `T` with distribution `D`,\n using `R` as the source of randomness.","sig":null,"attributes":[{"value":"/ An iterator that generates random values of `T` with distribution `D`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55324,"byte_end":55398,"line_start":361,"line_end":361,"column_start":1,"column_end":75}},{"value":"/ using `R` as the source of randomness.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55399,"byte_end":55441,"line_start":362,"line_end":362,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55442,"byte_end":55445,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`sample_iter`] method on [`Distribution`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55446,"byte_end":55525,"line_start":364,"line_end":364,"column_start":1,"column_end":80}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55526,"byte_end":55561,"line_start":365,"line_end":365,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55562,"byte_end":55565,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`Distribution`]: trait.Distribution.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55566,"byte_end":55611,"line_start":367,"line_end":367,"column_start":1,"column_end":46}},{"value":"/ [`sample_iter`]: trait.Distribution.html#method.sample_iter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55612,"byte_end":55675,"line_start":368,"line_end":368,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1912},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58915,"byte_end":58923,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"Standard","qualname":"::distributions::Standard","value":"","parent":null,"children":[],"decl_id":null,"docs":" A generic random value distribution, implemented for many primitive types.\n Usually generates values with a numerically uniform distribution, and with a\n range appropriate to the type.\n \n ## Built-in Implementations","sig":null,"attributes":[{"value":"/ A generic random value distribution, implemented for many primitive types.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56145,"byte_end":56223,"line_start":392,"line_end":392,"column_start":1,"column_end":79}},{"value":"/ Usually generates values with a numerically uniform distribution, and with a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56224,"byte_end":56304,"line_start":393,"line_end":393,"column_start":1,"column_end":81}},{"value":"/ range appropriate to the type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56305,"byte_end":56339,"line_start":394,"line_end":394,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56340,"byte_end":56344,"line_start":395,"line_end":395,"column_start":1,"column_end":5}},{"value":"/ ## Built-in Implementations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56345,"byte_end":56376,"line_start":396,"line_end":396,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56377,"byte_end":56380,"line_start":397,"line_end":397,"column_start":1,"column_end":4}},{"value":"/ Assuming the provided `Rng` is well-behaved, these implementations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56381,"byte_end":56451,"line_start":398,"line_end":398,"column_start":1,"column_end":71}},{"value":"/ generate values with the following ranges and distributions:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56452,"byte_end":56516,"line_start":399,"line_end":399,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56517,"byte_end":56520,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ * Integers (`i32`, `u32`, `isize`, `usize`, etc.): Uniformly distributed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56521,"byte_end":56597,"line_start":401,"line_end":401,"column_start":1,"column_end":77}},{"value":"/   over all values of the type.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56598,"byte_end":56632,"line_start":402,"line_end":402,"column_start":1,"column_end":35}},{"value":"/ * `char`: Uniformly distributed over all Unicode scalar values, i.e. all","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56633,"byte_end":56709,"line_start":403,"line_end":403,"column_start":1,"column_end":77}},{"value":"/   code points in the range `0...0x10_FFFF`, except for the range","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56710,"byte_end":56778,"line_start":404,"line_end":404,"column_start":1,"column_end":69}},{"value":"/   `0xD800...0xDFFF` (the surrogate code points). This includes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56779,"byte_end":56845,"line_start":405,"line_end":405,"column_start":1,"column_end":67}},{"value":"/   unassigned/reserved code points.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56846,"byte_end":56884,"line_start":406,"line_end":406,"column_start":1,"column_end":39}},{"value":"/ * `bool`: Generates `false` or `true`, each with probability 0.5.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56885,"byte_end":56954,"line_start":407,"line_end":407,"column_start":1,"column_end":70}},{"value":"/ * Floating point types (`f32` and `f64`): Uniformly distributed in the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":56955,"byte_end":57029,"line_start":408,"line_end":408,"column_start":1,"column_end":75}},{"value":"/   half-open range `[0, 1)`. See notes below.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57030,"byte_end":57078,"line_start":409,"line_end":409,"column_start":1,"column_end":49}},{"value":"/ * Wrapping integers (`Wrapping<T>`), besides the type identical to their","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57079,"byte_end":57155,"line_start":410,"line_end":410,"column_start":1,"column_end":77}},{"value":"/   normal integer variants.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57156,"byte_end":57186,"line_start":411,"line_end":411,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57187,"byte_end":57190,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ The following aggregate types also implement the distribution `Standard` as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57191,"byte_end":57270,"line_start":413,"line_end":413,"column_start":1,"column_end":80}},{"value":"/ long as their component types implement it:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57271,"byte_end":57318,"line_start":414,"line_end":414,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57319,"byte_end":57322,"line_start":415,"line_end":415,"column_start":1,"column_end":4}},{"value":"/ * Tuples and arrays: Each element of the tuple or array is generated","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57323,"byte_end":57395,"line_start":416,"line_end":416,"column_start":1,"column_end":73}},{"value":"/   independently, using the `Standard` distribution recursively.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57396,"byte_end":57463,"line_start":417,"line_end":417,"column_start":1,"column_end":68}},{"value":"/ * `Option<T>` where `Standard` is implemented for `T`: Returns `None` with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57464,"byte_end":57542,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   probability 0.5; otherwise generates a random `x: T` and returns `Some(x)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57543,"byte_end":57624,"line_start":419,"line_end":419,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57625,"byte_end":57628,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57629,"byte_end":57642,"line_start":421,"line_end":421,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57643,"byte_end":57650,"line_start":422,"line_end":422,"column_start":1,"column_end":8}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57651,"byte_end":57676,"line_start":423,"line_end":423,"column_start":1,"column_end":26}},{"value":"/ use rand::distributions::Standard;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57677,"byte_end":57715,"line_start":424,"line_end":424,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57716,"byte_end":57719,"line_start":425,"line_end":425,"column_start":1,"column_end":4}},{"value":"/ let val: f32 = SmallRng::from_entropy().sample(Standard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57720,"byte_end":57781,"line_start":426,"line_end":426,"column_start":1,"column_end":62}},{"value":"/ println!(\"f32 from [0, 1): {}\", val);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57782,"byte_end":57823,"line_start":427,"line_end":427,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57824,"byte_end":57831,"line_start":428,"line_end":428,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57832,"byte_end":57835,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ # Floating point implementation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57836,"byte_end":57871,"line_start":430,"line_end":430,"column_start":1,"column_end":36}},{"value":"/ The floating point implementations for `Standard` generate a random value in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57872,"byte_end":57952,"line_start":431,"line_end":431,"column_start":1,"column_end":81}},{"value":"/ the half-open interval `[0, 1)`, i.e. including 0 but not 1.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":57953,"byte_end":58017,"line_start":432,"line_end":432,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58018,"byte_end":58021,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ All values that can be generated are of the form `n * ε/2`. For `f32`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58022,"byte_end":58096,"line_start":434,"line_end":434,"column_start":1,"column_end":74}},{"value":"/ the 23 most significant random bits of a `u32` are used and for `f64` the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58097,"byte_end":58174,"line_start":435,"line_end":435,"column_start":1,"column_end":78}},{"value":"/ 53 most significant bits of a `u64` are used. The conversion uses the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58175,"byte_end":58248,"line_start":436,"line_end":436,"column_start":1,"column_end":74}},{"value":"/ multiplicative method: `(rng.gen::<$uty>() >> N) as $ty * (ε/2)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58249,"byte_end":58319,"line_start":437,"line_end":437,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58320,"byte_end":58323,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ See also: [`Open01`] which samples from `(0, 1)`, [`OpenClosed01`] which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58324,"byte_end":58400,"line_start":439,"line_end":439,"column_start":1,"column_end":77}},{"value":"/ samples from `(0, 1]` and `Rng::gen_range(0, 1)` which also samples from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58401,"byte_end":58477,"line_start":440,"line_end":440,"column_start":1,"column_end":77}},{"value":"/ `[0, 1)`. Note that `Open01` and `gen_range` (which uses [`Uniform`]) use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58478,"byte_end":58555,"line_start":441,"line_end":441,"column_start":1,"column_end":78}},{"value":"/ transmute-based methods which yield 1 bit less precision but may perform","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58556,"byte_end":58632,"line_start":442,"line_end":442,"column_start":1,"column_end":77}},{"value":"/ faster on some architectures (on modern Intel CPUs all methods have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58633,"byte_end":58704,"line_start":443,"line_end":443,"column_start":1,"column_end":72}},{"value":"/ approximately equal performance).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58705,"byte_end":58742,"line_start":444,"line_end":444,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58743,"byte_end":58746,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ [`Open01`]: struct.Open01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58747,"byte_end":58781,"line_start":446,"line_end":446,"column_start":1,"column_end":35}},{"value":"/ [`OpenClosed01`]: struct.OpenClosed01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58782,"byte_end":58828,"line_start":447,"line_end":447,"column_start":1,"column_end":47}},{"value":"/ [`Uniform`]: uniform/struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58829,"byte_end":58873,"line_start":448,"line_end":448,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1919},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59193,"byte_end":59201,"line_start":462,"line_end":462,"column_start":12,"column_end":20},"name":"Weighted","qualname":"::distributions::Weighted","value":"Weighted { weight, item }","parent":null,"children":[{"krate":0,"index":1921},{"krate":0,"index":1922}],"decl_id":null,"docs":" A value with a particular weight for use with `WeightedChoice`.\n","sig":null,"attributes":[{"value":"/ A value with a particular weight for use with `WeightedChoice`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59084,"byte_end":59151,"line_start":460,"line_end":460,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1921},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59257,"byte_end":59263,"line_start":464,"line_end":464,"column_start":9,"column_end":15},"name":"weight","qualname":"::distributions::Weighted::weight","value":"u32","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The numerical weight of this item\n","sig":null,"attributes":[{"value":"/ The numerical weight of this item","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59211,"byte_end":59248,"line_start":463,"line_end":463,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59326,"byte_end":59330,"line_start":466,"line_end":466,"column_start":9,"column_end":13},"name":"item","qualname":"::distributions::Weighted::item","value":"T","parent":{"krate":0,"index":1919},"children":[],"decl_id":null,"docs":" The actual item which is being weighted\n","sig":null,"attributes":[{"value":"/ The actual item which is being weighted","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59274,"byte_end":59317,"line_start":465,"line_end":465,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1931},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60288,"byte_end":60302,"line_start":494,"line_end":494,"column_start":12,"column_end":26},"name":"WeightedChoice","qualname":"::distributions::WeightedChoice","value":"WeightedChoice {  }","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935}],"decl_id":null,"docs":" A distribution that selects from a finite collection of weighted items.","sig":null,"attributes":[{"value":"/ A distribution that selects from a finite collection of weighted items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59338,"byte_end":59413,"line_start":469,"line_end":469,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59414,"byte_end":59417,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ Each item has an associated weight that influences how likely it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59418,"byte_end":59486,"line_start":471,"line_end":471,"column_start":1,"column_end":69}},{"value":"/ is to be chosen: higher weight is more likely.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59487,"byte_end":59537,"line_start":472,"line_end":472,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59538,"byte_end":59541,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ The `Clone` restriction is a limitation of the `Distribution` trait.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59542,"byte_end":59614,"line_start":474,"line_end":474,"column_start":1,"column_end":73}},{"value":"/ Note that `&T` is (cheaply) `Clone` for all `T`, as is `u32`, so one can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59615,"byte_end":59691,"line_start":475,"line_end":475,"column_start":1,"column_end":77}},{"value":"/ store references or indices into another vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59692,"byte_end":59744,"line_start":476,"line_end":476,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59745,"byte_end":59748,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59749,"byte_end":59762,"line_start":478,"line_end":478,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59763,"byte_end":59766,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59767,"byte_end":59774,"line_start":480,"line_end":480,"column_start":1,"column_end":8}},{"value":"/ use rand::distributions::{Weighted, WeightedChoice, Distribution};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59775,"byte_end":59845,"line_start":481,"line_end":481,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59846,"byte_end":59849,"line_start":482,"line_end":482,"column_start":1,"column_end":4}},{"value":"/ let mut items = vec!(Weighted { weight: 2, item: 'a' },","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59850,"byte_end":59909,"line_start":483,"line_end":483,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 4, item: 'b' },","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59910,"byte_end":59969,"line_start":484,"line_end":484,"column_start":1,"column_end":60}},{"value":"/                      Weighted { weight: 1, item: 'c' });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":59970,"byte_end":60030,"line_start":485,"line_end":485,"column_start":1,"column_end":61}},{"value":"/ let wc = WeightedChoice::new(&mut items);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60031,"byte_end":60076,"line_start":486,"line_end":486,"column_start":1,"column_end":46}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60077,"byte_end":60114,"line_start":487,"line_end":487,"column_start":1,"column_end":38}},{"value":"/ for _ in 0..16 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60115,"byte_end":60135,"line_start":488,"line_end":488,"column_start":1,"column_end":21}},{"value":"/      // on average prints 'a' 4 times, 'b' 8 and 'c' twice.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60136,"byte_end":60199,"line_start":489,"line_end":489,"column_start":1,"column_end":64}},{"value":"/      println!(\"{}\", wc.sample(&mut rng));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60200,"byte_end":60245,"line_start":490,"line_end":490,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60246,"byte_end":60251,"line_start":491,"line_end":491,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60252,"byte_end":60259,"line_start":492,"line_end":492,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60634,"byte_end":60637,"line_start":507,"line_end":507,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedChoice>::new","value":"fn (items: &'a mut [Weighted<T>]) -> WeightedChoice<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `WeightedChoice`.","sig":null,"attributes":[{"value":"/ Create a new `WeightedChoice`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60431,"byte_end":60465,"line_start":500,"line_end":500,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60470,"byte_end":60473,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Panics if:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60478,"byte_end":60492,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60497,"byte_end":60500,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ - `items` is empty","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60505,"byte_end":60527,"line_start":504,"line_end":504,"column_start":5,"column_end":27}},{"value":"/ - the total weight is 0","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60532,"byte_end":60559,"line_start":505,"line_end":505,"column_start":5,"column_end":32}},{"value":"/ - the total weight is larger than a `u32` can contain.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60564,"byte_end":60622,"line_start":506,"line_end":506,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":387},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":398}],"decl_id":null,"docs":" Convenience re-export of common members","sig":null,"attributes":[{"value":"! Convenience re-export of common members","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186395,"byte_end":186438,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186439,"byte_end":186442,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Like the standard library's prelude, this module simplifies importing of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186443,"byte_end":186519,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! common items. Unlike the standard prelude, the contents of this module must","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186520,"byte_end":186599,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"! be imported manually:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186600,"byte_end":186625,"line_start":15,"line_end":15,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186626,"byte_end":186629,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186630,"byte_end":186637,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186638,"byte_end":186663,"line_start":18,"line_end":18,"column_start":1,"column_end":26}},{"value":"! # let _ = StdRng::from_entropy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186664,"byte_end":186701,"line_start":19,"line_end":19,"column_start":1,"column_end":38}},{"value":"! # let mut r = SmallRng::from_rng(thread_rng()).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186702,"byte_end":186762,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"! # let _: f32 = r.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186763,"byte_end":186790,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prelude.rs","byte_start":186791,"byte_end":186798,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":402},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prng","qualname":"::prng","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":451},{"krate":0,"index":496},{"krate":0,"index":557},{"krate":0,"index":618},{"krate":0,"index":648},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674}],"decl_id":null,"docs":" Pseudo-random number generators.","sig":null,"attributes":[{"value":"! Pseudo-random number generators.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187592,"byte_end":187628,"line_start":11,"line_end":11,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187629,"byte_end":187632,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Pseudo-random number generators are algorithms to produce apparently random","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187633,"byte_end":187712,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"! numbers deterministically, and usually fairly quickly. See the documentation","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187713,"byte_end":187793,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"! of the [`rngs` module] for some introduction to PRNGs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187794,"byte_end":187852,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187853,"byte_end":187856,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! As mentioned there, PRNGs fall in two broad categories:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187857,"byte_end":187916,"line_start":17,"line_end":17,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187917,"byte_end":187920,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! - [basic PRNGs], primarily designed for simulations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187921,"byte_end":187976,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"! - [CSPRNGs], primarily designed for cryptography","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":187977,"byte_end":188029,"line_start":20,"line_end":20,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188030,"byte_end":188033,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! In simple terms, the basic PRNGs are often predictable; CSPRNGs should not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188034,"byte_end":188112,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"! be predictable *when used correctly*.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188113,"byte_end":188154,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"! ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188155,"byte_end":188159,"line_start":24,"line_end":24,"column_start":1,"column_end":5}},{"value":"! Contents of this documentation:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188160,"byte_end":188195,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188196,"byte_end":188199,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! 1. [The generators](#the-generators)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188200,"byte_end":188240,"line_start":27,"line_end":27,"column_start":1,"column_end":41}},{"value":"! 1. [Performance and size](#performance)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188241,"byte_end":188284,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"! 1. [Quality and cycle length](#quality)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188285,"byte_end":188328,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"! 1. [Security](#security)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188329,"byte_end":188357,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"! 1. [Extra features](#extra-features)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188358,"byte_end":188398,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"! 1. [Further reading](#further-reading)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188399,"byte_end":188441,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188442,"byte_end":188445,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188446,"byte_end":188449,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! # The generators","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188450,"byte_end":188470,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188471,"byte_end":188474,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! ## Basic pseudo-random number generators (PRNGs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188475,"byte_end":188527,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188528,"byte_end":188531,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! The goal of regular, non-cryptographic PRNGs is usually to find a good","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188532,"byte_end":188606,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"! balance between simplicity, quality, memory usage and performance. These","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188607,"byte_end":188683,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"! algorithms are very important to Monte Carlo simulations, and also suitable","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188684,"byte_end":188763,"line_start":41,"line_end":41,"column_start":1,"column_end":80}},{"value":"! for several other problems such as randomized algorithms and games (except","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188764,"byte_end":188842,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"! where there is a risk of players predicting the next output value from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188843,"byte_end":188917,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"! previous values, in which case a CSPRNG should be used).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188918,"byte_end":188978,"line_start":44,"line_end":44,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188979,"byte_end":188982,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! Currently Rand provides only one PRNG, and not a very good one at that:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":188983,"byte_end":189058,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":189059,"byte_end":189062,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! | name | full name | performance | memory | quality | period | features |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":189063,"byte_end":189140,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! |------|-----------|-------------|--------|---------|--------|----------|","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":189141,"byte_end":189218,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"! | [`XorShiftRng`] | Xorshift 32/128 | ★★★☆☆ | 16 bytes | ★☆☆☆☆ | `u32` * 2<sup>128</sup> - 1 | — |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":189219,"byte_end":189343,"line_start":50,"line_end":50,"column_start":1,"column_end":103}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":189344,"byte_end":189347,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"! ## Cryptographically secure pseudo-random number generators (CSPRNGs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190202,"byte_end":190275,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190276,"byte_end":190279,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! CSPRNGs have much higher requirements than basic PRNGs. The primary","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190280,"byte_end":190351,"line_start":74,"line_end":74,"column_start":1,"column_end":72}},{"value":"! consideration is security. Performance and simplicity are also important,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190352,"byte_end":190429,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"! but in general CSPRNGs are more complex and slower than regular PRNGs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190430,"byte_end":190504,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"! Quality is no longer a concern, as it is a requirement for a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190505,"byte_end":190569,"line_start":77,"line_end":77,"column_start":1,"column_end":65}},{"value":"! CSPRNG that the output is basically indistinguishable from true randomness","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190570,"byte_end":190648,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"! since any bias or correlation makes the output more predictable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190649,"byte_end":190717,"line_start":79,"line_end":79,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190718,"byte_end":190721,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! There is a close relationship between CSPRNGs and cryptographic ciphers.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190722,"byte_end":190798,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! Any block cipher can be turned into a CSPRNG by encrypting a counter. Stream","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190799,"byte_end":190879,"line_start":82,"line_end":82,"column_start":1,"column_end":81}},{"value":"! ciphers are basically a CSPRNG and a combining operation, usually XOR. This","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190880,"byte_end":190959,"line_start":83,"line_end":83,"column_start":1,"column_end":80}},{"value":"! means that we can easily use any stream cipher as a CSPRNG.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":190960,"byte_end":191023,"line_start":84,"line_end":84,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191024,"byte_end":191027,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! Rand currently provides two trustworthy CSPRNGs and two CSPRNG-like PRNGs:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191028,"byte_end":191106,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191107,"byte_end":191110,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"! | name | full name |  performance | initialization | memory | predictability | forward secrecy |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191111,"byte_end":191211,"line_start":88,"line_end":88,"column_start":1,"column_end":101}},{"value":"! |------|-----------|--------------|--------------|----------|----------------|-------------------------|","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191212,"byte_end":191320,"line_start":89,"line_end":89,"column_start":1,"column_end":109}},{"value":"! | [`ChaChaRng`] | ChaCha20 | ★☆☆☆☆ | fast | 136 bytes | secure | no |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191321,"byte_end":191404,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"! | [`Hc128Rng`] | HC-128 | ★★☆☆☆ | slow | 4176 bytes | secure | no |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191405,"byte_end":191486,"line_start":91,"line_end":91,"column_start":1,"column_end":72}},{"value":"! | [`IsaacRng`] | ISAAC | ★★☆☆☆ | slow | 2072 bytes | unknown | unknown |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191487,"byte_end":191573,"line_start":92,"line_end":92,"column_start":1,"column_end":77}},{"value":"! | [`Isaac64Rng`] | ISAAC-64 | ★★☆☆☆ | slow | 4136 bytes| unknown | unknown |","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191574,"byte_end":191664,"line_start":93,"line_end":93,"column_start":1,"column_end":81}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191665,"byte_end":191668,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! It should be noted that the ISAAC generators are only included for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191669,"byte_end":191739,"line_start":95,"line_end":95,"column_start":1,"column_end":71}},{"value":"! historical reasons, they have been with the Rust language since the very","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191740,"byte_end":191816,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"! beginning. They have good quality output and no attacks are known, but have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191817,"byte_end":191896,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"! received little attention from cryptography experts.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191897,"byte_end":191953,"line_start":98,"line_end":98,"column_start":1,"column_end":57}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191954,"byte_end":191957,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191958,"byte_end":191961,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! # Performance","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191962,"byte_end":191979,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191980,"byte_end":191983,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"! First it has to be said most PRNGs are very fast, and will rarely be a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":191984,"byte_end":192058,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"! performance bottleneck.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192059,"byte_end":192086,"line_start":104,"line_end":104,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192087,"byte_end":192090,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! Performance of basic PRNGs is a bit of a subtle thing. It depends a lot on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192091,"byte_end":192169,"line_start":106,"line_end":106,"column_start":1,"column_end":79}},{"value":"! the CPU architecture (32 vs. 64 bits), inlining, and also on the number of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192170,"byte_end":192248,"line_start":107,"line_end":107,"column_start":1,"column_end":79}},{"value":"! available registers. This often causes the performance to be affected by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192249,"byte_end":192325,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"! surrounding code due to inlining and other usage of registers.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192326,"byte_end":192392,"line_start":109,"line_end":109,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192393,"byte_end":192396,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"! When choosing a PRNG for performance it is important to benchmark your own","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192397,"byte_end":192475,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"! application due to interactions between PRNGs and surrounding code and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192476,"byte_end":192550,"line_start":112,"line_end":112,"column_start":1,"column_end":75}},{"value":"! dependence on the CPU architecture as well as the impact of the size of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192551,"byte_end":192626,"line_start":113,"line_end":113,"column_start":1,"column_end":76}},{"value":"! data requested. Because of all this, we do not include performance numbers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192627,"byte_end":192705,"line_start":114,"line_end":114,"column_start":1,"column_end":79}},{"value":"! here but merely a qualitative rating.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192706,"byte_end":192747,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192748,"byte_end":192751,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"! CSPRNGs are a little different in that they typically generate a block of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192752,"byte_end":192829,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"! output in a cache, and pull outputs from the cache. This allows them to have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192830,"byte_end":192910,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"! good amortised performance, and reduces or completely removes the influence","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192911,"byte_end":192990,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"! of surrounding code on the CSPRNG performance.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":192991,"byte_end":193041,"line_start":120,"line_end":120,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193042,"byte_end":193045,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"! ### Worst-case performance","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193046,"byte_end":193076,"line_start":122,"line_end":122,"column_start":1,"column_end":31}},{"value":"! Because CSPRNGs usually produce a block of values into a cache, they have","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193077,"byte_end":193154,"line_start":123,"line_end":123,"column_start":1,"column_end":78}},{"value":"! poor worst case performance (in contrast to basic PRNGs, where the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193155,"byte_end":193225,"line_start":124,"line_end":124,"column_start":1,"column_end":71}},{"value":"! performance is usually quite regular).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193226,"byte_end":193268,"line_start":125,"line_end":125,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193269,"byte_end":193272,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"! ## State size","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193273,"byte_end":193290,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193291,"byte_end":193294,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! Simple PRNGs often use very little memory, commonly only a few words, where","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193295,"byte_end":193374,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"! a *word* is usually either `u32` or `u64`. This is not true for all","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193375,"byte_end":193446,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"! non-cryptographic PRNGs however, for example the historically popular","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193447,"byte_end":193520,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"! Mersenne Twister MT19937 algorithm requires 2.5 kB of state.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193521,"byte_end":193585,"line_start":132,"line_end":132,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193586,"byte_end":193589,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"! CSPRNGs typically require more memory; since the seed size is recommended","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193590,"byte_end":193667,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"! to be at least 192 bits and some more may be required for the algorithm,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193668,"byte_end":193744,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"! 256 bits would be approximately the minimum secure size. In practice,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193745,"byte_end":193818,"line_start":136,"line_end":136,"column_start":1,"column_end":74}},{"value":"! CSPRNGs tend to use quite a bit more, [`ChaChaRng`] is relatively small with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193819,"byte_end":193899,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"! 136 bytes of state.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193900,"byte_end":193923,"line_start":138,"line_end":138,"column_start":1,"column_end":24}},{"value":"! ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193924,"byte_end":193928,"line_start":139,"line_end":139,"column_start":1,"column_end":5}},{"value":"! ## Initialization time","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193929,"byte_end":193955,"line_start":140,"line_end":140,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193956,"byte_end":193959,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"! The time required to initialize new generators varies significantly. Many","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":193960,"byte_end":194037,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"! simple PRNGs and even some cryptographic ones (including [`ChaChaRng`])","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194038,"byte_end":194113,"line_start":143,"line_end":143,"column_start":1,"column_end":76}},{"value":"! only need to copy the seed value and some constants into their state, and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194114,"byte_end":194191,"line_start":144,"line_end":144,"column_start":1,"column_end":78}},{"value":"! thus can be constructed very quickly. In contrast, CSPRNGs with large state","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194192,"byte_end":194271,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"! require an expensive key-expansion.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194272,"byte_end":194311,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194312,"byte_end":194315,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"! # Quality","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194316,"byte_end":194329,"line_start":148,"line_end":148,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194330,"byte_end":194333,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"! Many basic PRNGs are not much more than a couple of bitwise and arithmetic","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194334,"byte_end":194412,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"! operations. Their simplicity gives good performance, but also means there","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194413,"byte_end":194490,"line_start":151,"line_end":151,"column_start":1,"column_end":78}},{"value":"! are small regularities hidden in the generated random number stream.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194491,"byte_end":194563,"line_start":152,"line_end":152,"column_start":1,"column_end":73}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194564,"byte_end":194567,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! How much do those hidden regularities matter? That is hard to say, and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194568,"byte_end":194642,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"! depends on how the RNG gets used. If there happen to be correlations between","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194643,"byte_end":194723,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"! the random numbers and the algorithm they are used in, the results can be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194724,"byte_end":194801,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"! wrong or misleading.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194802,"byte_end":194826,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194827,"byte_end":194830,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"! A random number generator can be considered good if it gives the correct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194831,"byte_end":194907,"line_start":159,"line_end":159,"column_start":1,"column_end":77}},{"value":"! results in as many applications as possible. The quality of PRNG","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194908,"byte_end":194976,"line_start":160,"line_end":160,"column_start":1,"column_end":69}},{"value":"! algorithms can be evaluated to some extend analytically, to determine the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":194977,"byte_end":195054,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"! cycle length and to rule out some correlations. Then there are empirical","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195055,"byte_end":195131,"line_start":162,"line_end":162,"column_start":1,"column_end":77}},{"value":"! test suites designed to test how well a PRNG performs on a wide range of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195132,"byte_end":195208,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"! possible uses, the latest and most complete of which are [TestU01] and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195209,"byte_end":195283,"line_start":164,"line_end":164,"column_start":1,"column_end":75}},{"value":"! [PractRand].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195284,"byte_end":195300,"line_start":165,"line_end":165,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195301,"byte_end":195304,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"! CSPRNGs tend to be more complex, and have an explicit requirement to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195305,"byte_end":195380,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"! unpredictable. This implies there must be no obvious correlations between","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195381,"byte_end":195458,"line_start":168,"line_end":168,"column_start":1,"column_end":78}},{"value":"! output values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195459,"byte_end":195477,"line_start":169,"line_end":169,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195478,"byte_end":195481,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"! ### Quality stars:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195482,"byte_end":195504,"line_start":171,"line_end":171,"column_start":1,"column_end":23}},{"value":"! PRNGs with 3 stars or more should be good enough for any purpose.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195505,"byte_end":195574,"line_start":172,"line_end":172,"column_start":1,"column_end":70}},{"value":"! 1 or 2 stars may be good enough for typical apps and games, but do not work","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195575,"byte_end":195654,"line_start":173,"line_end":173,"column_start":1,"column_end":80}},{"value":"! well with all algorithms.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195655,"byte_end":195684,"line_start":174,"line_end":174,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195685,"byte_end":195688,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Period","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195689,"byte_end":195702,"line_start":176,"line_end":176,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195703,"byte_end":195706,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The *period* or *cycle length* of a PRNG is the number of values that can be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195707,"byte_end":195787,"line_start":178,"line_end":178,"column_start":1,"column_end":81}},{"value":"! generated after which it starts repeating the same random number stream.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195788,"byte_end":195864,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"! Many PRNGs have a fixed-size period, but for some only an expected average","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195865,"byte_end":195943,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"! cycle length can be given, where the exact length depends on the seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":195944,"byte_end":196018,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196019,"byte_end":196022,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"! On today's hardware, even a fast RNG with a cycle length of *only*","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196023,"byte_end":196093,"line_start":183,"line_end":183,"column_start":1,"column_end":71}},{"value":"! 2<sup>64</sup> can be used for centuries before cycling. Yet we recommend a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196094,"byte_end":196173,"line_start":184,"line_end":184,"column_start":1,"column_end":80}},{"value":"! period of 2<sup>128</sup> or more, which most modern PRNGs satisfy.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196174,"byte_end":196245,"line_start":185,"line_end":185,"column_start":1,"column_end":72}},{"value":"! Alternatively a PRNG with shorter period but support for multiple streams","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196246,"byte_end":196323,"line_start":186,"line_end":186,"column_start":1,"column_end":78}},{"value":"! may be chosen. There are two reasons for this, as follows.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196324,"byte_end":196386,"line_start":187,"line_end":187,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196387,"byte_end":196390,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"! If we see the entire period of an RNG as one long random number stream,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196391,"byte_end":196466,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"! every independently seeded RNG returns a slice of that stream. When multiple","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196467,"byte_end":196547,"line_start":190,"line_end":190,"column_start":1,"column_end":81}},{"value":"! RNG are seeded randomly, there is an increasingly large chance to end up","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196548,"byte_end":196624,"line_start":191,"line_end":191,"column_start":1,"column_end":77}},{"value":"! with a partially overlapping slice of the stream.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196625,"byte_end":196678,"line_start":192,"line_end":192,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196679,"byte_end":196682,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! If the period of the RNG is 2<sup>128</sup>, and an application consumes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196683,"byte_end":196759,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"! 2<sup>48</sup> values, it then takes about 2<sup>32</sup> random","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196760,"byte_end":196828,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"! initializations to have a chance of 1 in a million to repeat part of an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196829,"byte_end":196904,"line_start":196,"line_end":196,"column_start":1,"column_end":76}},{"value":"! already used stream. This seems good enough for common usage of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196905,"byte_end":196972,"line_start":197,"line_end":197,"column_start":1,"column_end":68}},{"value":"! non-cryptographic generators, hence the recommendation of at least","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":196973,"byte_end":197043,"line_start":198,"line_end":198,"column_start":1,"column_end":71}},{"value":"! 2<sup>128</sup>. As an estimate, the chance of any overlap in a period of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197044,"byte_end":197121,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"! size `p` with `n` independent seeds and `u` values used per seed is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197122,"byte_end":197193,"line_start":200,"line_end":200,"column_start":1,"column_end":72}},{"value":"! approximately `1 - e^(-u * n^2 / (2 * p))`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197194,"byte_end":197241,"line_start":201,"line_end":201,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197242,"byte_end":197245,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"! Further, it is not recommended to use the full period of an RNG. Many","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197246,"byte_end":197319,"line_start":203,"line_end":203,"column_start":1,"column_end":74}},{"value":"! PRNGs have a property called *k-dimensional equidistribution*, meaning that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197320,"byte_end":197399,"line_start":204,"line_end":204,"column_start":1,"column_end":80}},{"value":"! for values of some size (potentially larger than the output size), all","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197400,"byte_end":197474,"line_start":205,"line_end":205,"column_start":1,"column_end":75}},{"value":"! possible values are produced the same number of times over the generator's","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197475,"byte_end":197553,"line_start":206,"line_end":206,"column_start":1,"column_end":79}},{"value":"! period. This is not a property of true randomness. This is known as the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197554,"byte_end":197629,"line_start":207,"line_end":207,"column_start":1,"column_end":76}},{"value":"! generalized birthday problem, see the [PCG paper] for a good explanation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197630,"byte_end":197707,"line_start":208,"line_end":208,"column_start":1,"column_end":78}},{"value":"! This results in a noticable bias on output after generating more values","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197708,"byte_end":197783,"line_start":209,"line_end":209,"column_start":1,"column_end":76}},{"value":"! than the square root of the period (after 2<sup>64</sup> values for a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197784,"byte_end":197857,"line_start":210,"line_end":210,"column_start":1,"column_end":74}},{"value":"! period of 2<sup>128</sup>).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197858,"byte_end":197889,"line_start":211,"line_end":211,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197890,"byte_end":197893,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197894,"byte_end":197897,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"! # Security","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197898,"byte_end":197912,"line_start":214,"line_end":214,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197913,"byte_end":197916,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! ## Predictability","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197917,"byte_end":197938,"line_start":216,"line_end":216,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197939,"byte_end":197942,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! From the context of any PRNG, one can ask the question *given some previous","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":197943,"byte_end":198022,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"! output from the PRNG, is it possible to predict the next output value?*","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198023,"byte_end":198098,"line_start":219,"line_end":219,"column_start":1,"column_end":76}},{"value":"! This is an important property in any situation where there might be an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198099,"byte_end":198173,"line_start":220,"line_end":220,"column_start":1,"column_end":75}},{"value":"! adversary.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198174,"byte_end":198188,"line_start":221,"line_end":221,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198189,"byte_end":198192,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"! Regular PRNGs tend to be predictable, although with varying difficulty. In","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198193,"byte_end":198271,"line_start":223,"line_end":223,"column_start":1,"column_end":79}},{"value":"! some cases prediction is trivial, for example plain Xorshift outputs part of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198272,"byte_end":198352,"line_start":224,"line_end":224,"column_start":1,"column_end":81}},{"value":"! its state without mutation, and prediction is as simple as seeding a new","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198353,"byte_end":198429,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"! Xorshift generator from four `u32` outputs. Other generators, like","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198430,"byte_end":198500,"line_start":226,"line_end":226,"column_start":1,"column_end":71}},{"value":"! [PCG](http://www.pcg-random.org/predictability.html) and truncated Xorshift*","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198501,"byte_end":198581,"line_start":227,"line_end":227,"column_start":1,"column_end":81}},{"value":"! are harder to predict, but not outside the realm of common mathematics and a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198582,"byte_end":198662,"line_start":228,"line_end":228,"column_start":1,"column_end":81}},{"value":"! desktop PC.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198663,"byte_end":198678,"line_start":229,"line_end":229,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198679,"byte_end":198682,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"! The basic security that CSPRNGs must provide is the infeasibility to predict","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198683,"byte_end":198763,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"! output. This requirement is formalized as the [next-bit test]; this is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198764,"byte_end":198838,"line_start":232,"line_end":232,"column_start":1,"column_end":75}},{"value":"! roughly stated as: given the first *k* bits of a random sequence, the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198839,"byte_end":198912,"line_start":233,"line_end":233,"column_start":1,"column_end":74}},{"value":"! sequence satisfies the next-bit test if there is no algorithm able to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198913,"byte_end":198986,"line_start":234,"line_end":234,"column_start":1,"column_end":74}},{"value":"! predict the next bit using reasonable computing power.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":198987,"byte_end":199045,"line_start":235,"line_end":235,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199046,"byte_end":199049,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! A further security that *some* CSPRNGs provide is forward secrecy:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199050,"byte_end":199120,"line_start":237,"line_end":237,"column_start":1,"column_end":71}},{"value":"! in the event that the CSPRNGs state is revealed at some point, it must be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199121,"byte_end":199198,"line_start":238,"line_end":238,"column_start":1,"column_end":78}},{"value":"! infeasible to reconstruct previous states or output. Note that many CSPRNGs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199199,"byte_end":199278,"line_start":239,"line_end":239,"column_start":1,"column_end":80}},{"value":"! *do not* have forward secrecy in their usual formulations.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199279,"byte_end":199341,"line_start":240,"line_end":240,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199342,"byte_end":199345,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! As an outsider it is hard to get a good idea about the security of an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199346,"byte_end":199419,"line_start":242,"line_end":242,"column_start":1,"column_end":74}},{"value":"! algorithm. People in the field of cryptography spend a lot of effort","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199420,"byte_end":199492,"line_start":243,"line_end":243,"column_start":1,"column_end":73}},{"value":"! analyzing existing designs, and what was once considered good may now turn","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199493,"byte_end":199571,"line_start":244,"line_end":244,"column_start":1,"column_end":79}},{"value":"! out to be weaker. Generally it is best to use algorithms well-analyzed by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199572,"byte_end":199649,"line_start":245,"line_end":245,"column_start":1,"column_end":78}},{"value":"! experts, such as those recommended by NIST or ECRYPT.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199650,"byte_end":199707,"line_start":246,"line_end":246,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199708,"byte_end":199711,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"! ## State and seeding","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199712,"byte_end":199736,"line_start":248,"line_end":248,"column_start":1,"column_end":25}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199737,"byte_end":199740,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"! It is worth noting that a CSPRNG's security relies absolutely on being","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199741,"byte_end":199815,"line_start":250,"line_end":250,"column_start":1,"column_end":75}},{"value":"! seeded with a secure random key. Should the key be known or guessable, all","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199816,"byte_end":199894,"line_start":251,"line_end":251,"column_start":1,"column_end":79}},{"value":"! output of the CSPRNG is easy to guess. This implies that the seed should","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199895,"byte_end":199971,"line_start":252,"line_end":252,"column_start":1,"column_end":77}},{"value":"! come from a trusted source; usually either the OS or another CSPRNG. Our","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":199972,"byte_end":200048,"line_start":253,"line_end":253,"column_start":1,"column_end":77}},{"value":"! seeding helper trait, [`FromEntropy`], and the source it uses","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200049,"byte_end":200114,"line_start":254,"line_end":254,"column_start":1,"column_end":66}},{"value":"! ([`EntropyRng`]), should be secure. Additionally, [`ThreadRng`] is a CSPRNG,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200115,"byte_end":200195,"line_start":255,"line_end":255,"column_start":1,"column_end":81}},{"value":"! thus it is acceptable to seed from this (although for security applications","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200196,"byte_end":200275,"line_start":256,"line_end":256,"column_start":1,"column_end":80}},{"value":"! fresh/external entropy should be preferred).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200276,"byte_end":200324,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200325,"byte_end":200328,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"! Further, it should be obvious that the internal state of a CSPRNG must be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200329,"byte_end":200406,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"! kept secret. With that in mind, our implementations do not provide direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200407,"byte_end":200484,"line_start":260,"line_end":260,"column_start":1,"column_end":78}},{"value":"! access to most of their internal state, and `Debug` implementations do not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200485,"byte_end":200563,"line_start":261,"line_end":261,"column_start":1,"column_end":79}},{"value":"! print any internal state. This does not fully protect CSPRNG state; code","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200564,"byte_end":200640,"line_start":262,"line_end":262,"column_start":1,"column_end":77}},{"value":"! within the same process may read this memory (and we allow cloning and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200641,"byte_end":200715,"line_start":263,"line_end":263,"column_start":1,"column_end":75}},{"value":"! serialisation of CSPRNGs for convenience). Further, a running process may be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200716,"byte_end":200796,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"! forked by the operating system, which may leave both processes with a copy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200797,"byte_end":200875,"line_start":265,"line_end":265,"column_start":1,"column_end":79}},{"value":"! of the same generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200876,"byte_end":200902,"line_start":266,"line_end":266,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200903,"byte_end":200906,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"! ## Not a crypto library","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200907,"byte_end":200934,"line_start":268,"line_end":268,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200935,"byte_end":200938,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"! It should be emphasised that this is not a cryptography library; although","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":200939,"byte_end":201016,"line_start":270,"line_end":270,"column_start":1,"column_end":78}},{"value":"! Rand does take some measures to provide secure random numbers, it does not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201017,"byte_end":201095,"line_start":271,"line_end":271,"column_start":1,"column_end":79}},{"value":"! necessarily take all recommended measures. Further, cryptographic processes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201096,"byte_end":201175,"line_start":272,"line_end":272,"column_start":1,"column_end":80}},{"value":"! such as encryption and authentication are complex and must be implemented","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201176,"byte_end":201253,"line_start":273,"line_end":273,"column_start":1,"column_end":78}},{"value":"! very carefully to avoid flaws and resist known attacks. It is therefore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201254,"byte_end":201329,"line_start":274,"line_end":274,"column_start":1,"column_end":76}},{"value":"! recommended to use specialized libraries where possible, for example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201330,"byte_end":201402,"line_start":275,"line_end":275,"column_start":1,"column_end":73}},{"value":"! [openssl], [ring] and the [RustCrypto libraries].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201403,"byte_end":201456,"line_start":276,"line_end":276,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201457,"byte_end":201460,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201461,"byte_end":201464,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"! # Extra features","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201465,"byte_end":201485,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201486,"byte_end":201489,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"! Some PRNGs may provide extra features, like:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201490,"byte_end":201538,"line_start":281,"line_end":281,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201539,"byte_end":201542,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"! - Support for multiple streams, which can help with parallel tasks.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201543,"byte_end":201614,"line_start":283,"line_end":283,"column_start":1,"column_end":72}},{"value":"! - The ability to jump or seek around in the random number stream;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201615,"byte_end":201684,"line_start":284,"line_end":284,"column_start":1,"column_end":70}},{"value":"!   with large periood this can be used as an alternative to streams.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201685,"byte_end":201756,"line_start":285,"line_end":285,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201757,"byte_end":201760,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201761,"byte_end":201764,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"! # Further reading","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201765,"byte_end":201786,"line_start":288,"line_end":288,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201787,"byte_end":201790,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"! There is quite a lot that can be said about PRNGs. The [PCG paper] is a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201791,"byte_end":201866,"line_start":290,"line_end":290,"column_start":1,"column_end":76}},{"value":"! very approachable explaining more concepts.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201867,"byte_end":201914,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201915,"byte_end":201918,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"! A good paper about RNG quality is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201919,"byte_end":201956,"line_start":293,"line_end":293,"column_start":1,"column_end":38}},{"value":"! [\"Good random number generators are (not so) easy to find\"](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":201957,"byte_end":202021,"line_start":294,"line_end":294,"column_start":1,"column_end":65}},{"value":"! http://random.mat.sbg.ac.at/results/peter/A19final.pdf) by P. Hellekalek.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202022,"byte_end":202099,"line_start":295,"line_end":295,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202100,"byte_end":202103,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202104,"byte_end":202107,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! [`rngs` module]: ../rngs/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202108,"byte_end":202147,"line_start":298,"line_end":298,"column_start":1,"column_end":40}},{"value":"! [basic PRNGs]: #basic-pseudo-random-number-generators-prngs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202148,"byte_end":202211,"line_start":299,"line_end":299,"column_start":1,"column_end":64}},{"value":"! [CSPRNGs]: #cryptographically-secure-pseudo-random-number-generators-csprngs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202212,"byte_end":202292,"line_start":300,"line_end":300,"column_start":1,"column_end":81}},{"value":"! [`XorShiftRng`]: struct.XorShiftRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202293,"byte_end":202337,"line_start":301,"line_end":301,"column_start":1,"column_end":45}},{"value":"! [`ChaChaRng`]: chacha/struct.ChaChaRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202338,"byte_end":202385,"line_start":302,"line_end":302,"column_start":1,"column_end":48}},{"value":"! [`Hc128Rng`]: hc128/struct.Hc128Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202386,"byte_end":202430,"line_start":303,"line_end":303,"column_start":1,"column_end":45}},{"value":"! [`IsaacRng`]: isaac/struct.IsaacRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202431,"byte_end":202475,"line_start":304,"line_end":304,"column_start":1,"column_end":45}},{"value":"! [`Isaac64Rng`]: isaac64/struct.Isaac64Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202476,"byte_end":202526,"line_start":305,"line_end":305,"column_start":1,"column_end":51}},{"value":"! [`ThreadRng`]: ../rngs/struct.ThreadRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202527,"byte_end":202575,"line_start":306,"line_end":306,"column_start":1,"column_end":49}},{"value":"! [`FromEntropy`]: ../trait.FromEntropy.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202576,"byte_end":202622,"line_start":307,"line_end":307,"column_start":1,"column_end":47}},{"value":"! [`EntropyRng`]: ../rngs/struct.EntropyRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202623,"byte_end":202673,"line_start":308,"line_end":308,"column_start":1,"column_end":51}},{"value":"! [TestU01]: http://simul.iro.umontreal.ca/testu01/tu01.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202674,"byte_end":202736,"line_start":309,"line_end":309,"column_start":1,"column_end":63}},{"value":"! [PractRand]: http://pracrand.sourceforge.net/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202737,"byte_end":202786,"line_start":310,"line_end":310,"column_start":1,"column_end":50}},{"value":"! [PCG paper]: http://www.pcg-random.org/pdf/hmc-cs-2014-0905.pdf","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202787,"byte_end":202854,"line_start":311,"line_end":311,"column_start":1,"column_end":68}},{"value":"! [openssl]: https://crates.io/crates/openssl","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202855,"byte_end":202902,"line_start":312,"line_end":312,"column_start":1,"column_end":48}},{"value":"! [ring]: https://crates.io/crates/ring","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202903,"byte_end":202944,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"! [RustCrypto libraries]: https://github.com/RustCrypto","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":202945,"byte_end":203002,"line_start":314,"line_end":314,"column_start":1,"column_end":58}},{"value":"! [next-bit test]: https://en.wikipedia.org/wiki/Next-bit_test","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203003,"byte_end":203067,"line_start":315,"line_end":315,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":403},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"chacha","qualname":"::prng::chacha","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":1940},{"krate":0,"index":1945},{"krate":0,"index":1943},{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":1947},{"krate":0,"index":1950},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":443},{"krate":0,"index":448},{"krate":0,"index":449}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"! The ChaCha random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":203808,"byte_end":203847,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1940},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206399,"byte_end":206408,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"ChaChaRng","qualname":"::prng::chacha::ChaChaRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cryptographically secure random number generator that uses the ChaCha\n algorithm.","sig":null,"attributes":[{"value":"/ A cryptographically secure random number generator that uses the ChaCha","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204066,"byte_end":204141,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ algorithm.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204142,"byte_end":204156,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204157,"byte_end":204160,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ChaCha is a stream cipher designed by Daniel J. Bernstein [^1], that we use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204161,"byte_end":204240,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ as an RNG. It is an improved variant of the Salsa20 cipher family, which was","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204241,"byte_end":204321,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ selected as one of the \"stream ciphers suitable for widespread adoption\" by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204322,"byte_end":204401,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ eSTREAM [^2].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204402,"byte_end":204419,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204420,"byte_end":204423,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ChaCha uses add-rotate-xor (ARX) operations as its basis. These are safe","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204424,"byte_end":204500,"line_start":28,"line_end":28,"column_start":1,"column_end":77}},{"value":"/ against timing attacks, although that is mostly a concern for ciphers and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204501,"byte_end":204578,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ not for RNGs. Also it is very suitable for SIMD implementation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204579,"byte_end":204646,"line_start":30,"line_end":30,"column_start":1,"column_end":68}},{"value":"/ Here we do not provide a SIMD implementation yet, except for what is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204647,"byte_end":204719,"line_start":31,"line_end":31,"column_start":1,"column_end":73}},{"value":"/ provided by auto-vectorisation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204720,"byte_end":204755,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204756,"byte_end":204759,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ With the ChaCha algorithm it is possible to choose the number of rounds the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204760,"byte_end":204839,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ core algorithm should run. The number of rounds is a tradeoff between","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204840,"byte_end":204913,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ performance and security, where 8 rounds is the minimum potentially","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204914,"byte_end":204985,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/ secure configuration, and 20 rounds is widely used as a conservative choice.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":204986,"byte_end":205066,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ We use 20 rounds in this implementation, but hope to allow type-level","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205067,"byte_end":205140,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ configuration in the future.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205141,"byte_end":205173,"line_start":39,"line_end":39,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205174,"byte_end":205177,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ We use a 64-bit counter and 64-bit stream identifier as in Benstein's","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205178,"byte_end":205251,"line_start":41,"line_end":41,"column_start":1,"column_end":74}},{"value":"/ implementation [^1] except that we use a stream identifier in place of a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205252,"byte_end":205328,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ nonce. A 64-bit counter over 64-byte (16 word) blocks allows 1 ZiB of output","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205329,"byte_end":205409,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ before cycling, and the stream identifier allows 2<sup>64</sup> unique","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205410,"byte_end":205484,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ streams of output per seed. Both counter and stream are initialized to zero","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205485,"byte_end":205564,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ but may be set via [`set_word_pos`] and [`set_stream`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205565,"byte_end":205624,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205625,"byte_end":205628,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The word layout is:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205629,"byte_end":205652,"line_start":48,"line_end":48,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205653,"byte_end":205656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205657,"byte_end":205668,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ constant constant constant constant","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205669,"byte_end":205708,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/ seed     seed     seed     seed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205709,"byte_end":205744,"line_start":52,"line_end":52,"column_start":1,"column_end":36}},{"value":"/ seed     seed     seed     seed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205745,"byte_end":205780,"line_start":53,"line_end":53,"column_start":1,"column_end":36}},{"value":"/ counter  counter  nonce    nonce","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205781,"byte_end":205817,"line_start":54,"line_end":54,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205818,"byte_end":205825,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205826,"byte_end":205829,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ This implementation uses an output buffer of sixteen `u32` words, and uses","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205830,"byte_end":205908,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ [`BlockRng`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205909,"byte_end":205963,"line_start":58,"line_end":58,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205964,"byte_end":205967,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [^1]: D. J. Bernstein, [*ChaCha, a variant of Salsa20*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":205968,"byte_end":206028,"line_start":60,"line_end":60,"column_start":1,"column_end":61}},{"value":"/       https://cr.yp.to/chacha.html)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206029,"byte_end":206068,"line_start":61,"line_end":61,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206069,"byte_end":206072,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [^2]: [eSTREAM: the ECRYPT Stream Cipher Project](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206073,"byte_end":206127,"line_start":63,"line_end":63,"column_start":1,"column_end":55}},{"value":"/       http://www.ecrypt.eu.org/stream/)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206128,"byte_end":206171,"line_start":64,"line_end":64,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206172,"byte_end":206175,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`set_word_pos`]: #method.set_word_pos","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206176,"byte_end":206218,"line_start":66,"line_end":66,"column_start":1,"column_end":43}},{"value":"/ [`set_stream`]: #method.set_stream","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206219,"byte_end":206257,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/ [`BlockRng`]: ../../../rand_core/block/struct.BlockRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206258,"byte_end":206321,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206322,"byte_end":206363,"line_start":69,"line_end":69,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207947,"byte_end":207959,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<ChaChaRng>::new_unseeded","value":"fn () -> ChaChaRng","parent":null,"children":[],"decl_id":null,"docs":" Create an ChaCha random number generator using the default\n fixed key of 8 zero words.","sig":null,"attributes":[{"value":"/ Create an ChaCha random number generator using the default","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207242,"byte_end":207304,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ fixed key of 8 zero words.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207309,"byte_end":207339,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207344,"byte_end":207347,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207352,"byte_end":207366,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207371,"byte_end":207374,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207379,"byte_end":207386,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207391,"byte_end":207418,"line_start":116,"line_end":116,"column_start":5,"column_end":32}},{"value":"/ use rand::{RngCore, ChaChaRng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207423,"byte_end":207458,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207463,"byte_end":207466,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let mut ra = ChaChaRng::new_unseeded();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207471,"byte_end":207514,"line_start":119,"line_end":119,"column_start":5,"column_end":48}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207519,"byte_end":207555,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/ println!(\"{:?}\", ra.next_u32());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207560,"byte_end":207596,"line_start":121,"line_end":121,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207601,"byte_end":207608,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207613,"byte_end":207616,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Since this equivalent to a RNG with a fixed seed, repeated executions","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207621,"byte_end":207694,"line_start":124,"line_end":124,"column_start":5,"column_end":78}},{"value":"/ of an unseeded RNG will produce the same result. This code sample will","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207699,"byte_end":207773,"line_start":125,"line_end":125,"column_start":5,"column_end":79}},{"value":"/ consistently produce:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207778,"byte_end":207803,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207808,"byte_end":207811,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ - 2917185654","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207816,"byte_end":207832,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"/ - 2419978656","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207837,"byte_end":207853,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207858,"byte_end":207935,"line_start":130,"line_end":130,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210504,"byte_end":210514,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"set_stream","qualname":"<ChaChaRng>::set_stream","value":"fn (&mut self, stream: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the stream number.","sig":null,"attributes":[{"value":"/ Set the stream number.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":209875,"byte_end":209901,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":209906,"byte_end":209909,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This is initialized to zero; 2<sup>64</sup> unique streams of output","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":209914,"byte_end":209986,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ are available per seed/key.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":209991,"byte_end":210022,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210027,"byte_end":210031,"line_start":183,"line_end":183,"column_start":5,"column_end":9}},{"value":"/ Note that in order to reproduce ChaCha output with a specific 64-bit","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210036,"byte_end":210108,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ nonce, one can convert that nonce to a `u64` in little-endian fashion","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210113,"byte_end":210186,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ and pass to this function. In theory a 96-bit nonce can be used by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210191,"byte_end":210261,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ passing the last 64-bits to this function and using the first 32-bits as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210266,"byte_end":210342,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ the most significant half of the 64-bit counter (which may be set","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210347,"byte_end":210416,"line_start":188,"line_end":188,"column_start":5,"column_end":74}},{"value":"/ indirectly via `set_word_pos`), but this is not directly supported.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":210421,"byte_end":210492,"line_start":189,"line_end":189,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1947},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":211234,"byte_end":211244,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"ChaChaCore","qualname":"::prng::chacha::ChaChaCore","value":"ChaChaCore {  }","parent":null,"children":[{"krate":0,"index":1948}],"decl_id":null,"docs":" The core of `ChaChaRng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `ChaChaRng`, used with `BlockRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":211155,"byte_end":211205,"line_start":208,"line_end":208,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":451},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hc128","qualname":"::prng::hc128","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":1952},{"krate":0,"index":1957},{"krate":0,"index":1955},{"krate":0,"index":463},{"krate":0,"index":468},{"krate":0,"index":473},{"krate":0,"index":1959},{"krate":0,"index":1963},{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":490},{"krate":0,"index":495}],"decl_id":null,"docs":" The HC-128 random number generator.\n","sig":null,"attributes":[{"value":"! The HC-128 random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":221617,"byte_end":221656,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224434,"byte_end":224442,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Hc128Rng","qualname":"::prng::hc128::Hc128Rng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A cryptographically secure random number generator that uses the HC-128\n algorithm.","sig":null,"attributes":[{"value":"/ A cryptographically secure random number generator that uses the HC-128","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":221851,"byte_end":221926,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ algorithm.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":221927,"byte_end":221941,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":221942,"byte_end":221945,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ HC-128 is a stream cipher designed by Hongjun Wu[^1], that we use as an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":221946,"byte_end":222021,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ RNG. It is selected as one of the \"stream ciphers suitable for widespread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222022,"byte_end":222099,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ adoption\" by eSTREAM[^2].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222100,"byte_end":222129,"line_start":24,"line_end":24,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222130,"byte_end":222133,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ HC-128 is an array based RNG. In this it is similar to RC-4 and ISAAC before","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222134,"byte_end":222214,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ it, but those have never been proven cryptographically secure (or have even","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222215,"byte_end":222294,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ been significantly compromised, as in the case of RC-4[^5]).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222295,"byte_end":222359,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222360,"byte_end":222363,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Because HC-128 works with simple indexing into a large array and with a few","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222364,"byte_end":222443,"line_start":30,"line_end":30,"column_start":1,"column_end":80}},{"value":"/ operations that parallelize well, it has very good performance. The size of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222444,"byte_end":222523,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ the array it needs, 4kb, can however be a disadvantage.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222524,"byte_end":222583,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222584,"byte_end":222587,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This implementation is not based on the version of HC-128 submitted to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222588,"byte_end":222666,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ eSTREAM contest, but on a later version by the author with a few small","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222667,"byte_end":222741,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ improvements from December 15, 2009[^3].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222742,"byte_end":222786,"line_start":36,"line_end":36,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222787,"byte_end":222790,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ HC-128 has no known weaknesses that are easier to exploit than doing a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222791,"byte_end":222865,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ brute-force search of 2<sup>128</sup>. A very comprehensive analysis of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222866,"byte_end":222945,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ current state of known attacks / weaknesses of HC-128 is given in *Some","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":222946,"byte_end":223021,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ Results On Analysis And Implementation Of HC-128 Stream Cipher*[^4].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223022,"byte_end":223094,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223095,"byte_end":223098,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The average cycle length is expected to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223099,"byte_end":223145,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ 2<sup>1024*32+10-1</sup> = 2<sup>32777</sup>.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223146,"byte_end":223195,"line_start":44,"line_end":44,"column_start":1,"column_end":50}},{"value":"/ We support seeding with a 256-bit array, which matches the 128-bit key","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223196,"byte_end":223270,"line_start":45,"line_end":45,"column_start":1,"column_end":75}},{"value":"/ concatenated with a 128-bit IV from the stream cipher.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223271,"byte_end":223329,"line_start":46,"line_end":46,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223330,"byte_end":223333,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This implementation uses an output buffer of sixteen `u32` words, and uses","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223334,"byte_end":223412,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ [`BlockRng`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223413,"byte_end":223467,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223468,"byte_end":223471,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## References","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223472,"byte_end":223489,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"/ [^1]: Hongjun Wu (2008). [\"The Stream Cipher HC-128\"](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223490,"byte_end":223548,"line_start":52,"line_end":52,"column_start":1,"column_end":59}},{"value":"/       http://www.ecrypt.eu.org/stream/p3ciphers/hc/hc128_p3.pdf).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223549,"byte_end":223618,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/       *The eSTREAM Finalists*, LNCS 4986, pp. 39–47, Springer-Verlag.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223619,"byte_end":223694,"line_start":54,"line_end":54,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223695,"byte_end":223698,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ [^2]: [eSTREAM: the ECRYPT Stream Cipher Project](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223699,"byte_end":223753,"line_start":56,"line_end":56,"column_start":1,"column_end":55}},{"value":"/       http://www.ecrypt.eu.org/stream/)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223754,"byte_end":223797,"line_start":57,"line_end":57,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223798,"byte_end":223801,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [^3]: Hongjun Wu, [Stream Ciphers HC-128 and HC-256](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223802,"byte_end":223859,"line_start":59,"line_end":59,"column_start":1,"column_end":58}},{"value":"/       https://www.ntu.edu.sg/home/wuhj/research/hc/index.html)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223860,"byte_end":223926,"line_start":60,"line_end":60,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223927,"byte_end":223930,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [^4]: Shashwat Raizada (January 2015),[\"Some Results On Analysis And","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":223931,"byte_end":224003,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/       Implementation Of HC-128 Stream Cipher\"](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224004,"byte_end":224055,"line_start":63,"line_end":63,"column_start":1,"column_end":52}},{"value":"/       http://library.isical.ac.in:8080/jspui/bitstream/123456789/6636/1/TH431.pdf).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224056,"byte_end":224143,"line_start":64,"line_end":64,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224144,"byte_end":224147,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [^5]: Internet Engineering Task Force (February 2015),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224148,"byte_end":224206,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"/       [\"Prohibiting RC4 Cipher Suites\"](https://tools.ietf.org/html/rfc7465).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224207,"byte_end":224288,"line_start":67,"line_end":67,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224289,"byte_end":224292,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`BlockRng`]: ../../../rand_core/block/struct.BlockRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224293,"byte_end":224356,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224357,"byte_end":224398,"line_start":70,"line_end":70,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1959},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225312,"byte_end":225321,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"Hc128Core","qualname":"::prng::hc128::Hc128Core","value":"Hc128Core {  }","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1962}],"decl_id":null,"docs":" The core of `Hc128Rng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `Hc128Rng`, used with `BlockRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225234,"byte_end":225283,"line_start":108,"line_end":108,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":496},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isaac","qualname":"::prng::isaac","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":1965},{"krate":0,"index":1970},{"krate":0,"index":1968},{"krate":0,"index":513},{"krate":0,"index":518},{"krate":0,"index":524},{"krate":0,"index":1972},{"krate":0,"index":1978},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":541},{"krate":0,"index":548}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[{"value":"! The ISAAC random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":241776,"byte_end":241814,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1965},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244863,"byte_end":244871,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"IsaacRng","qualname":"::prng::isaac::IsaacRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that uses the ISAAC algorithm.","sig":null,"attributes":[{"value":"/ A random number generator that uses the ISAAC algorithm.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242133,"byte_end":242193,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242194,"byte_end":242197,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ISAAC stands for \"Indirection, Shift, Accumulate, Add, and Count\" which are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242198,"byte_end":242277,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ the principal bitwise operations employed. It is the most advanced of a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242278,"byte_end":242353,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ series of array based random number generator designed by Robert Jenkins","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242354,"byte_end":242430,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ in 1996[^1][^2].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242431,"byte_end":242451,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242452,"byte_end":242455,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ISAAC is notably fast and produces excellent quality random numbers for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242456,"byte_end":242531,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ non-cryptographic applications.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242532,"byte_end":242567,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242568,"byte_end":242571,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In spite of being designed with cryptographic security in mind, ISAAC hasn't","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242572,"byte_end":242652,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ been stringently cryptanalyzed and thus cryptographers do not not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242653,"byte_end":242722,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ consensually trust it to be secure. When looking for a secure RNG, prefer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242723,"byte_end":242800,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ [`Hc128Rng`] instead, which, like ISAAC, is an array-based RNG and one of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242801,"byte_end":242878,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ the stream-ciphers selected the by eSTREAM contest.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242879,"byte_end":242934,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242935,"byte_end":242938,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ In 2006 an improvement to ISAAC was suggested by Jean-Philippe Aumasson,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":242939,"byte_end":243015,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ named ISAAC+[^3]. But because the specification is not complete, because","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243016,"byte_end":243092,"line_start":42,"line_end":42,"column_start":1,"column_end":77}},{"value":"/ there is no good implementation, and because the suggested bias may not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243093,"byte_end":243168,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ exist, it is not implemented here.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243169,"byte_end":243207,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243208,"byte_end":243211,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ## Overview of the ISAAC algorithm:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243212,"byte_end":243251,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/ (in pseudo-code)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243252,"byte_end":243272,"line_start":47,"line_end":47,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243273,"byte_end":243276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243277,"byte_end":243288,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/ Input: a, b, c, s[256] // state","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243289,"byte_end":243324,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"/ Output: r[256]         // results","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243325,"byte_end":243362,"line_start":51,"line_end":51,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243363,"byte_end":243366,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ mix(a,i) = a ^ a << 13   if i = 0 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243367,"byte_end":243410,"line_start":53,"line_end":53,"column_start":1,"column_end":44}},{"value":"/            a ^ a >>  6   if i = 1 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243411,"byte_end":243454,"line_start":54,"line_end":54,"column_start":1,"column_end":44}},{"value":"/            a ^ a <<  2   if i = 2 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243455,"byte_end":243498,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/            a ^ a >> 16   if i = 3 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243499,"byte_end":243542,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243543,"byte_end":243546,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ c = c + 1","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243547,"byte_end":243560,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/ b = b + c","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243561,"byte_end":243574,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243575,"byte_end":243578,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ for i in 0..256 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243579,"byte_end":243600,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     x = s_[i]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243601,"byte_end":243618,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     a = f(a,i) + s[i+128 mod 256]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243619,"byte_end":243656,"line_start":63,"line_end":63,"column_start":1,"column_end":38}},{"value":"/     y = a + b + s[x>>2 mod 256]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243657,"byte_end":243692,"line_start":64,"line_end":64,"column_start":1,"column_end":36}},{"value":"/     s[i] = y","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243693,"byte_end":243709,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"/     b = x + s[y>>10 mod 256]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243710,"byte_end":243742,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/     r[i] = b","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243743,"byte_end":243759,"line_start":67,"line_end":67,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243760,"byte_end":243765,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243766,"byte_end":243773,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243774,"byte_end":243777,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Numbers are generated in blocks of 256. This means the function above only","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243778,"byte_end":243856,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ runs once every 256 times you ask for a next random number. In all other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243857,"byte_end":243933,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ circumstances the last element of the results array is returned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":243934,"byte_end":244002,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244003,"byte_end":244006,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ISAAC therefore needs a lot of memory, relative to other non-crypto RNGs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244007,"byte_end":244084,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ 2 * 256 * 4 = 2 kb to hold the state and results.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244085,"byte_end":244138,"line_start":76,"line_end":76,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244139,"byte_end":244142,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ This implementation uses [`BlockRng`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244143,"byte_end":244222,"line_start":78,"line_end":78,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244223,"byte_end":244226,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ ## References","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244227,"byte_end":244244,"line_start":80,"line_end":80,"column_start":1,"column_end":18}},{"value":"/ [^1]: Bob Jenkins, [*ISAAC: A fast cryptographic random number generator*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244245,"byte_end":244324,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/       http://burtleburtle.net/bob/rand/isaacafa.html)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244325,"byte_end":244382,"line_start":82,"line_end":82,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244383,"byte_end":244386,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [^2]: Bob Jenkins, [*ISAAC and RC4*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244387,"byte_end":244428,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/       http://burtleburtle.net/bob/rand/isaac.html)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244429,"byte_end":244483,"line_start":85,"line_end":85,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244484,"byte_end":244487,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [^3]: Jean-Philippe Aumasson, [*On the pseudo-random generator ISAAC*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244488,"byte_end":244563,"line_start":87,"line_end":87,"column_start":1,"column_end":76}},{"value":"/       https://eprint.iacr.org/2006/438)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244564,"byte_end":244607,"line_start":88,"line_end":88,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244608,"byte_end":244611,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [`Hc128Rng`]: ../hc128/struct.Hc128Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244612,"byte_end":244659,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/ [`BlockRng`]: ../../../rand_core/block/struct.BlockRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244660,"byte_end":244723,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244724,"byte_end":244765,"line_start":92,"line_end":92,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245925,"byte_end":245937,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<IsaacRng>::new_unseeded","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using the default\n fixed seed.","sig":null,"attributes":[{"value":"/ Create an ISAAC random number generator using the default","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245662,"byte_end":245723,"line_start":130,"line_end":130,"column_start":5,"column_end":66}},{"value":"/ fixed seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245728,"byte_end":245743,"line_start":131,"line_end":131,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245748,"byte_end":245751,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED. `IsaacRng::new_from_u64(0)` will produce identical results.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245756,"byte_end":245831,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245836,"byte_end":245913,"line_start":134,"line_end":134,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246205,"byte_end":246217,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<IsaacRng>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC random number generator using an `u64` as seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245991,"byte_end":246058,"line_start":139,"line_end":139,"column_start":5,"column_end":72}},{"value":"/ If `seed == 0` this will produce the same stream of random numbers as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246063,"byte_end":246136,"line_start":140,"line_end":140,"column_start":5,"column_end":78}},{"value":"/ the reference implementation when used unseeded.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246141,"byte_end":246193,"line_start":141,"line_end":141,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1972},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246451,"byte_end":246460,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"IsaacCore","qualname":"::prng::isaac::IsaacCore","value":"IsaacCore {  }","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977}],"decl_id":null,"docs":" The core of `IsaacRng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `IsaacRng`, used with `BlockRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246311,"byte_end":246360,"line_start":147,"line_end":147,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":557},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"isaac64","qualname":"::prng::isaac64","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":1980},{"krate":0,"index":1985},{"krate":0,"index":1983},{"krate":0,"index":574},{"krate":0,"index":579},{"krate":0,"index":585},{"krate":0,"index":1987},{"krate":0,"index":1993},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":602},{"krate":0,"index":609}],"decl_id":null,"docs":" The ISAAC-64 random number generator.\n","sig":null,"attributes":[{"value":"! The ISAAC-64 random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":260580,"byte_end":260621,"line_start":11,"line_end":11,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1980},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263207,"byte_end":263217,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"Isaac64Rng","qualname":"::prng::isaac64::Isaac64Rng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that uses ISAAC-64, the 64-bit variant of the\n ISAAC algorithm.","sig":null,"attributes":[{"value":"/ A random number generator that uses ISAAC-64, the 64-bit variant of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":260942,"byte_end":261017,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ ISAAC algorithm.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261018,"byte_end":261038,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261039,"byte_end":261042,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ISAAC stands for \"Indirection, Shift, Accumulate, Add, and Count\" which are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261043,"byte_end":261122,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ the principal bitwise operations employed. It is the most advanced of a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261123,"byte_end":261198,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ series of array based random number generator designed by Robert Jenkins","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261199,"byte_end":261275,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ in 1996[^1].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261276,"byte_end":261292,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261293,"byte_end":261296,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ISAAC-64 is mostly similar to ISAAC. Because it operates on 64-bit integers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261297,"byte_end":261376,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ instead of 32-bit, it uses twice as much memory to hold its state and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261377,"byte_end":261450,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ results. Also it uses different constants for shifts and indirect indexing,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261451,"byte_end":261530,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ optimized to give good results for 64bit arithmetic.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261531,"byte_end":261587,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261588,"byte_end":261591,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ISAAC-64 is notably fast and produces excellent quality random numbers for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261592,"byte_end":261670,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ non-cryptographic applications.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261671,"byte_end":261706,"line_start":39,"line_end":39,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261707,"byte_end":261710,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ In spite of being designed with cryptographic security in mind, ISAAC hasn't","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261711,"byte_end":261791,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ been stringently cryptanalyzed and thus cryptographers do not not","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261792,"byte_end":261861,"line_start":42,"line_end":42,"column_start":1,"column_end":70}},{"value":"/ consensually trust it to be secure. When looking for a secure RNG, prefer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261862,"byte_end":261939,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ [`Hc128Rng`] instead, which, like ISAAC, is an array-based RNG and one of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":261940,"byte_end":262017,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ the stream-ciphers selected the by eSTREAM contest.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262018,"byte_end":262073,"line_start":45,"line_end":45,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262074,"byte_end":262077,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Overview of the ISAAC-64 algorithm:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262078,"byte_end":262120,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/ (in pseudo-code)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262121,"byte_end":262141,"line_start":48,"line_end":48,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262142,"byte_end":262145,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262146,"byte_end":262157,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ Input: a, b, c, s[256] // state","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262158,"byte_end":262193,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ Output: r[256] // results","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262194,"byte_end":262223,"line_start":52,"line_end":52,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262224,"byte_end":262227,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ mix(a,i) = !(a ^ a << 21)  if i = 0 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262228,"byte_end":262273,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/              a ^ a >>  5   if i = 1 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262274,"byte_end":262319,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"/              a ^ a << 12   if i = 2 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262320,"byte_end":262365,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/              a ^ a >> 33   if i = 3 mod 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262366,"byte_end":262411,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262412,"byte_end":262415,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ c = c + 1","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262416,"byte_end":262429,"line_start":59,"line_end":59,"column_start":1,"column_end":14}},{"value":"/ b = b + c","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262430,"byte_end":262443,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262444,"byte_end":262447,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ for i in 0..256 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262448,"byte_end":262469,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/     x = s_[i]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262470,"byte_end":262487,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/     a = mix(a,i) + s[i+128 mod 256]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262488,"byte_end":262527,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/     y = a + b + s[x>>3 mod 256]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262528,"byte_end":262563,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/     s[i] = y","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262564,"byte_end":262580,"line_start":66,"line_end":66,"column_start":1,"column_end":17}},{"value":"/     b = x + s[y>>11 mod 256]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262581,"byte_end":262613,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/     r[i] = b","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262614,"byte_end":262630,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262631,"byte_end":262636,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262637,"byte_end":262644,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262645,"byte_end":262648,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ This implementation uses [`BlockRng64`] to implement the [`RngCore`] methods.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262649,"byte_end":262730,"line_start":72,"line_end":72,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262731,"byte_end":262734,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ See for more information the documentation of [`IsaacRng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262735,"byte_end":262798,"line_start":74,"line_end":74,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262799,"byte_end":262802,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ [^1]: Bob Jenkins, [*ISAAC and RC4*](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262803,"byte_end":262844,"line_start":76,"line_end":76,"column_start":1,"column_end":42}},{"value":"/       http://burtleburtle.net/bob/rand/isaac.html)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262845,"byte_end":262899,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262900,"byte_end":262903,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ [`IsaacRng`]: ../isaac/struct.IsaacRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262904,"byte_end":262951,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/ [`Hc128Rng`]: ../hc128/struct.Hc128Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":262952,"byte_end":262999,"line_start":80,"line_end":80,"column_start":1,"column_end":48}},{"value":"/ [`BlockRng64`]: ../../../rand_core/block/struct.BlockRng64.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263000,"byte_end":263067,"line_start":81,"line_end":81,"column_start":1,"column_end":68}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263068,"byte_end":263109,"line_start":82,"line_end":82,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264303,"byte_end":264315,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<Isaac64Rng>::new_unseeded","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 64-bit ISAAC random number generator using the\n default fixed seed.","sig":null,"attributes":[{"value":"/ Create a 64-bit ISAAC random number generator using the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264032,"byte_end":264091,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ default fixed seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264096,"byte_end":264119,"line_start":121,"line_end":121,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264124,"byte_end":264127,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ DEPRECATED. `Isaac64Rng::new_from_u64(0)` will produce identical results.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264132,"byte_end":264209,"line_start":123,"line_end":123,"column_start":5,"column_end":82}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264214,"byte_end":264291,"line_start":124,"line_end":124,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264586,"byte_end":264598,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<Isaac64Rng>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC-64 random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC-64 random number generator using an `u64` as seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264369,"byte_end":264439,"line_start":129,"line_end":129,"column_start":5,"column_end":75}},{"value":"/ If `seed == 0` this will produce the same stream of random numbers as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264444,"byte_end":264517,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ the reference implementation when used unseeded.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264522,"byte_end":264574,"line_start":131,"line_end":131,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1987},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264840,"byte_end":264851,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"Isaac64Core","qualname":"::prng::isaac64::Isaac64Core","value":"Isaac64Core {  }","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992}],"decl_id":null,"docs":" The core of `Isaac64Rng`, used with `BlockRng`.\n","sig":null,"attributes":[{"value":"/ The core of `Isaac64Rng`, used with `BlockRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264698,"byte_end":264749,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":270641,"byte_end":270653,"line_start":283,"line_end":283,"column_start":12,"column_end":24},"name":"new_from_u64","qualname":"<Isaac64Core>::new_from_u64","value":"fn (seed: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an ISAAC-64 random number generator using an `u64` as seed.\n If `seed == 0` this will produce the same stream of random numbers as\n the reference implementation when used unseeded.\n","sig":null,"attributes":[{"value":"/ Create an ISAAC-64 random number generator using an `u64` as seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":270424,"byte_end":270494,"line_start":280,"line_end":280,"column_start":5,"column_end":75}},{"value":"/ If `seed == 0` this will produce the same stream of random numbers as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":270499,"byte_end":270572,"line_start":281,"line_end":281,"column_start":5,"column_end":78}},{"value":"/ the reference implementation when used unseeded.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":270577,"byte_end":270629,"line_start":282,"line_end":282,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1995},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279572,"byte_end":279583,"line_start":28,"line_end":28,"column_start":12,"column_end":23},"name":"XorShiftRng","qualname":"::prng::xorshift::XorShiftRng","value":"XorShiftRng {  }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"decl_id":null,"docs":" An Xorshift random number generator.","sig":null,"attributes":[{"value":"/ An Xorshift random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279046,"byte_end":279086,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279087,"byte_end":279090,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The Xorshift[^1] algorithm is not suitable for cryptographic purposes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279091,"byte_end":279164,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/ but is very fast. If you do not know for sure that it fits your","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279165,"byte_end":279232,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ requirements, use a more secure one such as `IsaacRng` or `OsRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279233,"byte_end":279303,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279304,"byte_end":279307,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ [^1]: Marsaglia, George (July 2003).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279308,"byte_end":279348,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/       [\"Xorshift RNGs\"](https://www.jstatsoft.org/v08/i14/paper).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279349,"byte_end":279418,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/       *Journal of Statistical Software*. Vol. 8 (Issue 14).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279419,"byte_end":279482,"line_start":25,"line_end":25,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280304,"byte_end":280316,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"new_unseeded","qualname":"<XorShiftRng>::new_unseeded","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" Creates a new XorShiftRng instance which is not seeded.","sig":null,"attributes":[{"value":"/ Creates a new XorShiftRng instance which is not seeded.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279883,"byte_end":279942,"line_start":43,"line_end":43,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279947,"byte_end":279950,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The initial values of this RNG are constants, so all generators created","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279955,"byte_end":280030,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ by this function will yield the same stream of random numbers. It is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280035,"byte_end":280107,"line_start":46,"line_end":46,"column_start":5,"column_end":77}},{"value":"/ highly recommended that this is created through `SeedableRng` instead of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280112,"byte_end":280188,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ this function","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280193,"byte_end":280210,"line_start":48,"line_end":48,"column_start":5,"column_end":22}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use the FromEntropy or SeedableRng trait\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280215,"byte_end":280292,"line_start":49,"line_end":49,"column_start":5,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":2002},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":286813,"byte_end":286823,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"IsaacArray","qualname":"::prng::isaac_array::IsaacArray","value":"IsaacArray {  }","parent":null,"children":[{"krate":0,"index":2004}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":286700,"byte_end":286739,"line_start":24,"line_end":24,"column_start":1,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":675},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rngs","qualname":"::rngs","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","parent":null,"children":[{"krate":0,"index":676},{"krate":0,"index":747},{"krate":0,"index":781},{"krate":0,"index":859},{"krate":0,"index":871},{"krate":0,"index":887},{"krate":0,"index":905},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":1019}],"decl_id":null,"docs":" Random number generators and adapters for common usage:","sig":null,"attributes":[{"value":"! Random number generators and adapters for common usage:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290221,"byte_end":290280,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290281,"byte_end":290284,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! - [`ThreadRng`], a fast, secure, auto-seeded thread-local generator","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290285,"byte_end":290356,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! - [`StdRng`] and [`SmallRng`], algorithms to cover typical usage","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290357,"byte_end":290425,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"! - [`EntropyRng`], [`OsRng`] and [`JitterRng`] as entropy sources","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290426,"byte_end":290494,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"! - [`mock::StepRng`] as a simple counter for tests","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290495,"byte_end":290548,"line_start":16,"line_end":16,"column_start":1,"column_end":54}},{"value":"! - [`adapter::ReadRng`] to read from a file/stream","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290549,"byte_end":290602,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290603,"byte_end":290606,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! # Background — Random number generators (RNGs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290607,"byte_end":290659,"line_start":19,"line_end":19,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290660,"byte_end":290663,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! Computers are inherently deterministic, so to get *random* numbers one","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290664,"byte_end":290738,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"! either has to use a hardware generator or collect bits of *entropy* from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290739,"byte_end":290815,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"! various sources (e.g. event timestamps, or jitter). This is a relatively","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290816,"byte_end":290892,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"! slow and complicated operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290893,"byte_end":290928,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290929,"byte_end":290932,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Generally the operating system will collect some entropy, remove bias, and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":290933,"byte_end":291011,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"! use that to seed its own PRNG; [`OsRng`] provides an interface to this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291012,"byte_end":291087,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"! [`JitterRng`] is an entropy collector included with Rand that measures","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291088,"byte_end":291162,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"! jitter in the CPU execution time, and jitter in memory access time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291163,"byte_end":291234,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"! [`EntropyRng`] is a wrapper that uses the best entropy source that is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291235,"byte_end":291308,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"! available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291309,"byte_end":291323,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291324,"byte_end":291327,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ## Pseudo-random number generators","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291328,"byte_end":291366,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291367,"byte_end":291370,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! What is commonly used instead of \"true\" random number renerators, are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291371,"byte_end":291444,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"! *pseudo-random number generators* (PRNGs), deterministic algorithms that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291445,"byte_end":291521,"line_start":36,"line_end":36,"column_start":1,"column_end":77}},{"value":"! produce an infinite stream of pseudo-random numbers from a small random","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291522,"byte_end":291597,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"! seed. PRNGs are faster, and have better provable properties. The numbers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291598,"byte_end":291674,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"! produced can be statistically of very high quality and can be impossible to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291675,"byte_end":291754,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"! predict. (They can also have obvious correlations and be trivial to predict;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291755,"byte_end":291835,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"! quality varies.)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291836,"byte_end":291856,"line_start":41,"line_end":41,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291857,"byte_end":291860,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! There are two different types of PRNGs: those developed for simulations","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291861,"byte_end":291936,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"! and statistics, and those developed for use in cryptography; the latter are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":291937,"byte_end":292016,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"! called Cryptographically Secure PRNGs (CSPRNG or CPRNG). Both types can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292017,"byte_end":292092,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"! have good statistical quality but the latter also have to be impossible to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292093,"byte_end":292171,"line_start":46,"line_end":46,"column_start":1,"column_end":79}},{"value":"! predict, even after seeing many previous output values. Rand provides a good","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292172,"byte_end":292252,"line_start":47,"line_end":47,"column_start":1,"column_end":81}},{"value":"! default algorithm from each class:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292253,"byte_end":292291,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292292,"byte_end":292295,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! - [`SmallRng`] is a PRNG chosen for low memory usage, high performance and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292296,"byte_end":292374,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"!   good statistical quality.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292375,"byte_end":292406,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"!   The current algorithm (plain Xorshift) unfortunately performs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292407,"byte_end":292474,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"!   poorly in statistical quality test suites (TestU01 and PractRand) and will","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292475,"byte_end":292555,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"!   be replaced in the next major release.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292556,"byte_end":292600,"line_start":54,"line_end":54,"column_start":1,"column_end":45}},{"value":"! - [`StdRng`] is a CSPRNG chosen for good performance and trust of security","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292601,"byte_end":292679,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"!   (based on reviews, maturity and usage). The current algorithm is HC-128,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292680,"byte_end":292758,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"!   which is one of the recommendations by ECRYPT's eSTREAM project.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292759,"byte_end":292829,"line_start":57,"line_end":57,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292830,"byte_end":292833,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! The above PRNGs do not cover all use-cases; more algorithms can be found in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292834,"byte_end":292913,"line_start":59,"line_end":59,"column_start":1,"column_end":80}},{"value":"! the [`prng` module], as well as in several other crates. For example, you","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292914,"byte_end":292991,"line_start":60,"line_end":60,"column_start":1,"column_end":78}},{"value":"! may wish a CSPRNG with significantly lower memory usage than [`StdRng`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":292992,"byte_end":293067,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"! while being less concerned about performance, in which case [`ChaChaRng`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293068,"byte_end":293145,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"! is a good choice.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293146,"byte_end":293167,"line_start":63,"line_end":63,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293168,"byte_end":293171,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! One complexity is that the internal state of a PRNG must change with every","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293172,"byte_end":293250,"line_start":65,"line_end":65,"column_start":1,"column_end":79}},{"value":"! generated number. For APIs this generally means a mutable reference to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293251,"byte_end":293329,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"! state of the PRNG has to be passed around.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293330,"byte_end":293376,"line_start":67,"line_end":67,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293377,"byte_end":293380,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"! A solution is [`ThreadRng`]. This is a thread-local implementation of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293381,"byte_end":293454,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"! [`StdRng`] with automatic seeding on first use. It is the best choice if you","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293455,"byte_end":293535,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"! \"just\" want a convenient, secure, fast random number source. Use via the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293536,"byte_end":293612,"line_start":71,"line_end":71,"column_start":1,"column_end":77}},{"value":"! [`thread_rng`] function, which gets a reference to the current thread's","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293613,"byte_end":293688,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! local instance.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293689,"byte_end":293708,"line_start":73,"line_end":73,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293709,"byte_end":293712,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! ## Seeding","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293713,"byte_end":293727,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293728,"byte_end":293731,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"! As mentioned above, PRNGs require a random seed in order to produce random","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293732,"byte_end":293810,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"! output. This is especially important for CSPRNGs, which are still","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293811,"byte_end":293880,"line_start":78,"line_end":78,"column_start":1,"column_end":70}},{"value":"! deterministic algorithms, thus can only be secure if their seed value is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293881,"byte_end":293957,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"! also secure. To seed a PRNG, use one of:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":293958,"byte_end":294002,"line_start":80,"line_end":80,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294003,"byte_end":294006,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"! - [`FromEntropy::from_entropy`]; this is the most convenient way to seed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294007,"byte_end":294083,"line_start":82,"line_end":82,"column_start":1,"column_end":77}},{"value":"!   with fresh, secure random data.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294084,"byte_end":294121,"line_start":83,"line_end":83,"column_start":1,"column_end":38}},{"value":"! - [`SeedableRng::from_rng`]; this allows seeding from another PRNG or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294122,"byte_end":294195,"line_start":84,"line_end":84,"column_start":1,"column_end":74}},{"value":"!   from an entropy source such as [`EntropyRng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294196,"byte_end":294248,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"! - [`SeedableRng::from_seed`]; this is mostly useful if you wish to be able","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294249,"byte_end":294327,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"!   to reproduce the output sequence by using a fixed seed. (Don't use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294328,"byte_end":294400,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"!   [`StdRng`] or [`SmallRng`] in this case since different algorithms may be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294401,"byte_end":294480,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"!   used by future versions of Rand; use an algorithm from the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294481,"byte_end":294545,"line_start":89,"line_end":89,"column_start":1,"column_end":65}},{"value":"!   [`prng` module].)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294546,"byte_end":294569,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294570,"byte_end":294573,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ## Conclusion","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294574,"byte_end":294591,"line_start":92,"line_end":92,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294592,"byte_end":294595,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! - [`thread_rng`] is what you often want to use.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294596,"byte_end":294647,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"! - If you want more control, flexibility, or better performance, use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294648,"byte_end":294719,"line_start":95,"line_end":95,"column_start":1,"column_end":72}},{"value":"!   [`StdRng`], [`SmallRng`] or an algorithm from the [`prng` module].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294720,"byte_end":294792,"line_start":96,"line_end":96,"column_start":1,"column_end":73}},{"value":"! - Use [`FromEntropy::from_entropy`] to seed new PRNGs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294793,"byte_end":294851,"line_start":97,"line_end":97,"column_start":1,"column_end":59}},{"value":"! - If you need reproducibility, use [`SeedableRng::from_seed`] combined with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294852,"byte_end":294931,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"!   a named PRNG.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294932,"byte_end":294951,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294952,"byte_end":294955,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"! More information and notes on cryptographic security can be found","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":294956,"byte_end":295025,"line_start":101,"line_end":101,"column_start":1,"column_end":70}},{"value":"! in the [`prng` module].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295026,"byte_end":295053,"line_start":102,"line_end":102,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295054,"byte_end":295057,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295058,"byte_end":295073,"line_start":104,"line_end":104,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295074,"byte_end":295077,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"! Examples of seeding PRNGs:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295078,"byte_end":295108,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295109,"byte_end":295112,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295113,"byte_end":295120,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"! use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295121,"byte_end":295146,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"! # use rand::Error;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295147,"byte_end":295169,"line_start":110,"line_end":110,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295170,"byte_end":295173,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! // StdRng seeded securely by the OS or local entropy collector:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295174,"byte_end":295241,"line_start":112,"line_end":112,"column_start":1,"column_end":68}},{"value":"! let mut rng = StdRng::from_entropy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295242,"byte_end":295283,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"! # let v: u32 = rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295284,"byte_end":295313,"line_start":114,"line_end":114,"column_start":1,"column_end":30}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295314,"byte_end":295317,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"! // SmallRng seeded from thread_rng:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295318,"byte_end":295357,"line_start":116,"line_end":116,"column_start":1,"column_end":40}},{"value":"! # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295358,"byte_end":295401,"line_start":117,"line_end":117,"column_start":1,"column_end":44}},{"value":"! let mut rng = SmallRng::from_rng(thread_rng())?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295402,"byte_end":295454,"line_start":118,"line_end":118,"column_start":1,"column_end":53}},{"value":"! # let v: u32 = rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295455,"byte_end":295484,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"! # Ok(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295485,"byte_end":295497,"line_start":120,"line_end":120,"column_start":1,"column_end":13}},{"value":"! # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295498,"byte_end":295505,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"! # try_inner().unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295506,"byte_end":295533,"line_start":122,"line_end":122,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295534,"byte_end":295537,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! // SmallRng seeded by a constant, for deterministic results:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295538,"byte_end":295602,"line_start":124,"line_end":124,"column_start":1,"column_end":65}},{"value":"! let seed = [1,2,3,4, 5,6,7,8, 9,10,11,12, 13,14,15,16]; // byte array","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295603,"byte_end":295676,"line_start":125,"line_end":125,"column_start":1,"column_end":74}},{"value":"! let mut rng = SmallRng::from_seed(seed);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295677,"byte_end":295721,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"! # let v: u32 = rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295722,"byte_end":295751,"line_start":127,"line_end":127,"column_start":1,"column_end":30}},{"value":"! ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295752,"byte_end":295759,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295760,"byte_end":295763,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295764,"byte_end":295767,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! # Implementing custom RNGs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295768,"byte_end":295798,"line_start":131,"line_end":131,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295799,"byte_end":295802,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"! If you want to implement custom RNG, see the [`rand_core`] crate. The RNG","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295803,"byte_end":295880,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"! will have to implement the [`RngCore`] trait, where the [`Rng`] trait is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295881,"byte_end":295957,"line_start":134,"line_end":134,"column_start":1,"column_end":77}},{"value":"! build on top of.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295958,"byte_end":295978,"line_start":135,"line_end":135,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295979,"byte_end":295982,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! If the RNG needs seeding, also implement the [`SeedableRng`] trait.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":295983,"byte_end":296054,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296055,"byte_end":296058,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"! [`CryptoRng`] is a marker trait cryptographically secure PRNGs can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296059,"byte_end":296129,"line_start":139,"line_end":139,"column_start":1,"column_end":71}},{"value":"! implement.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296130,"byte_end":296144,"line_start":140,"line_end":140,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296145,"byte_end":296148,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296149,"byte_end":296152,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! [`ThreadRng`]: struct.ThreadRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296169,"byte_end":296209,"line_start":144,"line_end":144,"column_start":1,"column_end":41}},{"value":"! [`StdRng`]: struct.StdRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296210,"byte_end":296244,"line_start":145,"line_end":145,"column_start":1,"column_end":35}},{"value":"! [`SmallRng`]: struct.SmallRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296245,"byte_end":296283,"line_start":146,"line_end":146,"column_start":1,"column_end":39}},{"value":"! [`EntropyRng`]: struct.EntropyRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296284,"byte_end":296326,"line_start":147,"line_end":147,"column_start":1,"column_end":43}},{"value":"! [`OsRng`]: struct.OsRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296327,"byte_end":296359,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"! [`JitterRng`]: struct.JitterRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296360,"byte_end":296400,"line_start":149,"line_end":149,"column_start":1,"column_end":41}},{"value":"! [`rand_core`]: https://crates.io/crates/rand_core","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296432,"byte_end":296485,"line_start":151,"line_end":151,"column_start":1,"column_end":54}},{"value":"! [`prng` module]: ../prng/index.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296486,"byte_end":296525,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"! [`CryptoRng`]: ../trait.CryptoRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296526,"byte_end":296568,"line_start":153,"line_end":153,"column_start":1,"column_end":43}},{"value":"! [`FromEntropy`]: ../trait.FromEntropy.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296569,"byte_end":296615,"line_start":154,"line_end":154,"column_start":1,"column_end":47}},{"value":"! [`FromEntropy::from_entropy`]: ../trait.FromEntropy.html#tymethod.from_entropy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296616,"byte_end":296698,"line_start":155,"line_end":155,"column_start":1,"column_end":83}},{"value":"! [`RngCore`]: ../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296699,"byte_end":296737,"line_start":156,"line_end":156,"column_start":1,"column_end":39}},{"value":"! [`Rng`]: ../trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296738,"byte_end":296768,"line_start":157,"line_end":157,"column_start":1,"column_end":31}},{"value":"! [`SeedableRng`]: ../trait.SeedableRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296769,"byte_end":296815,"line_start":158,"line_end":158,"column_start":1,"column_end":47}},{"value":"! [`SeedableRng::from_rng`]: ../trait.SeedableRng.html#tymethod.from_rng","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296816,"byte_end":296890,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"! [`SeedableRng::from_seed`]: ../trait.SeedableRng.html#tymethod.from_seed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296891,"byte_end":296967,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"! [`thread_rng`]: ../fn.thread_rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":296968,"byte_end":297009,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"! [`mock::StepRng`]: mock/struct.StepRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297010,"byte_end":297057,"line_start":162,"line_end":162,"column_start":1,"column_end":48}},{"value":"! [`adapter::ReadRng`]: adapter/struct.ReadRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297058,"byte_end":297111,"line_start":163,"line_end":163,"column_start":1,"column_end":54}},{"value":"! [`ChaChaRng`]: ../prng/chacha/struct.ChaChaRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297112,"byte_end":297167,"line_start":164,"line_end":164,"column_start":1,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapter","qualname":"::rngs::adapter","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":695},{"krate":0,"index":745},{"krate":0,"index":746}],"decl_id":null,"docs":" Wrappers / adapters forming RNGs\n","sig":null,"attributes":[{"value":"! Wrappers / adapters forming RNGs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","byte_start":299423,"byte_end":299459,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"read","qualname":"::rngs::adapter::read","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":684},{"krate":0,"index":687}],"decl_id":null,"docs":" A wrapper around any Read to treat it as an RNG.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","byte_start":299461,"byte_end":299482,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"! A wrapper around any Read to treat it as an RNG.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300089,"byte_end":300141,"line_start":11,"line_end":11,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2011},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301208,"byte_end":301215,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"ReadRng","qualname":"::rngs::adapter::read::ReadRng","value":"ReadRng {  }","parent":null,"children":[{"krate":0,"index":2013}],"decl_id":null,"docs":" An RNG that reads random bytes straight from any type supporting\n `std::io::Read`, for example files.","sig":null,"attributes":[{"value":"/ An RNG that reads random bytes straight from any type supporting","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300216,"byte_end":300284,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ `std::io::Read`, for example files.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300285,"byte_end":300324,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300325,"byte_end":300328,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ This will work best with an infinite reader, but that is not required.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300329,"byte_end":300403,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300404,"byte_end":300407,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This can be used with `/dev/urandom` on Unix but it is recommended to use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300408,"byte_end":300485,"line_start":23,"line_end":23,"column_start":1,"column_end":78}},{"value":"/ [`OsRng`] instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300486,"byte_end":300508,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300509,"byte_end":300512,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300513,"byte_end":300525,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300526,"byte_end":300529,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `ReadRng` uses `std::io::read_exact`, which retries on interrupts. All other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300530,"byte_end":300610,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ errors from the underlying reader, including when it does not have enough","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300611,"byte_end":300688,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ data, will only be reported through [`try_fill_bytes`]. The other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300689,"byte_end":300758,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ [`RngCore`] methods will panic in case of an error.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300759,"byte_end":300814,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300815,"byte_end":300818,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300819,"byte_end":300832,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300833,"byte_end":300836,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300837,"byte_end":300844,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use rand::{read, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300845,"byte_end":300871,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300872,"byte_end":300875,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let data = vec![1, 2, 3, 4, 5, 6, 7, 8];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300876,"byte_end":300920,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ let mut rng = read::ReadRng::new(&data[..]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300921,"byte_end":300969,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ println!(\"{:x}\", rng.gen::<u32>());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":300970,"byte_end":301009,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301010,"byte_end":301017,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301018,"byte_end":301021,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`OsRng`]: ../struct.OsRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301022,"byte_end":301057,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/ [`RngCore`]: ../../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301058,"byte_end":301099,"line_start":44,"line_end":44,"column_start":1,"column_end":42}},{"value":"/ [`try_fill_bytes`]: ../../trait.RngCore.html#method.tymethod.try_fill_bytes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301100,"byte_end":301179,"line_start":45,"line_end":45,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301322,"byte_end":301325,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadRng<R>>::new","value":"fn (r: R) -> ReadRng<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReadRng` from a `Read`.\n","sig":null,"attributes":[{"value":"/ Create a new `ReadRng` from a `Read`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301269,"byte_end":301310,"line_start":52,"line_end":52,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2017},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306729,"byte_end":306741,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"ReseedingRng","qualname":"::rngs::adapter::reseeding::ReseedingRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around any PRNG which reseeds the underlying PRNG after it has\n generated a certain number of random bytes.","sig":null,"attributes":[{"value":"/ A wrapper around any PRNG which reseeds the underlying PRNG after it has","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304530,"byte_end":304606,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ generated a certain number of random bytes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304607,"byte_end":304654,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304655,"byte_end":304658,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ When the RNG gets cloned, the clone is reseeded on first use.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304659,"byte_end":304724,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304725,"byte_end":304728,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reseeding is never strictly *necessary*. Cryptographic PRNGs don't have a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304729,"byte_end":304806,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ limited number of bytes they can output, or at least not a limit reachable","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304807,"byte_end":304885,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ in any practical way. There is no such thing as 'running out of entropy'.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304886,"byte_end":304963,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304964,"byte_end":304967,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Some small non-cryptographic PRNGs can have very small periods, for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":304968,"byte_end":305039,"line_start":28,"line_end":28,"column_start":1,"column_end":72}},{"value":"/ example less than 2<sup>64</sup>. Would reseeding help to ensure that you do","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305040,"byte_end":305120,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ not wrap around at the end of the period? A period of 2<sup>64</sup> still","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305121,"byte_end":305199,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ takes several centuries of CPU-years on current hardware. Reseeding will","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305200,"byte_end":305276,"line_start":31,"line_end":31,"column_start":1,"column_end":77}},{"value":"/ actually make things worse, because the reseeded PRNG will just continue","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305277,"byte_end":305353,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ somewhere else *in the same period*, with a high chance of overlapping with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305354,"byte_end":305433,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ previously used parts of it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305434,"byte_end":305466,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305467,"byte_end":305470,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # When should you use `ReseedingRng`?","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305471,"byte_end":305512,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305513,"byte_end":305516,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - Reseeding can be seen as some form of 'security in depth'. Even if in the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305517,"byte_end":305596,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/   future a cryptographic weakness is found in the CSPRNG being used,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305597,"byte_end":305669,"line_start":39,"line_end":39,"column_start":1,"column_end":73}},{"value":"/   occasionally reseeding should make exploiting it much more difficult or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305670,"byte_end":305747,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/   even impossible.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305748,"byte_end":305770,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/ - It can be used as a poor man's cryptography (not recommended, just use a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305771,"byte_end":305849,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/   good CSPRNG). Previous implementations of `thread_rng` for example used","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305850,"byte_end":305927,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/   `ReseedingRng` with the ISAAC RNG. That algorithm, although apparently","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":305928,"byte_end":306004,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/   strong and with no known attack, does not come with any proof of security","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306005,"byte_end":306084,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/   and does not meet the current standards for a cryptographically secure","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306085,"byte_end":306161,"line_start":46,"line_end":46,"column_start":1,"column_end":77}},{"value":"/   PRNG. By reseeding it frequently (every 32 kiB) it seems safe to assume","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306162,"byte_end":306239,"line_start":47,"line_end":47,"column_start":1,"column_end":78}},{"value":"/   there is no attack that can operate on the tiny window between reseeds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306240,"byte_end":306317,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306318,"byte_end":306321,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Error handling","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306322,"byte_end":306342,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306343,"byte_end":306346,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Although extremely unlikely, reseeding the wrapped PRNG can fail.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306347,"byte_end":306416,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/ `ReseedingRng` will never panic but try to handle the error intelligently","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306417,"byte_end":306494,"line_start":53,"line_end":53,"column_start":1,"column_end":78}},{"value":"/ through some combination of retrying and delaying reseeding until later.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306495,"byte_end":306571,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ If handling the source error fails `ReseedingRng` will continue generating","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306572,"byte_end":306650,"line_start":55,"line_end":55,"column_start":1,"column_end":79}},{"value":"/ data from the wrapped PRNG without reseeding.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306651,"byte_end":306700,"line_start":56,"line_end":56,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307238,"byte_end":307241,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<ReseedingRng<R, Rsdr>>::new","value":"fn (rng: R, threshold: u64, reseeder: Rsdr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReseedingRng` with the given parameters.","sig":null,"attributes":[{"value":"/ Create a new `ReseedingRng` with the given parameters.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306943,"byte_end":307001,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307006,"byte_end":307009,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307014,"byte_end":307029,"line_start":68,"line_end":68,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307034,"byte_end":307037,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ * `rng`: the random number generator to use.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307042,"byte_end":307090,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/ * `threshold`: the number of generated bytes after which to reseed the RNG.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307095,"byte_end":307174,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ * `reseeder`: the RNG to use for reseeding.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307179,"byte_end":307226,"line_start":72,"line_end":72,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307426,"byte_end":307432,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"reseed","qualname":"<ReseedingRng<R, Rsdr>>::reseed","value":"fn (&mut self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Reseed the internal PRNG.\n","sig":null,"attributes":[{"value":"/ Reseed the internal PRNG.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307385,"byte_end":307414,"line_start":77,"line_end":77,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315438,"byte_end":315448,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"EntropyRng","qualname":"::rngs::entropy::EntropyRng","value":"EntropyRng {  }","parent":null,"children":[{"krate":0,"index":2038}],"decl_id":null,"docs":" An interface returning random data from external source(s), provided\n specifically for securely seeding algorithmic generators (PRNGs).","sig":null,"attributes":[{"value":"/ An interface returning random data from external source(s), provided","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":313775,"byte_end":313847,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ specifically for securely seeding algorithmic generators (PRNGs).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":313848,"byte_end":313917,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":313918,"byte_end":313921,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Where possible, `EntropyRng` retrieves random data from the operating","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":313922,"byte_end":313995,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ system's interface for random numbers ([`OsRng`]); if that fails it will","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":313996,"byte_end":314072,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ fall back to the [`JitterRng`] entropy collector. In the latter case it will","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314073,"byte_end":314153,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/ still try to use [`OsRng`] on the next usage.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314154,"byte_end":314203,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314204,"byte_end":314207,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ If no secure source of entropy is available `EntropyRng` will panic on use;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314208,"byte_end":314287,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/ i.e. it should never output predictable data.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314288,"byte_end":314337,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314338,"byte_end":314342,"line_start":27,"line_end":27,"column_start":1,"column_end":5}},{"value":"/ This is either a little slow ([`OsRng`] requires a system call) or extremely","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314343,"byte_end":314423,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ slow ([`JitterRng`] must use significant CPU time to generate sufficient","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314424,"byte_end":314500,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ jitter); for better performance it is common to seed a local PRNG from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314501,"byte_end":314575,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ external entropy then primarily use the local PRNG ([`thread_rng`] is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314576,"byte_end":314649,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ provided as a convenient, local, automatically-seeded CSPRNG).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314650,"byte_end":314716,"line_start":32,"line_end":32,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314717,"byte_end":314720,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314721,"byte_end":314733,"line_start":34,"line_end":34,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314734,"byte_end":314737,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ On most systems, like Windows, Linux, macOS and *BSD on common hardware, it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314738,"byte_end":314817,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ is highly unlikely for both [`OsRng`] and [`JitterRng`] to fail. But on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314818,"byte_end":314893,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ combinations like webassembly without Emscripten or stdweb both sources are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314894,"byte_end":314973,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ unavailable. If both sources fail, only [`try_fill_bytes`] is able to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":314974,"byte_end":315047,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ report the error, and only the one from `OsRng`. The other [`RngCore`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315048,"byte_end":315122,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ methods will panic in case of an error.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315123,"byte_end":315166,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315167,"byte_end":315170,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`OsRng`]: struct.OsRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315171,"byte_end":315203,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/ [`JitterRng`]: jitter/struct.JitterRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315204,"byte_end":315251,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/ [`thread_rng`]: ../fn.thread_rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315252,"byte_end":315293,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/ [`RngCore`]: ../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315294,"byte_end":315332,"line_start":46,"line_end":46,"column_start":1,"column_end":39}},{"value":"/ [`try_fill_bytes`]: ../trait.RngCore.html#method.tymethod.try_fill_bytes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315333,"byte_end":315409,"line_start":47,"line_end":47,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315858,"byte_end":315861,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<EntropyRng>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `EntropyRng`.","sig":null,"attributes":[{"value":"/ Create a new `EntropyRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315592,"byte_end":315622,"line_start":62,"line_end":62,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315627,"byte_end":315630,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method will do no system calls or other initialization routines,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315635,"byte_end":315708,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ those are done on first use. This is done to make `new` infallible,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315713,"byte_end":315784,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ and `try_fill_bytes` the only place to report errors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315789,"byte_end":315846,"line_start":66,"line_end":66,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":781},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jitter","qualname":"::rngs::jitter","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":788},{"krate":0,"index":792},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":805},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":815},{"krate":0,"index":2075},{"krate":0,"index":2096},{"krate":0,"index":2094},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":821},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":846},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":858}],"decl_id":null,"docs":" Non-physical true random number generator based on timing jitter.\n","sig":null,"attributes":[{"value":"! Non-physical true random number generator based on timing jitter.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":323569,"byte_end":323638,"line_start":17,"line_end":17,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":799},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328629,"byte_end":328638,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"JitterRng","qualname":"::rngs::jitter::JitterRng","value":"JitterRng {  }","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804}],"decl_id":null,"docs":" A true random number generator based on jitter in the CPU execution time,\n and jitter in memory access time.","sig":null,"attributes":[{"value":"/ A true random number generator based on jitter in the CPU execution time,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324242,"byte_end":324319,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ and jitter in memory access time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324320,"byte_end":324357,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324358,"byte_end":324361,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This is a true random number generator, as opposed to pseudo-random","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324362,"byte_end":324433,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ generators. Random numbers generated by `JitterRng` can be seen as fresh","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324434,"byte_end":324510,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ entropy. A consequence is that is orders of magnitude slower than [`OsRng`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324511,"byte_end":324590,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ and PRNGs (about 10<sup>3</sup>..10<sup>6</sup> slower).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324591,"byte_end":324651,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324652,"byte_end":324655,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There are very few situations where using this RNG is appropriate. Only very","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324656,"byte_end":324736,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ few applications require true entropy. A normal PRNG can be statistically","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324737,"byte_end":324814,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ indistinguishable, and a cryptographic PRNG should also be as impossible to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324815,"byte_end":324894,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ predict.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324895,"byte_end":324907,"line_start":45,"line_end":45,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324908,"byte_end":324911,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Use of `JitterRng` is recommended for initializing cryptographic PRNGs when","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324912,"byte_end":324991,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ [`OsRng`] is not available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":324992,"byte_end":325023,"line_start":48,"line_end":48,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325024,"byte_end":325027,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ `JitterRng` can be used without the standard library, but not conveniently,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325028,"byte_end":325107,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ you must provide a high-precision timer and carefully have to follow the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325108,"byte_end":325184,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ instructions of [`new_with_timer`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325185,"byte_end":325224,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325225,"byte_end":325228,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This implementation is based on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325229,"byte_end":325264,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/ [Jitterentropy](http://www.chronox.de/jent.html) version 2.1.0.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325265,"byte_end":325332,"line_start":55,"line_end":55,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325333,"byte_end":325336,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Note: There is no accurate timer available on Wasm platforms, to help","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325337,"byte_end":325410,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ prevent fingerprinting or timing side-channel attacks. Therefore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325411,"byte_end":325479,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/ [`JitterRng::new()`] is not available on Wasm.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325480,"byte_end":325530,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325531,"byte_end":325534,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ # Quality testing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325535,"byte_end":325556,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325557,"byte_end":325560,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`JitterRng::new()`] has build-in, but limited, quality testing, however","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325561,"byte_end":325637,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ before using `JitterRng` on untested hardware, or after changes that could","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325638,"byte_end":325716,"line_start":64,"line_end":64,"column_start":1,"column_end":79}},{"value":"/ effect how the code is optimized (such as a new LLVM version), it is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325717,"byte_end":325789,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/ recommend to run the much more stringent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325790,"byte_end":325834,"line_start":66,"line_end":66,"column_start":1,"column_end":45}},{"value":"/ [NIST SP 800-90B Entropy Estimation Suite](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325835,"byte_end":325882,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/ https://github.com/usnistgov/SP800-90B_EntropyAssessment).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325883,"byte_end":325945,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325946,"byte_end":325949,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Use the following code using [`timer_stats`] to collect the data:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":325950,"byte_end":326019,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326020,"byte_end":326023,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326024,"byte_end":326037,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/ use rand::jitter::JitterRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326038,"byte_end":326070,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/ #","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326071,"byte_end":326076,"line_start":74,"line_end":74,"column_start":1,"column_end":6}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326077,"byte_end":326105,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ # use std::fs::File;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326106,"byte_end":326130,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/ # use std::io::Write;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326131,"byte_end":326156,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326157,"byte_end":326162,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> Result<(), Box<Error>> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326163,"byte_end":326210,"line_start":79,"line_end":79,"column_start":1,"column_end":48}},{"value":"/ let mut rng = JitterRng::new()?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326211,"byte_end":326247,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326248,"byte_end":326251,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ // 1_000_000 results are required for the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326252,"byte_end":326297,"line_start":82,"line_end":82,"column_start":1,"column_end":46}},{"value":"/ // NIST SP 800-90B Entropy Estimation Suite","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326298,"byte_end":326345,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ const ROUNDS: usize = 1_000_000;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326346,"byte_end":326382,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/ let mut deltas_variable: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326383,"byte_end":326449,"line_start":85,"line_end":85,"column_start":1,"column_end":67}},{"value":"/ let mut deltas_minimal: Vec<u8> = Vec::with_capacity(ROUNDS);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326450,"byte_end":326515,"line_start":86,"line_end":86,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326516,"byte_end":326519,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..ROUNDS {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326520,"byte_end":326544,"line_start":88,"line_end":88,"column_start":1,"column_end":25}},{"value":"/     deltas_variable.push(rng.timer_stats(true) as u8);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326545,"byte_end":326603,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/     deltas_minimal.push(rng.timer_stats(false) as u8);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326604,"byte_end":326662,"line_start":90,"line_end":90,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326663,"byte_end":326668,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326669,"byte_end":326672,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ // Write out after the statistics collection loop, to not disturb the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326673,"byte_end":326746,"line_start":93,"line_end":93,"column_start":1,"column_end":74}},{"value":"/ // test results.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326747,"byte_end":326767,"line_start":94,"line_end":94,"column_start":1,"column_end":21}},{"value":"/ File::create(\"jitter_rng_var.bin\")?.write(&deltas_variable)?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326768,"byte_end":326833,"line_start":95,"line_end":95,"column_start":1,"column_end":66}},{"value":"/ File::create(\"jitter_rng_min.bin\")?.write(&deltas_minimal)?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326834,"byte_end":326898,"line_start":96,"line_end":96,"column_start":1,"column_end":65}},{"value":"/ #","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326899,"byte_end":326904,"line_start":97,"line_end":97,"column_start":1,"column_end":6}},{"value":"/ # Ok(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326905,"byte_end":326917,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326918,"byte_end":326925,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326926,"byte_end":326931,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ # fn main() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326932,"byte_end":326949,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326950,"byte_end":326980,"line_start":102,"line_end":102,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326981,"byte_end":326988,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326989,"byte_end":326996,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":326997,"byte_end":327000,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This will produce two files: `jitter_rng_var.bin` and `jitter_rng_min.bin`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327001,"byte_end":327080,"line_start":106,"line_end":106,"column_start":1,"column_end":80}},{"value":"/ Run the Entropy Estimation Suite in three configurations, as outlined below.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327081,"byte_end":327161,"line_start":107,"line_end":107,"column_start":1,"column_end":81}},{"value":"/ Every run has two steps. One step to produce an estimation, another to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327162,"byte_end":327236,"line_start":108,"line_end":108,"column_start":1,"column_end":75}},{"value":"/ validate the estimation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327237,"byte_end":327265,"line_start":109,"line_end":109,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327266,"byte_end":327269,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ 1. Estimate the expected amount of entropy that is at least available with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327270,"byte_end":327348,"line_start":111,"line_end":111,"column_start":1,"column_end":79}},{"value":"/    each round of the entropy collector. This number should be greater than","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327349,"byte_end":327427,"line_start":112,"line_end":112,"column_start":1,"column_end":79}},{"value":"/    the amount estimated with `64 / test_timer()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327428,"byte_end":327481,"line_start":113,"line_end":113,"column_start":1,"column_end":54}},{"value":"/    ```sh","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327482,"byte_end":327494,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/    python noniid_main.py -v jitter_rng_var.bin 8","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327495,"byte_end":327547,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/    restart.py -v jitter_rng_var.bin 8 <min-entropy>","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327548,"byte_end":327603,"line_start":116,"line_end":116,"column_start":1,"column_end":56}},{"value":"/    ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327604,"byte_end":327614,"line_start":117,"line_end":117,"column_start":1,"column_end":11}},{"value":"/ 2. Estimate the expected amount of entropy that is available in the last 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327615,"byte_end":327693,"line_start":118,"line_end":118,"column_start":1,"column_end":79}},{"value":"/    bits of the timer delta after running noice sources. Note that a value of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327694,"byte_end":327774,"line_start":119,"line_end":119,"column_start":1,"column_end":81}},{"value":"/    `3.70` is the minimum estimated entropy for true randomness.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327775,"byte_end":327842,"line_start":120,"line_end":120,"column_start":1,"column_end":68}},{"value":"/    ```sh","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327843,"byte_end":327855,"line_start":121,"line_end":121,"column_start":1,"column_end":13}},{"value":"/    python noniid_main.py -v -u 4 jitter_rng_var.bin 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327856,"byte_end":327913,"line_start":122,"line_end":122,"column_start":1,"column_end":58}},{"value":"/    restart.py -v -u 4 jitter_rng_var.bin 4 <min-entropy>","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327914,"byte_end":327974,"line_start":123,"line_end":123,"column_start":1,"column_end":61}},{"value":"/    ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327975,"byte_end":327985,"line_start":124,"line_end":124,"column_start":1,"column_end":11}},{"value":"/ 3. Estimate the expected amount of entropy that is available to the entropy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":327986,"byte_end":328065,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/    collector if both noice sources only run their minimal number of times.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328066,"byte_end":328144,"line_start":126,"line_end":126,"column_start":1,"column_end":79}},{"value":"/    This measures the absolute worst-case, and gives a lower bound for the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328145,"byte_end":328222,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/    available entropy.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328223,"byte_end":328248,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/    ```sh","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328249,"byte_end":328261,"line_start":129,"line_end":129,"column_start":1,"column_end":13}},{"value":"/    python noniid_main.py -v -u 4 jitter_rng_min.bin 4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328262,"byte_end":328319,"line_start":130,"line_end":130,"column_start":1,"column_end":58}},{"value":"/    restart.py -v -u 4 jitter_rng_min.bin 4 <min-entropy>","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328320,"byte_end":328380,"line_start":131,"line_end":131,"column_start":1,"column_end":61}},{"value":"/    ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328381,"byte_end":328391,"line_start":132,"line_end":132,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328392,"byte_end":328395,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ [`OsRng`]: struct.OsRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328396,"byte_end":328428,"line_start":134,"line_end":134,"column_start":1,"column_end":33}},{"value":"/ [`JitterRng::new()`]: struct.JitterRng.html#method.new","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328429,"byte_end":328487,"line_start":135,"line_end":135,"column_start":1,"column_end":59}},{"value":"/ [`new_with_timer`]: struct.JitterRng.html#method.new_with_timer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328488,"byte_end":328555,"line_start":136,"line_end":136,"column_start":1,"column_end":68}},{"value":"/ [`timer_stats`]: struct.JitterRng.html#method.timer_stats","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":328556,"byte_end":328617,"line_start":137,"line_end":137,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2076},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332003,"byte_end":332010,"line_start":226,"line_end":226,"column_start":5,"column_end":12},"name":"NoTimer","qualname":"::rngs::jitter::TimerError::NoTimer","value":"TimerError::NoTimer","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" No timer available.\n","sig":null,"attributes":[{"value":"/ No timer available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331975,"byte_end":331998,"line_start":225,"line_end":225,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2078},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332070,"byte_end":332081,"line_start":228,"line_end":228,"column_start":5,"column_end":16},"name":"CoarseTimer","qualname":"::rngs::jitter::TimerError::CoarseTimer","value":"TimerError::CoarseTimer","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" Timer too coarse to use as an entropy source.\n","sig":null,"attributes":[{"value":"/ Timer too coarse to use as an entropy source.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332016,"byte_end":332065,"line_start":227,"line_end":227,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332134,"byte_end":332146,"line_start":230,"line_end":230,"column_start":5,"column_end":17},"name":"NotMonotonic","qualname":"::rngs::jitter::TimerError::NotMonotonic","value":"TimerError::NotMonotonic","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" Timer is not monotonically increasing.\n","sig":null,"attributes":[{"value":"/ Timer is not monotonically increasing.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332087,"byte_end":332129,"line_start":229,"line_end":229,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2082},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332200,"byte_end":332215,"line_start":232,"line_end":232,"column_start":5,"column_end":20},"name":"TinyVariantions","qualname":"::rngs::jitter::TimerError::TinyVariantions","value":"TimerError::TinyVariantions","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" Variations of deltas of time too small.\n","sig":null,"attributes":[{"value":"/ Variations of deltas of time too small.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332152,"byte_end":332195,"line_start":231,"line_end":231,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2084},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332283,"byte_end":332295,"line_start":234,"line_end":234,"column_start":5,"column_end":17},"name":"TooManyStuck","qualname":"::rngs::jitter::TimerError::TooManyStuck","value":"TimerError::TooManyStuck","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":" Too many stuck results (indicating no added entropy).\n","sig":null,"attributes":[{"value":"/ Too many stuck results (indicating no added entropy).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332221,"byte_end":332278,"line_start":233,"line_end":233,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332320,"byte_end":332335,"line_start":236,"line_end":236,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::rngs::jitter::TimerError::__Nonexhaustive","value":"TimerError::__Nonexhaustive","parent":{"krate":0,"index":2075},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2075},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331958,"byte_end":331968,"line_start":224,"line_end":224,"column_start":10,"column_end":20},"name":"TimerError","qualname":"::rngs::jitter::TimerError","value":"TimerError::{NoTimer, CoarseTimer, NotMonotonic, TinyVariantions, TooManyStuck, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086}],"decl_id":null,"docs":" An error that can occur when [`JitterRng::test_timer`] fails.","sig":null,"attributes":[{"value":"/ An error that can occur when [`JitterRng::test_timer`] fails.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331769,"byte_end":331834,"line_start":220,"line_end":220,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331835,"byte_end":331838,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ [`JitterRng::test_timer`]: struct.JitterRng.html#method.test_timer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331839,"byte_end":331909,"line_start":222,"line_end":222,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334114,"byte_end":334117,"line_start":287,"line_end":287,"column_start":12,"column_end":15},"name":"new","qualname":"<JitterRng>::new","value":"fn () -> Result<JitterRng, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`. Makes use of `std::time` for a timer, or a\n platform-specific function with higher accuracy if necessary and\n available.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`. Makes use of `std::time` for a timer, or a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333639,"byte_end":333711,"line_start":279,"line_end":279,"column_start":5,"column_end":77}},{"value":"/ platform-specific function with higher accuracy if necessary and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333716,"byte_end":333784,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/ available.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333789,"byte_end":333803,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333808,"byte_end":333811,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ During initialization CPU execution timing jitter is measured a few","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333816,"byte_end":333887,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/ hundred times. If this does not pass basic quality tests, an error is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333892,"byte_end":333965,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ returned. The test result is cached to make subsequent calls faster.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333970,"byte_end":334042,"line_start":285,"line_end":285,"column_start":5,"column_end":77}},{"value":"cfg(all(feature = \"std\", not(target_arch = \"wasm32\")))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334047,"byte_end":334102,"line_start":286,"line_end":286,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336498,"byte_end":336512,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"new_with_timer","qualname":"<JitterRng>::new_with_timer","value":"fn (timer: fn() -> u64) -> JitterRng","parent":null,"children":[],"decl_id":null,"docs":" Create a new `JitterRng`.\n A custom timer can be supplied, making it possible to use `JitterRng` in\n `no_std` environments.","sig":null,"attributes":[{"value":"/ Create a new `JitterRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334775,"byte_end":334804,"line_start":304,"line_end":304,"column_start":5,"column_end":34}},{"value":"/ A custom timer can be supplied, making it possible to use `JitterRng` in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334809,"byte_end":334885,"line_start":305,"line_end":305,"column_start":5,"column_end":81}},{"value":"/ `no_std` environments.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334890,"byte_end":334916,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334921,"byte_end":334924,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ The timer must have nanosecond precision.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334929,"byte_end":334974,"line_start":308,"line_end":308,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334979,"byte_end":334982,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This method is more low-level than `new()`. It is the responsibility of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":334987,"byte_end":335062,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ the caller to run [`test_timer`] before using any numbers generated with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335067,"byte_end":335143,"line_start":311,"line_end":311,"column_start":5,"column_end":81}},{"value":"/ `JitterRng`, and optionally call [`set_rounds`]. Also it is important to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335148,"byte_end":335224,"line_start":312,"line_end":312,"column_start":5,"column_end":81}},{"value":"/ consume at least one `u64` before using the first result to initialize","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335229,"byte_end":335303,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ the entropy collection pool.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335308,"byte_end":335340,"line_start":314,"line_end":314,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335345,"byte_end":335348,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335353,"byte_end":335366,"line_start":316,"line_end":316,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335371,"byte_end":335374,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335379,"byte_end":335386,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ # use rand::{Rng, Error};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335391,"byte_end":335420,"line_start":319,"line_end":319,"column_start":5,"column_end":34}},{"value":"/ use rand::jitter::JitterRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335425,"byte_end":335457,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335462,"byte_end":335465,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335470,"byte_end":335513,"line_start":322,"line_end":322,"column_start":5,"column_end":48}},{"value":"/ fn get_nstime() -> u64 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335518,"byte_end":335546,"line_start":323,"line_end":323,"column_start":5,"column_end":33}},{"value":"/     use std::time::{SystemTime, UNIX_EPOCH};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335551,"byte_end":335599,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335604,"byte_end":335607,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/     let dur = SystemTime::now().duration_since(UNIX_EPOCH).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335612,"byte_end":335684,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/     // The correct way to calculate the current time is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335689,"byte_end":335748,"line_start":327,"line_end":327,"column_start":5,"column_end":64}},{"value":"/     // `dur.as_secs() * 1_000_000_000 + dur.subsec_nanos() as u64`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335753,"byte_end":335823,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/     // But this is faster, and the difference in terms of entropy is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335828,"byte_end":335900,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/     // negligible (log2(10^9) == 29.9).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335905,"byte_end":335948,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/     dur.as_secs() << 30 | dur.subsec_nanos() as u64","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":335953,"byte_end":336008,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336013,"byte_end":336018,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336023,"byte_end":336026,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let mut rng = JitterRng::new_with_timer(get_nstime);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336031,"byte_end":336087,"line_start":334,"line_end":334,"column_start":5,"column_end":61}},{"value":"/ let rounds = rng.test_timer()?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336092,"byte_end":336127,"line_start":335,"line_end":335,"column_start":5,"column_end":40}},{"value":"/ rng.set_rounds(rounds); // optional","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336132,"byte_end":336171,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ let _ = rng.gen::<u64>();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336176,"byte_end":336205,"line_start":337,"line_end":337,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336210,"byte_end":336213,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ // Ready for use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336218,"byte_end":336238,"line_start":339,"line_end":339,"column_start":5,"column_end":25}},{"value":"/ let v: u64 = rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336243,"byte_end":336270,"line_start":340,"line_end":340,"column_start":5,"column_end":32}},{"value":"/ # Ok(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336275,"byte_end":336287,"line_start":341,"line_end":341,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336292,"byte_end":336299,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336304,"byte_end":336307,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # let _ = try_inner();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336312,"byte_end":336338,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336343,"byte_end":336350,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336355,"byte_end":336358,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ [`test_timer`]: struct.JitterRng.html#method.test_timer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336363,"byte_end":336422,"line_start":347,"line_end":347,"column_start":5,"column_end":64}},{"value":"/ [`set_rounds`]: struct.JitterRng.html#method.set_rounds","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336427,"byte_end":336486,"line_start":348,"line_end":348,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":337296,"byte_end":337306,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"set_rounds","qualname":"<JitterRng>::set_rounds","value":"fn (&mut self, rounds: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configures how many rounds are used to generate each 64-bit value.\n This must be greater than zero, and has a big impact on performance\n and output quality.","sig":null,"attributes":[{"value":"/ Configures how many rounds are used to generate each 64-bit value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336719,"byte_end":336789,"line_start":359,"line_end":359,"column_start":5,"column_end":75}},{"value":"/ This must be greater than zero, and has a big impact on performance","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336794,"byte_end":336865,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ and output quality.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336870,"byte_end":336893,"line_start":361,"line_end":361,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336898,"byte_end":336901,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`new_with_timer`] conservatively uses 64 rounds, but often less rounds","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336906,"byte_end":336981,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ can be used. The `test_timer()` function returns the minimum number of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":336986,"byte_end":337060,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/ rounds required for full strength (platform dependent), so one may use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":337065,"byte_end":337139,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ `rng.set_rounds(rng.test_timer()?);` or cache the value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":337144,"byte_end":337204,"line_start":366,"line_end":366,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":337209,"byte_end":337212,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [`new_with_timer`]: struct.JitterRng.html#method.new_with_timer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":337217,"byte_end":337284,"line_start":368,"line_end":368,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347820,"byte_end":347830,"line_start":614,"line_end":614,"column_start":12,"column_end":22},"name":"test_timer","qualname":"<JitterRng>::test_timer","value":"fn (&mut self) -> Result<u8, TimerError>","parent":null,"children":[],"decl_id":null,"docs":" Basic quality tests on the timer, by measuring CPU timing jitter a few\n hundred times.","sig":null,"attributes":[{"value":"/ Basic quality tests on the timer, by measuring CPU timing jitter a few","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347448,"byte_end":347522,"line_start":606,"line_end":606,"column_start":5,"column_end":79}},{"value":"/ hundred times.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347527,"byte_end":347545,"line_start":607,"line_end":607,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347550,"byte_end":347553,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ If succesful, this will return the estimated number of rounds necessary","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347558,"byte_end":347633,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ to collect 64 bits of entropy. Otherwise a [`TimerError`] with the cause","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347638,"byte_end":347714,"line_start":610,"line_end":610,"column_start":5,"column_end":81}},{"value":"/ of the failure will be returned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347719,"byte_end":347755,"line_start":611,"line_end":611,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347760,"byte_end":347763,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ [`TimerError`]: enum.TimerError.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":347768,"byte_end":347808,"line_start":613,"line_end":613,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354355,"byte_end":354366,"line_start":765,"line_end":765,"column_start":12,"column_end":23},"name":"timer_stats","qualname":"<JitterRng>::timer_stats","value":"fn (&mut self, var_rounds: bool) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Statistical test: return the timer delta of one normal run of the\n `JitterRng` entropy collector.","sig":null,"attributes":[{"value":"/ Statistical test: return the timer delta of one normal run of the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353638,"byte_end":353707,"line_start":751,"line_end":751,"column_start":5,"column_end":74}},{"value":"/ `JitterRng` entropy collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353712,"byte_end":353746,"line_start":752,"line_end":752,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353751,"byte_end":353754,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `true` will execute the memory access and the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353759,"byte_end":353832,"line_start":754,"line_end":754,"column_start":5,"column_end":78}},{"value":"/ CPU jitter noice sources a variable amount of times (just like a real","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353837,"byte_end":353910,"line_start":755,"line_end":755,"column_start":5,"column_end":78}},{"value":"/ `JitterRng` round).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353915,"byte_end":353938,"line_start":756,"line_end":756,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353943,"byte_end":353946,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ Setting `var_rounds` to `false` will execute the noice sources the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":353951,"byte_end":354021,"line_start":758,"line_end":758,"column_start":5,"column_end":75}},{"value":"/ minimal number of times. This can be used to measure the minimum amount","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354026,"byte_end":354101,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of entropy one round of the entropy collector can collect in the worst","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354106,"byte_end":354180,"line_start":760,"line_end":760,"column_start":5,"column_end":79}},{"value":"/ case.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354185,"byte_end":354194,"line_start":761,"line_end":761,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354199,"byte_end":354202,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ See [Quality testing](struct.JitterRng.html#quality-testing) on how to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354207,"byte_end":354281,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ use `timer_stats` to test the quality of `JitterRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":354286,"byte_end":354343,"line_start":764,"line_end":764,"column_start":5,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":859},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mock","qualname":"::rngs::mock","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","parent":null,"children":[{"krate":0,"index":860},{"krate":0,"index":2098},{"krate":0,"index":2103},{"krate":0,"index":2101},{"krate":0,"index":864},{"krate":0,"index":866}],"decl_id":null,"docs":" Mock random number generator\n","sig":null,"attributes":[{"value":"! Mock random number generator","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":358833,"byte_end":358865,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2098},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359394,"byte_end":359401,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"StepRng","qualname":"::rngs::mock::StepRng","value":"StepRng {  }","parent":null,"children":[{"krate":0,"index":2099},{"krate":0,"index":2100}],"decl_id":null,"docs":" A simple implementation of `RngCore` for testing purposes.\n \n This generates an arithmetic sequence (i.e. adds a constant each step)\n over a `u64` number, using wrapping arithmetic. If the increment is 0\n the generator yields a constant.\n \n ```\n use rand::Rng;\n use rand::rngs::mock::StepRng;\n \n let mut my_rng = StepRng::new(2, 1);\n let sample: [u64; 3] = my_rng.gen();\n assert_eq!(sample, [2, 3, 4]);\n ```\n","sig":null,"attributes":[{"value":"/ A simple implementation of `RngCore` for testing purposes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":358908,"byte_end":358970,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":358971,"byte_end":358975,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ This generates an arithmetic sequence (i.e. adds a constant each step)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":358976,"byte_end":359050,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ over a `u64` number, using wrapping arithmetic. If the increment is 0","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359051,"byte_end":359124,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ the generator yields a constant.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359125,"byte_end":359161,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359162,"byte_end":359166,"line_start":20,"line_end":20,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359167,"byte_end":359174,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359175,"byte_end":359193,"line_start":22,"line_end":22,"column_start":1,"column_end":19}},{"value":"/ use rand::rngs::mock::StepRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359194,"byte_end":359228,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359229,"byte_end":359233,"line_start":24,"line_end":24,"column_start":1,"column_end":5}},{"value":"/ let mut my_rng = StepRng::new(2, 1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359234,"byte_end":359274,"line_start":25,"line_end":25,"column_start":1,"column_end":41}},{"value":"/ let sample: [u64; 3] = my_rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359275,"byte_end":359315,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(sample, [2, 3, 4]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359316,"byte_end":359350,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359351,"byte_end":359358,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359591,"byte_end":359594,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<StepRng>::new","value":"fn (initial: u64, increment: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `StepRng`, yielding an arithmetic sequence starting with\n `initial` and incremented by `increment` each time.\n","sig":null,"attributes":[{"value":"/ Create a `StepRng`, yielding an arithmetic sequence starting with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359450,"byte_end":359519,"line_start":36,"line_end":36,"column_start":5,"column_end":74}},{"value":"/ `initial` and incremented by `increment` each time.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359524,"byte_end":359579,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362789,"byte_end":362797,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"SmallRng","qualname":"::rngs::small::SmallRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" An RNG recommended when small state, cheap initialization and good\n performance are required. The PRNG algorithm in `SmallRng` is chosen to be\n efficient on the current platform, **without consideration for cryptography\n or security**. The size of its state is much smaller than for [`StdRng`].","sig":null,"attributes":[{"value":"/ An RNG recommended when small state, cheap initialization and good","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":360693,"byte_end":360763,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/ performance are required. The PRNG algorithm in `SmallRng` is chosen to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":360764,"byte_end":360842,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ efficient on the current platform, **without consideration for cryptography","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":360843,"byte_end":360922,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ or security**. The size of its state is much smaller than for [`StdRng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":360923,"byte_end":361000,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361001,"byte_end":361004,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reproducibility of output from this generator is however not required, thus","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361005,"byte_end":361084,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ future library versions may use a different internal generator with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361085,"byte_end":361156,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ different output. Further, this generator may not be portable and can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361157,"byte_end":361230,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ produce different output depending on the architecture. If you require","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361231,"byte_end":361305,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ reproducible output, use a named RNG, for example [`XorShiftRng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361306,"byte_end":361376,"line_start":25,"line_end":25,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361377,"byte_end":361380,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ The current algorithm used on all platforms is [Xorshift].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361381,"byte_end":361443,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361444,"byte_end":361447,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361448,"byte_end":361462,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361463,"byte_end":361466,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Initializing `SmallRng` with a random seed can be done using [`FromEntropy`]:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361467,"byte_end":361548,"line_start":31,"line_end":31,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361549,"byte_end":361552,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361553,"byte_end":361560,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # use rand::Rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361561,"byte_end":361581,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/ use rand::FromEntropy;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361582,"byte_end":361608,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/ use rand::rngs::SmallRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361609,"byte_end":361638,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361639,"byte_end":361642,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Create small, cheap to initialize and fast RNG with a random seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361643,"byte_end":361716,"line_start":38,"line_end":38,"column_start":1,"column_end":74}},{"value":"/ // The randomness is supplied by the operating system.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361717,"byte_end":361775,"line_start":39,"line_end":39,"column_start":1,"column_end":59}},{"value":"/ let mut small_rng = SmallRng::from_entropy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361776,"byte_end":361825,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/ # let v: u32 = small_rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361826,"byte_end":361861,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361862,"byte_end":361869,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361870,"byte_end":361873,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ When initializing a lot of `SmallRng`'s, using [`thread_rng`] can be more","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361874,"byte_end":361951,"line_start":44,"line_end":44,"column_start":1,"column_end":78}},{"value":"/ efficient:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361952,"byte_end":361966,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361967,"byte_end":361970,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361971,"byte_end":361978,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use std::iter;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361979,"byte_end":361997,"line_start":48,"line_end":48,"column_start":1,"column_end":19}},{"value":"/ use rand::{SeedableRng, thread_rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":361998,"byte_end":362038,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/ use rand::rngs::SmallRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362039,"byte_end":362068,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362069,"byte_end":362072,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ // Create a big, expensive to initialize and slower, but unpredictable RNG.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362073,"byte_end":362152,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ // This is cached and done only once per thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362153,"byte_end":362205,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ let mut thread_rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362206,"byte_end":362244,"line_start":54,"line_end":54,"column_start":1,"column_end":39}},{"value":"/ // Create small, cheap to initialize and fast RNGs with random seeds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362245,"byte_end":362318,"line_start":55,"line_end":55,"column_start":1,"column_end":74}},{"value":"/ // One can generally assume this won't fail.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362319,"byte_end":362367,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"/ let rngs: Vec<SmallRng> = iter::repeat(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362368,"byte_end":362414,"line_start":57,"line_end":57,"column_start":1,"column_end":47}},{"value":"/     .map(|()| SmallRng::from_rng(&mut thread_rng).unwrap())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362415,"byte_end":362478,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/     .take(10)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362479,"byte_end":362496,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/     .collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362497,"byte_end":362516,"line_start":60,"line_end":60,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362517,"byte_end":362524,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362525,"byte_end":362528,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ [`FromEntropy`]: ../trait.FromEntropy.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362529,"byte_end":362575,"line_start":63,"line_end":63,"column_start":1,"column_end":47}},{"value":"/ [`StdRng`]: struct.StdRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362576,"byte_end":362610,"line_start":64,"line_end":64,"column_start":1,"column_end":35}},{"value":"/ [`thread_rng`]: ../fn.thread_rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362611,"byte_end":362652,"line_start":65,"line_end":65,"column_start":1,"column_end":42}},{"value":"/ [Xorshift]: ../prng/struct.XorShiftRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362653,"byte_end":362700,"line_start":66,"line_end":66,"column_start":1,"column_end":48}},{"value":"/ [`XorShiftRng`]: ../prng/struct.XorShiftRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362701,"byte_end":362753,"line_start":67,"line_end":67,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364874,"byte_end":364880,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"StdRng","qualname":"::rngs::std::StdRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient\n on the current platform, to be statistically strong and unpredictable\n (meaning a cryptographically secure PRNG).","sig":null,"attributes":[{"value":"/ The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364091,"byte_end":364169,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ on the current platform, to be statistically strong and unpredictable","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364170,"byte_end":364243,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ (meaning a cryptographically secure PRNG).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364244,"byte_end":364290,"line_start":18,"line_end":18,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364291,"byte_end":364294,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The current algorithm used on all platforms is [HC-128].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364295,"byte_end":364355,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364356,"byte_end":364359,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reproducibility of output from this generator is however not required, thus","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364360,"byte_end":364439,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ future library versions may use a different internal generator with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364440,"byte_end":364511,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ different output. Further, this generator may not be portable and can","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364512,"byte_end":364585,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/ produce different output depending on the architecture. If you require","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364586,"byte_end":364660,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ reproducible output, use a named RNG, for example [`ChaChaRng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364661,"byte_end":364729,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364730,"byte_end":364733,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [HC-128]: ../prng/hc128/struct.Hc128Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364734,"byte_end":364782,"line_start":28,"line_end":28,"column_start":1,"column_end":49}},{"value":"/ [`ChaChaRng`]: ../prng/chacha/struct.ChaChaRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364783,"byte_end":364838,"line_start":29,"line_end":29,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369610,"byte_end":369619,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"ThreadRng","qualname":"::rngs::thread::ThreadRng","value":"ThreadRng {  }","parent":null,"children":[{"krate":0,"index":2120}],"decl_id":null,"docs":" The type returned by [`thread_rng`], essentially just a reference to the\n PRNG in thread-local memory.","sig":null,"attributes":[{"value":"/ The type returned by [`thread_rng`], essentially just a reference to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368159,"byte_end":368235,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/ PRNG in thread-local memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368236,"byte_end":368268,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368269,"byte_end":368272,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ `ThreadRng` uses [`ReseedingRng`] wrapping the same PRNG as [`StdRng`],","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368273,"byte_end":368348,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ which is reseeded after generating 32 MiB of random data. A single instance","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368349,"byte_end":368428,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ is cached per thread and the returned `ThreadRng` is a reference to this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368429,"byte_end":368505,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ instance — hence `ThreadRng` is neither `Send` nor `Sync` but is safe to use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368506,"byte_end":368588,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ within a single thread. This RNG is seeded and reseeded via [`EntropyRng`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368589,"byte_end":368667,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ as required.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368668,"byte_end":368684,"line_start":55,"line_end":55,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368685,"byte_end":368688,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Note that the reseeding is done as an extra precaution against entropy","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368689,"byte_end":368763,"line_start":57,"line_end":57,"column_start":1,"column_end":75}},{"value":"/ leaks and is in theory unnecessary — to predict `ThreadRng`'s output, an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368764,"byte_end":368842,"line_start":58,"line_end":58,"column_start":1,"column_end":77}},{"value":"/ attacker would have to either determine most of the RNG's seed or internal","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368843,"byte_end":368921,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ state, or crack the algorithm used.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368922,"byte_end":368961,"line_start":60,"line_end":60,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368962,"byte_end":368965,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Like [`StdRng`], `ThreadRng` is a cryptographically secure PRNG. The current","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":368966,"byte_end":369046,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ algorithm used is [HC-128], which is an array-based PRNG that trades memory","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369047,"byte_end":369126,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ usage for better performance. This makes it similar to ISAAC, the algorithm","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369127,"byte_end":369206,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ used in `ThreadRng` before rand 0.5.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369207,"byte_end":369247,"line_start":65,"line_end":65,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369248,"byte_end":369251,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Cloning this handle just produces a new reference to the same thread-local","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369252,"byte_end":369330,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369331,"byte_end":369345,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369346,"byte_end":369350,"line_start":69,"line_end":69,"column_start":1,"column_end":5}},{"value":"/ [`thread_rng`]: ../fn.thread_rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369351,"byte_end":369392,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ [`ReseedingRng`]: adapter/struct.ReseedingRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369393,"byte_end":369447,"line_start":71,"line_end":71,"column_start":1,"column_end":55}},{"value":"/ [`StdRng`]: struct.StdRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369448,"byte_end":369482,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/ [`EntropyRng`]: struct.EntropyRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369483,"byte_end":369525,"line_start":73,"line_end":73,"column_start":1,"column_end":43}},{"value":"/ [HC-128]: ../prng/hc128/struct.Hc128Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":369526,"byte_end":369574,"line_start":74,"line_end":74,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":917},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370537,"byte_end":370547,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"thread_rng","qualname":"::rngs::thread::thread_rng","value":"fn () -> ThreadRng","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the lazily-initialized thread-local random number\n generator, seeded by the system. Intended to be used in method\n chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g.\n `let mut rng = thread_rng();`.","sig":null,"attributes":[{"value":"/ Retrieve the lazily-initialized thread-local random number","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370189,"byte_end":370251,"line_start":92,"line_end":92,"column_start":1,"column_end":63}},{"value":"/ generator, seeded by the system. Intended to be used in method","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370252,"byte_end":370318,"line_start":93,"line_end":93,"column_start":1,"column_end":67}},{"value":"/ chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370319,"byte_end":370396,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ `let mut rng = thread_rng();`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370397,"byte_end":370431,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370432,"byte_end":370435,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For more information see [`ThreadRng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370436,"byte_end":370479,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370480,"byte_end":370483,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [`ThreadRng`]: rngs/struct.ThreadRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370484,"byte_end":370529,"line_start":99,"line_end":99,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":2130},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377495,"byte_end":377500,"line_start":118,"line_end":118,"column_start":12,"column_end":17},"name":"OsRng","qualname":"::rngs::os::OsRng","value":"","parent":null,"children":[],"decl_id":null,"docs":" A random number generator that retrieves randomness straight from the\n operating system.","sig":null,"attributes":[{"value":"/ A random number generator that retrieves randomness straight from the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372119,"byte_end":372192,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ operating system.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372193,"byte_end":372214,"line_start":17,"line_end":17,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372215,"byte_end":372218,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is the preferred external source of entropy for most applications.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372219,"byte_end":372294,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ Commonly it is used to initialize a user-space RNG, which can then be used","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372295,"byte_end":372373,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ to generate random values with much less overhead than `OsRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372374,"byte_end":372441,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372442,"byte_end":372445,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ You may prefer to use [`EntropyRng`] instead of `OsRng`. It is unlikely, but","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372446,"byte_end":372526,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ not entirely theoretical, for `OsRng` to fail. In such cases [`EntropyRng`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372527,"byte_end":372606,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ falls back on a good alternative entropy source.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372607,"byte_end":372659,"line_start":25,"line_end":25,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372660,"byte_end":372663,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `OsRng::new()` is guaranteed to be very cheap (after the first successful","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372664,"byte_end":372741,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ call), and will never consume more than one file handle per process.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372742,"byte_end":372814,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372815,"byte_end":372818,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Platform sources","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372819,"byte_end":372841,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372842,"byte_end":372845,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ | OS               | interface","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372846,"byte_end":372880,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ |------------------|---------------------------------------------------------","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372881,"byte_end":372962,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ | Linux, Android   | [`getrandom`][1] system call if available, otherwise [`/dev/urandom`][2] after reading from `/dev/random` once","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":372963,"byte_end":373098,"line_start":34,"line_end":34,"column_start":1,"column_end":136}},{"value":"/ | Windows          | [`RtlGenRandom`][3]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373099,"byte_end":373143,"line_start":35,"line_end":35,"column_start":1,"column_end":45}},{"value":"/ | macOS, iOS       | [`SecRandomCopyBytes`][4]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373144,"byte_end":373194,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/ | FreeBSD          | [`kern.arandom`][5]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373195,"byte_end":373239,"line_start":37,"line_end":37,"column_start":1,"column_end":45}},{"value":"/ | OpenBSD, Bitrig  | [`getentropy`][6]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373240,"byte_end":373282,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/ | NetBSD           | [`/dev/urandom`][7] after reading from `/dev/random` once","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373283,"byte_end":373365,"line_start":39,"line_end":39,"column_start":1,"column_end":83}},{"value":"/ | Dragonfly BSD    | [`/dev/random`][8]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373366,"byte_end":373409,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/ | Solaris, illumos | [`getrandom`][9] system call if available, otherwise [`/dev/random`][10]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373410,"byte_end":373507,"line_start":41,"line_end":41,"column_start":1,"column_end":98}},{"value":"/ | Fuchsia OS       | [`cprng_draw`][11]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373508,"byte_end":373551,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ | Redox            | [`rand:`][12]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373552,"byte_end":373590,"line_start":43,"line_end":43,"column_start":1,"column_end":39}},{"value":"/ | CloudABI         | [`random_get`][13]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373591,"byte_end":373634,"line_start":44,"line_end":44,"column_start":1,"column_end":44}},{"value":"/ | Haiku            | `/dev/random` (identical to `/dev/urandom`)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373635,"byte_end":373703,"line_start":45,"line_end":45,"column_start":1,"column_end":69}},{"value":"/ | Web browsers     | [`Crypto.getRandomValues`][14] (see [Support for WebAssembly and ams.js][14])","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373704,"byte_end":373806,"line_start":46,"line_end":46,"column_start":1,"column_end":103}},{"value":"/ | Node.js          | [`crypto.randomBytes`][15] (see [Support for WebAssembly and ams.js][16])","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373807,"byte_end":373905,"line_start":47,"line_end":47,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373906,"byte_end":373909,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Rand doesn't have a blanket implementation for all Unix-like operating","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373910,"byte_end":373984,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ systems that reads from `/dev/urandom`. This ensures all supported operating","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":373985,"byte_end":374065,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ systems are using the recommended interface and respect maximum buffer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374066,"byte_end":374140,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ sizes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374141,"byte_end":374151,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374152,"byte_end":374155,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Support for WebAssembly and ams.js","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374156,"byte_end":374197,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374198,"byte_end":374201,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The three Emscripten targets `asmjs-unknown-emscripten`,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374202,"byte_end":374262,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/ `wasm32-unknown-emscripten` and `wasm32-experimental-emscripten` use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374263,"byte_end":374335,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ Emscripten's emulation of `/dev/random` on web browsers and Node.js.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374336,"byte_end":374408,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/ Unfortunately it falls back to the insecure `Math.random()` if a browser","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374409,"byte_end":374485,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ doesn't support [`Crypto.getRandomValues`][12].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374486,"byte_end":374537,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374538,"byte_end":374541,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ The bare Wasm target `wasm32-unknown-unknown` tries to call the javascript","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374542,"byte_end":374620,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ methods directly, using `stdweb` in combination with `cargo-web`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374621,"byte_end":374690,"line_start":63,"line_end":63,"column_start":1,"column_end":70}},{"value":"/ `wasm-bindgen` is not yet supported.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374691,"byte_end":374731,"line_start":64,"line_end":64,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374732,"byte_end":374735,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ## Early boot","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374736,"byte_end":374753,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374754,"byte_end":374757,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ It is possible that early in the boot process the OS hasn't had enough time","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374758,"byte_end":374837,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ yet to collect entropy to securely seed its RNG, especially on virtual","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374838,"byte_end":374912,"line_start":69,"line_end":69,"column_start":1,"column_end":75}},{"value":"/ machines.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374913,"byte_end":374926,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374927,"byte_end":374930,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Some operating systems always block the thread until the RNG is securely","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":374931,"byte_end":375007,"line_start":72,"line_end":72,"column_start":1,"column_end":77}},{"value":"/ seeded. This can take anywhere from a few seconds to more than a minute.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375008,"byte_end":375084,"line_start":73,"line_end":73,"column_start":1,"column_end":77}},{"value":"/ Others make a best effort to use a seed from before the shutdown and don't","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375085,"byte_end":375163,"line_start":74,"line_end":74,"column_start":1,"column_end":79}},{"value":"/ document much.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375164,"byte_end":375182,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375183,"byte_end":375186,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ A few, Linux, NetBSD and Solaris, offer a choice between blocking, and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375187,"byte_end":375261,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ getting an error. With `try_fill_bytes` we choose to get the error","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375262,"byte_end":375332,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ ([`ErrorKind::NotReady`]), while the other methods use a blocking interface.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375333,"byte_end":375413,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375414,"byte_end":375417,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ On Linux (when the `genrandom` system call is not available) and on NetBSD","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375418,"byte_end":375496,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ reading from `/dev/urandom` never blocks, even when the OS hasn't collected","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375497,"byte_end":375576,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ enough entropy yet. As a countermeasure we try to do a single read from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375577,"byte_end":375652,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ `/dev/random` until we know the OS RNG is initialized (and store this in a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375653,"byte_end":375731,"line_start":84,"line_end":84,"column_start":1,"column_end":79}},{"value":"/ global static).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375732,"byte_end":375751,"line_start":85,"line_end":85,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375752,"byte_end":375755,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375756,"byte_end":375768,"line_start":87,"line_end":87,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375769,"byte_end":375772,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `OsRng` is extremely unlikely to fail if `OsRng::new()`, and one read from","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375773,"byte_end":375851,"line_start":89,"line_end":89,"column_start":1,"column_end":79}},{"value":"/ it, where succesfull. But in case it does fail, only [`try_fill_bytes`] is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375852,"byte_end":375930,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/ able to report the cause. Depending on the error the other [`RngCore`]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":375931,"byte_end":376005,"line_start":91,"line_end":91,"column_start":1,"column_end":75}},{"value":"/ methods will retry several times, and panic in case the error remains.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376006,"byte_end":376080,"line_start":92,"line_end":92,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376081,"byte_end":376084,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [`EntropyRng`]: struct.EntropyRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376085,"byte_end":376127,"line_start":94,"line_end":94,"column_start":1,"column_end":43}},{"value":"/ [`RngCore`]: ../trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376128,"byte_end":376166,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ [`try_fill_bytes`]: ../trait.RngCore.html#method.tymethod.try_fill_bytes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376167,"byte_end":376243,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/ [`ErrorKind::NotReady`]: ../enum.ErrorKind.html#variant.NotReady","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376244,"byte_end":376312,"line_start":97,"line_end":97,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376313,"byte_end":376316,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ [1]: http://man7.org/linux/man-pages/man2/getrandom.2.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376317,"byte_end":376379,"line_start":99,"line_end":99,"column_start":1,"column_end":63}},{"value":"/ [2]: http://man7.org/linux/man-pages/man4/urandom.4.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376380,"byte_end":376440,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/ [3]: https://msdn.microsoft.com/en-us/library/windows/desktop/aa387694.aspx","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376441,"byte_end":376520,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ [4]: https://developer.apple.com/documentation/security/1399291-secrandomcopybytes?language=objc","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376521,"byte_end":376621,"line_start":102,"line_end":102,"column_start":1,"column_end":101}},{"value":"/ [5]: https://www.freebsd.org/cgi/man.cgi?query=random&sektion=4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376622,"byte_end":376689,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/ [6]: https://man.openbsd.org/getentropy.2","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376690,"byte_end":376735,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"/ [7]: http://netbsd.gw.com/cgi-bin/man-cgi?random+4+NetBSD-current","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376736,"byte_end":376805,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/ [8]: https://leaf.dragonflybsd.org/cgi/web-man?command=random&section=4","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376806,"byte_end":376881,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ [9]: https://docs.oracle.com/cd/E88353_01/html/E37841/getrandom-2.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376882,"byte_end":376956,"line_start":107,"line_end":107,"column_start":1,"column_end":75}},{"value":"/ [10]: https://docs.oracle.com/cd/E86824_01/html/E54777/random-7d.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":376957,"byte_end":377030,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/ [11]: https://fuchsia.googlesource.com/zircon/+/HEAD/docs/syscalls/cprng_draw.md","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377031,"byte_end":377115,"line_start":109,"line_end":109,"column_start":1,"column_end":85}},{"value":"/ [12]: https://github.com/redox-os/randd/blob/master/src/main.rs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377116,"byte_end":377183,"line_start":110,"line_end":110,"column_start":1,"column_end":68}},{"value":"/ [13]: https://github.com/NuxiNL/cloudabi/blob/v0.20/cloudabi.txt#L1826","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377184,"byte_end":377258,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ [14]: https://www.w3.org/TR/WebCryptoAPI/#Crypto-method-getRandomValues","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377259,"byte_end":377334,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ [15]: https://nodejs.org/api/crypto.html#crypto_crypto_randombytes_size_callback","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377335,"byte_end":377419,"line_start":113,"line_end":113,"column_start":1,"column_end":85}},{"value":"/ [16]: #support-for-webassembly-and-amsjs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377420,"byte_end":377464,"line_start":114,"line_end":114,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377687,"byte_end":377690,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<OsRng>::new","value":"fn () -> Result<OsRng, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OsRng`.\n","sig":null,"attributes":[{"value":"/ Create a new `OsRng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377650,"byte_end":377675,"line_start":127,"line_end":127,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1020},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"seq","qualname":"::seq","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","parent":null,"children":[{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1027},{"krate":0,"index":1031},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040}],"decl_id":null,"docs":" Functions for randomly accessing and sampling sequences.\n","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11597,"byte_end":11622,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"! Functions for randomly accessing and sampling sequences.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":411804,"byte_end":411864,"line_start":11,"line_end":11,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":1023},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412950,"byte_end":412961,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::seq::sample_iter","value":"fn <T, I, R> (rng: &mut R, iterable: I, amount: usize) -> Result<Vec<T>, Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample `amount` elements from a finite iterator.","sig":null,"attributes":[{"value":"/ Randomly sample `amount` elements from a finite iterator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412221,"byte_end":412282,"line_start":21,"line_end":21,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412283,"byte_end":412286,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The following can be returned:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412287,"byte_end":412321,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412322,"byte_end":412325,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `Ok`: `Vec` of `amount` non-repeating randomly sampled elements. The order is not random.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412326,"byte_end":412421,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ - `Err`: `Vec` of all the elements from `iterable` in sequential order. This happens when the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412422,"byte_end":412519,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/   length of `iterable` was less than `amount`. This is considered an error since exactly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412520,"byte_end":412612,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/   `amount` elements is typically expected.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412613,"byte_end":412659,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412660,"byte_end":412663,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(len(iterable))` time and `O(amount)` memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412664,"byte_end":412740,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412741,"byte_end":412744,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412745,"byte_end":412758,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412759,"byte_end":412762,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412763,"byte_end":412770,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412771,"byte_end":412803,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412804,"byte_end":412807,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412808,"byte_end":412839,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ let sample = seq::sample_iter(&mut rng, 1..100, 5).unwrap();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412840,"byte_end":412904,"line_start":38,"line_end":38,"column_start":1,"column_end":65}},{"value":"/ println!(\"{:?}\", sample);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412905,"byte_end":412934,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":412935,"byte_end":412942,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1027},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414338,"byte_end":414350,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"sample_slice","qualname":"::seq::sample_slice","value":"fn <R, T> (rng: &mut R, slice: &[T], amount: usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` values from `slice`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` values from `slice`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":413898,"byte_end":413955,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":413956,"byte_end":413959,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The values are non-repeating and in random order.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":413960,"byte_end":414013,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414014,"byte_end":414017,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414018,"byte_end":414075,"line_start":73,"line_end":73,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414076,"byte_end":414079,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > slice.len()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414080,"byte_end":414116,"line_start":75,"line_end":75,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414117,"byte_end":414120,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414121,"byte_end":414134,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414135,"byte_end":414138,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414139,"byte_end":414146,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414147,"byte_end":414179,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414180,"byte_end":414183,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414184,"byte_end":414215,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ let values = vec![5, 6, 1, 3, 4, 6, 7];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414216,"byte_end":414259,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ println!(\"{:?}\", seq::sample_slice(&mut rng, &values, 3));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414260,"byte_end":414322,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414323,"byte_end":414330,"line_start":85,"line_end":85,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1031},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415085,"byte_end":415101,"line_start":114,"line_end":114,"column_start":8,"column_end":24},"name":"sample_slice_ref","qualname":"::seq::sample_slice_ref","value":"fn <'a, R, T> (rng: &mut R, slice: &'a [T], amount: usize) -> Vec<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` references from `slice`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` references from `slice`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414633,"byte_end":414694,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414695,"byte_end":414698,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ The references are non-repeating and in random order.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414699,"byte_end":414756,"line_start":99,"line_end":99,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414757,"byte_end":414760,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414761,"byte_end":414818,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414819,"byte_end":414822,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > slice.len()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414823,"byte_end":414859,"line_start":103,"line_end":103,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414860,"byte_end":414863,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414864,"byte_end":414877,"line_start":105,"line_end":105,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414878,"byte_end":414881,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414882,"byte_end":414889,"line_start":107,"line_end":107,"column_start":1,"column_end":8}},{"value":"/ use rand::{thread_rng, seq};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414890,"byte_end":414922,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414923,"byte_end":414926,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414927,"byte_end":414958,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/ let values = vec![5, 6, 1, 3, 4, 6, 7];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":414959,"byte_end":415002,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ println!(\"{:?}\", seq::sample_slice_ref(&mut rng, &values, 3));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415003,"byte_end":415069,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415070,"byte_end":415077,"line_start":113,"line_end":113,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1036},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415769,"byte_end":415783,"line_start":134,"line_end":134,"column_start":8,"column_end":22},"name":"sample_indices","qualname":"::seq::sample_indices","value":"fn <R> (rng: &mut R, length: usize, amount: usize) -> Vec<usize>","parent":null,"children":[],"decl_id":null,"docs":" Randomly sample exactly `amount` indices from `0..length`.","sig":null,"attributes":[{"value":"/ Randomly sample exactly `amount` indices from `0..length`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415368,"byte_end":415430,"line_start":124,"line_end":124,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415431,"byte_end":415434,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ The values are non-repeating and in random order.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415435,"byte_end":415488,"line_start":126,"line_end":126,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415489,"byte_end":415492,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ This implementation uses `O(amount)` time and memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415493,"byte_end":415550,"line_start":128,"line_end":128,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415551,"byte_end":415554,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This method is used internally by the slice sampling methods, but it can sometimes be useful to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415555,"byte_end":415654,"line_start":130,"line_end":130,"column_start":1,"column_end":100}},{"value":"/ have the indices themselves so this is provided as an alternative.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415655,"byte_end":415725,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415726,"byte_end":415729,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ Panics if `amount > length`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/seq.rs","byte_start":415730,"byte_end":415761,"line_start":133,"line_end":133,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":1052},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12843,"byte_end":12849,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"name":"jitter","qualname":"::jitter","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1053}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12799,"byte_end":12819,"line_start":312,"line_end":312,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":1056},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13561,"byte_end":13563,"line_start":335,"line_end":335,"column_start":9,"column_end":11},"name":"os","qualname":"::os","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1057}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12897,"byte_end":12917,"line_start":317,"line_end":317,"column_start":1,"column_end":21}},{"value":"cfg(all(feature = \"std\",\n          any(target_os = \"linux\", target_os = \"android\", target_os =\n              \"netbsd\", target_os = \"dragonfly\", target_os = \"haiku\",\n              target_os = \"emscripten\", target_os = \"solaris\", target_os =\n              \"cloudabi\", target_os = \"macos\", target_os = \"ios\", target_os =\n              \"freebsd\", target_os = \"openbsd\", target_os = \"bitrig\",\n              target_os = \"redox\", target_os = \"fuchsia\", windows,\n              all(target_arch = \"wasm32\", feature = \"stdweb\"))))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":12918,"byte_end":13537,"line_start":318,"line_end":333,"column_start":1,"column_end":5}}]},{"kind":"Mod","id":{"krate":0,"index":1058},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13637,"byte_end":13643,"line_start":340,"line_end":340,"column_start":9,"column_end":15},"name":"chacha","qualname":"::chacha","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1059}],"decl_id":null,"docs":" The ChaCha random number generator.\n","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13593,"byte_end":13613,"line_start":338,"line_end":338,"column_start":1,"column_end":21}},{"value":"! The ChaCha random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13650,"byte_end":13689,"line_start":341,"line_end":341,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1060},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13744,"byte_end":13749,"line_start":345,"line_end":345,"column_start":9,"column_end":14},"name":"isaac","qualname":"::isaac","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1061}],"decl_id":null,"docs":" The ISAAC random number generator.\n","sig":null,"attributes":[{"value":"! The ISAAC random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":13756,"byte_end":13794,"line_start":346,"line_end":346,"column_start":5,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":1075},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14476,"byte_end":14480,"line_start":368,"line_end":368,"column_start":11,"column_end":15},"name":"Rand","qualname":"::Rand","value":"Rand: Sized","parent":null,"children":[{"krate":0,"index":1076}],"decl_id":null,"docs":" A type that can be randomly generated using an [`Rng`].\n \n This is merely an adapter around the [`Standard`] distribution for\n convenience and backwards-compatibility.\n \n [`Rng`]: trait.Rng.html\n [`Standard`]: distributions/struct.Standard.html\n","sig":null,"attributes":[{"value":"/ A type that can be randomly generated using an [`Rng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14126,"byte_end":14185,"line_start":360,"line_end":360,"column_start":1,"column_end":60}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14186,"byte_end":14190,"line_start":361,"line_end":361,"column_start":1,"column_end":5}},{"value":"/ This is merely an adapter around the [`Standard`] distribution for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14191,"byte_end":14261,"line_start":362,"line_end":362,"column_start":1,"column_end":71}},{"value":"/ convenience and backwards-compatibility.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14262,"byte_end":14306,"line_start":363,"line_end":363,"column_start":1,"column_end":45}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14307,"byte_end":14311,"line_start":364,"line_end":364,"column_start":1,"column_end":5}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14312,"byte_end":14339,"line_start":365,"line_end":365,"column_start":1,"column_end":28}},{"value":"/ [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14340,"byte_end":14392,"line_start":366,"line_end":366,"column_start":1,"column_end":53}},{"value":"deprecated(since = \"0.5.0\", note = \"replaced by distributions::Standard\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14393,"byte_end":14465,"line_start":367,"line_end":367,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14597,"byte_end":14601,"line_start":371,"line_end":371,"column_start":8,"column_end":12},"name":"rand","qualname":"::Rand::rand","value":"fn <R> (rng: &mut R) -> Self","parent":{"krate":0,"index":1075},"children":[],"decl_id":null,"docs":" Generates a random instance of this type using the specified source of\n randomness.\n","sig":null,"attributes":[{"value":"/ Generates a random instance of this type using the specified source of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14495,"byte_end":14569,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ randomness.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14574,"byte_end":14589,"line_start":370,"line_end":370,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":1078},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16212,"byte_end":16215,"line_start":413,"line_end":413,"column_start":11,"column_end":14},"name":"Rng","qualname":"::Rng","value":"Rng: RngCore","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106}],"decl_id":null,"docs":" An automatically-implemented extension trait on [`RngCore`] providing high-level\n generic methods for sampling values and other convenience methods.\n \n This is the primary trait to use when generating random values.\n \n # Generic usage\n \n The basic pattern is `fn foo<R: Rng + ?Sized>(rng: &mut R)`. Some\n things are worth noting here:\n \n - Since `Rng: RngCore` and every `RngCore` implements `Rng`, it makes no\n   difference whether we use `R: Rng` or `R: RngCore`.\n - The `+ ?Sized` un-bounding allows functions to be called directly on\n   type-erased references; i.e. `foo(r)` where `r: &mut RngCore`. Without\n   this it would be necessary to write `foo(&mut r)`.\n \n An alternative pattern is possible: `fn foo<R: Rng>(rng: R)`. This has some\n trade-offs. It allows the argument to be consumed directly without a `&mut`\n (which is how `from_rng(thread_rng())` works); also it still works directly\n on references (including type-erased references). Unfortunately within the\n function `foo` it is not known whether `rng` is a reference type or not,\n hence many uses of `rng` require an extra reference, either explicitly\n (`distr.sample(&mut rng)`) or implicitly (`rng.gen()`); one may hope the\n optimiser can remove redundant references later.\n \n Example:\n \n ```\n # use rand::thread_rng;\n use rand::Rng;\n \n fn foo<R: Rng + ?Sized>(rng: &mut R) -> f32 {\n     rng.gen()\n }","sig":null,"attributes":[{"value":"/ An automatically-implemented extension trait on [`RngCore`] providing high-level","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14635,"byte_end":14719,"line_start":374,"line_end":374,"column_start":1,"column_end":85}},{"value":"/ generic methods for sampling values and other convenience methods.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14720,"byte_end":14790,"line_start":375,"line_end":375,"column_start":1,"column_end":71}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14791,"byte_end":14795,"line_start":376,"line_end":376,"column_start":1,"column_end":5}},{"value":"/ This is the primary trait to use when generating random values.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14796,"byte_end":14863,"line_start":377,"line_end":377,"column_start":1,"column_end":68}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14864,"byte_end":14868,"line_start":378,"line_end":378,"column_start":1,"column_end":5}},{"value":"/ # Generic usage","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14869,"byte_end":14888,"line_start":379,"line_end":379,"column_start":1,"column_end":20}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14889,"byte_end":14893,"line_start":380,"line_end":380,"column_start":1,"column_end":5}},{"value":"/ The basic pattern is `fn foo<R: Rng + ?Sized>(rng: &mut R)`. Some","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14894,"byte_end":14964,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/ things are worth noting here:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14965,"byte_end":14998,"line_start":382,"line_end":382,"column_start":1,"column_end":34}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14999,"byte_end":15003,"line_start":383,"line_end":383,"column_start":1,"column_end":5}},{"value":"/ - Since `Rng: RngCore` and every `RngCore` implements `Rng`, it makes no","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15004,"byte_end":15080,"line_start":384,"line_end":384,"column_start":1,"column_end":77}},{"value":"/   difference whether we use `R: Rng` or `R: RngCore`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15081,"byte_end":15138,"line_start":385,"line_end":385,"column_start":1,"column_end":58}},{"value":"/ - The `+ ?Sized` un-bounding allows functions to be called directly on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15139,"byte_end":15213,"line_start":386,"line_end":386,"column_start":1,"column_end":75}},{"value":"/   type-erased references; i.e. `foo(r)` where `r: &mut RngCore`. Without","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15214,"byte_end":15290,"line_start":387,"line_end":387,"column_start":1,"column_end":77}},{"value":"/   this it would be necessary to write `foo(&mut r)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15291,"byte_end":15347,"line_start":388,"line_end":388,"column_start":1,"column_end":57}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15348,"byte_end":15352,"line_start":389,"line_end":389,"column_start":1,"column_end":5}},{"value":"/ An alternative pattern is possible: `fn foo<R: Rng>(rng: R)`. This has some","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15353,"byte_end":15432,"line_start":390,"line_end":390,"column_start":1,"column_end":80}},{"value":"/ trade-offs. It allows the argument to be consumed directly without a `&mut`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15433,"byte_end":15512,"line_start":391,"line_end":391,"column_start":1,"column_end":80}},{"value":"/ (which is how `from_rng(thread_rng())` works); also it still works directly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15513,"byte_end":15592,"line_start":392,"line_end":392,"column_start":1,"column_end":80}},{"value":"/ on references (including type-erased references). Unfortunately within the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15593,"byte_end":15671,"line_start":393,"line_end":393,"column_start":1,"column_end":79}},{"value":"/ function `foo` it is not known whether `rng` is a reference type or not,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15672,"byte_end":15748,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ hence many uses of `rng` require an extra reference, either explicitly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15749,"byte_end":15823,"line_start":395,"line_end":395,"column_start":1,"column_end":75}},{"value":"/ (`distr.sample(&mut rng)`) or implicitly (`rng.gen()`); one may hope the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15824,"byte_end":15900,"line_start":396,"line_end":396,"column_start":1,"column_end":77}},{"value":"/ optimiser can remove redundant references later.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15901,"byte_end":15953,"line_start":397,"line_end":397,"column_start":1,"column_end":53}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15954,"byte_end":15958,"line_start":398,"line_end":398,"column_start":1,"column_end":5}},{"value":"/ Example:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15959,"byte_end":15971,"line_start":399,"line_end":399,"column_start":1,"column_end":13}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15972,"byte_end":15976,"line_start":400,"line_end":400,"column_start":1,"column_end":5}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15977,"byte_end":15984,"line_start":401,"line_end":401,"column_start":1,"column_end":8}},{"value":"/ # use rand::thread_rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":15985,"byte_end":16012,"line_start":402,"line_end":402,"column_start":1,"column_end":28}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16013,"byte_end":16031,"line_start":403,"line_end":403,"column_start":1,"column_end":19}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16032,"byte_end":16036,"line_start":404,"line_end":404,"column_start":1,"column_end":5}},{"value":"/ fn foo<R: Rng + ?Sized>(rng: &mut R) -> f32 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16037,"byte_end":16086,"line_start":405,"line_end":405,"column_start":1,"column_end":50}},{"value":"/     rng.gen()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16087,"byte_end":16104,"line_start":406,"line_end":406,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16105,"byte_end":16110,"line_start":407,"line_end":407,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16111,"byte_end":16114,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ # let v = foo(&mut thread_rng());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16115,"byte_end":16152,"line_start":409,"line_end":409,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16153,"byte_end":16160,"line_start":410,"line_end":410,"column_start":1,"column_end":8}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16161,"byte_end":16165,"line_start":411,"line_end":411,"column_start":1,"column_end":5}},{"value":"/ [`RngCore`]: trait.RngCore.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16166,"byte_end":16201,"line_start":412,"line_end":412,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16635,"byte_end":16638,"line_start":429,"line_end":429,"column_start":8,"column_end":11},"name":"gen","qualname":"::Rng::gen","value":"fn <T> (&mut self) -> T","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return a random value supporting the [`Standard`] distribution.","sig":null,"attributes":[{"value":"/ Return a random value supporting the [`Standard`] distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16231,"byte_end":16298,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16303,"byte_end":16306,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16311,"byte_end":16363,"line_start":416,"line_end":416,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16368,"byte_end":16371,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16376,"byte_end":16389,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16394,"byte_end":16397,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16402,"byte_end":16409,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16414,"byte_end":16446,"line_start":421,"line_end":421,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16451,"byte_end":16454,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16459,"byte_end":16490,"line_start":423,"line_end":423,"column_start":5,"column_end":36}},{"value":"/ let x: u32 = rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16495,"byte_end":16522,"line_start":424,"line_end":424,"column_start":5,"column_end":32}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16527,"byte_end":16549,"line_start":425,"line_end":425,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", rng.gen::<(f64, bool)>());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16554,"byte_end":16601,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16606,"byte_end":16613,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16618,"byte_end":16627,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17519,"byte_end":17528,"line_start":457,"line_end":457,"column_start":8,"column_end":17},"name":"gen_range","qualname":"::Rng::gen_range","value":"fn <T> (&mut self, low: T, high: T) -> T","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Generate a random value in the range [`low`, `high`), i.e. inclusive of\n `low` and exclusive of `high`.","sig":null,"attributes":[{"value":"/ Generate a random value in the range [`low`, `high`), i.e. inclusive of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16733,"byte_end":16808,"line_start":433,"line_end":433,"column_start":5,"column_end":80}},{"value":"/ `low` and exclusive of `high`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16813,"byte_end":16847,"line_start":434,"line_end":434,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16852,"byte_end":16855,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This function is optimised for the case that only a single sample is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16860,"byte_end":16932,"line_start":436,"line_end":436,"column_start":5,"column_end":77}},{"value":"/ made from the given range. See also the [`Uniform`] distribution","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16937,"byte_end":17005,"line_start":437,"line_end":437,"column_start":5,"column_end":73}},{"value":"/ type which may be faster if sampling from the same range repeatedly.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17010,"byte_end":17082,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17087,"byte_end":17090,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17095,"byte_end":17107,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17112,"byte_end":17115,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Panics if `low >= high`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17120,"byte_end":17148,"line_start":442,"line_end":442,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17153,"byte_end":17156,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17161,"byte_end":17174,"line_start":444,"line_end":444,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17179,"byte_end":17182,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17187,"byte_end":17194,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17199,"byte_end":17231,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17236,"byte_end":17239,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17244,"byte_end":17275,"line_start":449,"line_end":449,"column_start":5,"column_end":36}},{"value":"/ let n: u32 = rng.gen_range(0, 10);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17280,"byte_end":17318,"line_start":450,"line_end":450,"column_start":5,"column_end":43}},{"value":"/ println!(\"{}\", n);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17323,"byte_end":17345,"line_start":451,"line_end":451,"column_start":5,"column_end":27}},{"value":"/ let m: f64 = rng.gen_range(-40.0f64, 1.3e5f64);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17350,"byte_end":17401,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/ println!(\"{}\", m);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17406,"byte_end":17428,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17433,"byte_end":17440,"line_start":454,"line_end":454,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17445,"byte_end":17448,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ [`Uniform`]: distributions/uniform/struct.Uniform.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17453,"byte_end":17511,"line_start":456,"line_end":456,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18133,"byte_end":18139,"line_start":475,"line_end":475,"column_start":8,"column_end":14},"name":"sample","qualname":"::Rng::sample","value":"fn <T, D> (&mut self, distr: D) -> T","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Sample a new value, using the given distribution.","sig":null,"attributes":[{"value":"/ Sample a new value, using the given distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17657,"byte_end":17710,"line_start":461,"line_end":461,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17715,"byte_end":17718,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17723,"byte_end":17738,"line_start":463,"line_end":463,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17743,"byte_end":17746,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17751,"byte_end":17758,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17763,"byte_end":17795,"line_start":466,"line_end":466,"column_start":5,"column_end":37}},{"value":"/ use rand::distributions::Uniform;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17800,"byte_end":17837,"line_start":467,"line_end":467,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17842,"byte_end":17845,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17850,"byte_end":17881,"line_start":469,"line_end":469,"column_start":5,"column_end":36}},{"value":"/ let x = rng.sample(Uniform::new(10u32, 15));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17886,"byte_end":17934,"line_start":470,"line_end":470,"column_start":5,"column_end":53}},{"value":"/ // Type annotation requires two types, the type and distribution; the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":17939,"byte_end":18012,"line_start":471,"line_end":471,"column_start":5,"column_end":78}},{"value":"/ // distribution can be inferred.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18017,"byte_end":18053,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ let y = rng.sample::<u16, _>(Uniform::new(10, 15));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18058,"byte_end":18113,"line_start":473,"line_end":473,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18118,"byte_end":18125,"line_start":474,"line_end":474,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19159,"byte_end":19170,"line_start":506,"line_end":506,"column_start":8,"column_end":19},"name":"sample_iter","qualname":"::Rng::sample_iter","value":"fn <'a, T, D> (&'a mut self, distr: &'a D) -> distributions::DistIter<'a, D, Self, T>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Create an iterator that generates values using the given distribution.","sig":null,"attributes":[{"value":"/ Create an iterator that generates values using the given distribution.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18229,"byte_end":18303,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18308,"byte_end":18311,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18316,"byte_end":18329,"line_start":481,"line_end":481,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18334,"byte_end":18337,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18342,"byte_end":18349,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18354,"byte_end":18386,"line_start":484,"line_end":484,"column_start":5,"column_end":37}},{"value":"/ use rand::distributions::{Alphanumeric, Uniform, Standard};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18391,"byte_end":18454,"line_start":485,"line_end":485,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18459,"byte_end":18462,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18467,"byte_end":18498,"line_start":487,"line_end":487,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18503,"byte_end":18506,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ // Vec of 16 x f32:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18511,"byte_end":18534,"line_start":489,"line_end":489,"column_start":5,"column_end":28}},{"value":"/ let v: Vec<f32> = thread_rng().sample_iter(&Standard).take(16).collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18539,"byte_end":18616,"line_start":490,"line_end":490,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18621,"byte_end":18624,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ // String:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18629,"byte_end":18643,"line_start":492,"line_end":492,"column_start":5,"column_end":19}},{"value":"/ let s: String = rng.sample_iter(&Alphanumeric).take(7).collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18648,"byte_end":18717,"line_start":493,"line_end":493,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18722,"byte_end":18725,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ // Combined values","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18730,"byte_end":18752,"line_start":495,"line_end":495,"column_start":5,"column_end":27}},{"value":"/ println!(\"{:?}\", thread_rng().sample_iter(&Standard).take(5)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18757,"byte_end":18821,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/                              .collect::<Vec<(f64, bool)>>());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18826,"byte_end":18891,"line_start":497,"line_end":497,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18896,"byte_end":18899,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ // Dice-rolling:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18904,"byte_end":18924,"line_start":499,"line_end":499,"column_start":5,"column_end":25}},{"value":"/ let die_range = Uniform::new_inclusive(1, 6);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18929,"byte_end":18978,"line_start":500,"line_end":500,"column_start":5,"column_end":54}},{"value":"/ let mut roll_die = rng.sample_iter(&die_range);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":18983,"byte_end":19034,"line_start":501,"line_end":501,"column_start":5,"column_end":56}},{"value":"/ while roll_die.next().unwrap() != 6 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19039,"byte_end":19080,"line_start":502,"line_end":502,"column_start":5,"column_end":46}},{"value":"/     println!(\"Not a 6; rolling again!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19085,"byte_end":19129,"line_start":503,"line_end":503,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19134,"byte_end":19139,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19144,"byte_end":19151,"line_start":505,"line_end":505,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20303,"byte_end":20307,"line_start":535,"line_end":535,"column_start":8,"column_end":12},"name":"fill","qualname":"::Rng::fill","value":"fn <T> (&mut self, dest: &mut T) -> ()","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random bytes (uniform value distribution),\n where `dest` is any type supporting [`AsByteSliceMut`], namely slices\n and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","sig":null,"attributes":[{"value":"/ Fill `dest` entirely with random bytes (uniform value distribution),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19344,"byte_end":19416,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ where `dest` is any type supporting [`AsByteSliceMut`], namely slices","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19421,"byte_end":19494,"line_start":513,"line_end":513,"column_start":5,"column_end":78}},{"value":"/ and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19499,"byte_end":19570,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19575,"byte_end":19578,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ On big-endian platforms this performs byte-swapping to ensure","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19583,"byte_end":19648,"line_start":516,"line_end":516,"column_start":5,"column_end":70}},{"value":"/ portability of results from reproducible generators.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19653,"byte_end":19709,"line_start":517,"line_end":517,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19714,"byte_end":19717,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This uses [`fill_bytes`] internally which may handle some RNG errors","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19722,"byte_end":19794,"line_start":519,"line_end":519,"column_start":5,"column_end":77}},{"value":"/ implicitly (e.g. waiting if the OS generator is not ready), but panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19799,"byte_end":19873,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ on other errors. See also [`try_fill`] which returns errors.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19878,"byte_end":19942,"line_start":521,"line_end":521,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19947,"byte_end":19950,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19955,"byte_end":19968,"line_start":523,"line_end":523,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19973,"byte_end":19976,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19981,"byte_end":19988,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":19993,"byte_end":20025,"line_start":526,"line_end":526,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20030,"byte_end":20033,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ let mut arr = [0i8; 20];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20038,"byte_end":20066,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/ thread_rng().fill(&mut arr[..]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20071,"byte_end":20107,"line_start":529,"line_end":529,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20112,"byte_end":20119,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20124,"byte_end":20127,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [`fill_bytes`]: trait.RngCore.html#method.fill_bytes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20132,"byte_end":20188,"line_start":532,"line_end":532,"column_start":5,"column_end":61}},{"value":"/ [`try_fill`]: trait.Rng.html#method.try_fill","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20193,"byte_end":20241,"line_start":533,"line_end":533,"column_start":5,"column_end":53}},{"value":"/ [`AsByteSliceMut`]: trait.AsByteSliceMut.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20246,"byte_end":20295,"line_start":534,"line_end":534,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21643,"byte_end":21651,"line_start":571,"line_end":571,"column_start":8,"column_end":16},"name":"try_fill","qualname":"::Rng::try_fill","value":"fn <T> (&mut self, dest: &mut T) -> Result<(), Error>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Fill `dest` entirely with random bytes (uniform value distribution),\n where `dest` is any type supporting [`AsByteSliceMut`], namely slices\n and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","sig":null,"attributes":[{"value":"/ Fill `dest` entirely with random bytes (uniform value distribution),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20447,"byte_end":20519,"line_start":540,"line_end":540,"column_start":5,"column_end":77}},{"value":"/ where `dest` is any type supporting [`AsByteSliceMut`], namely slices","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20524,"byte_end":20597,"line_start":541,"line_end":541,"column_start":5,"column_end":78}},{"value":"/ and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20602,"byte_end":20673,"line_start":542,"line_end":542,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20678,"byte_end":20681,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ On big-endian platforms this performs byte-swapping to ensure","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20686,"byte_end":20751,"line_start":544,"line_end":544,"column_start":5,"column_end":70}},{"value":"/ portability of results from reproducible generators.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20756,"byte_end":20812,"line_start":545,"line_end":545,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20817,"byte_end":20820,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This uses [`try_fill_bytes`] internally and forwards all RNG errors. In","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20825,"byte_end":20900,"line_start":547,"line_end":547,"column_start":5,"column_end":80}},{"value":"/ some cases errors may be resolvable; see [`ErrorKind`] and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20905,"byte_end":20967,"line_start":548,"line_end":548,"column_start":5,"column_end":67}},{"value":"/ documentation for the RNG in use. If you do not plan to handle these","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":20972,"byte_end":21044,"line_start":549,"line_end":549,"column_start":5,"column_end":77}},{"value":"/ errors you may prefer to use [`fill`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21049,"byte_end":21091,"line_start":550,"line_end":550,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21096,"byte_end":21099,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21104,"byte_end":21117,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21122,"byte_end":21125,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21130,"byte_end":21137,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ # use rand::Error;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21142,"byte_end":21164,"line_start":555,"line_end":555,"column_start":5,"column_end":27}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21169,"byte_end":21201,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21206,"byte_end":21209,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21214,"byte_end":21257,"line_start":558,"line_end":558,"column_start":5,"column_end":48}},{"value":"/ let mut arr = [0u64; 4];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21262,"byte_end":21290,"line_start":559,"line_end":559,"column_start":5,"column_end":33}},{"value":"/ thread_rng().try_fill(&mut arr[..])?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21295,"byte_end":21336,"line_start":560,"line_end":560,"column_start":5,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21341,"byte_end":21353,"line_start":561,"line_end":561,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21358,"byte_end":21365,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21370,"byte_end":21373,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # try_inner().unwrap()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21378,"byte_end":21404,"line_start":564,"line_end":564,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21409,"byte_end":21416,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21421,"byte_end":21424,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind`]: enum.ErrorKind.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21429,"byte_end":21467,"line_start":567,"line_end":567,"column_start":5,"column_end":43}},{"value":"/ [`try_fill_bytes`]: trait.RngCore.html#method.try_fill_bytes","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21472,"byte_end":21536,"line_start":568,"line_end":568,"column_start":5,"column_end":69}},{"value":"/ [`fill`]: trait.Rng.html#method.fill","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21541,"byte_end":21581,"line_start":569,"line_end":569,"column_start":5,"column_end":45}},{"value":"/ [`AsByteSliceMut`]: trait.AsByteSliceMut.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21586,"byte_end":21635,"line_start":570,"line_end":570,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22324,"byte_end":22332,"line_start":596,"line_end":596,"column_start":8,"column_end":16},"name":"gen_bool","qualname":"::Rng::gen_bool","value":"fn (&mut self, p: f64) -> bool","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return a bool with a probability `p` of being true.","sig":null,"attributes":[{"value":"/ Return a bool with a probability `p` of being true.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21832,"byte_end":21887,"line_start":577,"line_end":577,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21892,"byte_end":21895,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ This is a wrapper around [`distributions::Bernoulli`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21900,"byte_end":21958,"line_start":579,"line_end":579,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21963,"byte_end":21966,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21971,"byte_end":21984,"line_start":581,"line_end":581,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21989,"byte_end":21992,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":21997,"byte_end":22004,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22009,"byte_end":22041,"line_start":584,"line_end":584,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22046,"byte_end":22049,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22054,"byte_end":22085,"line_start":586,"line_end":586,"column_start":5,"column_end":36}},{"value":"/ println!(\"{}\", rng.gen_bool(1.0 / 3.0));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22090,"byte_end":22134,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22139,"byte_end":22146,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22151,"byte_end":22154,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22159,"byte_end":22171,"line_start":590,"line_end":590,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22176,"byte_end":22179,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ If `p` < 0 or `p` > 1.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22184,"byte_end":22210,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22215,"byte_end":22218,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ [`distributions::Bernoulli`]: distributions/bernoulli/struct.Bernoulli.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22223,"byte_end":22302,"line_start":594,"line_end":594,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22307,"byte_end":22316,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22832,"byte_end":22838,"line_start":615,"line_end":615,"column_start":8,"column_end":14},"name":"choose","qualname":"::Rng::choose","value":"fn <'a, T> (&mut self, values: &'a [T]) -> Option<&'a T>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a random element from `values`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22446,"byte_end":22488,"line_start":601,"line_end":601,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22493,"byte_end":22496,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22501,"byte_end":22540,"line_start":603,"line_end":603,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22545,"byte_end":22548,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22553,"byte_end":22566,"line_start":605,"line_end":605,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22571,"byte_end":22574,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22579,"byte_end":22586,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22591,"byte_end":22623,"line_start":608,"line_end":608,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22628,"byte_end":22631,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ let choices = [1, 2, 4, 8, 16, 32];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22636,"byte_end":22675,"line_start":610,"line_end":610,"column_start":5,"column_end":44}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22680,"byte_end":22711,"line_start":611,"line_end":611,"column_start":5,"column_end":36}},{"value":"/ println!(\"{:?}\", rng.choose(&choices));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22716,"byte_end":22759,"line_start":612,"line_end":612,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(rng.choose(&choices[..0]), None);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22764,"byte_end":22812,"line_start":613,"line_end":613,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":22817,"byte_end":22824,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23161,"byte_end":23171,"line_start":626,"line_end":626,"column_start":8,"column_end":18},"name":"choose_mut","qualname":"::Rng::choose_mut","value":"fn <'a, T> (&mut self, values: &'a mut [T]) -> Option<&'a mut T>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return a mutable pointer to a random element from `values`.","sig":null,"attributes":[{"value":"/ Return a mutable pointer to a random element from `values`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23038,"byte_end":23101,"line_start":623,"line_end":623,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23106,"byte_end":23109,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `values` is empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23114,"byte_end":23153,"line_start":625,"line_end":625,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23965,"byte_end":23972,"line_start":653,"line_end":653,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::Rng::shuffle","value":"fn <T> (&mut self, values: &mut [T]) -> ()","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Shuffle a mutable slice in place.","sig":null,"attributes":[{"value":"/ Shuffle a mutable slice in place.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23410,"byte_end":23447,"line_start":635,"line_end":635,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23452,"byte_end":23455,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This applies Durstenfeld's algorithm for the [Fisher–Yates shuffle](","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23460,"byte_end":23534,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#The_modern_algorithm)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23539,"byte_end":23623,"line_start":638,"line_end":638,"column_start":5,"column_end":89}},{"value":"/ which produces an unbiased permutation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23628,"byte_end":23671,"line_start":639,"line_end":639,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23676,"byte_end":23679,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23684,"byte_end":23697,"line_start":641,"line_end":641,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23702,"byte_end":23705,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23710,"byte_end":23717,"line_start":643,"line_end":643,"column_start":5,"column_end":12}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23722,"byte_end":23754,"line_start":644,"line_end":644,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23759,"byte_end":23762,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23767,"byte_end":23798,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/ let mut y = [1, 2, 3];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23803,"byte_end":23829,"line_start":647,"line_end":647,"column_start":5,"column_end":31}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23834,"byte_end":23858,"line_start":648,"line_end":648,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23863,"byte_end":23887,"line_start":649,"line_end":649,"column_start":5,"column_end":29}},{"value":"/ rng.shuffle(&mut y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23892,"byte_end":23916,"line_start":650,"line_end":650,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23921,"byte_end":23945,"line_start":651,"line_end":651,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":23950,"byte_end":23957,"line_start":652,"line_end":652,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24879,"byte_end":24887,"line_start":680,"line_end":680,"column_start":8,"column_end":16},"name":"gen_iter","qualname":"::Rng::gen_iter","value":"fn <T> (&mut self) -> Generator<T, &mut Self>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return an iterator that will yield an infinite number of randomly\n generated items.","sig":null,"attributes":[{"value":"/ Return an iterator that will yield an infinite number of randomly","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24277,"byte_end":24346,"line_start":663,"line_end":663,"column_start":5,"column_end":74}},{"value":"/ generated items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24351,"byte_end":24371,"line_start":664,"line_end":664,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24376,"byte_end":24379,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24384,"byte_end":24397,"line_start":666,"line_end":666,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24402,"byte_end":24405,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24410,"byte_end":24417,"line_start":668,"line_end":668,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24422,"byte_end":24449,"line_start":669,"line_end":669,"column_start":5,"column_end":32}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24454,"byte_end":24486,"line_start":670,"line_end":670,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24491,"byte_end":24494,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24499,"byte_end":24530,"line_start":672,"line_end":672,"column_start":5,"column_end":36}},{"value":"/ let x = rng.gen_iter::<u32>().take(10).collect::<Vec<u32>>();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24535,"byte_end":24600,"line_start":673,"line_end":673,"column_start":5,"column_end":70}},{"value":"/ println!(\"{:?}\", x);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24605,"byte_end":24629,"line_start":674,"line_end":674,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", rng.gen_iter::<(f64, bool)>().take(5)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24634,"byte_end":24692,"line_start":675,"line_end":675,"column_start":5,"column_end":63}},{"value":"/                     .collect::<Vec<(f64, bool)>>());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24697,"byte_end":24753,"line_start":676,"line_end":676,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24758,"byte_end":24765,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24770,"byte_end":24790,"line_start":678,"line_end":678,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use Rng::sample_iter(&Standard) instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":24795,"byte_end":24871,"line_start":679,"line_end":679,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25702,"byte_end":25719,"line_start":702,"line_end":702,"column_start":8,"column_end":25},"name":"gen_weighted_bool","qualname":"::Rng::gen_weighted_bool","value":"fn (&mut self, n: u32) -> bool","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return a bool with a 1 in n chance of true","sig":null,"attributes":[{"value":"/ Return a bool with a 1 in n chance of true","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25036,"byte_end":25082,"line_start":684,"line_end":684,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25087,"byte_end":25090,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25095,"byte_end":25108,"line_start":686,"line_end":686,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25113,"byte_end":25116,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25121,"byte_end":25128,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25133,"byte_end":25160,"line_start":689,"line_end":689,"column_start":5,"column_end":32}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25165,"byte_end":25197,"line_start":690,"line_end":690,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25202,"byte_end":25205,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25210,"byte_end":25241,"line_start":692,"line_end":692,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rng.gen_weighted_bool(0), true);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25246,"byte_end":25293,"line_start":693,"line_end":693,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(rng.gen_weighted_bool(1), true);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25298,"byte_end":25345,"line_start":694,"line_end":694,"column_start":5,"column_end":52}},{"value":"/ // Just like `rng.gen::<bool>()` a 50-50% chance, but using a slower","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25350,"byte_end":25422,"line_start":695,"line_end":695,"column_start":5,"column_end":77}},{"value":"/ // method with different results.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25427,"byte_end":25464,"line_start":696,"line_end":696,"column_start":5,"column_end":42}},{"value":"/ println!(\"{}\", rng.gen_weighted_bool(2));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25469,"byte_end":25514,"line_start":697,"line_end":697,"column_start":5,"column_end":50}},{"value":"/ // First meaningful use of `gen_weighted_bool`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25519,"byte_end":25570,"line_start":698,"line_end":698,"column_start":5,"column_end":56}},{"value":"/ println!(\"{}\", rng.gen_weighted_bool(3));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25575,"byte_end":25620,"line_start":699,"line_end":699,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25625,"byte_end":25632,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.5.0\", note = \"use gen_bool instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25637,"byte_end":25694,"line_start":701,"line_end":701,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26293,"byte_end":26308,"line_start":720,"line_end":720,"column_start":8,"column_end":23},"name":"gen_ascii_chars","qualname":"::Rng::gen_ascii_chars","value":"fn (&mut self) -> AsciiGenerator<&mut Self>","parent":{"krate":0,"index":1078},"children":[],"decl_id":null,"docs":" Return an iterator of random characters from the set A-Z,a-z,0-9.","sig":null,"attributes":[{"value":"/ Return an iterator of random characters from the set A-Z,a-z,0-9.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25874,"byte_end":25943,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25948,"byte_end":25951,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25956,"byte_end":25969,"line_start":709,"line_end":709,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25974,"byte_end":25977,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25982,"byte_end":25989,"line_start":711,"line_end":711,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":25994,"byte_end":26021,"line_start":712,"line_end":712,"column_start":5,"column_end":32}},{"value":"/ use rand::{thread_rng, Rng};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26026,"byte_end":26058,"line_start":713,"line_end":713,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26063,"byte_end":26066,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ let s: String = thread_rng().gen_ascii_chars().take(10).collect();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26071,"byte_end":26141,"line_start":715,"line_end":715,"column_start":5,"column_end":75}},{"value":"/ println!(\"{}\", s);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26146,"byte_end":26168,"line_start":716,"line_end":716,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26173,"byte_end":26180,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26185,"byte_end":26205,"line_start":718,"line_end":718,"column_start":5,"column_end":25}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use sample_iter(&Alphanumeric) instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26210,"byte_end":26285,"line_start":719,"line_end":719,"column_start":5,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":1109},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26649,"byte_end":26663,"line_start":733,"line_end":733,"column_start":11,"column_end":25},"name":"AsByteSliceMut","qualname":"::AsByteSliceMut","value":"AsByteSliceMut","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"decl_id":null,"docs":" Trait for casting types to byte slices\n \n This is used by the [`fill`] and [`try_fill`] methods.\n \n [`fill`]: trait.Rng.html#method.fill\n [`try_fill`]: trait.Rng.html#method.try_fill\n","sig":null,"attributes":[{"value":"/ Trait for casting types to byte slices","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26437,"byte_end":26479,"line_start":727,"line_end":727,"column_start":1,"column_end":43}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26480,"byte_end":26484,"line_start":728,"line_end":728,"column_start":1,"column_end":5}},{"value":"/ This is used by the [`fill`] and [`try_fill`] methods.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26485,"byte_end":26543,"line_start":729,"line_end":729,"column_start":1,"column_end":59}},{"value":"/ ","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26544,"byte_end":26548,"line_start":730,"line_end":730,"column_start":1,"column_end":5}},{"value":"/ [`fill`]: trait.Rng.html#method.fill","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26549,"byte_end":26589,"line_start":731,"line_end":731,"column_start":1,"column_end":41}},{"value":"/ [`try_fill`]: trait.Rng.html#method.try_fill","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26590,"byte_end":26638,"line_start":732,"line_end":732,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26732,"byte_end":26749,"line_start":735,"line_end":735,"column_start":8,"column_end":25},"name":"as_byte_slice_mut","qualname":"::AsByteSliceMut::as_byte_slice_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Return a mutable reference to self as a byte slice\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to self as a byte slice","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26670,"byte_end":26724,"line_start":734,"line_end":734,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26866,"byte_end":26871,"line_start":738,"line_end":738,"column_start":8,"column_end":13},"name":"to_le","qualname":"::AsByteSliceMut::to_le","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).\n","sig":null,"attributes":[{"value":"/ Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26784,"byte_end":26858,"line_start":737,"line_end":737,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2378},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29622,"byte_end":29631,"line_start":832,"line_end":832,"column_start":12,"column_end":21},"name":"Generator","qualname":"::Generator","value":"Generator {  }","parent":null,"children":[{"krate":0,"index":2381},{"krate":0,"index":2382}],"decl_id":null,"docs":" Iterator which will generate a stream of random items.","sig":null,"attributes":[{"value":"/ Iterator which will generate a stream of random items.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29294,"byte_end":29352,"line_start":823,"line_end":823,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29353,"byte_end":29356,"line_start":824,"line_end":824,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_iter`] method on [`Rng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29357,"byte_end":29425,"line_start":825,"line_end":825,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29426,"byte_end":29429,"line_start":826,"line_end":826,"column_start":1,"column_end":4}},{"value":"/ [`gen_iter`]: trait.Rng.html#method.gen_iter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29430,"byte_end":29478,"line_start":827,"line_end":827,"column_start":1,"column_end":49}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29479,"byte_end":29506,"line_start":828,"line_end":828,"column_start":1,"column_end":28}},{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29524,"byte_end":29544,"line_start":830,"line_end":830,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note = \"use Rng::sample_iter instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29545,"byte_end":29610,"line_start":831,"line_end":831,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2387},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30281,"byte_end":30295,"line_start":855,"line_end":855,"column_start":12,"column_end":26},"name":"AsciiGenerator","qualname":"::AsciiGenerator","value":"AsciiGenerator {  }","parent":null,"children":[{"krate":0,"index":2389}],"decl_id":null,"docs":" Iterator which will continuously generate random ascii characters.","sig":null,"attributes":[{"value":"/ Iterator which will continuously generate random ascii characters.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29909,"byte_end":29979,"line_start":846,"line_end":846,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29980,"byte_end":29983,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ This iterator is created via the [`gen_ascii_chars`] method on [`Rng`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29984,"byte_end":30059,"line_start":848,"line_end":848,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30060,"byte_end":30063,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ [`gen_ascii_chars`]: trait.Rng.html#method.gen_ascii_chars","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30064,"byte_end":30126,"line_start":850,"line_end":850,"column_start":1,"column_end":63}},{"value":"/ [`Rng`]: trait.Rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30127,"byte_end":30154,"line_start":851,"line_end":851,"column_start":1,"column_end":28}},{"value":"allow(deprecated)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30172,"byte_end":30192,"line_start":853,"line_end":853,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.5.0\", note =\n             \"use distributions::Alphanumeric instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30193,"byte_end":30269,"line_start":854,"line_end":854,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1127},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31852,"byte_end":31863,"line_start":902,"line_end":902,"column_start":11,"column_end":22},"name":"FromEntropy","qualname":"::FromEntropy","value":"FromEntropy: SeedableRng","parent":null,"children":[{"krate":0,"index":1128}],"decl_id":null,"docs":" A convenience extension to [`SeedableRng`] allowing construction from fresh\n entropy. This trait is automatically implemented for any PRNG implementing\n [`SeedableRng`] and is not intended to be implemented by users.","sig":null,"attributes":[{"value":"/ A convenience extension to [`SeedableRng`] allowing construction from fresh","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30697,"byte_end":30776,"line_start":873,"line_end":873,"column_start":1,"column_end":80}},{"value":"/ entropy. This trait is automatically implemented for any PRNG implementing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30777,"byte_end":30855,"line_start":874,"line_end":874,"column_start":1,"column_end":79}},{"value":"/ [`SeedableRng`] and is not intended to be implemented by users.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30856,"byte_end":30923,"line_start":875,"line_end":875,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30924,"byte_end":30927,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ This is equivalent to using `SeedableRng::from_rng(EntropyRng::new())` then","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30928,"byte_end":31007,"line_start":877,"line_end":877,"column_start":1,"column_end":80}},{"value":"/ unwrapping the result.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31008,"byte_end":31034,"line_start":878,"line_end":878,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31035,"byte_end":31038,"line_start":879,"line_end":879,"column_start":1,"column_end":4}},{"value":"/ Since this is convenient and secure, it is the recommended way to create","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31039,"byte_end":31115,"line_start":880,"line_end":880,"column_start":1,"column_end":77}},{"value":"/ PRNGs, though two alternatives may be considered:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31116,"byte_end":31169,"line_start":881,"line_end":881,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31170,"byte_end":31173,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ *   Deterministic creation using [`SeedableRng::from_seed`] with a fixed seed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31174,"byte_end":31255,"line_start":883,"line_end":883,"column_start":1,"column_end":82}},{"value":"/ *   Seeding from `thread_rng`: `SeedableRng::from_rng(thread_rng())?`;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31256,"byte_end":31330,"line_start":884,"line_end":884,"column_start":1,"column_end":75}},{"value":"/     this will usually be faster and should also be secure, but requires","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31331,"byte_end":31406,"line_start":885,"line_end":885,"column_start":1,"column_end":76}},{"value":"/     trusting one extra component.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31407,"byte_end":31444,"line_start":886,"line_end":886,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31445,"byte_end":31448,"line_start":887,"line_end":887,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31449,"byte_end":31463,"line_start":888,"line_end":888,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31464,"byte_end":31467,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31468,"byte_end":31475,"line_start":890,"line_end":890,"column_start":1,"column_end":8}},{"value":"/ use rand::{Rng, FromEntropy};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31476,"byte_end":31509,"line_start":891,"line_end":891,"column_start":1,"column_end":34}},{"value":"/ use rand::rngs::StdRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31510,"byte_end":31537,"line_start":892,"line_end":892,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31538,"byte_end":31541,"line_start":893,"line_end":893,"column_start":1,"column_end":4}},{"value":"/ let mut rng = StdRng::from_entropy();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31542,"byte_end":31583,"line_start":894,"line_end":894,"column_start":1,"column_end":42}},{"value":"/ println!(\"Random die roll: {}\", rng.gen_range(1, 7));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31584,"byte_end":31641,"line_start":895,"line_end":895,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31642,"byte_end":31649,"line_start":896,"line_end":896,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31650,"byte_end":31653,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ [`EntropyRng`]: rngs/struct.EntropyRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31654,"byte_end":31701,"line_start":898,"line_end":898,"column_start":1,"column_end":48}},{"value":"/ [`SeedableRng`]: trait.SeedableRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31702,"byte_end":31745,"line_start":899,"line_end":899,"column_start":1,"column_end":44}},{"value":"/ [`SeedableRng::from_seed`]: trait.SeedableRng.html#tymethod.from_seed","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31746,"byte_end":31819,"line_start":900,"line_end":900,"column_start":1,"column_end":74}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31820,"byte_end":31841,"line_start":901,"line_end":901,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33010,"byte_end":33022,"line_start":932,"line_end":932,"column_start":8,"column_end":20},"name":"from_entropy","qualname":"::FromEntropy::from_entropy","value":"fn () -> Self","parent":{"krate":0,"index":1127},"children":[],"decl_id":null,"docs":" Creates a new instance, automatically seeded with fresh entropy.","sig":null,"attributes":[{"value":"/ Creates a new instance, automatically seeded with fresh entropy.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31883,"byte_end":31951,"line_start":903,"line_end":903,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31956,"byte_end":31959,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ Normally this will use `OsRng`, but if that fails `JitterRng` will be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31964,"byte_end":32037,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ used instead. Both should be suitable for cryptography. It is possible","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32042,"byte_end":32116,"line_start":906,"line_end":906,"column_start":5,"column_end":79}},{"value":"/ that both entropy sources will fail though unlikely; failures would","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32121,"byte_end":32192,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ almost certainly be platform limitations or build issues, i.e. most","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32197,"byte_end":32268,"line_start":908,"line_end":908,"column_start":5,"column_end":76}},{"value":"/ applications targetting PC/mobile platforms should not need to worry","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32273,"byte_end":32345,"line_start":909,"line_end":909,"column_start":5,"column_end":77}},{"value":"/ about this failing.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32350,"byte_end":32373,"line_start":910,"line_end":910,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32378,"byte_end":32381,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32386,"byte_end":32398,"line_start":912,"line_end":912,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32403,"byte_end":32406,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ If all entropy sources fail this will panic. If you need to handle","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32411,"byte_end":32481,"line_start":914,"line_end":914,"column_start":5,"column_end":75}},{"value":"/ errors, use the following code, equivalent aside from error handling:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32486,"byte_end":32559,"line_start":915,"line_end":915,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32564,"byte_end":32567,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32572,"byte_end":32579,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ # use rand::Error;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32584,"byte_end":32606,"line_start":918,"line_end":918,"column_start":5,"column_end":27}},{"value":"/ use rand::prelude::*;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32611,"byte_end":32636,"line_start":919,"line_end":919,"column_start":5,"column_end":30}},{"value":"/ use rand::rngs::EntropyRng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32641,"byte_end":32672,"line_start":920,"line_end":920,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32677,"byte_end":32680,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # fn try_inner() -> Result<(), Error> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32685,"byte_end":32728,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ // This uses StdRng, but is valid for any R: SeedableRng","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32733,"byte_end":32793,"line_start":923,"line_end":923,"column_start":5,"column_end":65}},{"value":"/ let mut rng = StdRng::from_rng(EntropyRng::new())?;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32798,"byte_end":32853,"line_start":924,"line_end":924,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32858,"byte_end":32861,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ println!(\"random number: {}\", rng.gen_range(1, 10));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32866,"byte_end":32922,"line_start":926,"line_end":926,"column_start":5,"column_end":61}},{"value":"/ # Ok(())","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32927,"byte_end":32939,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32944,"byte_end":32951,"line_start":928,"line_end":928,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32956,"byte_end":32959,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ # try_inner().unwrap()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32964,"byte_end":32990,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":32995,"byte_end":33002,"line_start":931,"line_end":931,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1133},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33873,"byte_end":33881,"line_start":958,"line_end":958,"column_start":8,"column_end":16},"name":"weak_rng","qualname":"::weak_rng","value":"fn () -> XorShiftRng","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use [`SmallRng`] instead.","sig":null,"attributes":[{"value":"/ DEPRECATED: use [`SmallRng`] instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33266,"byte_end":33307,"line_start":944,"line_end":944,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33308,"byte_end":33311,"line_start":945,"line_end":945,"column_start":1,"column_end":4}},{"value":"/ Create a weak random number generator with a default algorithm and seed.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33312,"byte_end":33388,"line_start":946,"line_end":946,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33389,"byte_end":33392,"line_start":947,"line_end":947,"column_start":1,"column_end":4}},{"value":"/ It returns the fastest `Rng` algorithm currently available in Rust without","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33393,"byte_end":33471,"line_start":948,"line_end":948,"column_start":1,"column_end":79}},{"value":"/ consideration for cryptography or security. If you require a specifically","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33472,"byte_end":33549,"line_start":949,"line_end":949,"column_start":1,"column_end":78}},{"value":"/ seeded `Rng` for consistency over time you should pick one algorithm and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33550,"byte_end":33626,"line_start":950,"line_end":950,"column_start":1,"column_end":77}},{"value":"/ create the `Rng` yourself.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33627,"byte_end":33657,"line_start":951,"line_end":951,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33658,"byte_end":33661,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ This will seed the generator with randomness from `thread_rng`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33662,"byte_end":33729,"line_start":953,"line_end":953,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33730,"byte_end":33733,"line_start":954,"line_end":954,"column_start":1,"column_end":4}},{"value":"/ [`SmallRng`]: rngs/struct.SmallRng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33734,"byte_end":33777,"line_start":955,"line_end":955,"column_start":1,"column_end":44}},{"value":"deprecated(since = \"0.5.0\", note = \"removed in favor of SmallRng\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33778,"byte_end":33843,"line_start":956,"line_end":956,"column_start":1,"column_end":66}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33844,"byte_end":33865,"line_start":957,"line_end":957,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":1135},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35144,"byte_end":35150,"line_start":1009,"line_end":1009,"column_start":8,"column_end":14},"name":"random","qualname":"::random","value":"fn <T> () -> T","parent":null,"children":[],"decl_id":null,"docs":" Generates a random value using the thread-local random number generator.","sig":null,"attributes":[{"value":"/ Generates a random value using the thread-local random number generator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34011,"byte_end":34087,"line_start":963,"line_end":963,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34088,"byte_end":34091,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ This is simply a shortcut for `thread_rng().gen()`. See [`thread_rng`] for","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34092,"byte_end":34170,"line_start":965,"line_end":965,"column_start":1,"column_end":79}},{"value":"/ documentation of the entropy source and [`Standard`] for documentation of","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34171,"byte_end":34248,"line_start":966,"line_end":966,"column_start":1,"column_end":78}},{"value":"/ distributions and type-specific generation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34249,"byte_end":34296,"line_start":967,"line_end":967,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34297,"byte_end":34300,"line_start":968,"line_end":968,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34301,"byte_end":34315,"line_start":969,"line_end":969,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34316,"byte_end":34319,"line_start":970,"line_end":970,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34320,"byte_end":34327,"line_start":971,"line_end":971,"column_start":1,"column_end":8}},{"value":"/ let x = rand::random::<u8>();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34328,"byte_end":34361,"line_start":972,"line_end":972,"column_start":1,"column_end":34}},{"value":"/ println!(\"{}\", x);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34362,"byte_end":34384,"line_start":973,"line_end":973,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34385,"byte_end":34388,"line_start":974,"line_end":974,"column_start":1,"column_end":4}},{"value":"/ let y = rand::random::<f64>();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34389,"byte_end":34423,"line_start":975,"line_end":975,"column_start":1,"column_end":35}},{"value":"/ println!(\"{}\", y);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34424,"byte_end":34446,"line_start":976,"line_end":976,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34447,"byte_end":34450,"line_start":977,"line_end":977,"column_start":1,"column_end":4}},{"value":"/ if rand::random() { // generates a boolean","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34451,"byte_end":34497,"line_start":978,"line_end":978,"column_start":1,"column_end":47}},{"value":"/     println!(\"Better lucky than good!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34498,"byte_end":34542,"line_start":979,"line_end":979,"column_start":1,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34543,"byte_end":34548,"line_start":980,"line_end":980,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34549,"byte_end":34556,"line_start":981,"line_end":981,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34557,"byte_end":34560,"line_start":982,"line_end":982,"column_start":1,"column_end":4}},{"value":"/ If you're calling `random()` in a loop, caching the generator as in the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34561,"byte_end":34636,"line_start":983,"line_end":983,"column_start":1,"column_end":76}},{"value":"/ following example can increase performance.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34637,"byte_end":34684,"line_start":984,"line_end":984,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34685,"byte_end":34688,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34689,"byte_end":34696,"line_start":986,"line_end":986,"column_start":1,"column_end":8}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34697,"byte_end":34724,"line_start":987,"line_end":987,"column_start":1,"column_end":28}},{"value":"/ use rand::Rng;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34725,"byte_end":34743,"line_start":988,"line_end":988,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34744,"byte_end":34747,"line_start":989,"line_end":989,"column_start":1,"column_end":4}},{"value":"/ let mut v = vec![1, 2, 3];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34748,"byte_end":34778,"line_start":990,"line_end":990,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34779,"byte_end":34782,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ for x in v.iter_mut() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34783,"byte_end":34810,"line_start":992,"line_end":992,"column_start":1,"column_end":28}},{"value":"/     *x = rand::random()","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34811,"byte_end":34838,"line_start":993,"line_end":993,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34839,"byte_end":34844,"line_start":994,"line_end":994,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34845,"byte_end":34848,"line_start":995,"line_end":995,"column_start":1,"column_end":4}},{"value":"/ // can be made faster by caching thread_rng","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34849,"byte_end":34896,"line_start":996,"line_end":996,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34897,"byte_end":34900,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34901,"byte_end":34938,"line_start":998,"line_end":998,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34939,"byte_end":34942,"line_start":999,"line_end":999,"column_start":1,"column_end":4}},{"value":"/ for x in v.iter_mut() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34943,"byte_end":34970,"line_start":1000,"line_end":1000,"column_start":1,"column_end":28}},{"value":"/     *x = rng.gen();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34971,"byte_end":34994,"line_start":1001,"line_end":1001,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":34995,"byte_end":35000,"line_start":1002,"line_end":1002,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35001,"byte_end":35008,"line_start":1003,"line_end":1003,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35009,"byte_end":35012,"line_start":1004,"line_end":1004,"column_start":1,"column_end":4}},{"value":"/ [`thread_rng`]: fn.thread_rng.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35013,"byte_end":35051,"line_start":1005,"line_end":1005,"column_start":1,"column_end":39}},{"value":"/ [`Standard`]: distributions/struct.Standard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35052,"byte_end":35104,"line_start":1006,"line_end":1006,"column_start":1,"column_end":53}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35105,"byte_end":35126,"line_start":1007,"line_end":1007,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35127,"byte_end":35136,"line_start":1008,"line_end":1008,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1137},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35714,"byte_end":35720,"line_start":1031,"line_end":1031,"column_start":8,"column_end":14},"name":"sample","qualname":"::sample","value":"fn <T, I, R> (rng: &mut R, iterable: I, amount: usize) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" DEPRECATED: use `seq::sample_iter` instead.","sig":null,"attributes":[{"value":"/ DEPRECATED: use `seq::sample_iter` instead.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35221,"byte_end":35268,"line_start":1013,"line_end":1013,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35269,"byte_end":35272,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ Randomly sample up to `amount` elements from a finite iterator.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35273,"byte_end":35340,"line_start":1015,"line_end":1015,"column_start":1,"column_end":68}},{"value":"/ The order of elements in the sample is not random.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35341,"byte_end":35395,"line_start":1016,"line_end":1016,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35396,"byte_end":35399,"line_start":1017,"line_end":1017,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35400,"byte_end":35413,"line_start":1018,"line_end":1018,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35414,"byte_end":35417,"line_start":1019,"line_end":1019,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35418,"byte_end":35425,"line_start":1020,"line_end":1020,"column_start":1,"column_end":8}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35426,"byte_end":35453,"line_start":1021,"line_end":1021,"column_start":1,"column_end":28}},{"value":"/ use rand::{thread_rng, sample};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35454,"byte_end":35489,"line_start":1022,"line_end":1022,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35490,"byte_end":35493,"line_start":1023,"line_end":1023,"column_start":1,"column_end":4}},{"value":"/ let mut rng = thread_rng();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35494,"byte_end":35525,"line_start":1024,"line_end":1024,"column_start":1,"column_end":32}},{"value":"/ let sample = sample(&mut rng, 1..100, 5);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35526,"byte_end":35571,"line_start":1025,"line_end":1025,"column_start":1,"column_end":46}},{"value":"/ println!(\"{:?}\", sample);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35572,"byte_end":35601,"line_start":1026,"line_end":1026,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35602,"byte_end":35609,"line_start":1027,"line_end":1027,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35610,"byte_end":35631,"line_start":1028,"line_end":1028,"column_start":1,"column_end":22}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35632,"byte_end":35641,"line_start":1029,"line_end":1029,"column_start":1,"column_end":10}},{"value":"deprecated(since = \"0.4.0\", note = \"renamed to seq::sample_iter\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":35642,"byte_end":35706,"line_start":1030,"line_end":1030,"column_start":1,"column_end":65}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77062,"byte_end":77069,"line_start":155,"line_end":155,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77659,"byte_end":77666,"line_start":169,"line_end":169,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80334,"byte_end":80341,"line_start":240,"line_end":240,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94770,"byte_end":94778,"line_start":618,"line_end":618,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94868,"byte_end":94883,"line_start":623,"line_end":623,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":104978,"byte_end":104983,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105619,"byte_end":105634,"line_start":114,"line_end":114,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105852,"byte_end":105867,"line_start":123,"line_end":123,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":106105,"byte_end":106110,"line_start":134,"line_end":134,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":106371,"byte_end":106386,"line_start":143,"line_end":143,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":106588,"byte_end":106603,"line_start":150,"line_end":150,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108127,"byte_end":108137,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108554,"byte_end":108564,"line_start":215,"line_end":215,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109556,"byte_end":109563,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110030,"byte_end":110037,"line_start":266,"line_end":266,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110587,"byte_end":110595,"line_start":290,"line_end":290,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110920,"byte_end":110928,"line_start":301,"line_end":301,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113711,"byte_end":113725,"line_start":40,"line_end":40,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115375,"byte_end":115381,"line_start":96,"line_end":96,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115788,"byte_end":115794,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116475,"byte_end":116484,"line_start":140,"line_end":140,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116890,"byte_end":116899,"line_start":153,"line_end":153,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119311,"byte_end":119315,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120320,"byte_end":120323,"line_start":82,"line_end":82,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120631,"byte_end":120634,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122192,"byte_end":122198,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122688,"byte_end":122694,"line_start":47,"line_end":47,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124492,"byte_end":124499,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":125028,"byte_end":125035,"line_start":57,"line_end":57,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129666,"byte_end":129674,"line_start":39,"line_end":39,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":130086,"byte_end":130094,"line_start":51,"line_end":51,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135693,"byte_end":135702,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136924,"byte_end":136933,"line_start":72,"line_end":72,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139296,"byte_end":139302,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139695,"byte_end":139701,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":149988,"byte_end":149996,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150137,"byte_end":150145,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150288,"byte_end":150296,"line_start":30,"line_end":30,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150432,"byte_end":150440,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150905,"byte_end":150913,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155637,"byte_end":155645,"line_start":44,"line_end":44,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":156090,"byte_end":156102,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":156892,"byte_end":156900,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":158081,"byte_end":158089,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":159324,"byte_end":159332,"line_start":153,"line_end":153,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":159676,"byte_end":159684,"line_start":165,"line_end":165,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51902,"byte_end":51916,"line_start":259,"line_end":259,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":52091,"byte_end":52105,"line_start":264,"line_end":264,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":52276,"byte_end":52281,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":52454,"byte_end":52459,"line_start":275,"line_end":275,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55853,"byte_end":55861,"line_start":376,"line_end":376,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58966,"byte_end":58967,"line_start":453,"line_end":453,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60403,"byte_end":60417,"line_start":499,"line_end":499,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":61815,"byte_end":61829,"line_start":536,"line_end":536,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206450,"byte_end":206459,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206882,"byte_end":206891,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207207,"byte_end":207216,"line_start":107,"line_end":107,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207226,"byte_end":207235,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":211372,"byte_end":211382,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":212433,"byte_end":212443,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":213313,"byte_end":213323,"line_start":274,"line_end":274,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":213833,"byte_end":213843,"line_start":289,"line_end":289,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":213874,"byte_end":213883,"line_start":291,"line_end":291,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224483,"byte_end":224491,"line_start":74,"line_end":74,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224902,"byte_end":224910,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225221,"byte_end":225229,"line_start":106,"line_end":106,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225462,"byte_end":225471,"line_start":116,"line_end":116,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225600,"byte_end":225609,"line_start":122,"line_end":122,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":228426,"byte_end":228435,"line_start":174,"line_end":174,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":235136,"byte_end":235145,"line_start":322,"line_end":322,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":235601,"byte_end":235610,"line_start":335,"line_end":335,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244912,"byte_end":244920,"line_start":97,"line_end":97,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245331,"byte_end":245339,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245647,"byte_end":245655,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246706,"byte_end":246715,"line_start":159,"line_end":159,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246844,"byte_end":246853,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":250073,"byte_end":250082,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":254267,"byte_end":254276,"line_start":332,"line_end":332,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263262,"byte_end":263272,"line_start":87,"line_end":87,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263683,"byte_end":263693,"line_start":107,"line_end":107,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264015,"byte_end":264025,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":265097,"byte_end":265108,"line_start":149,"line_end":149,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":265239,"byte_end":265250,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":268494,"byte_end":268505,"line_start":233,"line_end":233,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":271177,"byte_end":271188,"line_start":296,"line_end":296,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":612},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279740,"byte_end":279751,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279865,"byte_end":279876,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280514,"byte_end":280525,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":281156,"byte_end":281167,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287111,"byte_end":287121,"line_start":34,"line_end":34,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287253,"byte_end":287263,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287398,"byte_end":287408,"line_start":48,"line_end":48,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287572,"byte_end":287582,"line_start":56,"line_end":56,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287733,"byte_end":287743,"line_start":63,"line_end":63,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301252,"byte_end":301259,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301433,"byte_end":301440,"line_start":60,"line_end":60,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306858,"byte_end":306870,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307692,"byte_end":307704,"line_start":85,"line_end":85,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":308238,"byte_end":308250,"line_start":108,"line_end":108,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":308574,"byte_end":308586,"line_start":119,"line_end":119,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":308847,"byte_end":308860,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":309585,"byte_end":309598,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":311445,"byte_end":311458,"line_start":205,"line_end":205,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":311849,"byte_end":311862,"line_start":219,"line_end":219,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315575,"byte_end":315585,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315944,"byte_end":315954,"line_start":72,"line_end":72,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":316036,"byte_end":316046,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":319163,"byte_end":319173,"line_start":165,"line_end":165,"column_start":20,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":319494,"byte_end":319502,"line_start":183,"line_end":183,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":321099,"byte_end":321101,"line_start":231,"line_end":231,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":322264,"byte_end":322270,"line_start":270,"line_end":270,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":330433,"byte_end":330440,"line_start":178,"line_end":178,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331236,"byte_end":331245,"line_start":200,"line_end":200,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331367,"byte_end":331376,"line_start":206,"line_end":206,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332345,"byte_end":332355,"line_start":239,"line_end":239,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332843,"byte_end":332853,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333019,"byte_end":333029,"line_start":259,"line_end":259,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":822}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333130,"byte_end":333135,"line_start":265,"line_end":265,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333623,"byte_end":333632,"line_start":278,"line_end":278,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":356422,"byte_end":356431,"line_start":825,"line_end":825,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":357395,"byte_end":357404,"line_start":857,"line_end":857,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359436,"byte_end":359443,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359706,"byte_end":359713,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362830,"byte_end":362838,"line_start":71,"line_end":71,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":363250,"byte_end":363258,"line_start":91,"line_end":91,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364910,"byte_end":364916,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":365328,"byte_end":365334,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":365614,"byte_end":365620,"line_start":65,"line_end":65,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370643,"byte_end":370652,"line_start":104,"line_end":104,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":371149,"byte_end":371158,"line_start":124,"line_end":124,"column_start":20,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377535,"byte_end":377540,"line_start":120,"line_end":120,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377638,"byte_end":377643,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377784,"byte_end":377789,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377811,"byte_end":377816,"line_start":135,"line_end":135,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":385061,"byte_end":385066,"line_start":344,"line_end":344,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26431,"byte_end":26432,"line_start":725,"line_end":725,"column_start":35,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29763,"byte_end":29772,"line_start":838,"line_end":838,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":860,"line_end":860,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33096,"byte_end":33097,"line_start":936,"line_end":936,"column_start":38,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11537,"byte_end":11550,"line_start":273,"line_end":273,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49828,"byte_end":49835,"line_start":192,"line_end":192,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49882,"byte_end":49887,"line_start":194,"line_end":194,"column_start":24,"column_end":29},"ref_id":{"krate":0,"index":87}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49934,"byte_end":49940,"line_start":196,"line_end":196,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":126}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":49987,"byte_end":49998,"line_start":198,"line_end":198,"column_start":24,"column_end":35},"ref_id":{"krate":0,"index":149}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50045,"byte_end":50051,"line_start":200,"line_end":200,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50100,"byte_end":50107,"line_start":202,"line_end":202,"column_start":24,"column_end":31},"ref_id":{"krate":0,"index":177}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50156,"byte_end":50164,"line_start":204,"line_end":204,"column_start":24,"column_end":32},"ref_id":{"krate":0,"index":188}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50189,"byte_end":50198,"line_start":205,"line_end":205,"column_start":24,"column_end":33},"ref_id":{"krate":0,"index":200}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":50247,"byte_end":50253,"line_start":207,"line_end":207,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":209}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11560,"byte_end":11567,"line_start":274,"line_end":274,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":387}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11577,"byte_end":11581,"line_start":275,"line_end":275,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":402}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203078,"byte_end":203084,"line_start":318,"line_end":318,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":403}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203094,"byte_end":203099,"line_start":319,"line_end":319,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":451}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203109,"byte_end":203114,"line_start":320,"line_end":320,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":496}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/mod.rs","byte_start":203124,"byte_end":203131,"line_start":321,"line_end":321,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":557}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11591,"byte_end":11595,"line_start":276,"line_end":276,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":675}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297177,"byte_end":297184,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":676}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/mod.rs","byte_start":299506,"byte_end":299510,"line_start":13,"line_end":13,"column_start":46,"column_end":50},"ref_id":{"krate":0,"index":677}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297245,"byte_end":297251,"line_start":169,"line_end":169,"column_start":24,"column_end":30},"ref_id":{"krate":0,"index":781}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mod.rs","byte_start":297261,"byte_end":297265,"line_start":170,"line_end":170,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":859}},{"kind":"Mod","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":11631,"byte_end":11634,"line_start":277,"line_end":277,"column_start":35,"column_end":38},"ref_id":{"krate":0,"index":1020}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77062,"byte_end":77069,"line_start":155,"line_end":155,"column_start":24,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":77659,"byte_end":77666,"line_start":169,"line_end":169,"column_start":44,"column_end":51},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78154,"byte_end":78159,"line_start":184,"line_end":184,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":78769,"byte_end":78774,"line_start":200,"line_end":200,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":80334,"byte_end":80341,"line_start":240,"line_end":240,"column_start":56,"column_end":63},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94770,"byte_end":94778,"line_start":618,"line_end":618,"column_start":24,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":2,"index":32309},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/uniform.rs","byte_start":94868,"byte_end":94883,"line_start":623,"line_end":623,"column_start":25,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1314},"to":{"krate":0,"index":58}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":104978,"byte_end":104983,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105619,"byte_end":105634,"line_start":114,"line_end":114,"column_start":6,"column_end":21},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":105852,"byte_end":105867,"line_start":123,"line_end":123,"column_start":6,"column_end":21},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":106105,"byte_end":106110,"line_start":134,"line_end":134,"column_start":28,"column_end":33},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1333},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":106371,"byte_end":106386,"line_start":143,"line_end":143,"column_start":28,"column_end":43},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1355},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":106588,"byte_end":106603,"line_start":150,"line_end":150,"column_start":28,"column_end":43},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1363},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108127,"byte_end":108137,"line_start":202,"line_end":202,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":108554,"byte_end":108564,"line_start":215,"line_end":215,"column_start":28,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1372},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":109556,"byte_end":109563,"line_start":252,"line_end":252,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110030,"byte_end":110037,"line_start":266,"line_end":266,"column_start":28,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1390},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110587,"byte_end":110595,"line_start":290,"line_end":290,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/gamma.rs","byte_start":110920,"byte_end":110928,"line_start":301,"line_end":301,"column_start":28,"column_end":36},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1399},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":113711,"byte_end":113725,"line_start":40,"line_end":40,"column_start":28,"column_end":42},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1407},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115375,"byte_end":115381,"line_start":96,"line_end":96,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":115788,"byte_end":115794,"line_start":112,"line_end":112,"column_start":28,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1414},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116475,"byte_end":116484,"line_start":140,"line_end":140,"column_start":6,"column_end":15},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/normal.rs","byte_start":116890,"byte_end":116899,"line_start":153,"line_end":153,"column_start":28,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1422},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":119311,"byte_end":119315,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1429},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120320,"byte_end":120323,"line_start":82,"line_end":82,"column_start":6,"column_end":9},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/exponential.rs","byte_start":120631,"byte_end":120634,"line_start":92,"line_end":92,"column_start":28,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1436},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122192,"byte_end":122198,"line_start":32,"line_end":32,"column_start":6,"column_end":12},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/pareto.rs","byte_start":122688,"byte_end":122694,"line_start":47,"line_end":47,"column_start":28,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1443},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":124492,"byte_end":124499,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/poisson.rs","byte_start":125028,"byte_end":125035,"line_start":57,"line_end":57,"column_start":28,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1451},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":129666,"byte_end":129674,"line_start":39,"line_end":39,"column_start":6,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/binomial.rs","byte_start":130086,"byte_end":130094,"line_start":51,"line_end":51,"column_start":28,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1462},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":135693,"byte_end":135702,"line_start":40,"line_end":40,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/bernoulli.rs","byte_start":136924,"byte_end":136933,"line_start":72,"line_end":72,"column_start":29,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1470},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139296,"byte_end":139302,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/cauchy.rs","byte_start":139695,"byte_end":139701,"line_start":50,"line_end":50,"column_start":28,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1477},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":149988,"byte_end":149996,"line_start":16,"line_end":16,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150137,"byte_end":150145,"line_start":23,"line_end":23,"column_start":28,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150288,"byte_end":150296,"line_start":30,"line_end":30,"column_start":28,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150432,"byte_end":150440,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/integer.rs","byte_start":150905,"byte_end":150913,"line_start":55,"line_end":55,"column_start":30,"column_end":38},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":155637,"byte_end":155645,"line_start":44,"line_end":44,"column_start":29,"column_end":37},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":156090,"byte_end":156102,"line_start":59,"line_end":59,"column_start":29,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1540},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":156892,"byte_end":156900,"line_start":79,"line_end":79,"column_start":29,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":158081,"byte_end":158089,"line_start":114,"line_end":114,"column_start":27,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":159324,"byte_end":159332,"line_start":153,"line_end":153,"column_start":37,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/other.rs","byte_start":159676,"byte_end":159684,"line_start":165,"line_end":165,"column_start":39,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1912},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51070,"byte_end":51076,"line_start":234,"line_end":234,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":300},"to":{"krate":0,"index":304}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":51902,"byte_end":51916,"line_start":259,"line_end":259,"column_start":38,"column_end":52},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":52091,"byte_end":52105,"line_start":264,"line_end":264,"column_start":49,"column_end":63},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":304}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":52276,"byte_end":52281,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":300}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":52454,"byte_end":52459,"line_start":275,"line_end":275,"column_start":51,"column_end":56},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1142},"to":{"krate":0,"index":304}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":55853,"byte_end":55861,"line_start":376,"line_end":376,"column_start":32,"column_end":40},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1898},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":58966,"byte_end":58967,"line_start":453,"line_end":453,"column_start":20,"column_end":21},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":1075}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":60403,"byte_end":60417,"line_start":499,"line_end":499,"column_start":20,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/distributions/mod.rs","byte_start":61815,"byte_end":61829,"line_start":536,"line_end":536,"column_start":40,"column_end":54},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1931},"to":{"krate":0,"index":349}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206450,"byte_end":206459,"line_start":73,"line_end":73,"column_start":18,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1940},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":206882,"byte_end":206891,"line_start":95,"line_end":95,"column_start":22,"column_end":31},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1940},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207207,"byte_end":207216,"line_start":107,"line_end":107,"column_start":20,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1940},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":207226,"byte_end":207235,"line_start":109,"line_end":109,"column_start":6,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":211372,"byte_end":211382,"line_start":215,"line_end":215,"column_start":21,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1947},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":212433,"byte_end":212443,"line_start":245,"line_end":245,"column_start":23,"column_end":33},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1947},"to":{"krate":16,"index":43}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":213313,"byte_end":213323,"line_start":274,"line_end":274,"column_start":22,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1947},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":213833,"byte_end":213843,"line_start":289,"line_end":289,"column_start":20,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1947},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/chacha.rs","byte_start":213874,"byte_end":213883,"line_start":291,"line_end":291,"column_start":27,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1940},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224483,"byte_end":224491,"line_start":74,"line_end":74,"column_start":18,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1952},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":224902,"byte_end":224910,"line_start":94,"line_end":94,"column_start":22,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1952},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225221,"byte_end":225229,"line_start":106,"line_end":106,"column_start":20,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1952},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225462,"byte_end":225471,"line_start":116,"line_end":116,"column_start":21,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1959},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":225600,"byte_end":225609,"line_start":122,"line_end":122,"column_start":23,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1959},"to":{"krate":16,"index":43}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":228426,"byte_end":228435,"line_start":174,"line_end":174,"column_start":6,"column_end":15},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":235136,"byte_end":235145,"line_start":322,"line_end":322,"column_start":22,"column_end":31},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1959},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/hc128.rs","byte_start":235601,"byte_end":235610,"line_start":335,"line_end":335,"column_start":20,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1959},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":244912,"byte_end":244920,"line_start":97,"line_end":97,"column_start":18,"column_end":26},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1965},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245331,"byte_end":245339,"line_start":117,"line_end":117,"column_start":22,"column_end":30},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1965},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":245647,"byte_end":245655,"line_start":129,"line_end":129,"column_start":6,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246706,"byte_end":246715,"line_start":159,"line_end":159,"column_start":21,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1972},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":246844,"byte_end":246853,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1972},"to":{"krate":16,"index":43}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":250073,"byte_end":250082,"line_start":243,"line_end":243,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac.rs","byte_start":254267,"byte_end":254276,"line_start":332,"line_end":332,"column_start":22,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1972},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263262,"byte_end":263272,"line_start":87,"line_end":87,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1980},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":263683,"byte_end":263693,"line_start":107,"line_end":107,"column_start":22,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1980},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":264015,"byte_end":264025,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":265097,"byte_end":265108,"line_start":149,"line_end":149,"column_start":21,"column_end":32},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1987},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":265239,"byte_end":265250,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1987},"to":{"krate":16,"index":43}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":268494,"byte_end":268505,"line_start":233,"line_end":233,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac64.rs","byte_start":271177,"byte_end":271188,"line_start":296,"line_end":296,"column_start":22,"column_end":33},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1987},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279740,"byte_end":279751,"line_start":36,"line_end":36,"column_start":21,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1995},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":279865,"byte_end":279876,"line_start":42,"line_end":42,"column_start":6,"column_end":17},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":280514,"byte_end":280525,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1995},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/xorshift.rs","byte_start":281156,"byte_end":281167,"line_start":88,"line_end":88,"column_start":22,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1995},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287111,"byte_end":287121,"line_start":34,"line_end":34,"column_start":41,"column_end":51},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287253,"byte_end":287263,"line_start":41,"line_end":41,"column_start":41,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287398,"byte_end":287408,"line_start":48,"line_end":48,"column_start":32,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287572,"byte_end":287582,"line_start":56,"line_end":56,"column_start":35,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/prng/isaac_array.rs","byte_start":287733,"byte_end":287743,"line_start":63,"line_end":63,"column_start":38,"column_end":48},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2002},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301252,"byte_end":301259,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/read.rs","byte_start":301433,"byte_end":301440,"line_start":60,"line_end":60,"column_start":27,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2011},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":306858,"byte_end":306870,"line_start":62,"line_end":62,"column_start":15,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":307692,"byte_end":307704,"line_start":85,"line_end":85,"column_start":36,"column_end":48},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2017},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":308238,"byte_end":308250,"line_start":108,"line_end":108,"column_start":25,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2017},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":308574,"byte_end":308586,"line_start":119,"line_end":119,"column_start":29,"column_end":41},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2017},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":308847,"byte_end":308860,"line_start":131,"line_end":131,"column_start":32,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2026},"to":{"krate":16,"index":43}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":309585,"byte_end":309598,"line_start":151,"line_end":151,"column_start":15,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":311445,"byte_end":311458,"line_start":205,"line_end":205,"column_start":25,"column_end":38},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2026},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/adapter/reseeding.rs","byte_start":311849,"byte_end":311862,"line_start":219,"line_end":219,"column_start":29,"column_end":42},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2026},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315575,"byte_end":315585,"line_start":61,"line_end":61,"column_start":6,"column_end":16},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":315944,"byte_end":315954,"line_start":72,"line_end":72,"column_start":18,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2037},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":316036,"byte_end":316046,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2037},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":319163,"byte_end":319173,"line_start":165,"line_end":165,"column_start":20,"column_end":30},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2037},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":319494,"byte_end":319502,"line_start":183,"line_end":183,"column_start":24,"column_end":32},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2055},"to":{"krate":0,"index":766}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":321099,"byte_end":321101,"line_start":231,"line_end":231,"column_start":24,"column_end":26},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2061},"to":{"krate":0,"index":766}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/entropy.rs","byte_start":322264,"byte_end":322270,"line_start":270,"line_end":270,"column_start":24,"column_end":30},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2068},"to":{"krate":0,"index":766}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":330433,"byte_end":330440,"line_start":178,"line_end":178,"column_start":6,"column_end":13},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331236,"byte_end":331245,"line_start":200,"line_end":200,"column_start":21,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":799},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":331367,"byte_end":331376,"line_start":206,"line_end":206,"column_start":16,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":799},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332345,"byte_end":332355,"line_start":239,"line_end":239,"column_start":6,"column_end":16},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":332843,"byte_end":332853,"line_start":252,"line_end":252,"column_start":23,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2075},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333019,"byte_end":333029,"line_start":259,"line_end":259,"column_start":30,"column_end":40},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2075},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333130,"byte_end":333135,"line_start":265,"line_end":265,"column_start":27,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":16,"index":177},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":333623,"byte_end":333632,"line_start":278,"line_end":278,"column_start":6,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":356422,"byte_end":356431,"line_start":825,"line_end":825,"column_start":18,"column_end":27},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":799},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/jitter.rs","byte_start":357395,"byte_end":357404,"line_start":857,"line_end":857,"column_start":20,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":799},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359436,"byte_end":359443,"line_start":35,"line_end":35,"column_start":6,"column_end":13},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2098},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/mock.rs","byte_start":359706,"byte_end":359713,"line_start":43,"line_end":43,"column_start":18,"column_end":25},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2098},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":362830,"byte_end":362838,"line_start":71,"line_end":71,"column_start":18,"column_end":26},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2105},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/small.rs","byte_start":363250,"byte_end":363258,"line_start":91,"line_end":91,"column_start":22,"column_end":30},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2105},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":364910,"byte_end":364916,"line_start":33,"line_end":33,"column_start":18,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2112},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":365328,"byte_end":365334,"line_start":53,"line_end":53,"column_start":22,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2112},"to":{"krate":16,"index":127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/std.rs","byte_start":365614,"byte_end":365620,"line_start":65,"line_end":65,"column_start":20,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2112},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":370643,"byte_end":370652,"line_start":104,"line_end":104,"column_start":18,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2119},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/thread.rs","byte_start":371149,"byte_end":371158,"line_start":124,"line_end":124,"column_start":20,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2119},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377535,"byte_end":377540,"line_start":120,"line_end":120,"column_start":21,"column_end":26},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2130},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377638,"byte_end":377643,"line_start":126,"line_end":126,"column_start":6,"column_end":11},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377784,"byte_end":377789,"line_start":133,"line_end":133,"column_start":20,"column_end":25},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2130},"to":{"krate":16,"index":126}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":377811,"byte_end":377816,"line_start":135,"line_end":135,"column_start":18,"column_end":23},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2130},"to":{"krate":16,"index":121}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/rngs/os.rs","byte_start":385061,"byte_end":385066,"line_start":344,"line_end":344,"column_start":24,"column_end":29},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2135},"to":{"krate":0,"index":956}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":14483,"byte_end":14488,"line_start":368,"line_end":368,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1075}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":16217,"byte_end":16224,"line_start":413,"line_end":413,"column_start":16,"column_end":23},"kind":"SuperTrait","from":{"krate":16,"index":121},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":26431,"byte_end":26432,"line_start":725,"line_end":725,"column_start":35,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1108},"to":{"krate":0,"index":1078}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":29763,"byte_end":29772,"line_start":838,"line_end":838,"column_start":34,"column_end":43},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2378},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":30376,"byte_end":30390,"line_start":860,"line_end":860,"column_start":31,"column_end":45},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2387},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":31865,"byte_end":31876,"line_start":902,"line_end":902,"column_start":24,"column_end":35},"kind":"SuperTrait","from":{"krate":16,"index":127},"to":{"krate":0,"index":1127}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/rand-0.5.5/src/lib.rs","byte_start":33096,"byte_end":33097,"line_start":936,"line_end":936,"column_start":38,"column_end":39},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1130},"to":{"krate":0,"index":1127}}]}