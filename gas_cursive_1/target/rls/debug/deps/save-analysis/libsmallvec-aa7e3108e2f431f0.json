{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5","program":"/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","smallvec","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=aa7e3108e2f431f0","-C","extra-filename=-aa7e3108e2f431f0","--out-dir","/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","--extern","unreachable=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libunreachable-c32bb0bb98afc7b5.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libsmallvec-aa7e3108e2f431f0.rmeta"},"prelude":{"crate_id":{"name":"smallvec","disambiguator":[6062515022335757656,14667170738313882331]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":15,"id":{"name":"unreachable","disambiguator":[15718493366018263193,18347556500326701204]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","num":16,"id":{"name":"void","disambiguator":[8308233586780780350,8472106470453304101]}}],"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":301,"byte_end":64915,"line_start":7,"line_end":2179,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":301,"byte_end":64915,"line_start":7,"line_end":2179,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":50},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":70},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":174},{"krate":0,"index":272},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":290},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":304},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":243},{"krate":0,"index":249},{"krate":0,"index":255},{"krate":0,"index":260},{"krate":0,"index":264},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":307},{"krate":0,"index":314},{"krate":0,"index":321},{"krate":0,"index":328},{"krate":0,"index":335},{"krate":0,"index":342},{"krate":0,"index":349},{"krate":0,"index":356},{"krate":0,"index":363},{"krate":0,"index":370},{"krate":0,"index":377},{"krate":0,"index":384},{"krate":0,"index":391},{"krate":0,"index":398},{"krate":0,"index":405},{"krate":0,"index":412},{"krate":0,"index":419},{"krate":0,"index":426},{"krate":0,"index":433},{"krate":0,"index":440},{"krate":0,"index":447},{"krate":0,"index":454},{"krate":0,"index":461},{"krate":0,"index":468},{"krate":0,"index":475},{"krate":0,"index":482},{"krate":0,"index":489},{"krate":0,"index":496},{"krate":0,"index":503},{"krate":0,"index":510},{"krate":0,"index":517},{"krate":0,"index":524},{"krate":0,"index":531},{"krate":0,"index":538},{"krate":0,"index":545},{"krate":0,"index":552}],"decl_id":null,"docs":" Small vectors in various sizes. These store a certain number of elements inline, and fall back\n to the heap for larger allocations.  This can be a useful optimization for improving cache\n locality and reducing allocator traffic for workloads that fit within the inline buffer.","sig":null,"attributes":[{"value":"! Small vectors in various sizes. These store a certain number of elements inline, and fall back","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":301,"byte_end":399,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"! to the heap for larger allocations.  This can be a useful optimization for improving cache","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":400,"byte_end":494,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"! locality and reducing allocator traffic for workloads that fit within the inline buffer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":495,"byte_end":587,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":588,"byte_end":591,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! ## no_std support","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":592,"byte_end":613,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":614,"byte_end":617,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! By default, `smallvec` depends on `libstd`. However, it can be configured to use the unstable","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":618,"byte_end":715,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"! `liballoc` API instead, for use on platforms that have `liballoc` but not `libstd`.  This","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":716,"byte_end":809,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"! configuration is currently unstable and is not guaranteed to work on all versions of Rust.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":810,"byte_end":904,"line_start":15,"line_end":15,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":905,"byte_end":908,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! To depend on `smallvec` without `libstd`, use `default-features = false` in the `smallvec`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":909,"byte_end":1003,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"! section of Cargo.toml to disable its `\"std\"` feature.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1004,"byte_end":1061,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1062,"byte_end":1065,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"! ## `union` feature","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1066,"byte_end":1088,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1089,"byte_end":1092,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! When the `union` feature is enabled `smallvec` will track its state (inline or spilled)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1093,"byte_end":1184,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"! without the use of an enum tag, reducing the size of the `smallvec` by one machine word.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1185,"byte_end":1277,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"! This means that there is potentially no space overhead compared to `Vec`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1278,"byte_end":1355,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"! Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1356,"byte_end":1451,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"! machine words.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1452,"byte_end":1470,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1471,"byte_end":1474,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! To use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1475,"byte_end":1566,"line_start":28,"line_end":28,"column_start":1,"column_end":92}},{"value":"! Note that this feature requires a nightly compiler (for now).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1567,"byte_end":1632,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"deny(missing_docs)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":1786,"byte_end":1808,"line_start":34,"line_end":34,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5365,"byte_end":5372,"line_start":168,"line_end":168,"column_start":11,"column_end":18},"name":"VecLike","qualname":"::VecLike","value":"VecLike<T>: ops::Index<usize, Output = T> + ops::IndexMut<usize> +\nops::Index<ops::Range<usize>, Output = [T]> +\nops::IndexMut<ops::Range<usize>> +\nops::Index<ops::RangeFrom<usize>, Output = [T]> +\nops::IndexMut<ops::RangeFrom<usize>> +\nops::Index<ops::RangeTo<usize>, Output = [T]> +\nops::IndexMut<ops::RangeTo<usize>> +\nops::Index<ops::RangeFull, Output = [T]> + ops::IndexMut<ops::RangeFull> +\nops::DerefMut<Target = [T]> + Extend<T>","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":" Common operations implemented by both `Vec` and `SmallVec`.","sig":null,"attributes":[{"value":"/ Common operations implemented by both `Vec` and `SmallVec`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4795,"byte_end":4858,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4859,"byte_end":4862,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This can be used to write generic code that works with both `Vec` and `SmallVec`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4863,"byte_end":4948,"line_start":148,"line_end":148,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4949,"byte_end":4952,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4953,"byte_end":4967,"line_start":150,"line_end":150,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4968,"byte_end":4971,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4972,"byte_end":4983,"line_start":152,"line_end":152,"column_start":1,"column_end":12}},{"value":"/ use smallvec::{VecLike, SmallVec};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":4984,"byte_end":5022,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5023,"byte_end":5026,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ fn initialize<V: VecLike<u8>>(v: &mut V) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5027,"byte_end":5073,"line_start":155,"line_end":155,"column_start":1,"column_end":47}},{"value":"/     for i in 0..5 {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5074,"byte_end":5097,"line_start":156,"line_end":156,"column_start":1,"column_end":24}},{"value":"/         v.push(i);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5098,"byte_end":5120,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5121,"byte_end":5130,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5131,"byte_end":5136,"line_start":159,"line_end":159,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5137,"byte_end":5140,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ let mut vec = Vec::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5141,"byte_end":5170,"line_start":161,"line_end":161,"column_start":1,"column_end":30}},{"value":"/ initialize(&mut vec);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5171,"byte_end":5196,"line_start":162,"line_end":162,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5197,"byte_end":5200,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let mut small_vec = SmallVec::<[u8; 8]>::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5201,"byte_end":5252,"line_start":164,"line_end":164,"column_start":1,"column_end":52}},{"value":"/ initialize(&mut small_vec);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5253,"byte_end":5284,"line_start":165,"line_end":165,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5285,"byte_end":5292,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"deprecated(note = \"Use `Extend` and `Deref<[T]>` instead\")","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5293,"byte_end":5354,"line_start":167,"line_end":167,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5939,"byte_end":5943,"line_start":183,"line_end":183,"column_start":8,"column_end":12},"name":"push","qualname":"::VecLike::push","value":"fn (&mut self, value: T) -> ()","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Append an element to the vector.\n","sig":null,"attributes":[{"value":"/ Append an element to the vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5895,"byte_end":5931,"line_start":182,"line_end":182,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":31},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6620,"byte_end":6635,"line_start":213,"line_end":213,"column_start":11,"column_end":26},"name":"ExtendFromSlice","qualname":"::ExtendFromSlice","value":"ExtendFromSlice<T>","parent":null,"children":[{"krate":0,"index":33}],"decl_id":null,"docs":" Trait to be implemented by a collection that can be extended from a slice","sig":null,"attributes":[{"value":"/ Trait to be implemented by a collection that can be extended from a slice","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6112,"byte_end":6189,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6190,"byte_end":6193,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6194,"byte_end":6208,"line_start":196,"line_end":196,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6209,"byte_end":6212,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6213,"byte_end":6224,"line_start":198,"line_end":198,"column_start":1,"column_end":12}},{"value":"/ use smallvec::{ExtendFromSlice, SmallVec};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6225,"byte_end":6271,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6272,"byte_end":6275,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ fn initialize<V: ExtendFromSlice<u8>>(v: &mut V) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6276,"byte_end":6330,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/     v.extend_from_slice(b\"Test!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6331,"byte_end":6369,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6370,"byte_end":6375,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6376,"byte_end":6379,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ let mut vec = Vec::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6380,"byte_end":6409,"line_start":205,"line_end":205,"column_start":1,"column_end":30}},{"value":"/ initialize(&mut vec);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6410,"byte_end":6435,"line_start":206,"line_end":206,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(&vec, b\"Test!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6436,"byte_end":6467,"line_start":207,"line_end":207,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6468,"byte_end":6471,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ let mut small_vec = SmallVec::<[u8; 8]>::new();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6472,"byte_end":6523,"line_start":209,"line_end":209,"column_start":1,"column_end":52}},{"value":"/ initialize(&mut small_vec);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6524,"byte_end":6555,"line_start":210,"line_end":210,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(&small_vec as &[_], b\"Test!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6556,"byte_end":6601,"line_start":211,"line_end":211,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6602,"byte_end":6609,"line_start":212,"line_end":212,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6710,"byte_end":6727,"line_start":215,"line_end":215,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"::ExtendFromSlice::extend_from_slice","value":"fn (&mut self, other: &[T]) -> ()","parent":{"krate":0,"index":31},"children":[],"decl_id":null,"docs":" Extends a collection from a slice of its element type\n","sig":null,"attributes":[{"value":"/ Extends a collection from a slice of its element type","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6645,"byte_end":6702,"line_start":214,"line_end":214,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":39},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7235,"byte_end":7240,"line_start":234,"line_end":234,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":42}],"decl_id":null,"docs":" An iterator that removes the items from a `SmallVec` and yields them by value.","sig":null,"attributes":[{"value":"/ An iterator that removes the items from a `SmallVec` and yields them by value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7048,"byte_end":7130,"line_start":229,"line_end":229,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7131,"byte_end":7134,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::drain`][1].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7135,"byte_end":7176,"line_start":231,"line_end":231,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7177,"byte_end":7180,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.drain","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7181,"byte_end":7223,"line_start":233,"line_end":233,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11483,"byte_end":11491,"line_start":387,"line_end":387,"column_start":12,"column_end":20},"name":"SmallVec","qualname":"::SmallVec","value":"SmallVec {  }","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"decl_id":null,"docs":" A `Vec`-like container that can store a small number of elements inline.","sig":null,"attributes":[{"value":"/ A `Vec`-like container that can store a small number of elements inline.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10390,"byte_end":10466,"line_start":361,"line_end":361,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10467,"byte_end":10470,"line_start":362,"line_end":362,"column_start":1,"column_end":4}},{"value":"/ `SmallVec` acts like a vector, but can store a limited amount of data inline within the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10471,"byte_end":10562,"line_start":363,"line_end":363,"column_start":1,"column_end":92}},{"value":"/ `Smallvec` struct rather than in a separate allocation.  If the data exceeds this limit, the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10563,"byte_end":10659,"line_start":364,"line_end":364,"column_start":1,"column_end":97}},{"value":"/ `SmallVec` will \"spill\" its data onto the heap, allocating a new buffer to hold it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10660,"byte_end":10747,"line_start":365,"line_end":365,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10748,"byte_end":10751,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ The amount of data that a `SmallVec` can store inline depends on its backing store. The backing","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10752,"byte_end":10851,"line_start":367,"line_end":367,"column_start":1,"column_end":100}},{"value":"/ store can be any type that implements the `Array` trait; usually it is a small fixed-sized","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10852,"byte_end":10946,"line_start":368,"line_end":368,"column_start":1,"column_end":95}},{"value":"/ array.  For example a `SmallVec<[u64; 8]>` can hold up to eight 64-bit integers inline.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10947,"byte_end":11038,"line_start":369,"line_end":369,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11039,"byte_end":11042,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11043,"byte_end":11057,"line_start":371,"line_end":371,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11058,"byte_end":11061,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11062,"byte_end":11073,"line_start":373,"line_end":373,"column_start":1,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11074,"byte_end":11101,"line_start":374,"line_end":374,"column_start":1,"column_end":28}},{"value":"/ let mut v = SmallVec::<[u8; 4]>::new(); // initialize an empty vector","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11102,"byte_end":11175,"line_start":375,"line_end":375,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11176,"byte_end":11179,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ // The vector can hold up to 4 items without spilling onto the heap.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11180,"byte_end":11252,"line_start":377,"line_end":377,"column_start":1,"column_end":73}},{"value":"/ v.extend(0..4);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11253,"byte_end":11272,"line_start":378,"line_end":378,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(v.len(), 4);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11273,"byte_end":11300,"line_start":379,"line_end":379,"column_start":1,"column_end":28}},{"value":"/ assert!(!v.spilled());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11301,"byte_end":11327,"line_start":380,"line_end":380,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11328,"byte_end":11331,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ // Pushing another element will force the buffer to spill:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11332,"byte_end":11394,"line_start":382,"line_end":382,"column_start":1,"column_end":63}},{"value":"/ v.push(4);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11395,"byte_end":11409,"line_start":383,"line_end":383,"column_start":1,"column_end":15}},{"value":"/ assert_eq!(v.len(), 5);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11410,"byte_end":11437,"line_start":384,"line_end":384,"column_start":1,"column_end":28}},{"value":"/ assert!(v.spilled());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11438,"byte_end":11463,"line_start":385,"line_end":385,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11464,"byte_end":11471,"line_start":386,"line_end":386,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12000,"byte_end":12003,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallVec<A>>::new","value":"fn () -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector\n","sig":null,"attributes":[{"value":"/ Construct an empty vector","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11945,"byte_end":11974,"line_start":396,"line_end":396,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11979,"byte_end":11988,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12638,"byte_end":12651,"line_start":421,"line_end":421,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<SmallVec<A>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector with enough capacity pre-allocated to store at least `n`\n elements.","sig":null,"attributes":[{"value":"/ Construct an empty vector with enough capacity pre-allocated to store at least `n`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12198,"byte_end":12284,"line_start":407,"line_end":407,"column_start":5,"column_end":91}},{"value":"/ elements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12289,"byte_end":12302,"line_start":408,"line_end":408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12307,"byte_end":12310,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Will create a heap allocation only if `n` is larger than the inline capacity.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12315,"byte_end":12396,"line_start":410,"line_end":410,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12401,"byte_end":12404,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12409,"byte_end":12416,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12421,"byte_end":12450,"line_start":413,"line_end":413,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12455,"byte_end":12458,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let v: SmallVec<[u8; 3]> = SmallVec::with_capacity(100);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12463,"byte_end":12523,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12528,"byte_end":12531,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12536,"byte_end":12562,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/ assert!(v.capacity() >= 100);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12567,"byte_end":12600,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12605,"byte_end":12612,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12617,"byte_end":12626,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13171,"byte_end":13179,"line_start":440,"line_end":440,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<SmallVec<A>>::from_vec","value":"fn (mut vec: Vec<A::Item>) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a `Vec<A::Item>`.","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a `Vec<A::Item>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12758,"byte_end":12811,"line_start":427,"line_end":427,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12816,"byte_end":12819,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Elements will be copied to the inline buffer if vec.capacity() <= A::size().","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12824,"byte_end":12904,"line_start":429,"line_end":429,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12909,"byte_end":12912,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12917,"byte_end":12928,"line_start":431,"line_end":431,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12933,"byte_end":12960,"line_start":432,"line_end":432,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12965,"byte_end":12968,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![1, 2, 3, 4, 5];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":12973,"byte_end":13007,"line_start":434,"line_end":434,"column_start":5,"column_end":39}},{"value":"/ let small_vec: SmallVec<[_; 3]> = SmallVec::from_vec(vec);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13012,"byte_end":13074,"line_start":435,"line_end":435,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13079,"byte_end":13082,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13087,"byte_end":13133,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13138,"byte_end":13145,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13150,"byte_end":13159,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14270,"byte_end":14278,"line_start":476,"line_end":476,"column_start":12,"column_end":20},"name":"from_buf","qualname":"<SmallVec<A>>::from_buf","value":"fn (buf: A) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13922,"byte_end":13986,"line_start":464,"line_end":464,"column_start":5,"column_end":69}},{"value":"/ copying elements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":13991,"byte_end":14012,"line_start":465,"line_end":465,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14017,"byte_end":14020,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14025,"byte_end":14036,"line_start":467,"line_end":467,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14041,"byte_end":14068,"line_start":468,"line_end":468,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14073,"byte_end":14076,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14081,"byte_end":14111,"line_start":470,"line_end":470,"column_start":5,"column_end":35}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf(buf);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14116,"byte_end":14173,"line_start":471,"line_end":471,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14178,"byte_end":14181,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14186,"byte_end":14232,"line_start":473,"line_end":473,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14237,"byte_end":14244,"line_start":474,"line_end":474,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14249,"byte_end":14258,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14875,"byte_end":14891,"line_start":496,"line_end":496,"column_start":12,"column_end":28},"name":"from_buf_and_len","qualname":"<SmallVec<A>>::from_buf_and_len","value":"fn (buf: A, len: usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length, which must be less or\n equal to the size of `buf`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14427,"byte_end":14491,"line_start":483,"line_end":483,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length, which must be less or","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14496,"byte_end":14561,"line_start":484,"line_end":484,"column_start":5,"column_end":70}},{"value":"/ equal to the size of `buf`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14566,"byte_end":14597,"line_start":485,"line_end":485,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14602,"byte_end":14605,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14610,"byte_end":14621,"line_start":487,"line_end":487,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14626,"byte_end":14653,"line_start":488,"line_end":488,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14658,"byte_end":14661,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14666,"byte_end":14705,"line_start":490,"line_end":490,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf_and_len(buf, 5);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14710,"byte_end":14778,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14783,"byte_end":14786,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14791,"byte_end":14837,"line_start":493,"line_end":493,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14842,"byte_end":14849,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":14854,"byte_end":14863,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15549,"byte_end":15575,"line_start":516,"line_end":516,"column_start":19,"column_end":45},"name":"from_buf_and_len_unchecked","qualname":"<SmallVec<A>>::from_buf_and_len_unchecked","value":"fn (buf: A, len: usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length. The user is responsible\n for ensuring that `len <= A::size()`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15041,"byte_end":15105,"line_start":501,"line_end":501,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length. The user is responsible","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15110,"byte_end":15177,"line_start":502,"line_end":502,"column_start":5,"column_end":72}},{"value":"/ for ensuring that `len <= A::size()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15182,"byte_end":15223,"line_start":503,"line_end":503,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15228,"byte_end":15231,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15236,"byte_end":15247,"line_start":505,"line_end":505,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15252,"byte_end":15279,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15284,"byte_end":15287,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15292,"byte_end":15331,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15336,"byte_end":15377,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/     SmallVec::from_buf_and_len_unchecked(buf, 5)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15382,"byte_end":15434,"line_start":510,"line_end":510,"column_start":5,"column_end":57}},{"value":"/ };","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15439,"byte_end":15445,"line_start":511,"line_end":511,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15450,"byte_end":15453,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15458,"byte_end":15504,"line_start":513,"line_end":513,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15509,"byte_end":15516,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15521,"byte_end":15530,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15987,"byte_end":15994,"line_start":529,"line_end":529,"column_start":19,"column_end":26},"name":"set_len","qualname":"<SmallVec<A>>::set_len","value":"fn (&mut self, new_len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of a vector.","sig":null,"attributes":[{"value":"/ Sets the length of a vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15731,"byte_end":15763,"line_start":524,"line_end":524,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15768,"byte_end":15771,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the vector, without actually","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15776,"byte_end":15845,"line_start":526,"line_end":526,"column_start":5,"column_end":74}},{"value":"/ modifying its buffers, so it is up to the caller to ensure that the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15850,"byte_end":15921,"line_start":527,"line_end":527,"column_start":5,"column_end":76}},{"value":"/ vector is actually the specified size.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":15926,"byte_end":15968,"line_start":528,"line_end":528,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16200,"byte_end":16211,"line_start":536,"line_end":536,"column_start":12,"column_end":23},"name":"inline_size","qualname":"<SmallVec<A>>::inline_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of elements this vector can hold inline\n","sig":null,"attributes":[{"value":"/ The maximum number of elements this vector can hold inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16112,"byte_end":16174,"line_start":534,"line_end":534,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16179,"byte_end":16188,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16332,"byte_end":16335,"line_start":542,"line_end":542,"column_start":12,"column_end":15},"name":"len","qualname":"<SmallVec<A>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements stored in the vector\n","sig":null,"attributes":[{"value":"/ The number of elements stored in the vector","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16259,"byte_end":16306,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16311,"byte_end":16320,"line_start":541,"line_end":541,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16456,"byte_end":16464,"line_start":548,"line_end":548,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SmallVec<A>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector is empty\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector is empty","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16389,"byte_end":16430,"line_start":546,"line_end":546,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16435,"byte_end":16444,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16607,"byte_end":16615,"line_start":554,"line_end":554,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SmallVec<A>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items the vector can hold without reallocating\n","sig":null,"attributes":[{"value":"/ The number of items the vector can hold without reallocating","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16517,"byte_end":16581,"line_start":552,"line_end":552,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":16586,"byte_end":16595,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":17705,"byte_end":17712,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"spilled","qualname":"<SmallVec<A>>::spilled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the data has spilled into a separate heap-allocated buffer.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the data has spilled into a separate heap-allocated buffer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":17598,"byte_end":17679,"line_start":585,"line_end":585,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":17684,"byte_end":17693,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":17856,"byte_end":17861,"line_start":592,"line_end":592,"column_start":12,"column_end":17},"name":"drain","qualname":"<SmallVec<A>>::drain","value":"fn (&mut self) -> Drain<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Empty the vector and return an iterator over its former contents.\n","sig":null,"attributes":[{"value":"/ Empty the vector and return an iterator over its former contents.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":17775,"byte_end":17844,"line_start":591,"line_end":591,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":18248,"byte_end":18252,"line_start":609,"line_end":609,"column_start":12,"column_end":16},"name":"push","qualname":"<SmallVec<A>>::push","value":"fn (&mut self, value: A::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Append an item to the vector.\n","sig":null,"attributes":[{"value":"/ Append an item to the vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":18189,"byte_end":18222,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":18227,"byte_end":18236,"line_start":608,"line_end":608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":18699,"byte_end":18702,"line_start":623,"line_end":623,"column_start":12,"column_end":15},"name":"pop","qualname":"<SmallVec<A>>::pop","value":"fn (&mut self) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Remove an item from the end of the vector and return it, or None if empty.\n","sig":null,"attributes":[{"value":"/ Remove an item from the end of the vector and return it, or None if empty.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":18595,"byte_end":18673,"line_start":621,"line_end":621,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":18678,"byte_end":18687,"line_start":622,"line_end":622,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":19192,"byte_end":19196,"line_start":638,"line_end":638,"column_start":12,"column_end":16},"name":"grow","qualname":"<SmallVec<A>>::grow","value":"fn (&mut self, new_cap: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":19041,"byte_end":19110,"line_start":635,"line_end":635,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":19115,"byte_end":19118,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":19123,"byte_end":19180,"line_start":637,"line_end":637,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20580,"byte_end":20587,"line_start":672,"line_end":672,"column_start":12,"column_end":19},"name":"reserve","qualname":"<SmallVec<A>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20171,"byte_end":20238,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20243,"byte_end":20246,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20251,"byte_end":20310,"line_start":666,"line_end":666,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20315,"byte_end":20318,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ If the new capacity would overflow `usize` then it will be set to `usize::max_value()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20323,"byte_end":20413,"line_start":668,"line_end":668,"column_start":5,"column_end":95}},{"value":"/ instead. (This means that inserting `additional` new elements is not guaranteed to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20418,"byte_end":20507,"line_start":669,"line_end":669,"column_start":5,"column_end":94}},{"value":"/ possible after calling this function.)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20512,"byte_end":20554,"line_start":670,"line_end":670,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":20559,"byte_end":20568,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21237,"byte_end":21250,"line_start":688,"line_end":688,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<SmallVec<A>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minumum capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve the minumum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21084,"byte_end":21163,"line_start":685,"line_end":685,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21168,"byte_end":21171,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21176,"byte_end":21225,"line_start":687,"line_end":687,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21747,"byte_end":21760,"line_start":702,"line_end":702,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<SmallVec<A>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the vector as much as possible.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21557,"byte_end":21615,"line_start":698,"line_end":698,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21620,"byte_end":21623,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ When possible, this will move data from an external heap buffer to the vector's inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21628,"byte_end":21718,"line_start":700,"line_end":700,"column_start":5,"column_end":95}},{"value":"/ storage.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":21723,"byte_end":21735,"line_start":701,"line_end":701,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22664,"byte_end":22672,"line_start":727,"line_end":727,"column_start":12,"column_end":20},"name":"truncate","qualname":"<SmallVec<A>>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shorten the vector, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shorten the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22327,"byte_end":22406,"line_start":720,"line_end":720,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22411,"byte_end":22414,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than or equal to the vector's current length, this has no","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22419,"byte_end":22500,"line_start":722,"line_end":722,"column_start":5,"column_end":86}},{"value":"/ effect.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22505,"byte_end":22516,"line_start":723,"line_end":723,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22521,"byte_end":22524,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This does not re-allocate.  If you want the vector's capacity to shrink, call","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22529,"byte_end":22610,"line_start":725,"line_end":725,"column_start":5,"column_end":86}},{"value":"/ `shrink_to_fit` after truncating.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22615,"byte_end":22652,"line_start":726,"line_end":726,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23097,"byte_end":23105,"line_start":741,"line_end":741,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<SmallVec<A>>::as_slice","value":"fn (&self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":22995,"byte_end":23045,"line_start":738,"line_end":738,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23050,"byte_end":23053,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23058,"byte_end":23085,"line_start":740,"line_end":740,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23259,"byte_end":23271,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<SmallVec<A>>::as_mut_slice","value":"fn (&mut self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23153,"byte_end":23203,"line_start":745,"line_end":745,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23208,"byte_end":23211,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23216,"byte_end":23247,"line_start":747,"line_end":747,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23546,"byte_end":23557,"line_start":758,"line_end":758,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<SmallVec<A>>::swap_remove","value":"fn (&mut self, index: usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove the element at position `index`, replacing it with the last element.","sig":null,"attributes":[{"value":"/ Remove the element at position `index`, replacing it with the last element.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23327,"byte_end":23406,"line_start":752,"line_end":752,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23411,"byte_end":23414,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23419,"byte_end":23468,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23473,"byte_end":23476,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23481,"byte_end":23520,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23525,"byte_end":23534,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23787,"byte_end":23792,"line_start":766,"line_end":766,"column_start":12,"column_end":17},"name":"clear","qualname":"<SmallVec<A>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the vector.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23721,"byte_end":23761,"line_start":764,"line_end":764,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23766,"byte_end":23775,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":24013,"byte_end":24019,"line_start":774,"line_end":774,"column_start":12,"column_end":18},"name":"remove","qualname":"<SmallVec<A>>::remove","value":"fn (&mut self, index: usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the element at position `index`, shifting all elements after it to the\n left.","sig":null,"attributes":[{"value":"/ Remove and return the element at position `index`, shifting all elements after it to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23843,"byte_end":23935,"line_start":770,"line_end":770,"column_start":5,"column_end":97}},{"value":"/ left.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23940,"byte_end":23949,"line_start":771,"line_end":771,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23954,"byte_end":23957,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":23962,"byte_end":24001,"line_start":773,"line_end":773,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":24566,"byte_end":24572,"line_start":790,"line_end":790,"column_start":12,"column_end":18},"name":"insert","qualname":"<SmallVec<A>>::insert","value":"fn (&mut self, index: usize, element: A::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert an element at position `index`, shifting all elements after it to the right.","sig":null,"attributes":[{"value":"/ Insert an element at position `index`, shifting all elements after it to the right.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":24415,"byte_end":24502,"line_start":787,"line_end":787,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":24507,"byte_end":24510,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":24515,"byte_end":24554,"line_start":789,"line_end":789,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":25098,"byte_end":25109,"line_start":806,"line_end":806,"column_start":12,"column_end":23},"name":"insert_many","qualname":"<SmallVec<A>>::insert_many","value":"fn <I> (&mut self, index: usize, iterable: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert multiple elements at position `index`, shifting all following elements toward the\n back.\n","sig":null,"attributes":[{"value":"/ Insert multiple elements at position `index`, shifting all following elements toward the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":24980,"byte_end":25072,"line_start":804,"line_end":804,"column_start":5,"column_end":97}},{"value":"/ back.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":25077,"byte_end":25086,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27044,"byte_end":27052,"line_start":852,"line_end":852,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<SmallVec<A>>::into_vec","value":"fn (self) -> Vec<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto\n the heap.\n","sig":null,"attributes":[{"value":"/ Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":26920,"byte_end":27014,"line_start":850,"line_end":850,"column_start":5,"column_end":99}},{"value":"/ the heap.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27019,"byte_end":27032,"line_start":851,"line_end":851,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27694,"byte_end":27704,"line_start":869,"line_end":869,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SmallVec<A>>::into_inner","value":"fn (self) -> Result<A, Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","sig":null,"attributes":[{"value":"/ Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27391,"byte_end":27470,"line_start":865,"line_end":865,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27475,"byte_end":27478,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ This method returns `Err(Self)` if the SmallVec is too short (and the `A` contains uninitialized elements),","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27483,"byte_end":27594,"line_start":867,"line_end":867,"column_start":5,"column_end":116}},{"value":"/ or if the SmallVec is too long (and all the elements were spilled to the heap).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":27599,"byte_end":27682,"line_start":868,"line_end":868,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28262,"byte_end":28268,"line_start":886,"line_end":886,"column_start":12,"column_end":18},"name":"retain","qualname":"<SmallVec<A>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28006,"byte_end":28063,"line_start":881,"line_end":881,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28068,"byte_end":28071,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28076,"byte_end":28154,"line_start":883,"line_end":883,"column_start":5,"column_end":83}},{"value":"/ This method operates in place and preserves the order of the retained","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28159,"byte_end":28232,"line_start":884,"line_end":884,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28237,"byte_end":28250,"line_start":885,"line_end":885,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28660,"byte_end":28665,"line_start":900,"line_end":900,"column_start":12,"column_end":17},"name":"dedup","qualname":"<SmallVec<A>>::dedup","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28605,"byte_end":28648,"line_start":899,"line_end":899,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28851,"byte_end":28859,"line_start":905,"line_end":905,"column_start":12,"column_end":20},"name":"dedup_by","qualname":"<SmallVec<A>>::dedup_by","value":"fn <F> (&mut self, mut same_bucket: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements using the given equality relation.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements using the given equality relation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":28762,"byte_end":28839,"line_start":904,"line_end":904,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":29787,"byte_end":29799,"line_start":936,"line_end":936,"column_start":12,"column_end":24},"name":"dedup_by_key","qualname":"<SmallVec<A>>::dedup_by_key","value":"fn <F, K> (&mut self, mut key: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive elements that map to the same key.\n","sig":null,"attributes":[{"value":"/ Removes consecutive elements that map to the same key.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":29717,"byte_end":29775,"line_start":935,"line_end":935,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30184,"byte_end":30194,"line_start":948,"line_end":948,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SmallVec<A>>::from_slice","value":"fn (slice: &[A::Item]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the elements from a slice into a new `SmallVec`.","sig":null,"attributes":[{"value":"/ Copy the elements from a slice into a new `SmallVec`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30018,"byte_end":30075,"line_start":945,"line_end":945,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30080,"byte_end":30083,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `SmallVec::from(slice)`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30088,"byte_end":30172,"line_start":947,"line_end":947,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31084,"byte_end":31101,"line_start":974,"line_end":974,"column_start":12,"column_end":29},"name":"insert_from_slice","qualname":"<SmallVec<A>>::insert_from_slice","value":"fn (&mut self, index: usize, slice: &[A::Item]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice into the vector at position `index`, shifting any following\n elements toward the back.","sig":null,"attributes":[{"value":"/ Copy elements from a slice into the vector at position `index`, shifting any following","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30866,"byte_end":30956,"line_start":970,"line_end":970,"column_start":5,"column_end":95}},{"value":"/ elements toward the back.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30961,"byte_end":30990,"line_start":971,"line_end":971,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":30995,"byte_end":30998,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `insert`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31003,"byte_end":31072,"line_start":973,"line_end":973,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31748,"byte_end":31765,"line_start":993,"line_end":993,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<SmallVec<A>>::extend_from_slice","value":"fn (&mut self, slice: &[A::Item]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice and append them to the vector.","sig":null,"attributes":[{"value":"/ Copy elements from a slice and append them to the vector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31579,"byte_end":31640,"line_start":989,"line_end":989,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31645,"byte_end":31648,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `extend`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31653,"byte_end":31722,"line_start":991,"line_end":991,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31727,"byte_end":31736,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32228,"byte_end":32234,"line_start":1006,"line_end":1006,"column_start":12,"column_end":18},"name":"resize","qualname":"<SmallVec<A>>::resize","value":"fn (&mut self, len: usize, value: A::Item) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes the vector so that its length is equal to `len`.","sig":null,"attributes":[{"value":"/ Resizes the vector so that its length is equal to `len`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31935,"byte_end":31995,"line_start":1000,"line_end":1000,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32000,"byte_end":32003,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ If `len` is less than the current length, the vector simply truncated.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32008,"byte_end":32082,"line_start":1002,"line_end":1002,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32087,"byte_end":32090,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the current length, `value` is appended to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32095,"byte_end":32170,"line_start":1004,"line_end":1004,"column_start":5,"column_end":80}},{"value":"/ vector until its length equals `len`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32175,"byte_end":32216,"line_start":1005,"line_end":1005,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32710,"byte_end":32719,"line_start":1023,"line_end":1023,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<SmallVec<A>>::from_elem","value":"fn (elem: A::Item, n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` with `n` copies of `elem`.\n ```\n use smallvec::SmallVec;","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` with `n` copies of `elem`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32468,"byte_end":32519,"line_start":1016,"line_end":1016,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32524,"byte_end":32531,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32536,"byte_end":32563,"line_start":1018,"line_end":1018,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32568,"byte_end":32571,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let v = SmallVec::<[char; 128]>::from_elem('d', 2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32576,"byte_end":32631,"line_start":1020,"line_end":1020,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v, SmallVec::from_buf(['d', 'd']));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32636,"byte_end":32686,"line_start":1021,"line_end":1021,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":32691,"byte_end":32698,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40736,"byte_end":40744,"line_start":1327,"line_end":1327,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"decl_id":null,"docs":" An iterator that consumes a `SmallVec` and yields its items by value.","sig":null,"attributes":[{"value":"/ An iterator that consumes a `SmallVec` and yields its items by value.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40550,"byte_end":40623,"line_start":1322,"line_end":1322,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40624,"byte_end":40627,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::into_iter`][1].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40628,"byte_end":40673,"line_start":1324,"line_end":1324,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40674,"byte_end":40677,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.into_iter","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40678,"byte_end":40724,"line_start":1326,"line_end":1326,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":255},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42848,"byte_end":42853,"line_start":1414,"line_end":1414,"column_start":18,"column_end":23},"name":"Array","qualname":"::Array","value":"Array","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"decl_id":null,"docs":" Types that can be used as the backing store for a SmallVec\n","sig":null,"attributes":[{"value":"/ Types that can be used as the backing store for a SmallVec","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42768,"byte_end":42830,"line_start":1413,"line_end":1413,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":256},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42907,"byte_end":42911,"line_start":1416,"line_end":1416,"column_start":10,"column_end":14},"name":"Item","qualname":"::Array::Item","value":"type Item;","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" The type of the array's elements.\n","sig":null,"attributes":[{"value":"/ The type of the array's elements.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42860,"byte_end":42897,"line_start":1415,"line_end":1415,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42976,"byte_end":42980,"line_start":1418,"line_end":1418,"column_start":8,"column_end":12},"name":"size","qualname":"::Array::size","value":"fn () -> usize","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Returns the number of items the array can hold.\n","sig":null,"attributes":[{"value":"/ Returns the number of items the array can hold.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42917,"byte_end":42968,"line_start":1417,"line_end":1417,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43061,"byte_end":43064,"line_start":1420,"line_end":1420,"column_start":8,"column_end":11},"name":"ptr","qualname":"::Array::ptr","value":"fn (&self) -> *const Self::Item","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Returns a pointer to the first element of the array.\n","sig":null,"attributes":[{"value":"/ Returns a pointer to the first element of the array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":42997,"byte_end":43053,"line_start":1419,"line_end":1419,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43170,"byte_end":43177,"line_start":1422,"line_end":1422,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::Array::ptr_mut","value":"fn (&mut self) -> *mut Self::Item","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the first element of the array.\n","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the first element of the array.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43098,"byte_end":43162,"line_start":1421,"line_end":1421,"column_start":5,"column_end":69}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6013,"byte_end":6016,"line_start":187,"line_end":187,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6794,"byte_end":6797,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7318,"byte_end":7323,"line_start":238,"line_end":238,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7630,"byte_end":7635,"line_start":252,"line_end":252,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7824,"byte_end":7829,"line_start":259,"line_end":259,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7867,"byte_end":7872,"line_start":261,"line_end":261,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":9039,"byte_end":9051,"line_start":312,"line_end":312,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10313,"byte_end":10325,"line_start":358,"line_end":358,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10370,"byte_end":10382,"line_start":359,"line_end":359,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11927,"byte_end":11935,"line_start":395,"line_end":395,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":29980,"byte_end":29988,"line_start":944,"line_end":944,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31896,"byte_end":31904,"line_start":999,"line_end":999,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33272,"byte_end":33280,"line_start":1042,"line_end":1042,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33525,"byte_end":33533,"line_start":1053,"line_end":1053,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33777,"byte_end":33785,"line_start":1063,"line_end":1063,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33900,"byte_end":33908,"line_start":1070,"line_end":1070,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":34032,"byte_end":34040,"line_start":1077,"line_end":1077,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":34159,"byte_end":34167,"line_start":1084,"line_end":1084,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":34322,"byte_end":34330,"line_start":1092,"line_end":1092,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":36080,"byte_end":36088,"line_start":1159,"line_end":1159,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":36272,"byte_end":36280,"line_start":1166,"line_end":1166,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":36416,"byte_end":36424,"line_start":1173,"line_end":1173,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37343,"byte_end":37351,"line_start":1205,"line_end":1205,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37549,"byte_end":37557,"line_start":1212,"line_end":1212,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37705,"byte_end":37713,"line_start":1219,"line_end":1219,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37916,"byte_end":37924,"line_start":1227,"line_end":1227,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":38715,"byte_end":38723,"line_start":1254,"line_end":1254,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":38903,"byte_end":38911,"line_start":1260,"line_end":1260,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39022,"byte_end":39030,"line_start":1267,"line_end":1267,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39353,"byte_end":39361,"line_start":1280,"line_end":1280,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39666,"byte_end":39674,"line_start":1290,"line_end":1290,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39915,"byte_end":39923,"line_start":1298,"line_end":1298,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39979,"byte_end":39987,"line_start":1300,"line_end":1300,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40190,"byte_end":40198,"line_start":1307,"line_end":1307,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40364,"byte_end":40372,"line_start":1314,"line_end":1314,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40514,"byte_end":40522,"line_start":1320,"line_end":1320,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40843,"byte_end":40851,"line_start":1333,"line_end":1333,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40945,"byte_end":40953,"line_start":1339,"line_end":1339,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":41516,"byte_end":41524,"line_start":1363,"line_end":1363,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":41873,"byte_end":41881,"line_start":1378,"line_end":1378,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":41922,"byte_end":41930,"line_start":1380,"line_end":1380,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43440,"byte_end":43452,"line_start":1433,"line_end":1433,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43702,"byte_end":43714,"line_start":1445,"line_end":1445,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5390,"byte_end":5395,"line_start":169,"line_end":169,"column_start":14,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5428,"byte_end":5436,"line_start":170,"line_end":170,"column_start":14,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2159},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5459,"byte_end":5464,"line_start":171,"line_end":171,"column_start":14,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5511,"byte_end":5519,"line_start":172,"line_end":172,"column_start":14,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2159},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5554,"byte_end":5559,"line_start":173,"line_end":173,"column_start":14,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5610,"byte_end":5618,"line_start":174,"line_end":174,"column_start":14,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2159},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5657,"byte_end":5662,"line_start":175,"line_end":175,"column_start":14,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5711,"byte_end":5719,"line_start":176,"line_end":176,"column_start":14,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2159},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5756,"byte_end":5761,"line_start":177,"line_end":177,"column_start":14,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":2155},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5805,"byte_end":5813,"line_start":178,"line_end":178,"column_start":14,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2159},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5845,"byte_end":5853,"line_start":179,"line_end":179,"column_start":14,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":2087},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":5878,"byte_end":5884,"line_start":180,"line_end":180,"column_start":9,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":4884},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6013,"byte_end":6016,"line_start":187,"line_end":187,"column_start":24,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":6794,"byte_end":6797,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"kind":{"Impl":{"id":1}},"from":{"krate":5,"index":4209},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7318,"byte_end":7323,"line_start":238,"line_end":238,"column_start":30,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7630,"byte_end":7635,"line_start":252,"line_end":252,"column_start":41,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":4897}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7824,"byte_end":7829,"line_start":259,"line_end":259,"column_start":35,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":7867,"byte_end":7872,"line_start":261,"line_end":261,"column_start":26,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":39},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":9039,"byte_end":9051,"line_start":312,"line_end":312,"column_start":16,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10313,"byte_end":10325,"line_start":358,"line_end":358,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":10370,"byte_end":10382,"line_start":359,"line_end":359,"column_start":39,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":1915}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":11927,"byte_end":11935,"line_start":395,"line_end":395,"column_start":16,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":29980,"byte_end":29988,"line_start":944,"line_end":944,"column_start":16,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":31896,"byte_end":31904,"line_start":999,"line_end":999,"column_start":16,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33272,"byte_end":33280,"line_start":1042,"line_end":1042,"column_start":31,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33525,"byte_end":33533,"line_start":1053,"line_end":1053,"column_start":34,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33777,"byte_end":33785,"line_start":1063,"line_end":1063,"column_start":37,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1814}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":33900,"byte_end":33908,"line_start":1070,"line_end":1070,"column_start":37,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1817}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":34032,"byte_end":34040,"line_start":1077,"line_end":1077,"column_start":38,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1582}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":34159,"byte_end":34167,"line_start":1084,"line_end":1084,"column_start":41,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1585}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":34322,"byte_end":34330,"line_start":1092,"line_end":1092,"column_start":41,"column_end":49},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":2991}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":36080,"byte_end":36088,"line_start":1159,"line_end":1159,"column_start":44,"column_end":52},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":36272,"byte_end":36280,"line_start":1166,"line_end":1166,"column_start":39,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":36416,"byte_end":36424,"line_start":1173,"line_end":1173,"column_start":28,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37343,"byte_end":37351,"line_start":1205,"line_end":1205,"column_start":45,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":83},"to":{"krate":0,"index":31}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37549,"byte_end":37557,"line_start":1212,"line_end":1212,"column_start":37,"column_end":45},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":83},"to":{"krate":0,"index":25}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37705,"byte_end":37713,"line_start":1219,"line_end":1219,"column_start":42,"column_end":50},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":4871}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":37916,"byte_end":37924,"line_start":1227,"line_end":1227,"column_start":36,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":4884}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":38715,"byte_end":38723,"line_start":1254,"line_end":1254,"column_start":31,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":38903,"byte_end":38911,"line_start":1260,"line_end":1260,"column_start":28,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39022,"byte_end":39030,"line_start":1267,"line_end":1267,"column_start":25,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39353,"byte_end":39361,"line_start":1280,"line_end":1280,"column_start":26,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39666,"byte_end":39674,"line_start":1290,"line_end":1290,"column_start":53,"column_end":61},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39915,"byte_end":39923,"line_start":1298,"line_end":1298,"column_start":23,"column_end":31},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":39979,"byte_end":39987,"line_start":1300,"line_end":1300,"column_start":31,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40190,"byte_end":40198,"line_start":1307,"line_end":1307,"column_start":24,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40364,"byte_end":40372,"line_start":1314,"line_end":1314,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40514,"byte_end":40522,"line_start":1320,"line_end":1320,"column_start":32,"column_end":40},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40843,"byte_end":40851,"line_start":1333,"line_end":1333,"column_start":25,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":40945,"byte_end":40953,"line_start":1339,"line_end":1339,"column_start":29,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":41516,"byte_end":41524,"line_start":1363,"line_end":1363,"column_start":40,"column_end":48},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":4897}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":41873,"byte_end":41881,"line_start":1378,"line_end":1378,"column_start":38,"column_end":46},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":41922,"byte_end":41930,"line_start":1380,"line_end":1380,"column_start":33,"column_end":41},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":4875}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43440,"byte_end":43452,"line_start":1433,"line_end":1433,"column_start":10,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-0.6.5/lib.rs","byte_start":43702,"byte_end":43714,"line_start":1445,"line_end":1445,"column_start":19,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":260},"to":{"krate":2,"index":2098}}]}