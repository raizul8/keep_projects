{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0","program":"/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_epoch","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"use_std\"","-C","metadata=acc03fee958ae5d8","-C","extra-filename=-acc03fee958ae5d8","--out-dir","/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps","--extern","arrayvec=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libarrayvec-0a4429c756e0a051.rmeta","--extern","cfg_if=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libcfg_if-0dbc5aca61f226ed.rmeta","--extern","crossbeam_utils=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libcrossbeam_utils-fd01c069b0d3f664.rmeta","--extern","lazy_static=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/liblazy_static-88a11782b4314db7.rmeta","--extern","memoffset=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libmemoffset-eeb2232278337ed4.rmeta","--extern","scopeguard=/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libscopeguard-eeb3f4d830a57370.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/raz/code_projects/keep_projects/gas_cursive_1/target/rls/debug/deps/libcrossbeam_epoch-acc03fee958ae5d8.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[3825081848831519680,9542622902179000419]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":15,"id":{"name":"arrayvec","disambiguator":[15012179566342584198,16884783005833511033]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":16,"id":{"name":"nodrop","disambiguator":[14990617643825252019,7433150405053078830]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[1620463856313359360,7978778919480178659]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[7529629145617459419,8526779069248662370]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":19,"id":{"name":"memoffset","disambiguator":[13683457499067376039,15924188266993050870]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","num":20,"id":{"name":"scopeguard","disambiguator":[10803843064322961270,17222625851977101955]}}],"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":0,"byte_end":3923,"line_start":1,"line_end":99,"column_start":1,"column_end":51}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":60},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3666,"byte_end":3672,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":32},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3674,"byte_end":3692,"line_start":95,"line_end":95,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3694,"byte_end":3715,"line_start":95,"line_end":95,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":133},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3717,"byte_end":3722,"line_start":95,"line_end":95,"column_start":75,"column_end":80},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":184},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3724,"byte_end":3730,"line_start":95,"line_end":95,"column_start":82,"column_end":88},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3732,"byte_end":3739,"line_start":95,"line_end":95,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":362},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3764,"byte_end":3775,"line_start":96,"line_end":96,"column_start":23,"column_end":34},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3777,"byte_end":3782,"line_start":96,"line_end":96,"column_start":36,"column_end":41},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3837,"byte_end":3854,"line_start":98,"line_end":98,"column_start":25,"column_end":42},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3856,"byte_end":3865,"line_start":98,"line_end":98,"column_start":44,"column_end":53},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":279},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3867,"byte_end":3870,"line_start":98,"line_end":98,"column_start":55,"column_end":58},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3899,"byte_end":3908,"line_start":99,"line_end":99,"column_start":27,"column_end":36},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":3910,"byte_end":3921,"line_start":99,"line_end":99,"column_start":38,"column_end":49},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":0,"byte_end":3923,"line_start":1,"line_end":99,"column_start":1,"column_end":51},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":243},{"krate":0,"index":274},{"krate":0,"index":289},{"krate":0,"index":312},{"krate":0,"index":328},{"krate":0,"index":364},{"krate":0,"index":445},{"krate":0,"index":532},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":546}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"! Epoch-based memory reclamation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"! that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! reading the element. Only then it is safe to destruct it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"! garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"! anymore.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"! element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"! marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"! epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"! can be referencing it anymore.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"! more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"! users of concurrent collections don't have to worry much about.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # Pointers","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"! is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"! [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"! read.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! # Pinning","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"! we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"! yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"! unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Garbage","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"! pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"! storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"! arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"! structures may defer the deallocation of an object.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! # APIs","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"! want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! [`Atomic`]: struct.Atomic.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"! [`Collector`]: struct.Collector.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"! [`Shared`]: struct.Shared.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"! [`pin`]: fn.pin.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"! [`defer`]: fn.defer.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2821,"byte_end":2849,"line_start":55,"line_end":55,"column_start":1,"column_end":29}},{"value":"no_std","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2977,"byte_end":2983,"line_start":59,"line_end":59,"column_start":24,"column_end":30}},{"value":"warn(missing_docs, missing_debug_implementations)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/lib.rs","byte_start":2987,"byte_end":3040,"line_start":61,"line_end":61,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":32},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4690,"byte_end":4708,"line_start":28,"line_end":28,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4619,"byte_end":4678,"line_start":27,"line_end":27,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":36},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4822,"byte_end":4829,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4741,"byte_end":4813,"line_start":29,"line_end":29,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":37},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4915,"byte_end":4918,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":32},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4851,"byte_end":4906,"line_start":32,"line_end":32,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5803,"byte_end":5824,"line_start":56,"line_end":56,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5233,"byte_end":5285,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5286,"byte_end":5289,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5290,"byte_end":5381,"line_start":47,"line_end":47,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5382,"byte_end":5474,"line_start":48,"line_end":48,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5475,"byte_end":5478,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5479,"byte_end":5544,"line_start":50,"line_end":50,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5545,"byte_end":5548,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5549,"byte_end":5643,"line_start":52,"line_end":52,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5644,"byte_end":5670,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5671,"byte_end":5763,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5764,"byte_end":5792,"line_start":55,"line_end":55,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5890,"byte_end":5897,"line_start":58,"line_end":58,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn (&self) -> Ordering","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5831,"byte_end":5882,"line_start":57,"line_end":57,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":6115,"byte_end":6122,"line_start":64,"line_end":64,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn (&self) -> Ordering","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5923,"byte_end":5971,"line_start":60,"line_end":60,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5976,"byte_end":5979,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":5984,"byte_end":6077,"line_start":62,"line_end":62,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":6082,"byte_end":6107,"line_start":63,"line_end":63,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":60},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7894,"byte_end":7900,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7455,"byte_end":7519,"line_start":119,"line_end":119,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7520,"byte_end":7523,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7524,"byte_end":7622,"line_start":121,"line_end":121,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7623,"byte_end":7715,"line_start":122,"line_end":122,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7716,"byte_end":7760,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7761,"byte_end":7764,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7765,"byte_end":7845,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7846,"byte_end":7849,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":7850,"byte_end":7882,"line_start":127,"line_end":127,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8546,"byte_end":8550,"line_start":155,"line_end":155,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"fn () -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8316,"byte_end":8354,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8359,"byte_end":8362,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8367,"byte_end":8381,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8386,"byte_end":8389,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8394,"byte_end":8401,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8406,"byte_end":8438,"line_start":150,"line_end":150,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8443,"byte_end":8446,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8451,"byte_end":8485,"line_start":152,"line_end":152,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8490,"byte_end":8497,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8502,"byte_end":8534,"line_start":154,"line_end":154,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9268,"byte_end":9271,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn (value: T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9035,"byte_end":9117,"line_start":179,"line_end":179,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9122,"byte_end":9125,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9130,"byte_end":9144,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9149,"byte_end":9152,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9157,"byte_end":9164,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9169,"byte_end":9201,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9206,"byte_end":9209,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9214,"byte_end":9244,"line_start":186,"line_end":186,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9249,"byte_end":9256,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9895,"byte_end":9899,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn <'g> (&self, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9346,"byte_end":9391,"line_start":192,"line_end":192,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9396,"byte_end":9399,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9404,"byte_end":9494,"line_start":194,"line_end":194,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9499,"byte_end":9513,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9518,"byte_end":9521,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9526,"byte_end":9604,"line_start":197,"line_end":197,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9609,"byte_end":9612,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9617,"byte_end":9631,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9636,"byte_end":9639,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9644,"byte_end":9651,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9656,"byte_end":9705,"line_start":202,"line_end":202,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9710,"byte_end":9754,"line_start":203,"line_end":203,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9759,"byte_end":9762,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9767,"byte_end":9797,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9802,"byte_end":9832,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9837,"byte_end":9871,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":9876,"byte_end":9883,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10906,"byte_end":10918,"line_start":234,"line_end":234,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn <'g> (&self, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10029,"byte_end":10108,"line_start":213,"line_end":213,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10113,"byte_end":10116,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10121,"byte_end":10194,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10199,"byte_end":10275,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10280,"byte_end":10351,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10356,"byte_end":10430,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10435,"byte_end":10458,"line_start":219,"line_end":219,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10463,"byte_end":10466,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10471,"byte_end":10546,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10551,"byte_end":10625,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10630,"byte_end":10664,"line_start":223,"line_end":223,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10669,"byte_end":10672,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10677,"byte_end":10691,"line_start":225,"line_end":225,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10696,"byte_end":10699,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10704,"byte_end":10711,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10716,"byte_end":10765,"line_start":228,"line_end":228,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10770,"byte_end":10773,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10778,"byte_end":10808,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10813,"byte_end":10843,"line_start":231,"line_end":231,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10848,"byte_end":10882,"line_start":232,"line_end":232,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":10887,"byte_end":10894,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11632,"byte_end":11637,"line_start":255,"line_end":255,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn <'g, P> (&self, new: P, ord: Ordering) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11038,"byte_end":11103,"line_start":238,"line_end":238,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11108,"byte_end":11111,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11116,"byte_end":11206,"line_start":240,"line_end":240,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11211,"byte_end":11225,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11230,"byte_end":11233,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11238,"byte_end":11316,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11321,"byte_end":11324,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11329,"byte_end":11343,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11348,"byte_end":11351,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11356,"byte_end":11363,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11368,"byte_end":11432,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11437,"byte_end":11481,"line_start":249,"line_end":249,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11486,"byte_end":11489,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11494,"byte_end":11524,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11529,"byte_end":11565,"line_start":252,"line_end":252,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11570,"byte_end":11608,"line_start":253,"line_end":253,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11613,"byte_end":11620,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12389,"byte_end":12393,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn <'g, P> (&self, new: P, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11748,"byte_end":11836,"line_start":259,"line_end":259,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11841,"byte_end":11854,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11859,"byte_end":11862,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11867,"byte_end":11957,"line_start":262,"line_end":262,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11962,"byte_end":11976,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11981,"byte_end":11984,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":11989,"byte_end":12067,"line_start":265,"line_end":265,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12072,"byte_end":12075,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12080,"byte_end":12094,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12099,"byte_end":12102,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12107,"byte_end":12114,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12119,"byte_end":12183,"line_start":270,"line_end":270,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12188,"byte_end":12232,"line_start":271,"line_end":271,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12237,"byte_end":12240,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12245,"byte_end":12275,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12280,"byte_end":12310,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12315,"byte_end":12365,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12370,"byte_end":12377,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13740,"byte_end":13755,"line_start":307,"line_end":307,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn <'g, O, P> (&self, current: Shared<T>, new: P, ord: O, _: &'g Guard) -> Result<Shared<'g, T>, CompareAndSetError<'g, T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12564,"byte_end":12660,"line_start":281,"line_end":281,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12665,"byte_end":12759,"line_start":282,"line_end":282,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12764,"byte_end":12835,"line_start":283,"line_end":283,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12840,"byte_end":12843,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12848,"byte_end":12943,"line_start":285,"line_end":285,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":12948,"byte_end":13039,"line_start":286,"line_end":286,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13044,"byte_end":13057,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13062,"byte_end":13065,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13070,"byte_end":13155,"line_start":289,"line_end":289,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13160,"byte_end":13191,"line_start":290,"line_end":290,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13196,"byte_end":13199,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13204,"byte_end":13267,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13272,"byte_end":13275,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13280,"byte_end":13294,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13299,"byte_end":13302,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13307,"byte_end":13314,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13319,"byte_end":13383,"line_start":297,"line_end":297,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13388,"byte_end":13432,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13437,"byte_end":13440,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13445,"byte_end":13475,"line_start":300,"line_end":300,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13480,"byte_end":13483,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13488,"byte_end":13518,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13523,"byte_end":13564,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13569,"byte_end":13639,"line_start":304,"line_end":304,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13644,"byte_end":13716,"line_start":305,"line_end":305,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":13721,"byte_end":13728,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16306,"byte_end":16326,"line_start":377,"line_end":377,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn <'g, O, P> (&self, current: Shared<T>, new: P, ord: O, _: &'g Guard) -> Result<Shared<'g, T>, CompareAndSetError<'g, T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14420,"byte_end":14516,"line_start":330,"line_end":330,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14521,"byte_end":14615,"line_start":331,"line_end":331,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14620,"byte_end":14691,"line_start":332,"line_end":332,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14696,"byte_end":14699,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14704,"byte_end":14798,"line_start":334,"line_end":334,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14803,"byte_end":14898,"line_start":335,"line_end":335,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14903,"byte_end":14993,"line_start":336,"line_end":336,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":14998,"byte_end":15082,"line_start":337,"line_end":337,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15087,"byte_end":15090,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15095,"byte_end":15180,"line_start":339,"line_end":339,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15185,"byte_end":15216,"line_start":340,"line_end":340,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15221,"byte_end":15224,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15229,"byte_end":15295,"line_start":342,"line_end":342,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15300,"byte_end":15363,"line_start":343,"line_end":343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15368,"byte_end":15371,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15376,"byte_end":15390,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15395,"byte_end":15398,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15403,"byte_end":15410,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15415,"byte_end":15479,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15484,"byte_end":15528,"line_start":349,"line_end":349,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15533,"byte_end":15536,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15541,"byte_end":15571,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15576,"byte_end":15606,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15611,"byte_end":15614,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15619,"byte_end":15654,"line_start":354,"line_end":354,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15659,"byte_end":15699,"line_start":355,"line_end":355,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15704,"byte_end":15714,"line_start":356,"line_end":356,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15719,"byte_end":15782,"line_start":357,"line_end":357,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15787,"byte_end":15809,"line_start":358,"line_end":358,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15814,"byte_end":15838,"line_start":359,"line_end":359,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15843,"byte_end":15865,"line_start":360,"line_end":360,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15870,"byte_end":15883,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15888,"byte_end":15913,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15918,"byte_end":15952,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15957,"byte_end":15987,"line_start":364,"line_end":364,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":15992,"byte_end":16005,"line_start":365,"line_end":365,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16010,"byte_end":16019,"line_start":366,"line_end":366,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16024,"byte_end":16029,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16034,"byte_end":16037,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16042,"byte_end":16083,"line_start":369,"line_end":369,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16088,"byte_end":16098,"line_start":370,"line_end":370,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16103,"byte_end":16178,"line_start":371,"line_end":371,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16183,"byte_end":16210,"line_start":372,"line_end":372,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16215,"byte_end":16258,"line_start":373,"line_end":373,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16263,"byte_end":16272,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16277,"byte_end":16282,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16287,"byte_end":16294,"line_start":376,"line_end":376,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17818,"byte_end":17827,"line_start":421,"line_end":421,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn <'g> (&self, val: usize, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":16996,"byte_end":17035,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17040,"byte_end":17043,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17048,"byte_end":17142,"line_start":402,"line_end":402,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17147,"byte_end":17203,"line_start":403,"line_end":403,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17208,"byte_end":17211,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17216,"byte_end":17306,"line_start":405,"line_end":405,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17311,"byte_end":17325,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17330,"byte_end":17333,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17338,"byte_end":17416,"line_start":408,"line_end":408,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17421,"byte_end":17424,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17429,"byte_end":17443,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17448,"byte_end":17451,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17456,"byte_end":17463,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17468,"byte_end":17525,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17530,"byte_end":17574,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17579,"byte_end":17582,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17587,"byte_end":17647,"line_start":416,"line_end":416,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17652,"byte_end":17682,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17687,"byte_end":17742,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17747,"byte_end":17794,"line_start":419,"line_end":419,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17799,"byte_end":17806,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18817,"byte_end":18825,"line_start":446,"line_end":446,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn <'g> (&self, val: usize, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":17998,"byte_end":18036,"line_start":425,"line_end":425,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18041,"byte_end":18044,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18049,"byte_end":18142,"line_start":427,"line_end":427,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18147,"byte_end":18203,"line_start":428,"line_end":428,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18208,"byte_end":18211,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18216,"byte_end":18306,"line_start":430,"line_end":430,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18311,"byte_end":18325,"line_start":431,"line_end":431,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18330,"byte_end":18333,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18338,"byte_end":18416,"line_start":433,"line_end":433,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18421,"byte_end":18424,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18429,"byte_end":18443,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18448,"byte_end":18451,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18456,"byte_end":18463,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18468,"byte_end":18525,"line_start":438,"line_end":438,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18530,"byte_end":18574,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18579,"byte_end":18582,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18587,"byte_end":18647,"line_start":441,"line_end":441,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18652,"byte_end":18682,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18687,"byte_end":18741,"line_start":443,"line_end":443,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18746,"byte_end":18793,"line_start":444,"line_end":444,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18798,"byte_end":18805,"line_start":445,"line_end":445,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19816,"byte_end":19825,"line_start":471,"line_end":471,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn <'g> (&self, val: usize, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":18994,"byte_end":19033,"line_start":450,"line_end":450,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19038,"byte_end":19041,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19046,"byte_end":19140,"line_start":452,"line_end":452,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19145,"byte_end":19201,"line_start":453,"line_end":453,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19206,"byte_end":19209,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19214,"byte_end":19304,"line_start":455,"line_end":455,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19309,"byte_end":19323,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19328,"byte_end":19331,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19336,"byte_end":19414,"line_start":458,"line_end":458,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19419,"byte_end":19422,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19427,"byte_end":19441,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19446,"byte_end":19449,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19454,"byte_end":19461,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19466,"byte_end":19523,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19528,"byte_end":19572,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19577,"byte_end":19580,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19585,"byte_end":19645,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19650,"byte_end":19680,"line_start":467,"line_end":467,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19685,"byte_end":19740,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19745,"byte_end":19792,"line_start":469,"line_end":469,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":19797,"byte_end":19804,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":129},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22383,"byte_end":22390,"line_start":574,"line_end":574,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22320,"byte_end":22372,"line_start":573,"line_end":573,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22462,"byte_end":22472,"line_start":576,"line_end":576,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn (self) -> usize","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22400,"byte_end":22454,"line_start":575,"line_end":575,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22573,"byte_end":22583,"line_start":579,"line_end":579,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"fn (data: usize) -> Self","parent":{"krate":0,"index":129},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22494,"byte_end":22558,"line_start":578,"line_end":578,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22849,"byte_end":22854,"line_start":588,"line_end":588,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22609,"byte_end":22644,"line_start":582,"line_end":582,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22645,"byte_end":22648,"line_start":583,"line_end":583,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22649,"byte_end":22691,"line_start":584,"line_end":584,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22692,"byte_end":22695,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22696,"byte_end":22794,"line_start":586,"line_end":586,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22795,"byte_end":22837,"line_start":587,"line_end":587,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23700,"byte_end":23703,"line_start":626,"line_end":626,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn (value: T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23470,"byte_end":23551,"line_start":617,"line_end":617,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23556,"byte_end":23559,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23564,"byte_end":23578,"line_start":619,"line_end":619,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23583,"byte_end":23586,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23591,"byte_end":23598,"line_start":621,"line_end":621,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23603,"byte_end":23634,"line_start":622,"line_end":622,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23639,"byte_end":23642,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23647,"byte_end":23676,"line_start":624,"line_end":624,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23681,"byte_end":23688,"line_start":625,"line_end":625,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24337,"byte_end":24345,"line_start":647,"line_end":647,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"fn (raw: *mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23775,"byte_end":23825,"line_start":630,"line_end":630,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23830,"byte_end":23833,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23838,"byte_end":23930,"line_start":632,"line_end":632,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23935,"byte_end":24028,"line_start":633,"line_end":633,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24033,"byte_end":24058,"line_start":634,"line_end":634,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24063,"byte_end":24066,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24071,"byte_end":24083,"line_start":636,"line_end":636,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24088,"byte_end":24091,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24096,"byte_end":24140,"line_start":638,"line_end":638,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24145,"byte_end":24148,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24153,"byte_end":24167,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24172,"byte_end":24175,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24180,"byte_end":24187,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24192,"byte_end":24223,"line_start":643,"line_end":643,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24228,"byte_end":24231,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24236,"byte_end":24306,"line_start":645,"line_end":645,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24311,"byte_end":24318,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24787,"byte_end":24798,"line_start":665,"line_end":665,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn <'g> (self, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24452,"byte_end":24501,"line_start":652,"line_end":652,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24506,"byte_end":24509,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24514,"byte_end":24528,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24533,"byte_end":24536,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24541,"byte_end":24548,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24553,"byte_end":24601,"line_start":657,"line_end":657,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24606,"byte_end":24609,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24614,"byte_end":24643,"line_start":659,"line_end":659,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24648,"byte_end":24678,"line_start":660,"line_end":660,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24683,"byte_end":24716,"line_start":661,"line_end":661,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24721,"byte_end":24728,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24733,"byte_end":24736,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24741,"byte_end":24775,"line_start":664,"line_end":664,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25190,"byte_end":25198,"line_start":680,"line_end":680,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn (self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24910,"byte_end":24954,"line_start":669,"line_end":669,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24959,"byte_end":24962,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24967,"byte_end":24981,"line_start":671,"line_end":671,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24986,"byte_end":24989,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":24994,"byte_end":25001,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25006,"byte_end":25054,"line_start":674,"line_end":674,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25059,"byte_end":25062,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25067,"byte_end":25096,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25101,"byte_end":25136,"line_start":677,"line_end":677,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25141,"byte_end":25166,"line_start":678,"line_end":678,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25171,"byte_end":25178,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25556,"byte_end":25559,"line_start":695,"line_end":695,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25348,"byte_end":25394,"line_start":686,"line_end":686,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25399,"byte_end":25402,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25407,"byte_end":25421,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25426,"byte_end":25429,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25434,"byte_end":25441,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25446,"byte_end":25477,"line_start":691,"line_end":691,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25482,"byte_end":25485,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25490,"byte_end":25532,"line_start":693,"line_end":693,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25537,"byte_end":25544,"line_start":694,"line_end":694,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26033,"byte_end":26041,"line_start":713,"line_end":713,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn (self, tag: usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25656,"byte_end":25746,"line_start":700,"line_end":700,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25751,"byte_end":25789,"line_start":701,"line_end":701,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25794,"byte_end":25797,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25802,"byte_end":25816,"line_start":703,"line_end":703,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25821,"byte_end":25824,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25829,"byte_end":25836,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25841,"byte_end":25872,"line_start":706,"line_end":706,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25877,"byte_end":25880,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25885,"byte_end":25914,"line_start":708,"line_end":708,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25919,"byte_end":25946,"line_start":709,"line_end":709,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25951,"byte_end":25977,"line_start":710,"line_end":710,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":25982,"byte_end":26009,"line_start":711,"line_end":711,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26014,"byte_end":26021,"line_start":712,"line_end":712,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":184},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28321,"byte_end":28327,"line_start":816,"line_end":816,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28042,"byte_end":28095,"line_start":810,"line_end":810,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28096,"byte_end":28099,"line_start":811,"line_end":811,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28100,"byte_end":28163,"line_start":812,"line_end":812,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28164,"byte_end":28167,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28168,"byte_end":28266,"line_start":814,"line_end":814,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28267,"byte_end":28309,"line_start":815,"line_end":815,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29134,"byte_end":29138,"line_start":858,"line_end":858,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn () -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28918,"byte_end":28949,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28954,"byte_end":28957,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28962,"byte_end":28976,"line_start":850,"line_end":850,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28981,"byte_end":28984,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28989,"byte_end":28996,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29001,"byte_end":29033,"line_start":853,"line_end":853,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29038,"byte_end":29041,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29046,"byte_end":29080,"line_start":855,"line_end":855,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29085,"byte_end":29110,"line_start":856,"line_end":856,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29115,"byte_end":29122,"line_start":857,"line_end":857,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29695,"byte_end":29702,"line_start":879,"line_end":879,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29253,"byte_end":29295,"line_start":865,"line_end":865,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29300,"byte_end":29303,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29308,"byte_end":29322,"line_start":867,"line_end":867,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29327,"byte_end":29330,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29335,"byte_end":29342,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29347,"byte_end":29403,"line_start":870,"line_end":870,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29408,"byte_end":29452,"line_start":871,"line_end":871,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29457,"byte_end":29460,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29465,"byte_end":29492,"line_start":873,"line_end":873,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29497,"byte_end":29527,"line_start":874,"line_end":874,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29532,"byte_end":29577,"line_start":875,"line_end":875,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29582,"byte_end":29620,"line_start":876,"line_end":876,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29625,"byte_end":29671,"line_start":877,"line_end":877,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29676,"byte_end":29683,"line_start":878,"line_end":878,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30233,"byte_end":30239,"line_start":899,"line_end":899,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn (&self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29763,"byte_end":29823,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29828,"byte_end":29831,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29836,"byte_end":29850,"line_start":885,"line_end":885,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29855,"byte_end":29858,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29863,"byte_end":29870,"line_start":887,"line_end":887,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29875,"byte_end":29931,"line_start":888,"line_end":888,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29936,"byte_end":29980,"line_start":889,"line_end":889,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29985,"byte_end":29988,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":29993,"byte_end":30022,"line_start":891,"line_end":891,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30027,"byte_end":30057,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30062,"byte_end":30090,"line_start":893,"line_end":893,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30095,"byte_end":30098,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30103,"byte_end":30133,"line_start":895,"line_end":895,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30138,"byte_end":30172,"line_start":896,"line_end":896,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30177,"byte_end":30209,"line_start":897,"line_end":897,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30214,"byte_end":30221,"line_start":898,"line_end":898,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31518,"byte_end":31523,"line_start":935,"line_end":935,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"fn (&self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30339,"byte_end":30368,"line_start":904,"line_end":904,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30373,"byte_end":30376,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30381,"byte_end":30459,"line_start":906,"line_end":906,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30464,"byte_end":30467,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30472,"byte_end":30484,"line_start":908,"line_end":908,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30489,"byte_end":30492,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30497,"byte_end":30582,"line_start":910,"line_end":910,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30587,"byte_end":30590,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30595,"byte_end":30685,"line_start":912,"line_end":912,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30690,"byte_end":30739,"line_start":913,"line_end":913,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30744,"byte_end":30747,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30752,"byte_end":30824,"line_start":915,"line_end":915,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30829,"byte_end":30904,"line_start":916,"line_end":916,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30909,"byte_end":30912,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":30917,"byte_end":31010,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31015,"byte_end":31108,"line_start":919,"line_end":919,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31113,"byte_end":31151,"line_start":920,"line_end":920,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31156,"byte_end":31159,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31164,"byte_end":31178,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31183,"byte_end":31186,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31191,"byte_end":31198,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31203,"byte_end":31252,"line_start":925,"line_end":925,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31257,"byte_end":31301,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31306,"byte_end":31309,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31314,"byte_end":31344,"line_start":928,"line_end":928,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31349,"byte_end":31379,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31384,"byte_end":31418,"line_start":930,"line_end":930,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31423,"byte_end":31435,"line_start":931,"line_end":931,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31440,"byte_end":31477,"line_start":932,"line_end":932,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31482,"byte_end":31487,"line_start":933,"line_end":933,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31492,"byte_end":31499,"line_start":934,"line_end":934,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32791,"byte_end":32797,"line_start":970,"line_end":970,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"fn (&self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31577,"byte_end":31617,"line_start":939,"line_end":939,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31622,"byte_end":31625,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31630,"byte_end":31725,"line_start":941,"line_end":941,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31730,"byte_end":31733,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31738,"byte_end":31750,"line_start":943,"line_end":943,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31755,"byte_end":31758,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31763,"byte_end":31848,"line_start":945,"line_end":945,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31853,"byte_end":31856,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31861,"byte_end":31951,"line_start":947,"line_end":947,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":31956,"byte_end":32005,"line_start":948,"line_end":948,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32010,"byte_end":32013,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32018,"byte_end":32090,"line_start":950,"line_end":950,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32095,"byte_end":32170,"line_start":951,"line_end":951,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32175,"byte_end":32178,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32183,"byte_end":32276,"line_start":953,"line_end":953,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32281,"byte_end":32374,"line_start":954,"line_end":954,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32379,"byte_end":32417,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32422,"byte_end":32425,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32430,"byte_end":32444,"line_start":957,"line_end":957,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32449,"byte_end":32452,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32457,"byte_end":32464,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32469,"byte_end":32518,"line_start":960,"line_end":960,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32523,"byte_end":32567,"line_start":961,"line_end":961,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32572,"byte_end":32575,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32580,"byte_end":32610,"line_start":963,"line_end":963,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32615,"byte_end":32645,"line_start":964,"line_end":964,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32650,"byte_end":32684,"line_start":965,"line_end":965,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32689,"byte_end":32701,"line_start":966,"line_end":966,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32706,"byte_end":32750,"line_start":967,"line_end":967,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32755,"byte_end":32760,"line_start":968,"line_end":968,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32765,"byte_end":32772,"line_start":969,"line_end":969,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33536,"byte_end":33546,"line_start":998,"line_end":998,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"fn (self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32866,"byte_end":32901,"line_start":974,"line_end":974,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32906,"byte_end":32909,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32914,"byte_end":32926,"line_start":976,"line_end":976,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32931,"byte_end":32934,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":32939,"byte_end":32998,"line_start":978,"line_end":978,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33003,"byte_end":33006,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33011,"byte_end":33023,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33028,"byte_end":33031,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33036,"byte_end":33123,"line_start":982,"line_end":982,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33128,"byte_end":33161,"line_start":983,"line_end":983,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33166,"byte_end":33169,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33174,"byte_end":33188,"line_start":985,"line_end":985,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33193,"byte_end":33196,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33201,"byte_end":33208,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33213,"byte_end":33262,"line_start":988,"line_end":988,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33267,"byte_end":33311,"line_start":989,"line_end":989,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33316,"byte_end":33319,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33324,"byte_end":33354,"line_start":991,"line_end":991,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33359,"byte_end":33371,"line_start":992,"line_end":992,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33376,"byte_end":33418,"line_start":993,"line_end":993,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33423,"byte_end":33461,"line_start":994,"line_end":994,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33466,"byte_end":33495,"line_start":995,"line_end":995,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33500,"byte_end":33505,"line_start":996,"line_end":996,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33510,"byte_end":33517,"line_start":997,"line_end":997,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34153,"byte_end":34156,"line_start":1019,"line_end":1019,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33745,"byte_end":33791,"line_start":1006,"line_end":1006,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33796,"byte_end":33799,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33804,"byte_end":33818,"line_start":1008,"line_end":1008,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33823,"byte_end":33826,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33831,"byte_end":33838,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33843,"byte_end":33899,"line_start":1011,"line_end":1011,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33904,"byte_end":33948,"line_start":1012,"line_end":1012,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33953,"byte_end":33956,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":33961,"byte_end":34023,"line_start":1014,"line_end":1014,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34028,"byte_end":34058,"line_start":1015,"line_end":1015,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34063,"byte_end":34097,"line_start":1016,"line_end":1016,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34102,"byte_end":34129,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34134,"byte_end":34141,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34831,"byte_end":34839,"line_start":1042,"line_end":1042,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn (&self, tag: usize) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34253,"byte_end":34343,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34348,"byte_end":34386,"line_start":1025,"line_end":1025,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34391,"byte_end":34394,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34399,"byte_end":34413,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34418,"byte_end":34421,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34426,"byte_end":34433,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34438,"byte_end":34487,"line_start":1030,"line_end":1030,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34492,"byte_end":34536,"line_start":1031,"line_end":1031,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34541,"byte_end":34544,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34549,"byte_end":34579,"line_start":1033,"line_end":1033,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34584,"byte_end":34614,"line_start":1034,"line_end":1034,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34619,"byte_end":34654,"line_start":1035,"line_end":1035,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34659,"byte_end":34687,"line_start":1036,"line_end":1036,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34692,"byte_end":34695,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34700,"byte_end":34728,"line_start":1038,"line_end":1038,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34733,"byte_end":34761,"line_start":1039,"line_end":1039,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34766,"byte_end":34807,"line_start":1040,"line_end":1040,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34812,"byte_end":34819,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37168,"byte_end":37177,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37119,"byte_end":37156,"line_start":22,"line_end":22,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37349,"byte_end":37352,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37309,"byte_end":37337,"line_start":31,"line_end":31,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37487,"byte_end":37495,"line_start":37,"line_end":37,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn (&self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37430,"byte_end":37475,"line_start":36,"line_end":36,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38149,"byte_end":38160,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38101,"byte_end":38137,"line_start":63,"line_end":63,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38271,"byte_end":38274,"line_start":71,"line_end":71,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn (&self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38225,"byte_end":38245,"line_start":69,"line_end":69,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38250,"byte_end":38259,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38412,"byte_end":38421,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38343,"byte_end":38386,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38391,"byte_end":38400,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38577,"byte_end":38586,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn (&self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38495,"byte_end":38551,"line_start":81,"line_end":81,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38556,"byte_end":38565,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":279},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48630,"byte_end":48633,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn () -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48584,"byte_end":48612,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48613,"byte_end":48622,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":281},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48758,"byte_end":48767,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48689,"byte_end":48740,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48741,"byte_end":48750,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":283},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48877,"byte_end":48894,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn () -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/default.rs","byte_start":48828,"byte_end":48869,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":336},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59070,"byte_end":59075,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":337}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57172,"byte_end":57221,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57222,"byte_end":57225,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57226,"byte_end":57239,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57240,"byte_end":57243,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57244,"byte_end":57323,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57324,"byte_end":57327,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57328,"byte_end":57335,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57336,"byte_end":57369,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57370,"byte_end":57373,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57374,"byte_end":57472,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57473,"byte_end":57565,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57566,"byte_end":57596,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57597,"byte_end":57604,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57605,"byte_end":57608,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57609,"byte_end":57685,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57686,"byte_end":57689,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57690,"byte_end":57717,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57718,"byte_end":57721,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57722,"byte_end":57809,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57810,"byte_end":57826,"line_start":29,"line_end":29,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57827,"byte_end":57830,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57831,"byte_end":57838,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57839,"byte_end":57895,"line_start":32,"line_end":32,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57896,"byte_end":57940,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57941,"byte_end":57944,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57945,"byte_end":57983,"line_start":35,"line_end":35,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":57984,"byte_end":58013,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58014,"byte_end":58017,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58018,"byte_end":58048,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58049,"byte_end":58079,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58080,"byte_end":58083,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58084,"byte_end":58158,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58159,"byte_end":58193,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58194,"byte_end":58197,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58198,"byte_end":58249,"line_start":44,"line_end":44,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58250,"byte_end":58296,"line_start":45,"line_end":45,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58297,"byte_end":58340,"line_start":46,"line_end":46,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58341,"byte_end":58346,"line_start":47,"line_end":47,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58347,"byte_end":58354,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58355,"byte_end":58358,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58359,"byte_end":58380,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58381,"byte_end":58384,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58385,"byte_end":58480,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58481,"byte_end":58579,"line_start":53,"line_end":53,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58580,"byte_end":58599,"line_start":54,"line_end":54,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58600,"byte_end":58603,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58604,"byte_end":58611,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58612,"byte_end":58645,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58646,"byte_end":58649,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58650,"byte_end":58680,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58681,"byte_end":58711,"line_start":60,"line_end":60,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58712,"byte_end":58744,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58745,"byte_end":58762,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58763,"byte_end":58795,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58796,"byte_end":58813,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58814,"byte_end":58847,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58848,"byte_end":58855,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58856,"byte_end":58859,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The same can be achieved by cloning guards:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58860,"byte_end":58907,"line_start":68,"line_end":68,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58908,"byte_end":58911,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58912,"byte_end":58919,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58920,"byte_end":58953,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58954,"byte_end":58957,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58958,"byte_end":58988,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/ let guard2 = guard1.clone();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":58989,"byte_end":59021,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59022,"byte_end":59029,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59030,"byte_end":59033,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59034,"byte_end":59058,"line_start":77,"line_end":77,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60103,"byte_end":60108,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn <F, R> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59134,"byte_end":59223,"line_start":83,"line_end":83,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59228,"byte_end":59253,"line_start":84,"line_end":84,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59258,"byte_end":59261,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59266,"byte_end":59359,"line_start":86,"line_end":86,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59364,"byte_end":59452,"line_start":87,"line_end":87,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59457,"byte_end":59547,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59552,"byte_end":59592,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59597,"byte_end":59600,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59605,"byte_end":59695,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59700,"byte_end":59791,"line_start":92,"line_end":92,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59796,"byte_end":59883,"line_start":93,"line_end":93,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59888,"byte_end":59908,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59913,"byte_end":59916,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59921,"byte_end":60008,"line_start":96,"line_end":96,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60013,"byte_end":60038,"line_start":97,"line_end":97,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60043,"byte_end":60046,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60051,"byte_end":60091,"line_start":99,"line_end":99,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64465,"byte_end":64480,"line_start":200,"line_end":200,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"fn <F, R> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60272,"byte_end":60361,"line_start":110,"line_end":110,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60366,"byte_end":60391,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60396,"byte_end":60399,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60404,"byte_end":60497,"line_start":113,"line_end":113,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60502,"byte_end":60590,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60595,"byte_end":60685,"line_start":115,"line_end":115,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60690,"byte_end":60730,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60735,"byte_end":60738,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60743,"byte_end":60833,"line_start":118,"line_end":118,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60838,"byte_end":60929,"line_start":119,"line_end":119,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":60934,"byte_end":61021,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61026,"byte_end":61046,"line_start":121,"line_end":121,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61051,"byte_end":61054,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61059,"byte_end":61146,"line_start":123,"line_end":123,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61151,"byte_end":61176,"line_start":124,"line_end":124,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61181,"byte_end":61184,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61189,"byte_end":61201,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61206,"byte_end":61209,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61214,"byte_end":61306,"line_start":128,"line_end":128,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61311,"byte_end":61398,"line_start":129,"line_end":129,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61403,"byte_end":61415,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61420,"byte_end":61423,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61428,"byte_end":61435,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61440,"byte_end":61473,"line_start":133,"line_end":133,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61478,"byte_end":61481,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61486,"byte_end":61516,"line_start":135,"line_end":135,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61521,"byte_end":61548,"line_start":136,"line_end":136,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61553,"byte_end":61565,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61570,"byte_end":61645,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61650,"byte_end":61689,"line_start":139,"line_end":139,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61694,"byte_end":61730,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61735,"byte_end":61746,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61751,"byte_end":61756,"line_start":142,"line_end":142,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61761,"byte_end":61768,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61773,"byte_end":61776,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61781,"byte_end":61875,"line_start":145,"line_end":145,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61880,"byte_end":61911,"line_start":146,"line_end":146,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61916,"byte_end":61919,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":61924,"byte_end":62019,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62024,"byte_end":62116,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62121,"byte_end":62210,"line_start":150,"line_end":150,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62215,"byte_end":62218,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62223,"byte_end":62236,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62241,"byte_end":62294,"line_start":153,"line_end":153,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62299,"byte_end":62381,"line_start":154,"line_end":154,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62386,"byte_end":62393,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62398,"byte_end":62401,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62406,"byte_end":62499,"line_start":157,"line_end":157,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62504,"byte_end":62599,"line_start":158,"line_end":158,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62604,"byte_end":62664,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62669,"byte_end":62672,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62677,"byte_end":62691,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62696,"byte_end":62699,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62704,"byte_end":62790,"line_start":163,"line_end":163,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62795,"byte_end":62889,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62894,"byte_end":62990,"line_start":165,"line_end":165,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":62995,"byte_end":63087,"line_start":166,"line_end":166,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63092,"byte_end":63148,"line_start":167,"line_end":167,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63153,"byte_end":63156,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63161,"byte_end":63172,"line_start":169,"line_end":169,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63177,"byte_end":63233,"line_start":170,"line_end":170,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63238,"byte_end":63282,"line_start":171,"line_end":171,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63287,"byte_end":63290,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63295,"byte_end":63326,"line_start":173,"line_end":173,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63331,"byte_end":63334,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63339,"byte_end":63416,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63421,"byte_end":63452,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63457,"byte_end":63460,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63465,"byte_end":63495,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63500,"byte_end":63530,"line_start":179,"line_end":179,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63535,"byte_end":63538,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63543,"byte_end":63620,"line_start":181,"line_end":181,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63625,"byte_end":63697,"line_start":182,"line_end":182,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63702,"byte_end":63705,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63710,"byte_end":63731,"line_start":184,"line_end":184,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63736,"byte_end":63796,"line_start":185,"line_end":185,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63801,"byte_end":63883,"line_start":186,"line_end":186,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63888,"byte_end":63904,"line_start":187,"line_end":187,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63909,"byte_end":63988,"line_start":188,"line_end":188,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":63993,"byte_end":64036,"line_start":189,"line_end":189,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64041,"byte_end":64109,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64114,"byte_end":64206,"line_start":191,"line_end":191,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64211,"byte_end":64295,"line_start":192,"line_end":192,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64300,"byte_end":64337,"line_start":193,"line_end":193,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64342,"byte_end":64357,"line_start":194,"line_end":194,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64362,"byte_end":64371,"line_start":195,"line_end":195,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64376,"byte_end":64381,"line_start":196,"line_end":196,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64386,"byte_end":64393,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64398,"byte_end":64401,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64406,"byte_end":64446,"line_start":199,"line_end":199,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68084,"byte_end":68097,"line_start":279,"line_end":279,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"fn <T> (&self, ptr: Shared<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64679,"byte_end":64772,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64777,"byte_end":64829,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64834,"byte_end":64837,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64842,"byte_end":64935,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":64940,"byte_end":65030,"line_start":213,"line_end":213,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65035,"byte_end":65124,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65129,"byte_end":65183,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65188,"byte_end":65191,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65196,"byte_end":65289,"line_start":217,"line_end":217,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65294,"byte_end":65387,"line_start":218,"line_end":218,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65392,"byte_end":65485,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65490,"byte_end":65521,"line_start":220,"line_end":220,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65526,"byte_end":65529,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65534,"byte_end":65623,"line_start":222,"line_end":222,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65628,"byte_end":65653,"line_start":223,"line_end":223,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65658,"byte_end":65661,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65666,"byte_end":65678,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65683,"byte_end":65686,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65691,"byte_end":65784,"line_start":227,"line_end":227,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65789,"byte_end":65822,"line_start":228,"line_end":228,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65827,"byte_end":65830,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65835,"byte_end":65930,"line_start":230,"line_end":230,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65935,"byte_end":65973,"line_start":231,"line_end":231,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65978,"byte_end":65981,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":65986,"byte_end":66081,"line_start":233,"line_end":233,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66086,"byte_end":66178,"line_start":234,"line_end":234,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66183,"byte_end":66272,"line_start":235,"line_end":235,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66277,"byte_end":66280,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66285,"byte_end":66298,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66303,"byte_end":66356,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66361,"byte_end":66420,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66425,"byte_end":66432,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66437,"byte_end":66440,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66445,"byte_end":66539,"line_start":242,"line_end":242,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66544,"byte_end":66631,"line_start":243,"line_end":243,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66636,"byte_end":66696,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66701,"byte_end":66704,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66709,"byte_end":66723,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66728,"byte_end":66731,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66736,"byte_end":66822,"line_start":248,"line_end":248,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66827,"byte_end":66921,"line_start":249,"line_end":249,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":66926,"byte_end":67022,"line_start":250,"line_end":250,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67027,"byte_end":67119,"line_start":251,"line_end":251,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67124,"byte_end":67180,"line_start":252,"line_end":252,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67185,"byte_end":67188,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67193,"byte_end":67204,"line_start":254,"line_end":254,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67209,"byte_end":67265,"line_start":255,"line_end":255,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67270,"byte_end":67314,"line_start":256,"line_end":256,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67319,"byte_end":67322,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67327,"byte_end":67358,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67363,"byte_end":67366,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67371,"byte_end":67448,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67453,"byte_end":67484,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67489,"byte_end":67492,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67497,"byte_end":67527,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67532,"byte_end":67562,"line_start":264,"line_end":264,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67567,"byte_end":67570,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67575,"byte_end":67652,"line_start":266,"line_end":266,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67657,"byte_end":67729,"line_start":267,"line_end":267,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67734,"byte_end":67737,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67742,"byte_end":67763,"line_start":269,"line_end":269,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67768,"byte_end":67828,"line_start":270,"line_end":270,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67833,"byte_end":67915,"line_start":271,"line_end":271,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67920,"byte_end":67936,"line_start":272,"line_end":272,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67941,"byte_end":67976,"line_start":273,"line_end":273,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67981,"byte_end":67990,"line_start":274,"line_end":274,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":67995,"byte_end":68000,"line_start":275,"line_end":275,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68005,"byte_end":68012,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68017,"byte_end":68020,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68025,"byte_end":68065,"line_start":278,"line_end":278,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69070,"byte_end":69075,"line_start":307,"line_end":307,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68193,"byte_end":68288,"line_start":283,"line_end":283,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68293,"byte_end":68310,"line_start":284,"line_end":284,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68315,"byte_end":68318,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68323,"byte_end":68417,"line_start":286,"line_end":286,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68422,"byte_end":68514,"line_start":287,"line_end":287,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68519,"byte_end":68587,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68592,"byte_end":68595,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68600,"byte_end":68692,"line_start":290,"line_end":290,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68697,"byte_end":68700,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68705,"byte_end":68719,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68724,"byte_end":68727,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68732,"byte_end":68739,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68744,"byte_end":68777,"line_start":295,"line_end":295,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68782,"byte_end":68785,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68790,"byte_end":68820,"line_start":297,"line_end":297,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68825,"byte_end":68837,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68842,"byte_end":68871,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68876,"byte_end":68944,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68949,"byte_end":68960,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68965,"byte_end":68970,"line_start":302,"line_end":302,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68975,"byte_end":68993,"line_start":303,"line_end":303,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":68998,"byte_end":69005,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69010,"byte_end":69013,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69018,"byte_end":69058,"line_start":306,"line_end":306,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70348,"byte_end":70353,"line_start":344,"line_end":344,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69199,"byte_end":69250,"line_start":313,"line_end":313,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69255,"byte_end":69258,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69263,"byte_end":69353,"line_start":315,"line_end":315,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69358,"byte_end":69452,"line_start":316,"line_end":316,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69457,"byte_end":69551,"line_start":317,"line_end":317,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69556,"byte_end":69608,"line_start":318,"line_end":318,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69613,"byte_end":69616,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69621,"byte_end":69714,"line_start":320,"line_end":320,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69719,"byte_end":69722,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69727,"byte_end":69741,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69746,"byte_end":69749,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69754,"byte_end":69761,"line_start":324,"line_end":324,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69766,"byte_end":69815,"line_start":325,"line_end":325,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69820,"byte_end":69864,"line_start":326,"line_end":326,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69869,"byte_end":69889,"line_start":327,"line_end":327,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69894,"byte_end":69922,"line_start":328,"line_end":328,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69927,"byte_end":69930,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69935,"byte_end":69964,"line_start":330,"line_end":330,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":69969,"byte_end":70002,"line_start":331,"line_end":331,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70007,"byte_end":70012,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70017,"byte_end":70056,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70061,"byte_end":70115,"line_start":334,"line_end":334,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70120,"byte_end":70125,"line_start":335,"line_end":335,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70130,"byte_end":70148,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70153,"byte_end":70158,"line_start":337,"line_end":337,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70163,"byte_end":70202,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70207,"byte_end":70261,"line_start":339,"line_end":339,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70266,"byte_end":70271,"line_start":340,"line_end":340,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70276,"byte_end":70283,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70288,"byte_end":70291,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70296,"byte_end":70336,"line_start":343,"line_end":343,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71733,"byte_end":71744,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn <F, R> (&mut self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70477,"byte_end":70568,"line_start":350,"line_end":350,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70573,"byte_end":70576,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70581,"byte_end":70672,"line_start":352,"line_end":352,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70677,"byte_end":70773,"line_start":353,"line_end":353,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70778,"byte_end":70872,"line_start":354,"line_end":354,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70877,"byte_end":70896,"line_start":355,"line_end":355,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70901,"byte_end":70904,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":70909,"byte_end":71003,"line_start":357,"line_end":357,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71008,"byte_end":71050,"line_start":358,"line_end":358,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71055,"byte_end":71058,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71063,"byte_end":71077,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71082,"byte_end":71085,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71090,"byte_end":71097,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71102,"byte_end":71151,"line_start":363,"line_end":363,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71156,"byte_end":71200,"line_start":364,"line_end":364,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71205,"byte_end":71225,"line_start":365,"line_end":365,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71230,"byte_end":71258,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71263,"byte_end":71266,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71271,"byte_end":71300,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71305,"byte_end":71338,"line_start":369,"line_end":369,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71343,"byte_end":71348,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71353,"byte_end":71392,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71397,"byte_end":71451,"line_start":372,"line_end":372,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71456,"byte_end":71461,"line_start":373,"line_end":373,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71466,"byte_end":71533,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71538,"byte_end":71543,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71548,"byte_end":71587,"line_start":376,"line_end":376,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71592,"byte_end":71646,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71651,"byte_end":71656,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71661,"byte_end":71668,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71673,"byte_end":71676,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":71681,"byte_end":71721,"line_start":381,"line_end":381,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72951,"byte_end":72960,"line_start":422,"line_end":422,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn (&self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72349,"byte_end":72404,"line_start":404,"line_end":404,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72409,"byte_end":72412,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72417,"byte_end":72492,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72497,"byte_end":72547,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72552,"byte_end":72555,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72560,"byte_end":72644,"line_start":409,"line_end":409,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72649,"byte_end":72652,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72657,"byte_end":72671,"line_start":411,"line_end":411,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72676,"byte_end":72679,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72684,"byte_end":72691,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72696,"byte_end":72729,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72734,"byte_end":72737,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72742,"byte_end":72776,"line_start":416,"line_end":416,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72781,"byte_end":72815,"line_start":417,"line_end":417,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72820,"byte_end":72874,"line_start":418,"line_end":418,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72879,"byte_end":72886,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72891,"byte_end":72894,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":72899,"byte_end":72939,"line_start":421,"line_end":421,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76513,"byte_end":76524,"line_start":538,"line_end":538,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"fn () -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73601,"byte_end":73688,"line_start":452,"line_end":452,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73689,"byte_end":73692,"line_start":453,"line_end":453,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73693,"byte_end":73788,"line_start":454,"line_end":454,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73789,"byte_end":73878,"line_start":455,"line_end":455,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73879,"byte_end":73882,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73883,"byte_end":73976,"line_start":457,"line_end":457,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73977,"byte_end":74014,"line_start":458,"line_end":458,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74015,"byte_end":74018,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74019,"byte_end":74115,"line_start":460,"line_end":460,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74116,"byte_end":74119,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74120,"byte_end":74132,"line_start":462,"line_end":462,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74133,"byte_end":74136,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74137,"byte_end":74227,"line_start":464,"line_end":464,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74228,"byte_end":74295,"line_start":465,"line_end":465,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74296,"byte_end":74299,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74300,"byte_end":74314,"line_start":467,"line_end":467,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74315,"byte_end":74318,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74319,"byte_end":74326,"line_start":469,"line_end":469,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74327,"byte_end":74376,"line_start":470,"line_end":470,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74377,"byte_end":74422,"line_start":471,"line_end":471,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74423,"byte_end":74426,"line_start":472,"line_end":472,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74427,"byte_end":74454,"line_start":473,"line_end":473,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74455,"byte_end":74458,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74459,"byte_end":74471,"line_start":475,"line_end":475,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74472,"byte_end":74527,"line_start":476,"line_end":476,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74528,"byte_end":74574,"line_start":477,"line_end":477,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74575,"byte_end":74578,"line_start":478,"line_end":478,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74579,"byte_end":74653,"line_start":479,"line_end":479,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74654,"byte_end":74704,"line_start":480,"line_end":480,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74705,"byte_end":74708,"line_start":481,"line_end":481,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74709,"byte_end":74738,"line_start":482,"line_end":482,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74739,"byte_end":74795,"line_start":483,"line_end":483,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74796,"byte_end":74807,"line_start":484,"line_end":484,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74808,"byte_end":74811,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74812,"byte_end":74893,"line_start":486,"line_end":486,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74894,"byte_end":74899,"line_start":487,"line_end":487,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74900,"byte_end":74907,"line_start":488,"line_end":488,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74908,"byte_end":74911,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":74912,"byte_end":75006,"line_start":490,"line_end":490,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75007,"byte_end":75010,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75011,"byte_end":75105,"line_start":492,"line_end":492,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75106,"byte_end":75191,"line_start":493,"line_end":493,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75192,"byte_end":75195,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75196,"byte_end":75295,"line_start":495,"line_end":495,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75296,"byte_end":75394,"line_start":496,"line_end":496,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75395,"byte_end":75415,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75416,"byte_end":75419,"line_start":498,"line_end":498,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75420,"byte_end":75427,"line_start":499,"line_end":499,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75428,"byte_end":75477,"line_start":500,"line_end":500,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75478,"byte_end":75509,"line_start":501,"line_end":501,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75510,"byte_end":75555,"line_start":502,"line_end":502,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75556,"byte_end":75559,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75560,"byte_end":75581,"line_start":504,"line_end":504,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75582,"byte_end":75612,"line_start":505,"line_end":505,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75613,"byte_end":75618,"line_start":506,"line_end":506,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75619,"byte_end":75622,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75623,"byte_end":75643,"line_start":508,"line_end":508,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75644,"byte_end":75674,"line_start":509,"line_end":509,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75675,"byte_end":75705,"line_start":510,"line_end":510,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75706,"byte_end":75711,"line_start":511,"line_end":511,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75712,"byte_end":75715,"line_start":512,"line_end":512,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75716,"byte_end":75747,"line_start":513,"line_end":513,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75748,"byte_end":75776,"line_start":514,"line_end":514,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75777,"byte_end":75797,"line_start":515,"line_end":515,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75798,"byte_end":75834,"line_start":516,"line_end":516,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75835,"byte_end":75912,"line_start":517,"line_end":517,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75913,"byte_end":75916,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75917,"byte_end":75968,"line_start":519,"line_end":519,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":75969,"byte_end":76009,"line_start":520,"line_end":520,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76010,"byte_end":76084,"line_start":521,"line_end":521,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76085,"byte_end":76088,"line_start":522,"line_end":522,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76089,"byte_end":76177,"line_start":523,"line_end":523,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76178,"byte_end":76228,"line_start":524,"line_end":524,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76229,"byte_end":76281,"line_start":525,"line_end":525,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76282,"byte_end":76310,"line_start":526,"line_end":526,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76311,"byte_end":76314,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76315,"byte_end":76347,"line_start":528,"line_end":528,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76348,"byte_end":76365,"line_start":529,"line_end":529,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76366,"byte_end":76379,"line_start":530,"line_end":530,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76380,"byte_end":76389,"line_start":531,"line_end":531,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76390,"byte_end":76395,"line_start":532,"line_end":532,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76396,"byte_end":76403,"line_start":533,"line_end":533,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76404,"byte_end":76407,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76408,"byte_end":76442,"line_start":535,"line_end":535,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76443,"byte_end":76488,"line_start":536,"line_end":536,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":76489,"byte_end":76498,"line_start":537,"line_end":537,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4985,"byte_end":5003,"line_start":36,"line_end":36,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":6177,"byte_end":6185,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8003,"byte_end":8009,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8053,"byte_end":8059,"line_start":134,"line_end":134,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8075,"byte_end":8081,"line_start":136,"line_end":136,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20016,"byte_end":20022,"line_start":476,"line_end":476,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20346,"byte_end":20352,"line_start":488,"line_end":488,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20582,"byte_end":20588,"line_start":496,"line_end":496,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20915,"byte_end":20921,"line_start":507,"line_end":507,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21013,"byte_end":21019,"line_start":513,"line_end":513,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21414,"byte_end":21420,"line_start":530,"line_end":530,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21523,"byte_end":21529,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21629,"byte_end":21635,"line_start":542,"line_end":542,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21984,"byte_end":21990,"line_start":557,"line_end":557,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22937,"byte_end":22942,"line_start":593,"line_end":593,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23455,"byte_end":23460,"line_start":616,"line_end":616,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26205,"byte_end":26210,"line_start":719,"line_end":719,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26393,"byte_end":26398,"line_start":728,"line_end":728,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26673,"byte_end":26678,"line_start":739,"line_end":739,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26799,"byte_end":26804,"line_start":745,"line_end":745,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26970,"byte_end":26975,"line_start":754,"line_end":754,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27134,"byte_end":27139,"line_start":761,"line_end":761,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27229,"byte_end":27234,"line_start":767,"line_end":767,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27687,"byte_end":27692,"line_start":786,"line_end":786,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27777,"byte_end":27782,"line_start":792,"line_end":792,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27879,"byte_end":27884,"line_start":798,"line_end":798,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27965,"byte_end":27970,"line_start":804,"line_end":804,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28429,"byte_end":28435,"line_start":821,"line_end":821,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28595,"byte_end":28601,"line_start":830,"line_end":830,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28640,"byte_end":28646,"line_start":832,"line_end":832,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28898,"byte_end":28904,"line_start":847,"line_end":847,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34990,"byte_end":34996,"line_start":1047,"line_end":1047,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35522,"byte_end":35528,"line_start":1068,"line_end":1068,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35639,"byte_end":35645,"line_start":1074,"line_end":1074,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35699,"byte_end":35705,"line_start":1076,"line_end":1076,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35854,"byte_end":35860,"line_start":1082,"line_end":1082,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35992,"byte_end":35998,"line_start":1088,"line_end":1088,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":36282,"byte_end":36288,"line_start":1099,"line_end":1099,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":36435,"byte_end":36441,"line_start":1105,"line_end":1105,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37240,"byte_end":37249,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37274,"byte_end":37283,"line_start":28,"line_end":28,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37293,"byte_end":37302,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37574,"byte_end":37583,"line_start":42,"line_end":42,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37760,"byte_end":37769,"line_start":49,"line_end":49,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37904,"byte_end":37913,"line_start":55,"line_end":55,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38087,"byte_end":38096,"line_start":61,"line_end":61,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38207,"byte_end":38218,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38678,"byte_end":38689,"line_start":88,"line_end":88,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38836,"byte_end":38847,"line_start":97,"line_end":97,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/deferred.rs","byte_start":50569,"byte_end":50577,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/deferred.rs","byte_start":50704,"byte_end":50712,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/epoch.rs","byte_start":54307,"byte_end":54312,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/epoch.rs","byte_start":56004,"byte_end":56015,"line_start":75,"line_end":75,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59122,"byte_end":59127,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73085,"byte_end":73090,"line_start":427,"line_end":427,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73255,"byte_end":73260,"line_start":436,"line_end":436,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73484,"byte_end":73489,"line_start":446,"line_end":446,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":80075,"byte_end":80078,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":80088,"byte_end":80091,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":80910,"byte_end":80913,"line_start":102,"line_end":102,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":81297,"byte_end":81306,"line_start":119,"line_end":119,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":81316,"byte_end":81325,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":82000,"byte_end":82006,"line_start":142,"line_end":142,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":86757,"byte_end":86762,"line_start":273,"line_end":273,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":94535,"byte_end":94540,"line_start":480,"line_end":480,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":100623,"byte_end":100628,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":100743,"byte_end":100748,"line_start":138,"line_end":138,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":101254,"byte_end":101258,"line_start":151,"line_end":151,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":103807,"byte_end":103811,"line_start":216,"line_end":216,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":104337,"byte_end":104341,"line_start":233,"line_end":233,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":113508,"byte_end":113513,"line_start":39,"line_end":39,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":113550,"byte_end":113555,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":113572,"byte_end":113577,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":118429,"byte_end":118434,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":4985,"byte_end":5003,"line_start":36,"line_end":36,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":32},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":6177,"byte_end":6185,"line_start":67,"line_end":67,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":30099},"to":{"krate":0,"index":43}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8003,"byte_end":8009,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1903}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8053,"byte_end":8059,"line_start":134,"line_end":134,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":8075,"byte_end":8081,"line_start":136,"line_end":136,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":60},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20016,"byte_end":20022,"line_start":476,"line_end":476,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20346,"byte_end":20352,"line_start":488,"line_end":488,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":6191}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20582,"byte_end":20588,"line_start":496,"line_end":496,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":20915,"byte_end":20921,"line_start":507,"line_end":507,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21013,"byte_end":21019,"line_start":513,"line_end":513,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21414,"byte_end":21420,"line_start":530,"line_end":530,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21523,"byte_end":21529,"line_start":536,"line_end":536,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21629,"byte_end":21635,"line_start":542,"line_end":542,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":21984,"byte_end":21990,"line_start":557,"line_end":557,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":60},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":22937,"byte_end":22942,"line_start":593,"line_end":593,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":133},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":23455,"byte_end":23460,"line_start":616,"line_end":616,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26205,"byte_end":26210,"line_start":719,"line_end":719,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26393,"byte_end":26398,"line_start":728,"line_end":728,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26673,"byte_end":26678,"line_start":739,"line_end":739,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26799,"byte_end":26804,"line_start":745,"line_end":745,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":2074}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":26970,"byte_end":26975,"line_start":754,"line_end":754,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":2087}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27134,"byte_end":27139,"line_start":761,"line_end":761,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27229,"byte_end":27234,"line_start":767,"line_end":767,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27687,"byte_end":27692,"line_start":786,"line_end":786,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1582}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27777,"byte_end":27782,"line_start":792,"line_end":792,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1585}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27879,"byte_end":27884,"line_start":798,"line_end":798,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1814}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":27965,"byte_end":27970,"line_start":804,"line_end":804,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":133},"to":{"krate":1,"index":1817}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28429,"byte_end":28435,"line_start":821,"line_end":821,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28595,"byte_end":28601,"line_start":830,"line_end":830,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1913}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28640,"byte_end":28646,"line_start":832,"line_end":832,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":184},"to":{"krate":0,"index":129}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":28898,"byte_end":28904,"line_start":847,"line_end":847,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":34990,"byte_end":34996,"line_start":1047,"line_end":1047,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1823}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35522,"byte_end":35528,"line_start":1068,"line_end":1068,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35639,"byte_end":35645,"line_start":1074,"line_end":1074,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35699,"byte_end":35705,"line_start":1076,"line_end":1076,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1669}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35854,"byte_end":35860,"line_start":1082,"line_end":1082,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1658}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":35992,"byte_end":35998,"line_start":1088,"line_end":1088,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":36282,"byte_end":36288,"line_start":1099,"line_end":1099,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":6191}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/atomic.rs","byte_start":36435,"byte_end":36441,"line_start":1105,"line_end":1105,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":184},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37240,"byte_end":37249,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":1903}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37274,"byte_end":37283,"line_start":28,"line_end":28,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37293,"byte_end":37302,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37574,"byte_end":37583,"line_start":42,"line_end":42,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37760,"byte_end":37769,"line_start":49,"line_end":49,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":37904,"byte_end":37913,"line_start":55,"line_end":55,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":1632}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38087,"byte_end":38096,"line_start":61,"line_end":61,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":250},"to":{"krate":1,"index":1637}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38207,"byte_end":38218,"line_start":68,"line_end":68,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38678,"byte_end":38689,"line_start":88,"line_end":88,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":264},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/collector.rs","byte_start":38836,"byte_end":38847,"line_start":97,"line_end":97,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":264},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/deferred.rs","byte_start":50569,"byte_end":50577,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":298},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/deferred.rs","byte_start":50704,"byte_end":50712,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/epoch.rs","byte_start":54307,"byte_end":54312,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/epoch.rs","byte_start":56004,"byte_end":56015,"line_start":75,"line_end":75,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":59122,"byte_end":59127,"line_start":82,"line_end":82,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73085,"byte_end":73090,"line_start":427,"line_end":427,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":336},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73255,"byte_end":73260,"line_start":436,"line_end":436,"column_start":16,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":336},"to":{"krate":1,"index":1604}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/guard.rs","byte_start":73484,"byte_end":73489,"line_start":446,"line_end":446,"column_start":21,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":336},"to":{"krate":1,"index":6176}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":80075,"byte_end":80078,"line_start":71,"line_end":71,"column_start":22,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":1903}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":80088,"byte_end":80091,"line_start":73,"line_end":73,"column_start":6,"column_end":9},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":80910,"byte_end":80913,"line_start":102,"line_end":102,"column_start":15,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":587},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":81297,"byte_end":81306,"line_start":119,"line_end":119,"column_start":22,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":81316,"byte_end":81325,"line_start":121,"line_end":121,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":594},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":82000,"byte_end":82006,"line_start":142,"line_end":142,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":86757,"byte_end":86762,"line_start":273,"line_end":273,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/internal.rs","byte_start":94535,"byte_end":94540,"line_start":480,"line_end":480,"column_start":27,"column_end":32},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":419},"to":{"krate":0,"index":457}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":100623,"byte_end":100628,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":601},"to":{"krate":1,"index":1893}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":100743,"byte_end":100748,"line_start":138,"line_end":138,"column_start":6,"column_end":11},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":101254,"byte_end":101258,"line_start":151,"line_end":151,"column_start":26,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":103807,"byte_end":103811,"line_start":216,"line_end":216,"column_start":35,"column_end":39},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":2098}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/list.rs","byte_start":104337,"byte_end":104341,"line_start":233,"line_end":233,"column_start":47,"column_end":51},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":462},"to":{"krate":1,"index":4965}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":113508,"byte_end":113513,"line_start":39,"line_end":39,"column_start":31,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":622},"to":{"krate":1,"index":1915}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":113550,"byte_end":113555,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":622},"to":{"krate":1,"index":1903}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":113572,"byte_end":113577,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.6.0/src/sync/queue.rs","byte_start":118429,"byte_end":118434,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":622},"to":{"krate":1,"index":2098}}]}