{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52],"program":"/home/raz/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","lock_api","/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"owning_ref\"","-C","metadata=513aaf323d62c26a","-C","extra-filename=-513aaf323d62c26a","--out-dir","/home/raz/code_projects/rust_projects/rust_projects1/gas_rust_cursive_1/target/rls/debug/deps","-L","dependency=/home/raz/code_projects/rust_projects/rust_projects1/gas_rust_cursive_1/target/rls/debug/deps","--extern","owning_ref=/home/raz/code_projects/rust_projects/rust_projects1/gas_rust_cursive_1/target/rls/debug/deps/libowning_ref-0566c138f5b0b02b.rmeta","--extern","scopeguard=/home/raz/code_projects/rust_projects/rust_projects1/gas_rust_cursive_1/target/rls/debug/deps/libscopeguard-a17549f67aa454c1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/raz/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,114,97,122,47,99,111,100,101,95,112,114,111,106,101,99,116,115,47,114,117,115,116,95,112,114,111,106,101,99,116,115,47,114,117,115,116,95,112,114,111,106,101,99,116,115,49,47,103,97,115,95,114,117,115,116,95,99,117,114,115,105,118,101,95,49,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,108,111,99,107,95,97,112,105,45,53,49,51,97,97,102,51,50,51,100,54,50,99,50,54,97,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"lock_api","disambiguator":[2108625629029390361,15592626260763713424]},"crate_root":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src","external_crates":[{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2236793368080327098,16997060216224533012]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[5478884211089383000,4806429128766551161]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14530788838283107744,6003929644675802685]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":4,"id":{"name":"scopeguard","disambiguator":[12712364152000275602,10247977256219409355]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":5,"id":{"name":"owning_ref","disambiguator":[4048568786943888671,16153365167835639149]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[607393612556424429,9773671521127506496]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":7,"id":{"name":"alloc","disambiguator":[16121913191554845183,15370140581578979496]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":8,"id":{"name":"libc","disambiguator":[17657970717755230663,5625781748743226356]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":9,"id":{"name":"rustc_demangle","disambiguator":[12073142616911823173,16566551488124143676]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":10,"id":{"name":"unwind","disambiguator":[10681631311082691939,11904118293459362067]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[6149010843517429234,12947613117674587153]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[211090094582112447,3502162704678605187]}},{"file_name":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","num":13,"id":{"name":"stable_deref_trait","disambiguator":[2123358255547210803,15294373850415442422]}}],"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":333,"byte_end":3973,"line_start":8,"line_end":109,"column_start":1,"column_end":19}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3905,"byte_end":3906,"line_start":103,"line_end":103,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3939,"byte_end":3940,"line_start":106,"line_end":106,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3971,"byte_end":3972,"line_start":109,"line_end":109,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":333,"byte_end":3973,"line_start":8,"line_end":109,"column_start":1,"column_end":19},"name":"","qualname":"::","value":"/home/raz/.cargo/registry/src/github.com-1ecc6299db9ec823/lock_api-0.1.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":742}],"decl_id":null,"docs":" This library provides type-safe and fully-featured `Mutex` and `RwLock`\n types which wrap a simple raw mutex or rwlock type. This has several\n benefits: not only does it eliminate a large portion of the work in\n implementing custom lock types, it also allows users to write code which is\n generic with regards to different lock implementations.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3482,"byte_end":3492,"line_start":86,"line_end":86,"column_start":1,"column_end":11}},{"value":"warn(missing_docs)","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3493,"byte_end":3515,"line_start":87,"line_end":87,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3751,"byte_end":3760,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"GuardSend","qualname":"::GuardSend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type which indicates that the Guard type for a lock is `Send`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3856,"byte_end":3867,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"GuardNoSend","qualname":"::GuardNoSend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Marker type which indicates that the Guard type for a lock is not `Send`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":4829,"byte_end":4837,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"name":"RawMutex","qualname":"::mutex::RawMutex","value":"RawMutex","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44}],"decl_id":null,"docs":" Basic operations for a mutex.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":4895,"byte_end":4899,"line_start":28,"line_end":28,"column_start":11,"column_end":15},"name":"INIT","qualname":"::mutex::RawMutex::INIT","value":"Self","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Initial value for an unlocked mutex.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5064,"byte_end":5075,"line_start":32,"line_end":32,"column_start":10,"column_end":21},"name":"GuardMarker","qualname":"::mutex::RawMutex::GuardMarker","value":"type GuardMarker;","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Marker type which determines whether a lock guard should be `Send`. Use\n one of the `GuardSend` or `GuardNoSend` helper types here.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5169,"byte_end":5173,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lock","qualname":"::mutex::RawMutex::lock","value":"fn (&self) -> ()","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Acquires this mutex, blocking the current thread until it is able to do so.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5247,"byte_end":5255,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"try_lock","qualname":"::mutex::RawMutex::try_lock","value":"fn (&self) -> bool","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Attempts to acquire this mutex without blocking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5308,"byte_end":5314,"line_start":41,"line_end":41,"column_start":8,"column_end":14},"name":"unlock","qualname":"::mutex::RawMutex::unlock","value":"fn (&self) -> ()","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Unlocks this mutex.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":46},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5706,"byte_end":5718,"line_start":50,"line_end":50,"column_start":18,"column_end":30},"name":"RawMutexFair","qualname":"::mutex::RawMutexFair","value":"RawMutexFair: RawMutex","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50}],"decl_id":null,"docs":" Additional methods for mutexes which support fair unlocking.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5795,"byte_end":5806,"line_start":52,"line_end":52,"column_start":8,"column_end":19},"name":"unlock_fair","qualname":"::mutex::RawMutexFair::unlock_fair","value":"fn (&self) -> ()","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Unlocks this mutex using a fair unlock protocol.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6099,"byte_end":6103,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"bump","qualname":"::mutex::RawMutexFair::bump","value":"fn (&self) -> ()","parent":{"krate":0,"index":46},"children":[],"decl_id":null,"docs":" Temporarily yields the mutex to a waiting thread if there is one.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6401,"byte_end":6414,"line_start":69,"line_end":69,"column_start":18,"column_end":31},"name":"RawMutexTimed","qualname":"::mutex::RawMutexTimed","value":"RawMutexTimed: RawMutex","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" Additional methods for mutexes which support locking with timeouts.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6483,"byte_end":6491,"line_start":71,"line_end":71,"column_start":10,"column_end":18},"name":"Duration","qualname":"::mutex::RawMutexTimed::Duration","value":"type Duration;","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Duration type used for `try_lock_for`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6551,"byte_end":6558,"line_start":74,"line_end":74,"column_start":10,"column_end":17},"name":"Instant","qualname":"::mutex::RawMutexTimed::Instant","value":"type Instant;","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Instant type used for `try_lock_until`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6634,"byte_end":6646,"line_start":77,"line_end":77,"column_start":8,"column_end":20},"name":"try_lock_for","qualname":"::mutex::RawMutexTimed::try_lock_for","value":"fn (&self, timeout: Self::Duration) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Attempts to acquire this lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6762,"byte_end":6776,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"try_lock_until","qualname":"::mutex::RawMutexTimed::try_lock_until","value":"fn (&self, timeout: Self::Instant) -> bool","parent":{"krate":0,"index":52},"children":[],"decl_id":null,"docs":" Attempts to acquire this lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7330,"byte_end":7335,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33}],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7967,"byte_end":7970,"line_start":113,"line_end":113,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<R, T>>::new","value":"fn (val: T) -> Mutex<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new mutex in an unlocked state ready for use.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7909,"byte_end":7941,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7946,"byte_end":7955,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":8208,"byte_end":8218,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<R, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":8159,"byte_end":8168,"line_start":121,"line_end":121,"column_start":5,"column_end":14}},{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":8173,"byte_end":8196,"line_start":122,"line_end":122,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":9020,"byte_end":9024,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<R, T>>::lock","value":"fn (&self) -> MutexGuard<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutex, blocking the current thread until it is able to do so.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":8999,"byte_end":9008,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":9413,"byte_end":9421,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<R, T>>::try_lock","value":"fn (&self) -> Option<MutexGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":9392,"byte_end":9401,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":9825,"byte_end":9832,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<R, T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":9804,"byte_end":9813,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":10416,"byte_end":10428,"line_start":189,"line_end":189,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<Mutex<R, T>>::force_unlock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks the mutex.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":10388,"byte_end":10397,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":10865,"byte_end":10868,"line_start":203,"line_end":203,"column_start":19,"column_end":22},"name":"raw","qualname":"<Mutex<R, T>>::raw","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw mutex object.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":10837,"byte_end":10846,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":11499,"byte_end":11516,"line_start":221,"line_end":221,"column_start":19,"column_end":36},"name":"force_unlock_fair","qualname":"<Mutex<R, T>>::force_unlock_fair","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks the mutex using a fair unlock procotol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":11471,"byte_end":11480,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":11916,"byte_end":11928,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"try_lock_for","qualname":"<Mutex<R, T>>::try_lock_for","value":"fn (&self, timeout: R::Duration) -> Option<MutexGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock until a timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":11895,"byte_end":11904,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12415,"byte_end":12429,"line_start":247,"line_end":247,"column_start":12,"column_end":26},"name":"try_lock_until","qualname":"<Mutex<R, T>>::try_lock_until","value":"fn (&self, timeout: R::Instant) -> Option<MutexGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock until a timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12394,"byte_end":12403,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13513,"byte_end":13523,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":79}],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13490,"byte_end":13501,"line_start":284,"line_end":284,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13884,"byte_end":13889,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"mutex","qualname":"<MutexGuard<'a, R, T>>::mutex","value":"fn (s: &Self) -> &'a Mutex<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `Mutex` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":14354,"byte_end":14357,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard<'a, R, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedMutexGuard<'a, R, U>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `MappedMutexGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":14333,"byte_end":14342,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":15187,"byte_end":15194,"line_start":331,"line_end":331,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard<'a, R, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedMutexGuard<'a, R, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedMutexGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":15166,"byte_end":15175,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":15875,"byte_end":15883,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"unlocked","qualname":"<MutexGuard<'a, R, T>>::unlocked","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the mutex to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":15854,"byte_end":15863,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":16899,"byte_end":16910,"line_start":377,"line_end":377,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<MutexGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the mutex using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":16878,"byte_end":16887,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":17280,"byte_end":17293,"line_start":389,"line_end":389,"column_start":12,"column_end":25},"name":"unlocked_fair","qualname":"<MutexGuard<'a, R, T>>::unlocked_fair","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the mutex to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":17259,"byte_end":17268,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":17758,"byte_end":17762,"line_start":404,"line_end":404,"column_start":12,"column_end":16},"name":"bump","qualname":"<MutexGuard<'a, R, T>>::bump","value":"fn (s: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Temporarily yields the mutex to a waiting thread if there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":17737,"byte_end":17746,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18864,"byte_end":18880,"line_start":442,"line_end":442,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149}],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18841,"byte_end":18852,"line_start":441,"line_end":441,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19716,"byte_end":19719,"line_start":465,"line_end":465,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard<'a, R, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedMutexGuard<'a, R, U>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `MappedMutexGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19695,"byte_end":19704,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":20542,"byte_end":20549,"line_start":489,"line_end":489,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard<'a, R, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedMutexGuard<'a, R, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedMutexGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":20521,"byte_end":20530,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":21844,"byte_end":21855,"line_start":521,"line_end":521,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<MappedMutexGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the mutex using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":21823,"byte_end":21832,"line_start":520,"line_end":520,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":216},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":23618,"byte_end":23629,"line_start":30,"line_end":30,"column_start":18,"column_end":29},"name":"GetThreadId","qualname":"::remutex::GetThreadId","value":"GetThreadId","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220}],"decl_id":null,"docs":" Helper trait which returns a non-zero thread ID.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":218},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":23665,"byte_end":23669,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"name":"INIT","qualname":"::remutex::GetThreadId::INIT","value":"Self","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Initial value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":23780,"byte_end":23797,"line_start":36,"line_end":36,"column_start":8,"column_end":25},"name":"nonzero_thread_id","qualname":"::remutex::GetThreadId::nonzero_thread_id","value":"fn (&self) -> usize","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":" Returns a non-zero thread ID which identifies the current thread of\n execution.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":26643,"byte_end":26657,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"ReentrantMutex {  }","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":249}],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":27658,"byte_end":27661,"line_start":169,"line_end":169,"column_start":12,"column_end":15},"name":"new","qualname":"<ReentrantMutex<R, G, T>>::new","value":"fn (val: T) -> ReentrantMutex<R, G, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reentrant mutex in an unlocked state ready for use.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":27600,"byte_end":27632,"line_start":167,"line_end":167,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":27637,"byte_end":27646,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":28104,"byte_end":28114,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ReentrantMutex<R, G, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":28055,"byte_end":28064,"line_start":182,"line_end":182,"column_start":5,"column_end":14}},{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":28069,"byte_end":28092,"line_start":183,"line_end":183,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":29069,"byte_end":29073,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"lock","qualname":"<ReentrantMutex<R, G, T>>::lock","value":"fn (&self) -> ReentrantMutexGuard<R, G, T>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reentrant mutex, blocking the current thread until it is able\n to do so.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":29048,"byte_end":29057,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":29474,"byte_end":29482,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<ReentrantMutex<R, G, T>>::try_lock","value":"fn (&self) -> Option<ReentrantMutexGuard<R, G, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":29453,"byte_end":29462,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":29907,"byte_end":29914,"line_start":235,"line_end":235,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ReentrantMutex<R, G, T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":29886,"byte_end":29895,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":30516,"byte_end":30528,"line_start":251,"line_end":251,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<ReentrantMutex<R, G, T>>::force_unlock","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks the mutex.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":30488,"byte_end":30497,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":30974,"byte_end":30977,"line_start":265,"line_end":265,"column_start":19,"column_end":22},"name":"raw","qualname":"<ReentrantMutex<R, G, T>>::raw","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw mutex object.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":30946,"byte_end":30955,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":31660,"byte_end":31677,"line_start":283,"line_end":283,"column_start":19,"column_end":36},"name":"force_unlock_fair","qualname":"<ReentrantMutex<R, G, T>>::force_unlock_fair","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks the mutex using a fair unlock procotol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":31632,"byte_end":31641,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":32105,"byte_end":32117,"line_start":295,"line_end":295,"column_start":12,"column_end":24},"name":"try_lock_for","qualname":"<ReentrantMutex<R, G, T>>::try_lock_for","value":"fn (&self, timeout: R::Duration) -> Option<ReentrantMutexGuard<R, G, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock until a timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":32084,"byte_end":32093,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":32616,"byte_end":32630,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"try_lock_until","qualname":"<ReentrantMutex<R, G, T>>::try_lock_until","value":"fn (&self, timeout: R::Instant) -> Option<ReentrantMutexGuard<R, G, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock until a timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":32595,"byte_end":32604,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":33915,"byte_end":33934,"line_start":350,"line_end":350,"column_start":12,"column_end":31},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"ReentrantMutexGuard {  }","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":315}],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":33892,"byte_end":33903,"line_start":349,"line_end":349,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34409,"byte_end":34416,"line_start":361,"line_end":361,"column_start":12,"column_end":19},"name":"remutex","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::remutex","value":"fn (s: &Self) -> &'a ReentrantMutex<R, G, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original `ReentrantMutex` object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34922,"byte_end":34925,"line_start":374,"line_end":374,"column_start":12,"column_end":15},"name":"map","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedReentrantMutexGuard<'a, R, G, U>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `MappedReentrantMutexGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34901,"byte_end":34910,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":35795,"byte_end":35802,"line_start":398,"line_end":398,"column_start":12,"column_end":19},"name":"try_map","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedReentrantMutexGuard<'a, R, G, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedReentrantMutexGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":35774,"byte_end":35783,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":36508,"byte_end":36516,"line_start":420,"line_end":420,"column_start":12,"column_end":20},"name":"unlocked","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::unlocked","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the mutex to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":36487,"byte_end":36496,"line_start":419,"line_end":419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":37582,"byte_end":37593,"line_start":446,"line_end":446,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the mutex using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":37561,"byte_end":37570,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":37965,"byte_end":37978,"line_start":458,"line_end":458,"column_start":12,"column_end":25},"name":"unlocked_fair","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::unlocked_fair","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the mutex to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":37944,"byte_end":37953,"line_start":457,"line_end":457,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":38447,"byte_end":38451,"line_start":473,"line_end":473,"column_start":12,"column_end":16},"name":"bump","qualname":"<ReentrantMutexGuard<'a, R, G, T>>::bump","value":"fn (s: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Temporarily yields the mutex to a waiting thread if there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":38426,"byte_end":38435,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":328},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39508,"byte_end":39533,"line_start":510,"line_end":510,"column_start":12,"column_end":37},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"MappedReentrantMutexGuard {  }","parent":null,"children":[{"krate":0,"index":389},{"krate":0,"index":391},{"krate":0,"index":393}],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39485,"byte_end":39496,"line_start":509,"line_end":509,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":40394,"byte_end":40397,"line_start":532,"line_end":532,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedReentrantMutexGuard<'a, R, G, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedReentrantMutexGuard<'a, R, G, U>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `MappedReentrantMutexGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":40373,"byte_end":40382,"line_start":531,"line_end":531,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":41256,"byte_end":41263,"line_start":556,"line_end":556,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedReentrantMutexGuard<'a, R, G, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedReentrantMutexGuard<'a, R, G, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedReentrantMutexGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":41235,"byte_end":41244,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":42613,"byte_end":42624,"line_start":590,"line_end":590,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<MappedReentrantMutexGuard<'a, R, G, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the mutex using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":42592,"byte_end":42601,"line_start":589,"line_end":589,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":374},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44247,"byte_end":44256,"line_start":28,"line_end":28,"column_start":18,"column_end":27},"name":"RawRwLock","qualname":"::rwlock::RawRwLock","value":"RawRwLock","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":390}],"decl_id":null,"docs":" Basic operations for a reader-writer lock.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":376},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44317,"byte_end":44321,"line_start":30,"line_end":30,"column_start":11,"column_end":15},"name":"INIT","qualname":"::rwlock::RawRwLock::INIT","value":"Self","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Initial value for an unlocked `RwLock`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":378},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44486,"byte_end":44497,"line_start":34,"line_end":34,"column_start":10,"column_end":21},"name":"GuardMarker","qualname":"::rwlock::RawRwLock::GuardMarker","value":"type GuardMarker;","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Marker type which determines whether a lock guard should be `Send`. Use\n one of the `GuardSend` or `GuardNoSend` helper types here.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44594,"byte_end":44605,"line_start":37,"line_end":37,"column_start":8,"column_end":19},"name":"lock_shared","qualname":"::rwlock::RawRwLock::lock_shared","value":"fn (&self) -> ()","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Acquires a shared lock, blocking the current thread until it is able to do so.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44682,"byte_end":44697,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"try_lock_shared","qualname":"::rwlock::RawRwLock::try_lock_shared","value":"fn (&self) -> bool","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Attempts to acquire a shared lock without blocking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44754,"byte_end":44767,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"unlock_shared","qualname":"::rwlock::RawRwLock::unlock_shared","value":"fn (&self) -> ()","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Releases a shared lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44875,"byte_end":44889,"line_start":46,"line_end":46,"column_start":8,"column_end":22},"name":"lock_exclusive","qualname":"::rwlock::RawRwLock::lock_exclusive","value":"fn (&self) -> ()","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Acquires an exclusive lock, blocking the current thread until it is able to do so.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":44970,"byte_end":44988,"line_start":49,"line_end":49,"column_start":8,"column_end":26},"name":"try_lock_exclusive","qualname":"::rwlock::RawRwLock::try_lock_exclusive","value":"fn (&self) -> bool","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Attempts to acquire an exclusive lock without blocking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":45049,"byte_end":45065,"line_start":52,"line_end":52,"column_start":8,"column_end":24},"name":"unlock_exclusive","qualname":"::rwlock::RawRwLock::unlock_exclusive","value":"fn (&self) -> ()","parent":{"krate":0,"index":374},"children":[],"decl_id":null,"docs":" Releases an exclusive lock.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":392},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":45457,"byte_end":45470,"line_start":61,"line_end":61,"column_start":18,"column_end":31},"name":"RawRwLockFair","qualname":"::rwlock::RawRwLockFair","value":"RawRwLockFair: RawRwLock","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":400}],"decl_id":null,"docs":" Additional methods for RwLocks which support fair unlocking.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":45552,"byte_end":45570,"line_start":63,"line_end":63,"column_start":8,"column_end":26},"name":"unlock_shared_fair","qualname":"::rwlock::RawRwLockFair::unlock_shared_fair","value":"fn (&self) -> ()","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Releases a shared lock using a fair unlock protocol.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":45652,"byte_end":45673,"line_start":66,"line_end":66,"column_start":8,"column_end":29},"name":"unlock_exclusive_fair","qualname":"::rwlock::RawRwLockFair::unlock_exclusive_fair","value":"fn (&self) -> ()","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Releases an exclusive lock using a fair unlock protocol.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":45984,"byte_end":45995,"line_start":73,"line_end":73,"column_start":8,"column_end":19},"name":"bump_shared","qualname":"::rwlock::RawRwLockFair::bump_shared","value":"fn (&self) -> ()","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Temporarily yields a shared lock to a waiting thread if there is one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":46386,"byte_end":46400,"line_start":83,"line_end":83,"column_start":8,"column_end":22},"name":"bump_exclusive","qualname":"::rwlock::RawRwLockFair::bump_exclusive","value":"fn (&self) -> ()","parent":{"krate":0,"index":392},"children":[],"decl_id":null,"docs":" Temporarily yields an exclusive lock to a waiting thread if there is one.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":402},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":46617,"byte_end":46635,"line_start":91,"line_end":91,"column_start":18,"column_end":36},"name":"RawRwLockDowngrade","qualname":"::rwlock::RawRwLockDowngrade","value":"RawRwLockDowngrade: RawRwLock","parent":null,"children":[{"krate":0,"index":404}],"decl_id":null,"docs":" Additional methods for RwLocks which support atomically downgrading an\n exclusive lock to a shared lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":46802,"byte_end":46811,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"downgrade","qualname":"::rwlock::RawRwLockDowngrade::downgrade","value":"fn (&self) -> ()","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" Atomically downgrades an exclusive lock into a shared lock without\n allowing any thread to take an exclusive lock in the meantime.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":406},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47053,"byte_end":47067,"line_start":101,"line_end":101,"column_start":18,"column_end":32},"name":"RawRwLockTimed","qualname":"::rwlock::RawRwLockTimed","value":"RawRwLockTimed: RawRwLock","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418}],"decl_id":null,"docs":" Additional methods for RwLocks which support locking with timeouts.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":408},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47137,"byte_end":47145,"line_start":103,"line_end":103,"column_start":10,"column_end":18},"name":"Duration","qualname":"::rwlock::RawRwLockTimed::Duration","value":"type Duration;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Duration type used for `try_lock_for`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":410},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47205,"byte_end":47212,"line_start":106,"line_end":106,"column_start":10,"column_end":17},"name":"Instant","qualname":"::rwlock::RawRwLockTimed::Instant","value":"type Instant;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Instant type used for `try_lock_until`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47292,"byte_end":47311,"line_start":109,"line_end":109,"column_start":8,"column_end":27},"name":"try_lock_shared_for","qualname":"::rwlock::RawRwLockTimed::try_lock_shared_for","value":"fn (&self, timeout: Self::Duration) -> bool","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Attempts to acquire a shared lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47431,"byte_end":47452,"line_start":112,"line_end":112,"column_start":8,"column_end":29},"name":"try_lock_shared_until","qualname":"::rwlock::RawRwLockTimed::try_lock_shared_until","value":"fn (&self, timeout: Self::Instant) -> bool","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Attempts to acquire a shared lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47575,"byte_end":47597,"line_start":115,"line_end":115,"column_start":8,"column_end":30},"name":"try_lock_exclusive_for","qualname":"::rwlock::RawRwLockTimed::try_lock_exclusive_for","value":"fn (&self, timeout: Self::Duration) -> bool","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Attempts to acquire an exclusive lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47721,"byte_end":47745,"line_start":118,"line_end":118,"column_start":8,"column_end":32},"name":"try_lock_exclusive_until","qualname":"::rwlock::RawRwLockTimed::try_lock_exclusive_until","value":"fn (&self, timeout: Self::Instant) -> bool","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Attempts to acquire an exclusive lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":420},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48178,"byte_end":48196,"line_start":128,"line_end":128,"column_start":18,"column_end":36},"name":"RawRwLockRecursive","qualname":"::rwlock::RawRwLockRecursive","value":"RawRwLockRecursive: RawRwLock","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424}],"decl_id":null,"docs":" Additional methods for RwLocks which support recursive read locks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48297,"byte_end":48318,"line_start":130,"line_end":130,"column_start":8,"column_end":29},"name":"lock_shared_recursive","qualname":"::rwlock::RawRwLockRecursive::lock_shared_recursive","value":"fn (&self) -> ()","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Acquires a shared lock without deadlocking in case of a recursive lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48426,"byte_end":48451,"line_start":133,"line_end":133,"column_start":8,"column_end":33},"name":"try_lock_shared_recursive","qualname":"::rwlock::RawRwLockRecursive::try_lock_shared_recursive","value":"fn (&self) -> bool","parent":{"krate":0,"index":420},"children":[],"decl_id":null,"docs":" Attempts to acquire a shared lock without deadlocking in case of a recursive lock.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":426},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48572,"byte_end":48595,"line_start":137,"line_end":137,"column_start":18,"column_end":41},"name":"RawRwLockRecursiveTimed","qualname":"::rwlock::RawRwLockRecursiveTimed","value":"RawRwLockRecursiveTimed: RawRwLockRecursive + RawRwLockTimed","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":430}],"decl_id":null,"docs":" Additional methods for RwLocks which support recursive read locks and timeouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48769,"byte_end":48798,"line_start":140,"line_end":140,"column_start":8,"column_end":37},"name":"try_lock_shared_recursive_for","qualname":"::rwlock::RawRwLockRecursiveTimed::try_lock_shared_recursive_for","value":"fn (&self, timeout: Self::Duration) -> bool","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Attempts to acquire a shared lock until a timeout is reached, without\n deadlocking in case of a recursive lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48975,"byte_end":49006,"line_start":144,"line_end":144,"column_start":8,"column_end":39},"name":"try_lock_shared_recursive_until","qualname":"::rwlock::RawRwLockRecursiveTimed::try_lock_shared_recursive_until","value":"fn (&self, timeout: Self::Instant) -> bool","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Attempts to acquire a shared lock until a timeout is reached, without\n deadlocking in case of a recursive lock.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":432},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49382,"byte_end":49398,"line_start":153,"line_end":153,"column_start":18,"column_end":34},"name":"RawRwLockUpgrade","qualname":"::rwlock::RawRwLockUpgrade","value":"RawRwLockUpgrade: RawRwLock","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442}],"decl_id":null,"docs":" Additional methods for RwLocks which support atomically upgrading a shared\n lock to an exclusive lock.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49511,"byte_end":49526,"line_start":155,"line_end":155,"column_start":8,"column_end":23},"name":"lock_upgradable","qualname":"::rwlock::RawRwLockUpgrade::lock_upgradable","value":"fn (&self) -> ()","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Acquires an upgradable lock, blocking the current thread until it is able to do so.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49608,"byte_end":49627,"line_start":158,"line_end":158,"column_start":8,"column_end":27},"name":"try_lock_upgradable","qualname":"::rwlock::RawRwLockUpgrade::try_lock_upgradable","value":"fn (&self) -> bool","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Attempts to acquire an upgradable lock without blocking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49689,"byte_end":49706,"line_start":161,"line_end":161,"column_start":8,"column_end":25},"name":"unlock_upgradable","qualname":"::rwlock::RawRwLockUpgrade::unlock_upgradable","value":"fn (&self) -> ()","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Releases an upgradable lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49781,"byte_end":49788,"line_start":164,"line_end":164,"column_start":8,"column_end":15},"name":"upgrade","qualname":"::rwlock::RawRwLockUpgrade::upgrade","value":"fn (&self) -> ()","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Upgrades an upgradable lock to an exclusive lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49899,"byte_end":49910,"line_start":168,"line_end":168,"column_start":8,"column_end":19},"name":"try_upgrade","qualname":"::rwlock::RawRwLockUpgrade::try_upgrade","value":"fn (&self) -> bool","parent":{"krate":0,"index":432},"children":[],"decl_id":null,"docs":" Attempts to upgrade an upgradable lock to an exclusive lock without\n blocking.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":444},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50037,"byte_end":50057,"line_start":173,"line_end":173,"column_start":18,"column_end":38},"name":"RawRwLockUpgradeFair","qualname":"::rwlock::RawRwLockUpgradeFair","value":"RawRwLockUpgradeFair: RawRwLockUpgrade + RawRwLockFair","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":448}],"decl_id":null,"docs":" Additional methods for RwLocks which support upgradable locks and fair\n unlocking.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50167,"byte_end":50189,"line_start":175,"line_end":175,"column_start":8,"column_end":30},"name":"unlock_upgradable_fair","qualname":"::rwlock::RawRwLockUpgradeFair::unlock_upgradable_fair","value":"fn (&self) -> ()","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Releases an upgradable lock using a fair unlock protocol.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50513,"byte_end":50528,"line_start":182,"line_end":182,"column_start":8,"column_end":23},"name":"bump_upgradable","qualname":"::rwlock::RawRwLockUpgradeFair::bump_upgradable","value":"fn (&self) -> ()","parent":{"krate":0,"index":444},"children":[],"decl_id":null,"docs":" Temporarily yields an upgradable lock to a waiting thread if there is one.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":450},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50727,"byte_end":50752,"line_start":190,"line_end":190,"column_start":18,"column_end":43},"name":"RawRwLockUpgradeDowngrade","qualname":"::rwlock::RawRwLockUpgradeDowngrade","value":"RawRwLockUpgradeDowngrade: RawRwLockUpgrade + RawRwLockDowngrade","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":454}],"decl_id":null,"docs":" Additional methods for RwLocks which support upgradable locks and lock\n downgrading.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50857,"byte_end":50877,"line_start":192,"line_end":192,"column_start":8,"column_end":28},"name":"downgrade_upgradable","qualname":"::rwlock::RawRwLockUpgradeDowngrade::downgrade_upgradable","value":"fn (&self) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Downgrades an upgradable lock to a shared lock.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50954,"byte_end":50977,"line_start":195,"line_end":195,"column_start":8,"column_end":31},"name":"downgrade_to_upgradable","qualname":"::rwlock::RawRwLockUpgradeDowngrade::downgrade_to_upgradable","value":"fn (&self) -> ()","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" Downgrades an exclusive lock to an upgradable lock.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":456},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51103,"byte_end":51124,"line_start":200,"line_end":200,"column_start":18,"column_end":39},"name":"RawRwLockUpgradeTimed","qualname":"::rwlock::RawRwLockUpgradeTimed","value":"RawRwLockUpgradeTimed: RawRwLockUpgrade + RawRwLockTimed","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":464}],"decl_id":null,"docs":" Additional methods for RwLocks which support upgradable locks and locking\n with timeouts.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51244,"byte_end":51267,"line_start":202,"line_end":202,"column_start":8,"column_end":31},"name":"try_lock_upgradable_for","qualname":"::rwlock::RawRwLockUpgradeTimed::try_lock_upgradable_for","value":"fn (&self, timeout: Self::Duration) -> bool","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Attempts to acquire an upgradable lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51392,"byte_end":51417,"line_start":205,"line_end":205,"column_start":8,"column_end":33},"name":"try_lock_upgradable_until","qualname":"::rwlock::RawRwLockUpgradeTimed::try_lock_upgradable_until","value":"fn (&self, timeout: Self::Instant) -> bool","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Attempts to acquire an upgradable lock until a timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51570,"byte_end":51585,"line_start":209,"line_end":209,"column_start":8,"column_end":23},"name":"try_upgrade_for","qualname":"::rwlock::RawRwLockUpgradeTimed::try_upgrade_for","value":"fn (&self, timeout: Self::Duration) -> bool","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Attempts to upgrade an upgradable lock to an exclusive lock until a\n timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51739,"byte_end":51756,"line_start":213,"line_end":213,"column_start":8,"column_end":25},"name":"try_upgrade_until","qualname":"::rwlock::RawRwLockUpgradeTimed::try_upgrade_until","value":"fn (&self, timeout: Self::Instant) -> bool","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":" Attempts to upgrade an upgradable lock to an exclusive lock until a\n timeout is reached.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52508,"byte_end":52514,"line_start":228,"line_end":228,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":457}],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53170,"byte_end":53173,"line_start":250,"line_end":250,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<R, T>>::new","value":"fn (val: T) -> RwLock<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"nightly\"))","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53112,"byte_end":53144,"line_start":248,"line_end":248,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53149,"byte_end":53158,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53416,"byte_end":53426,"line_start":260,"line_end":260,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<R, T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `RwLock`, returning the underlying data.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53367,"byte_end":53376,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"allow(unused_unsafe)","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53381,"byte_end":53404,"line_start":259,"line_end":259,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":54487,"byte_end":54491,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"read","qualname":"<RwLock<R, T>>::read","value":"fn (&self) -> RwLockReadGuard<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, blocking the current thread\n until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":54466,"byte_end":54475,"line_start":294,"line_end":294,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":54929,"byte_end":54937,"line_start":308,"line_end":308,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<R, T>>::try_read","value":"fn (&self) -> Option<RwLockReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":54908,"byte_end":54917,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":55487,"byte_end":55492,"line_start":325,"line_end":325,"column_start":12,"column_end":17},"name":"write","qualname":"<RwLock<R, T>>::write","value":"fn (&self) -> RwLockWriteGuard<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, blocking the current\n thread until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":55466,"byte_end":55475,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":55926,"byte_end":55935,"line_start":338,"line_end":338,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<R, T>>::try_write","value":"fn (&self) -> Option<RwLockWriteGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to lock this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":55905,"byte_end":55914,"line_start":337,"line_end":337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":56362,"byte_end":56369,"line_start":351,"line_end":351,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<R, T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":56341,"byte_end":56350,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":56976,"byte_end":56993,"line_start":367,"line_end":367,"column_start":19,"column_end":36},"name":"force_unlock_read","qualname":"<RwLock<R, T>>::force_unlock_read","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks a read lock.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":56948,"byte_end":56957,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":57584,"byte_end":57602,"line_start":383,"line_end":383,"column_start":19,"column_end":37},"name":"force_unlock_write","qualname":"<RwLock<R, T>>::force_unlock_write","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks a write lock.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":57556,"byte_end":57565,"line_start":382,"line_end":382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":58068,"byte_end":58071,"line_start":397,"line_end":397,"column_start":19,"column_end":22},"name":"raw","qualname":"<RwLock<R, T>>::raw","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw reader-writer lock object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":58727,"byte_end":58749,"line_start":415,"line_end":415,"column_start":19,"column_end":41},"name":"force_unlock_read_fair","qualname":"<RwLock<R, T>>::force_unlock_read_fair","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks a read lock using a fair unlock procotol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":58699,"byte_end":58708,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":59374,"byte_end":59397,"line_start":431,"line_end":431,"column_start":19,"column_end":42},"name":"force_unlock_write_fair","qualname":"<RwLock<R, T>>::force_unlock_write_fair","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Forcibly unlocks a write lock using a fair unlock procotol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":59346,"byte_end":59355,"line_start":430,"line_end":430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":59849,"byte_end":59861,"line_start":444,"line_end":444,"column_start":12,"column_end":24},"name":"try_read_for","qualname":"<RwLock<R, T>>::try_read_for","value":"fn (&self, timeout: R::Duration) -> Option<RwLockReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access until a timeout\n is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":59828,"byte_end":59837,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":60405,"byte_end":60419,"line_start":459,"line_end":459,"column_start":12,"column_end":26},"name":"try_read_until","qualname":"<RwLock<R, T>>::try_read_until","value":"fn (&self, timeout: R::Instant) -> Option<RwLockReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access until a timeout\n is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":60384,"byte_end":60393,"line_start":458,"line_end":458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":60971,"byte_end":60984,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"try_write_for","qualname":"<RwLock<R, T>>::try_write_for","value":"fn (&self, timeout: R::Duration) -> Option<RwLockWriteGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access until a\n timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":60950,"byte_end":60959,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":61540,"byte_end":61555,"line_start":489,"line_end":489,"column_start":12,"column_end":27},"name":"try_write_until","qualname":"<RwLock<R, T>>::try_write_until","value":"fn (&self, timeout: R::Instant) -> Option<RwLockWriteGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access until a\n timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":61519,"byte_end":61528,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":62617,"byte_end":62631,"line_start":515,"line_end":515,"column_start":12,"column_end":26},"name":"read_recursive","qualname":"<RwLock<R, T>>::read_recursive","value":"fn (&self) -> RwLockReadGuard<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, blocking the current thread\n until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":62596,"byte_end":62605,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":63250,"byte_end":63268,"line_start":531,"line_end":531,"column_start":12,"column_end":30},"name":"try_read_recursive","qualname":"<RwLock<R, T>>::try_read_recursive","value":"fn (&self) -> Option<RwLockReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":63229,"byte_end":63238,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":64046,"byte_end":64068,"line_start":552,"line_end":552,"column_start":12,"column_end":34},"name":"try_read_recursive_for","qualname":"<RwLock<R, T>>::try_read_recursive_for","value":"fn (&self, timeout: R::Duration) -> Option<RwLockReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access until a timeout\n is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":64025,"byte_end":64034,"line_start":551,"line_end":551,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":64622,"byte_end":64646,"line_start":567,"line_end":567,"column_start":12,"column_end":36},"name":"try_read_recursive_until","qualname":"<RwLock<R, T>>::try_read_recursive_until","value":"fn (&self, timeout: R::Instant) -> Option<RwLockReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access until a timeout\n is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":64601,"byte_end":64610,"line_start":566,"line_end":566,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":65590,"byte_end":65605,"line_start":595,"line_end":595,"column_start":12,"column_end":27},"name":"upgradable_read","qualname":"<RwLock<R, T>>::upgradable_read","value":"fn (&self) -> RwLockUpgradableReadGuard<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with upgradable read access, blocking the current thread\n until it can be acquired.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":65569,"byte_end":65578,"line_start":594,"line_end":594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":66067,"byte_end":66086,"line_start":608,"line_end":608,"column_start":12,"column_end":31},"name":"try_upgradable_read","qualname":"<RwLock<R, T>>::try_upgradable_read","value":"fn (&self) -> Option<RwLockUpgradableReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with upgradable read access.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":66046,"byte_end":66055,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":66680,"byte_end":66703,"line_start":625,"line_end":625,"column_start":12,"column_end":35},"name":"try_upgradable_read_for","qualname":"<RwLock<R, T>>::try_upgradable_read_for","value":"fn (&self, timeout: R::Duration) -> Option<RwLockUpgradableReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with upgradable read access until a timeout\n is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":66659,"byte_end":66668,"line_start":624,"line_end":624,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67294,"byte_end":67319,"line_start":643,"line_end":643,"column_start":12,"column_end":37},"name":"try_upgradable_read_until","qualname":"<RwLock<R, T>>::try_upgradable_read_until","value":"fn (&self, timeout: R::Instant) -> Option<RwLockUpgradableReadGuard<R, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with upgradable read access until a timeout\n is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67273,"byte_end":67282,"line_start":642,"line_end":642,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68292,"byte_end":68307,"line_start":681,"line_end":681,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":519}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68269,"byte_end":68280,"line_start":680,"line_end":680,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68683,"byte_end":68689,"line_start":690,"line_end":690,"column_start":12,"column_end":18},"name":"rwlock","qualname":"<RwLockReadGuard<'a, R, T>>::rwlock","value":"fn (s: &Self) -> &'a RwLock<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original reader-writer lock object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":69169,"byte_end":69172,"line_start":703,"line_end":703,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard<'a, R, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedRwLockReadGuard<'a, R, U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `MappedRwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":69148,"byte_end":69157,"line_start":702,"line_end":702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":70016,"byte_end":70023,"line_start":727,"line_end":727,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard<'a, R, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedRwLockReadGuard<'a, R, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedRwLockReadGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":69995,"byte_end":70004,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":70775,"byte_end":70783,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"unlocked","qualname":"<RwLockReadGuard<'a, R, T>>::unlocked","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the `RwLock` to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":70754,"byte_end":70763,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":71841,"byte_end":71852,"line_start":775,"line_end":775,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<RwLockReadGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the `RwLock` using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":71820,"byte_end":71829,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":72239,"byte_end":72252,"line_start":787,"line_end":787,"column_start":12,"column_end":25},"name":"unlocked_fair","qualname":"<RwLockReadGuard<'a, R, T>>::unlocked_fair","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the `RwLock` to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":72218,"byte_end":72227,"line_start":786,"line_end":786,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":72736,"byte_end":72740,"line_start":802,"line_end":802,"column_start":12,"column_end":16},"name":"bump","qualname":"<RwLockReadGuard<'a, R, T>>::bump","value":"fn (s: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Temporarily yields the `RwLock` to a waiting thread if there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":72715,"byte_end":72724,"line_start":801,"line_end":801,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73413,"byte_end":73429,"line_start":828,"line_end":828,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":581}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73390,"byte_end":73401,"line_start":827,"line_end":827,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73811,"byte_end":73817,"line_start":837,"line_end":837,"column_start":12,"column_end":18},"name":"rwlock","qualname":"<RwLockWriteGuard<'a, R, T>>::rwlock","value":"fn (s: &Self) -> &'a RwLock<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original reader-writer lock object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":74300,"byte_end":74303,"line_start":850,"line_end":850,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard<'a, R, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedRwLockWriteGuard<'a, R, U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `MappedRwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":74279,"byte_end":74288,"line_start":849,"line_end":849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":75164,"byte_end":75171,"line_start":874,"line_end":874,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard<'a, R, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedRwLockWriteGuard<'a, R, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedRwLockWriteGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":75143,"byte_end":75152,"line_start":873,"line_end":873,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":75872,"byte_end":75880,"line_start":896,"line_end":896,"column_start":12,"column_end":20},"name":"unlocked","qualname":"<RwLockWriteGuard<'a, R, T>>::unlocked","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the `RwLock` to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":75851,"byte_end":75860,"line_start":895,"line_end":895,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":76491,"byte_end":76500,"line_start":913,"line_end":913,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard<'a, R, T>>::downgrade","value":"fn (s: Self) -> RwLockReadGuard<'a, R, T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing any\n writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":77175,"byte_end":77198,"line_start":931,"line_end":931,"column_start":12,"column_end":35},"name":"downgrade_to_upgradable","qualname":"<RwLockWriteGuard<'a, R, T>>::downgrade_to_upgradable","value":"fn (s: Self) -> RwLockUpgradableReadGuard<'a, R, T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into an upgradable read lock without allowing any\n writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":78343,"byte_end":78354,"line_start":956,"line_end":956,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<RwLockWriteGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the `RwLock` using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":78322,"byte_end":78331,"line_start":955,"line_end":955,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":78744,"byte_end":78757,"line_start":968,"line_end":968,"column_start":12,"column_end":25},"name":"unlocked_fair","qualname":"<RwLockWriteGuard<'a, R, T>>::unlocked_fair","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the `RwLock` to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":78723,"byte_end":78732,"line_start":967,"line_end":967,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79248,"byte_end":79252,"line_start":983,"line_end":983,"column_start":12,"column_end":16},"name":"bump","qualname":"<RwLockWriteGuard<'a, R, T>>::bump","value":"fn (s: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Temporarily yields the `RwLock` to a waiting thread if there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79227,"byte_end":79236,"line_start":982,"line_end":982,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":634},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80131,"byte_end":80156,"line_start":1016,"line_end":1016,"column_start":12,"column_end":37},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"RwLockUpgradableReadGuard {  }","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":661}],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80108,"byte_end":80119,"line_start":1015,"line_end":1015,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80577,"byte_end":80583,"line_start":1027,"line_end":1027,"column_start":12,"column_end":18},"name":"rwlock","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::rwlock","value":"fn (s: &Self) -> &'a RwLock<R, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the original reader-writer lock object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80876,"byte_end":80884,"line_start":1036,"line_end":1036,"column_start":12,"column_end":20},"name":"unlocked","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::unlocked","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the `RwLock` to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80855,"byte_end":80864,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":644},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":81225,"byte_end":81232,"line_start":1047,"line_end":1047,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::upgrade","value":"fn (s: Self) -> RwLockWriteGuard<'a, R, T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically upgrades an upgradable read lock lock into a exclusive write lock,\n blocking the current thread until it can be aquired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":81659,"byte_end":81670,"line_start":1060,"line_end":1060,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::try_upgrade","value":"fn (s: Self) -> Result<RwLockWriteGuard<'a, R, T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to atomically upgrade an upgradable read lock into a exclusive write lock.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":82902,"byte_end":82913,"line_start":1088,"line_end":1088,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the `RwLock` using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":82881,"byte_end":82890,"line_start":1087,"line_end":1087,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":83304,"byte_end":83317,"line_start":1100,"line_end":1100,"column_start":12,"column_end":25},"name":"unlocked_fair","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::unlocked_fair","value":"fn <F, U> (s: &mut Self, f: F) -> U","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unlocks the `RwLock` to execute the given function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":83283,"byte_end":83292,"line_start":1099,"line_end":1099,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":83820,"byte_end":83824,"line_start":1115,"line_end":1115,"column_start":12,"column_end":16},"name":"bump","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::bump","value":"fn (s: &mut Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Temporarily yields the `RwLock` to a waiting thread if there is one.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":83799,"byte_end":83808,"line_start":1114,"line_end":1114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":84365,"byte_end":84374,"line_start":1128,"line_end":1128,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::downgrade","value":"fn (s: Self) -> RwLockReadGuard<'a, R, T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades an upgradable read lock lock into a shared read lock\n without allowing any writers to take exclusive access of the lock in the\n meantime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":84966,"byte_end":84981,"line_start":1145,"line_end":1145,"column_start":12,"column_end":27},"name":"try_upgrade_for","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::try_upgrade_for","value":"fn (s: Self, timeout: R::Duration) -> Result<RwLockWriteGuard<'a, R, T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to atomically upgrade an upgradable read lock into a exclusive\n write lock, until a timeout is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":85632,"byte_end":85649,"line_start":1167,"line_end":1167,"column_start":12,"column_end":29},"name":"try_upgrade_until","qualname":"<RwLockUpgradableReadGuard<'a, R, T>>::try_upgrade_until","value":"fn (s: Self, timeout: R::Instant) -> Result<RwLockWriteGuard<'a, R, T>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Tries to atomically upgrade an upgradable read lock into a exclusive\n write lock, until a timeout is reached.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":85611,"byte_end":85620,"line_start":1166,"line_end":1166,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":678},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86994,"byte_end":87015,"line_start":1212,"line_end":1212,"column_start":12,"column_end":33},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"MappedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":729}],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86971,"byte_end":86982,"line_start":1211,"line_end":1211,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87870,"byte_end":87873,"line_start":1233,"line_end":1233,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedRwLockReadGuard<'a, R, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedRwLockReadGuard<'a, R, U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `MappedRwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87849,"byte_end":87858,"line_start":1232,"line_end":1232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":88708,"byte_end":88715,"line_start":1257,"line_end":1257,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedRwLockReadGuard<'a, R, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedRwLockReadGuard<'a, R, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedRwLockReadGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":88687,"byte_end":88696,"line_start":1256,"line_end":1256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90040,"byte_end":90051,"line_start":1289,"line_end":1289,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<MappedRwLockReadGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the `RwLock` using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90019,"byte_end":90028,"line_start":1288,"line_end":1288,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":706},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91043,"byte_end":91065,"line_start":1323,"line_end":1323,"column_start":12,"column_end":34},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"MappedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":791}],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91020,"byte_end":91031,"line_start":1322,"line_end":1322,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91932,"byte_end":91935,"line_start":1346,"line_end":1346,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedRwLockWriteGuard<'a, R, T>>::map","value":"fn <U, F> (s: Self, f: F) -> MappedRwLockWriteGuard<'a, R, U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `MappedRwLockWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91911,"byte_end":91920,"line_start":1345,"line_end":1345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":92787,"byte_end":92794,"line_start":1370,"line_end":1370,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedRwLockWriteGuard<'a, R, T>>::try_map","value":"fn <U, F> (s: Self, f: F) -> Result<MappedRwLockWriteGuard<'a, R, U>, Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new `MappedRwLockWriteGuard` for a component of the\n locked data. The original guard is return if the closure returns `None`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":92766,"byte_end":92775,"line_start":1369,"line_end":1369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":93674,"byte_end":93683,"line_start":1395,"line_end":1395,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<MappedRwLockWriteGuard<'a, R, T>>::downgrade","value":"fn (s: Self) -> MappedRwLockReadGuard<'a, R, T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing any\n writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":94847,"byte_end":94858,"line_start":1422,"line_end":1422,"column_start":12,"column_end":23},"name":"unlock_fair","qualname":"<MappedRwLockWriteGuard<'a, R, T>>::unlock_fair","value":"fn (s: Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unlocks the `RwLock` using a fair unlock protocol.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":94826,"byte_end":94835,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7461,"byte_end":7466,"line_start":96,"line_end":96,"column_start":60,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7535,"byte_end":7540,"line_start":97,"line_end":97,"column_start":60,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7572,"byte_end":7577,"line_start":99,"line_end":99,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":8312,"byte_end":8317,"line_start":128,"line_end":128,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":10944,"byte_end":10949,"line_start":208,"line_end":208,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":11601,"byte_end":11606,"line_start":226,"line_end":226,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12669,"byte_end":12674,"line_start":256,"line_end":256,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12812,"byte_end":12817,"line_start":263,"line_end":263,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12963,"byte_end":12968,"line_start":270,"line_end":270,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13722,"byte_end":13732,"line_start":290,"line_end":290,"column_start":74,"column_end":84},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13790,"byte_end":13800,"line_start":292,"line_end":292,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":16091,"byte_end":16101,"line_start":363,"line_end":363,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":17869,"byte_end":17879,"line_start":409,"line_end":409,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18063,"byte_end":18073,"line_start":417,"line_end":417,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18248,"byte_end":18258,"line_start":424,"line_end":424,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18451,"byte_end":18461,"line_start":432,"line_end":432,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19071,"byte_end":19087,"line_start":449,"line_end":449,"column_start":9,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19160,"byte_end":19176,"line_start":451,"line_end":451,"column_start":60,"column_end":76},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19265,"byte_end":19281,"line_start":455,"line_end":455,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":21030,"byte_end":21046,"line_start":507,"line_end":507,"column_start":48,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":21982,"byte_end":21998,"line_start":527,"line_end":527,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":22170,"byte_end":22186,"line_start":535,"line_end":535,"column_start":57,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":22349,"byte_end":22365,"line_start":542,"line_end":542,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":22552,"byte_end":22568,"line_start":550,"line_end":550,"column_start":69,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":24000,"byte_end":24017,"line_start":46,"line_end":46,"column_start":35,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":25205,"byte_end":25222,"line_start":92,"line_end":92,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":25849,"byte_end":25866,"line_start":115,"line_end":115,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":26848,"byte_end":26862,"line_start":144,"line_end":144,"column_start":9,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":26961,"byte_end":26975,"line_start":147,"line_end":147,"column_start":9,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":27026,"byte_end":27040,"line_start":150,"line_end":150,"column_start":38,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":28224,"byte_end":28238,"line_start":189,"line_end":189,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":31075,"byte_end":31089,"line_start":270,"line_end":270,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":31778,"byte_end":31792,"line_start":288,"line_end":288,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":32898,"byte_end":32912,"line_start":318,"line_end":318,"column_start":68,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":33090,"byte_end":33104,"line_start":325,"line_end":325,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":33290,"byte_end":33304,"line_start":332,"line_end":332,"column_start":74,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34193,"byte_end":34212,"line_start":356,"line_end":356,"column_start":9,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34294,"byte_end":34313,"line_start":359,"line_end":359,"column_start":65,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":36753,"byte_end":36772,"line_start":431,"line_end":431,"column_start":5,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":38585,"byte_end":38604,"line_start":479,"line_end":479,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":38814,"byte_end":38833,"line_start":489,"line_end":489,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39056,"byte_end":39075,"line_start":499,"line_end":499,"column_start":9,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39793,"byte_end":39818,"line_start":517,"line_end":517,"column_start":9,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39904,"byte_end":39929,"line_start":521,"line_end":521,"column_start":5,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":41778,"byte_end":41803,"line_start":575,"line_end":575,"column_start":5,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":42776,"byte_end":42801,"line_start":597,"line_end":597,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":42997,"byte_end":43022,"line_start":607,"line_end":607,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":43237,"byte_end":43262,"line_start":617,"line_end":617,"column_start":9,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52642,"byte_end":52648,"line_start":233,"line_end":233,"column_start":61,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52725,"byte_end":52731,"line_start":234,"line_end":234,"column_start":68,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52764,"byte_end":52770,"line_start":236,"line_end":236,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53521,"byte_end":53527,"line_start":265,"line_end":265,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":58148,"byte_end":58154,"line_start":402,"line_end":402,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":59493,"byte_end":59499,"line_start":436,"line_end":436,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":61805,"byte_end":61811,"line_start":498,"line_end":498,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":63494,"byte_end":63500,"line_start":540,"line_end":540,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":64899,"byte_end":64905,"line_start":576,"line_end":576,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":66320,"byte_end":66326,"line_start":617,"line_end":617,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67620,"byte_end":67626,"line_start":655,"line_end":655,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67767,"byte_end":67773,"line_start":662,"line_end":662,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67922,"byte_end":67928,"line_start":669,"line_end":669,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68499,"byte_end":68514,"line_start":686,"line_end":686,"column_start":68,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68573,"byte_end":68588,"line_start":688,"line_end":688,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":71008,"byte_end":71023,"line_start":761,"line_end":761,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":72856,"byte_end":72871,"line_start":807,"line_end":807,"column_start":55,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73053,"byte_end":73068,"line_start":815,"line_end":815,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73270,"byte_end":73285,"line_start":823,"line_end":823,"column_start":70,"column_end":85},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73625,"byte_end":73641,"line_start":833,"line_end":833,"column_start":68,"column_end":84},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73700,"byte_end":73716,"line_start":835,"line_end":835,"column_start":45,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":76116,"byte_end":76132,"line_start":906,"line_end":906,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":76788,"byte_end":76804,"line_start":924,"line_end":924,"column_start":61,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":77508,"byte_end":77524,"line_start":942,"line_end":942,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79371,"byte_end":79387,"line_start":988,"line_end":988,"column_start":55,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79573,"byte_end":79589,"line_start":996,"line_end":996,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79766,"byte_end":79782,"line_start":1003,"line_end":1003,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79987,"byte_end":80003,"line_start":1011,"line_end":1011,"column_start":70,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80366,"byte_end":80391,"line_start":1022,"line_end":1022,"column_start":9,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80457,"byte_end":80482,"line_start":1025,"line_end":1025,"column_start":52,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":644},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":82049,"byte_end":82074,"line_start":1074,"line_end":1074,"column_start":56,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":650},{"krate":0,"index":652},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":83950,"byte_end":83975,"line_start":1120,"line_end":1120,"column_start":61,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":84669,"byte_end":84694,"line_start":1139,"line_end":1139,"column_start":57,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86091,"byte_end":86116,"line_start":1184,"line_end":1184,"column_start":62,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86305,"byte_end":86330,"line_start":1192,"line_end":1192,"column_start":61,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86547,"byte_end":86572,"line_start":1201,"line_end":1201,"column_start":9,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87195,"byte_end":87216,"line_start":1218,"line_end":1218,"column_start":68,"column_end":89},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87290,"byte_end":87311,"line_start":1219,"line_end":1219,"column_start":61,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87401,"byte_end":87422,"line_start":1223,"line_end":1223,"column_start":45,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":89195,"byte_end":89216,"line_start":1275,"line_end":1275,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90186,"byte_end":90207,"line_start":1295,"line_end":1295,"column_start":55,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90376,"byte_end":90397,"line_start":1303,"line_end":1303,"column_start":54,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90596,"byte_end":90617,"line_start":1312,"line_end":1312,"column_start":9,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91251,"byte_end":91273,"line_start":1330,"line_end":1330,"column_start":9,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91347,"byte_end":91369,"line_start":1332,"line_end":1332,"column_start":61,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91459,"byte_end":91481,"line_start":1336,"line_end":1336,"column_start":45,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":93293,"byte_end":93315,"line_start":1388,"line_end":1388,"column_start":54,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":94000,"byte_end":94022,"line_start":1408,"line_end":1408,"column_start":49,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":94996,"byte_end":95018,"line_start":1428,"line_end":1428,"column_start":55,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":95191,"byte_end":95213,"line_start":1436,"line_end":1436,"column_start":58,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":95377,"byte_end":95399,"line_start":1443,"line_end":1443,"column_start":54,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":95601,"byte_end":95623,"line_start":1452,"line_end":1452,"column_start":9,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":5720,"byte_end":5728,"line_start":50,"line_end":50,"column_start":32,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":34},"to":{"krate":0,"index":46}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":6416,"byte_end":6424,"line_start":69,"line_end":69,"column_start":33,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":34},"to":{"krate":0,"index":52}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7461,"byte_end":7466,"line_start":96,"line_end":96,"column_start":60,"column_end":65},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":62},"to":{"krate":1,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7535,"byte_end":7540,"line_start":97,"line_end":97,"column_start":60,"column_end":65},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":62},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":7572,"byte_end":7577,"line_start":99,"line_end":99,"column_start":22,"column_end":27},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":8312,"byte_end":8317,"line_start":128,"line_end":128,"column_start":30,"column_end":35},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":10944,"byte_end":10949,"line_start":208,"line_end":208,"column_start":34,"column_end":39},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":11601,"byte_end":11606,"line_start":226,"line_end":226,"column_start":35,"column_end":40},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12669,"byte_end":12674,"line_start":256,"line_end":256,"column_start":52,"column_end":57},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":62},"to":{"krate":1,"index":2592}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12812,"byte_end":12817,"line_start":263,"line_end":263,"column_start":34,"column_end":39},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":62},"to":{"krate":1,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":12963,"byte_end":12968,"line_start":270,"line_end":270,"column_start":58,"column_end":63},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":62},"to":{"krate":1,"index":8146}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13722,"byte_end":13732,"line_start":290,"line_end":290,"column_start":74,"column_end":84},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":110},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":13790,"byte_end":13800,"line_start":292,"line_end":292,"column_start":44,"column_end":54},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":16091,"byte_end":16101,"line_start":363,"line_end":363,"column_start":48,"column_end":58},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":17869,"byte_end":17879,"line_start":409,"line_end":409,"column_start":54,"column_end":64},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":110},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18063,"byte_end":18073,"line_start":417,"line_end":417,"column_start":57,"column_end":67},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":110},"to":{"krate":1,"index":1934}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18248,"byte_end":18258,"line_start":424,"line_end":424,"column_start":53,"column_end":63},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":110},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":18451,"byte_end":18461,"line_start":432,"line_end":432,"column_start":69,"column_end":79},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":110},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19071,"byte_end":19087,"line_start":449,"line_end":449,"column_start":9,"column_end":25},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":148},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19160,"byte_end":19176,"line_start":451,"line_end":451,"column_start":60,"column_end":76},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":148},"to":{"krate":1,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":19265,"byte_end":19281,"line_start":455,"line_end":455,"column_start":44,"column_end":60},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":21030,"byte_end":21046,"line_start":507,"line_end":507,"column_start":48,"column_end":64},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":21982,"byte_end":21998,"line_start":527,"line_end":527,"column_start":54,"column_end":70},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":148},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":22170,"byte_end":22186,"line_start":535,"line_end":535,"column_start":57,"column_end":73},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":148},"to":{"krate":1,"index":1934}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":22349,"byte_end":22365,"line_start":542,"line_end":542,"column_start":53,"column_end":69},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":148},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,109,117,116,101,120,46,114,115],"byte_start":22552,"byte_end":22568,"line_start":550,"line_end":550,"column_start":69,"column_end":85},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":148},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":24000,"byte_end":24017,"line_start":46,"line_end":46,"column_start":35,"column_end":52},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":25205,"byte_end":25222,"line_start":92,"line_end":92,"column_start":39,"column_end":56},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":25849,"byte_end":25866,"line_start":115,"line_end":115,"column_start":40,"column_end":57},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":26848,"byte_end":26862,"line_start":144,"line_end":144,"column_start":9,"column_end":23},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":246},"to":{"krate":1,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":26961,"byte_end":26975,"line_start":147,"line_end":147,"column_start":9,"column_end":23},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":246},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":27026,"byte_end":27040,"line_start":150,"line_end":150,"column_start":38,"column_end":52},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":28224,"byte_end":28238,"line_start":189,"line_end":189,"column_start":46,"column_end":60},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":31075,"byte_end":31089,"line_start":270,"line_end":270,"column_start":50,"column_end":64},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":31778,"byte_end":31792,"line_start":288,"line_end":288,"column_start":51,"column_end":65},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":32898,"byte_end":32912,"line_start":318,"line_end":318,"column_start":68,"column_end":82},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":246},"to":{"krate":1,"index":2592}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":33090,"byte_end":33104,"line_start":325,"line_end":325,"column_start":50,"column_end":64},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":246},"to":{"krate":1,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":33290,"byte_end":33304,"line_start":332,"line_end":332,"column_start":74,"column_end":88},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":246},"to":{"krate":1,"index":8146}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34193,"byte_end":34212,"line_start":356,"line_end":356,"column_start":9,"column_end":28},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":294},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":34294,"byte_end":34313,"line_start":359,"line_end":359,"column_start":65,"column_end":84},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":36753,"byte_end":36772,"line_start":431,"line_end":431,"column_start":5,"column_end":24},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":38585,"byte_end":38604,"line_start":479,"line_end":479,"column_start":9,"column_end":28},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":294},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":38814,"byte_end":38833,"line_start":489,"line_end":489,"column_start":9,"column_end":28},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":294},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39056,"byte_end":39075,"line_start":499,"line_end":499,"column_start":9,"column_end":28},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":294},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39793,"byte_end":39818,"line_start":517,"line_end":517,"column_start":9,"column_end":34},"kind":{"variant":"Impl","fields":[42]},"from":{"krate":0,"index":328},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":39904,"byte_end":39929,"line_start":521,"line_end":521,"column_start":5,"column_end":30},"kind":{"variant":"Impl","fields":[43]},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":41778,"byte_end":41803,"line_start":575,"line_end":575,"column_start":5,"column_end":30},"kind":{"variant":"Impl","fields":[44]},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":42776,"byte_end":42801,"line_start":597,"line_end":597,"column_start":9,"column_end":34},"kind":{"variant":"Impl","fields":[45]},"from":{"krate":0,"index":328},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":42997,"byte_end":43022,"line_start":607,"line_end":607,"column_start":9,"column_end":34},"kind":{"variant":"Impl","fields":[46]},"from":{"krate":0,"index":328},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,101,109,117,116,101,120,46,114,115],"byte_start":43237,"byte_end":43262,"line_start":617,"line_end":617,"column_start":9,"column_end":34},"kind":{"variant":"Impl","fields":[47]},"from":{"krate":0,"index":328},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":45472,"byte_end":45481,"line_start":61,"line_end":61,"column_start":33,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":392}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":46637,"byte_end":46646,"line_start":91,"line_end":91,"column_start":38,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":402}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":47069,"byte_end":47078,"line_start":101,"line_end":101,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":406}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48198,"byte_end":48207,"line_start":128,"line_end":128,"column_start":38,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":420}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48597,"byte_end":48615,"line_start":137,"line_end":137,"column_start":43,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":420},"to":{"krate":0,"index":426}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":48618,"byte_end":48632,"line_start":137,"line_end":137,"column_start":64,"column_end":78},"kind":"SuperTrait","from":{"krate":0,"index":406},"to":{"krate":0,"index":426}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":49400,"byte_end":49409,"line_start":153,"line_end":153,"column_start":36,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":374},"to":{"krate":0,"index":432}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50059,"byte_end":50075,"line_start":173,"line_end":173,"column_start":40,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":432},"to":{"krate":0,"index":444}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50078,"byte_end":50091,"line_start":173,"line_end":173,"column_start":59,"column_end":72},"kind":"SuperTrait","from":{"krate":0,"index":392},"to":{"krate":0,"index":444}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50754,"byte_end":50770,"line_start":190,"line_end":190,"column_start":45,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":432},"to":{"krate":0,"index":450}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":50773,"byte_end":50791,"line_start":190,"line_end":190,"column_start":64,"column_end":82},"kind":"SuperTrait","from":{"krate":0,"index":402},"to":{"krate":0,"index":450}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51126,"byte_end":51142,"line_start":200,"line_end":200,"column_start":41,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":432},"to":{"krate":0,"index":456}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":51145,"byte_end":51159,"line_start":200,"line_end":200,"column_start":60,"column_end":74},"kind":"SuperTrait","from":{"krate":0,"index":406},"to":{"krate":0,"index":456}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52642,"byte_end":52648,"line_start":233,"line_end":233,"column_start":61,"column_end":67},"kind":{"variant":"Impl","fields":[48]},"from":{"krate":0,"index":466},"to":{"krate":1,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52725,"byte_end":52731,"line_start":234,"line_end":234,"column_start":68,"column_end":74},"kind":{"variant":"Impl","fields":[49]},"from":{"krate":0,"index":466},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":52764,"byte_end":52770,"line_start":236,"line_end":236,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[50]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":53521,"byte_end":53527,"line_start":265,"line_end":265,"column_start":31,"column_end":37},"kind":{"variant":"Impl","fields":[51]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":58148,"byte_end":58154,"line_start":402,"line_end":402,"column_start":35,"column_end":41},"kind":{"variant":"Impl","fields":[52]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":59493,"byte_end":59499,"line_start":436,"line_end":436,"column_start":36,"column_end":42},"kind":{"variant":"Impl","fields":[53]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":61805,"byte_end":61811,"line_start":498,"line_end":498,"column_start":40,"column_end":46},"kind":{"variant":"Impl","fields":[54]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":63494,"byte_end":63500,"line_start":540,"line_end":540,"column_start":45,"column_end":51},"kind":{"variant":"Impl","fields":[55]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":64899,"byte_end":64905,"line_start":576,"line_end":576,"column_start":38,"column_end":44},"kind":{"variant":"Impl","fields":[56]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":66320,"byte_end":66326,"line_start":617,"line_end":617,"column_start":43,"column_end":49},"kind":{"variant":"Impl","fields":[57]},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67620,"byte_end":67626,"line_start":655,"line_end":655,"column_start":53,"column_end":59},"kind":{"variant":"Impl","fields":[58]},"from":{"krate":0,"index":466},"to":{"krate":1,"index":2592}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67767,"byte_end":67773,"line_start":662,"line_end":662,"column_start":35,"column_end":41},"kind":{"variant":"Impl","fields":[59]},"from":{"krate":0,"index":466},"to":{"krate":1,"index":2614}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":67922,"byte_end":67928,"line_start":669,"line_end":669,"column_start":59,"column_end":65},"kind":{"variant":"Impl","fields":[60]},"from":{"krate":0,"index":466},"to":{"krate":1,"index":8146}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68499,"byte_end":68514,"line_start":686,"line_end":686,"column_start":68,"column_end":83},"kind":{"variant":"Impl","fields":[61]},"from":{"krate":0,"index":554},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":68573,"byte_end":68588,"line_start":688,"line_end":688,"column_start":45,"column_end":60},"kind":{"variant":"Impl","fields":[62]},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":71008,"byte_end":71023,"line_start":761,"line_end":761,"column_start":49,"column_end":64},"kind":{"variant":"Impl","fields":[63]},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":72856,"byte_end":72871,"line_start":807,"line_end":807,"column_start":55,"column_end":70},"kind":{"variant":"Impl","fields":[64]},"from":{"krate":0,"index":554},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73053,"byte_end":73068,"line_start":815,"line_end":815,"column_start":54,"column_end":69},"kind":{"variant":"Impl","fields":[65]},"from":{"krate":0,"index":554},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73270,"byte_end":73285,"line_start":823,"line_end":823,"column_start":70,"column_end":85},"kind":{"variant":"Impl","fields":[66]},"from":{"krate":0,"index":554},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73625,"byte_end":73641,"line_start":833,"line_end":833,"column_start":68,"column_end":84},"kind":{"variant":"Impl","fields":[67]},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":73700,"byte_end":73716,"line_start":835,"line_end":835,"column_start":45,"column_end":61},"kind":{"variant":"Impl","fields":[68]},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":76116,"byte_end":76132,"line_start":906,"line_end":906,"column_start":54,"column_end":70},"kind":{"variant":"Impl","fields":[69]},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":76788,"byte_end":76804,"line_start":924,"line_end":924,"column_start":61,"column_end":77},"kind":{"variant":"Impl","fields":[70]},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":77508,"byte_end":77524,"line_start":942,"line_end":942,"column_start":49,"column_end":65},"kind":{"variant":"Impl","fields":[71]},"from":{"krate":0,"index":588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79371,"byte_end":79387,"line_start":988,"line_end":988,"column_start":55,"column_end":71},"kind":{"variant":"Impl","fields":[72]},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79573,"byte_end":79589,"line_start":996,"line_end":996,"column_start":58,"column_end":74},"kind":{"variant":"Impl","fields":[73]},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1934}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79766,"byte_end":79782,"line_start":1003,"line_end":1003,"column_start":54,"column_end":70},"kind":{"variant":"Impl","fields":[74]},"from":{"krate":0,"index":588},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":79987,"byte_end":80003,"line_start":1011,"line_end":1011,"column_start":70,"column_end":86},"kind":{"variant":"Impl","fields":[75]},"from":{"krate":0,"index":588},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80366,"byte_end":80391,"line_start":1022,"line_end":1022,"column_start":9,"column_end":34},"kind":{"variant":"Impl","fields":[76]},"from":{"krate":0,"index":634},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":80457,"byte_end":80482,"line_start":1025,"line_end":1025,"column_start":52,"column_end":77},"kind":{"variant":"Impl","fields":[77]},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":82049,"byte_end":82074,"line_start":1074,"line_end":1074,"column_start":56,"column_end":81},"kind":{"variant":"Impl","fields":[78]},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":83950,"byte_end":83975,"line_start":1120,"line_end":1120,"column_start":61,"column_end":86},"kind":{"variant":"Impl","fields":[79]},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":84669,"byte_end":84694,"line_start":1139,"line_end":1139,"column_start":57,"column_end":82},"kind":{"variant":"Impl","fields":[80]},"from":{"krate":0,"index":634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86091,"byte_end":86116,"line_start":1184,"line_end":1184,"column_start":62,"column_end":87},"kind":{"variant":"Impl","fields":[81]},"from":{"krate":0,"index":634},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86305,"byte_end":86330,"line_start":1192,"line_end":1192,"column_start":61,"column_end":86},"kind":{"variant":"Impl","fields":[82]},"from":{"krate":0,"index":634},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":86547,"byte_end":86572,"line_start":1201,"line_end":1201,"column_start":9,"column_end":34},"kind":{"variant":"Impl","fields":[83]},"from":{"krate":0,"index":634},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87195,"byte_end":87216,"line_start":1218,"line_end":1218,"column_start":68,"column_end":89},"kind":{"variant":"Impl","fields":[84]},"from":{"krate":0,"index":678},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87290,"byte_end":87311,"line_start":1219,"line_end":1219,"column_start":61,"column_end":82},"kind":{"variant":"Impl","fields":[85]},"from":{"krate":0,"index":678},"to":{"krate":1,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":87401,"byte_end":87422,"line_start":1223,"line_end":1223,"column_start":45,"column_end":66},"kind":{"variant":"Impl","fields":[86]},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":89195,"byte_end":89216,"line_start":1275,"line_end":1275,"column_start":49,"column_end":70},"kind":{"variant":"Impl","fields":[87]},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90186,"byte_end":90207,"line_start":1295,"line_end":1295,"column_start":55,"column_end":76},"kind":{"variant":"Impl","fields":[88]},"from":{"krate":0,"index":678},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90376,"byte_end":90397,"line_start":1303,"line_end":1303,"column_start":54,"column_end":75},"kind":{"variant":"Impl","fields":[89]},"from":{"krate":0,"index":678},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":90596,"byte_end":90617,"line_start":1312,"line_end":1312,"column_start":9,"column_end":30},"kind":{"variant":"Impl","fields":[90]},"from":{"krate":0,"index":678},"to":{"krate":13,"index":10}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91251,"byte_end":91273,"line_start":1330,"line_end":1330,"column_start":9,"column_end":31},"kind":{"variant":"Impl","fields":[91]},"from":{"krate":0,"index":706},"to":{"krate":1,"index":1684}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91347,"byte_end":91369,"line_start":1332,"line_end":1332,"column_start":61,"column_end":83},"kind":{"variant":"Impl","fields":[92]},"from":{"krate":0,"index":706},"to":{"krate":1,"index":1672}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":91459,"byte_end":91481,"line_start":1336,"line_end":1336,"column_start":45,"column_end":67},"kind":{"variant":"Impl","fields":[93]},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":93293,"byte_end":93315,"line_start":1388,"line_end":1388,"column_start":54,"column_end":76},"kind":{"variant":"Impl","fields":[94]},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":94000,"byte_end":94022,"line_start":1408,"line_end":1408,"column_start":49,"column_end":71},"kind":{"variant":"Impl","fields":[95]},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":94996,"byte_end":95018,"line_start":1428,"line_end":1428,"column_start":55,"column_end":77},"kind":{"variant":"Impl","fields":[96]},"from":{"krate":0,"index":706},"to":{"krate":1,"index":1916}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":95191,"byte_end":95213,"line_start":1436,"line_end":1436,"column_start":58,"column_end":80},"kind":{"variant":"Impl","fields":[97]},"from":{"krate":0,"index":706},"to":{"krate":1,"index":1934}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":95377,"byte_end":95399,"line_start":1443,"line_end":1443,"column_start":54,"column_end":76},"kind":{"variant":"Impl","fields":[98]},"from":{"krate":0,"index":706},"to":{"krate":1,"index":1950}},{"span":{"file_name":[47,104,111,109,101,47,114,97,122,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,108,111,99,107,95,97,112,105,45,48,46,49,46,52,47,115,114,99,47,114,119,108,111,99,107,46,114,115],"byte_start":95601,"byte_end":95623,"line_start":1452,"line_end":1452,"column_start":9,"column_end":31},"kind":{"variant":"Impl","fields":[99]},"from":{"krate":0,"index":706},"to":{"krate":13,"index":10}}]}